// .cloudflare/worker.js
import static_asset_manifest_json from "__STATIC_CONTENT_MANIFEST";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key2 of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key2) && key2 !== except)
        __defProp(to, key2, { get: () => from[key2], enumerable: !(desc = __getOwnPropDesc(from, key2)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var BROWSER;
var DEV;
var init_prod_ssr = __esm({
  ".svelte-kit/output/server/chunks/prod-ssr.js"() {
    BROWSER = false;
    DEV = false;
  }
});
function noop() {
}
function assign(tar, src) {
  for (const k2 in src)
    tar[k2] = src[k2];
  return tar;
}
function run(fn) {
  return fn();
}
function blank_object() {
  return /* @__PURE__ */ Object.create(null);
}
function run_all(fns) {
  fns.forEach(run);
}
function is_function(thing) {
  return typeof thing === "function";
}
function safe_not_equal(a2, b2) {
  return a2 != a2 ? b2 == b2 : a2 !== b2 || (a2 && typeof a2 === "object" || typeof a2 === "function");
}
function subscribe(store, ...callbacks) {
  if (store == null) {
    return noop;
  }
  const unsub = store.subscribe(...callbacks);
  return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;
}
function get_store_value(store) {
  let value2;
  subscribe(store, (_2) => value2 = _2)();
  return value2;
}
function compute_rest_props(props, keys) {
  const rest = {};
  keys = new Set(keys);
  for (const k2 in props)
    if (!keys.has(k2) && k2[0] !== "$")
      rest[k2] = props[k2];
  return rest;
}
function compute_slots(slots) {
  const result = {};
  for (const key2 in slots) {
    result[key2] = true;
  }
  return result;
}
function null_to_empty(value2) {
  return value2 == null ? "" : value2;
}
function run_tasks(now2) {
  tasks.forEach((task) => {
    if (!task.c(now2)) {
      tasks.delete(task);
      task.f();
    }
  });
  if (tasks.size !== 0)
    raf(run_tasks);
}
function loop(callback) {
  let task;
  if (tasks.size === 0)
    raf(run_tasks);
  return {
    promise: new Promise((fulfill) => {
      tasks.add(task = { c: callback, f: fulfill });
    }),
    abort() {
      tasks.delete(task);
    }
  };
}
function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {
  const e2 = document.createEvent("CustomEvent");
  e2.initCustomEvent(type, bubbles, cancelable, detail);
  return e2;
}
function set_current_component(component28) {
  current_component = component28;
}
function get_current_component() {
  if (!current_component)
    throw new Error("Function called outside component initialization");
  return current_component;
}
function createEventDispatcher() {
  const component28 = get_current_component();
  return (type, detail, { cancelable = false } = {}) => {
    const callbacks = component28.$$.callbacks[type];
    if (callbacks) {
      const event = custom_event(type, detail, { cancelable });
      callbacks.slice().forEach((fn) => {
        fn.call(component28, event);
      });
      return !event.defaultPrevented;
    }
    return true;
  };
}
function setContext(key2, context) {
  get_current_component().$$.context.set(key2, context);
  return context;
}
function getContext(key2) {
  return get_current_component().$$.context.get(key2);
}
function schedule_update() {
  if (!update_scheduled) {
    update_scheduled = true;
    resolved_promise.then(flush);
  }
}
function tick() {
  schedule_update();
  return resolved_promise;
}
function add_render_callback(fn) {
  render_callbacks.push(fn);
}
function flush() {
  if (flushidx !== 0) {
    return;
  }
  const saved_component = current_component;
  do {
    try {
      while (flushidx < dirty_components.length) {
        const component28 = dirty_components[flushidx];
        flushidx++;
        set_current_component(component28);
        update(component28.$$);
      }
    } catch (e2) {
      dirty_components.length = 0;
      flushidx = 0;
      throw e2;
    }
    set_current_component(null);
    dirty_components.length = 0;
    flushidx = 0;
    while (binding_callbacks.length)
      binding_callbacks.pop()();
    for (let i2 = 0; i2 < render_callbacks.length; i2 += 1) {
      const callback = render_callbacks[i2];
      if (!seen_callbacks.has(callback)) {
        seen_callbacks.add(callback);
        callback();
      }
    }
    render_callbacks.length = 0;
  } while (dirty_components.length);
  while (flush_callbacks.length) {
    flush_callbacks.pop()();
  }
  update_scheduled = false;
  seen_callbacks.clear();
  set_current_component(saved_component);
}
function update($$) {
  if ($$.fragment !== null) {
    $$.update();
    run_all($$.before_update);
    const dirty = $$.dirty;
    $$.dirty = [-1];
    $$.fragment && $$.fragment.p($$.ctx, dirty);
    $$.after_update.forEach(add_render_callback);
  }
}
function is_void(name) {
  return void_element_names.test(name) || name.toLowerCase() === "!doctype";
}
function spread(args, attrs_to_add) {
  const attributes = Object.assign({}, ...args);
  if (attrs_to_add) {
    const classes_to_add = attrs_to_add.classes;
    const styles_to_add = attrs_to_add.styles;
    if (classes_to_add) {
      if (attributes.class == null) {
        attributes.class = classes_to_add;
      } else {
        attributes.class += " " + classes_to_add;
      }
    }
    if (styles_to_add) {
      if (attributes.style == null) {
        attributes.style = style_object_to_string(styles_to_add);
      } else {
        attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));
      }
    }
  }
  let str = "";
  Object.keys(attributes).forEach((name) => {
    if (invalid_attribute_name_character.test(name))
      return;
    const value2 = attributes[name];
    if (value2 === true)
      str += " " + name;
    else if (boolean_attributes.has(name.toLowerCase())) {
      if (value2)
        str += " " + name;
    } else if (value2 != null) {
      str += ` ${name}="${value2}"`;
    }
  });
  return str;
}
function merge_ssr_styles(style_attribute, style_directive) {
  const style_object = {};
  for (const individual_style of style_attribute.split(";")) {
    const colon_index = individual_style.indexOf(":");
    const name = individual_style.slice(0, colon_index).trim();
    const value2 = individual_style.slice(colon_index + 1).trim();
    if (!name)
      continue;
    style_object[name] = value2;
  }
  for (const name in style_directive) {
    const value2 = style_directive[name];
    if (value2) {
      style_object[name] = value2;
    } else {
      delete style_object[name];
    }
  }
  return style_object;
}
function escape(value2, is_attr = false) {
  const str = String(value2);
  const pattern2 = is_attr ? ATTR_REGEX : CONTENT_REGEX;
  pattern2.lastIndex = 0;
  let escaped2 = "";
  let last = 0;
  while (pattern2.test(str)) {
    const i2 = pattern2.lastIndex - 1;
    const ch = str[i2];
    escaped2 += str.substring(last, i2) + (ch === "&" ? "&amp;" : ch === '"' ? "&quot;" : "&lt;");
    last = i2 + 1;
  }
  return escaped2 + str.substring(last);
}
function escape_attribute_value(value2) {
  const should_escape = typeof value2 === "string" || value2 && typeof value2 === "object";
  return should_escape ? escape(value2, true) : value2;
}
function escape_object(obj) {
  const result = {};
  for (const key2 in obj) {
    result[key2] = escape_attribute_value(obj[key2]);
  }
  return result;
}
function each(items, fn) {
  let str = "";
  for (let i2 = 0; i2 < items.length; i2 += 1) {
    str += fn(items[i2], i2);
  }
  return str;
}
function validate_component(component28, name) {
  if (!component28 || !component28.$$render) {
    if (name === "svelte:component")
      name += " this={...}";
    throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);
  }
  return component28;
}
function create_ssr_component(fn) {
  function $$render(result, props, bindings, slots, context) {
    const parent_component = current_component;
    const $$ = {
      on_destroy,
      context: new Map(context || (parent_component ? parent_component.$$.context : [])),
      on_mount: [],
      before_update: [],
      after_update: [],
      callbacks: blank_object()
    };
    set_current_component({ $$ });
    const html = fn(result, props, bindings, slots);
    set_current_component(parent_component);
    return html;
  }
  return {
    render: (props = {}, { $$slots = {}, context = /* @__PURE__ */ new Map() } = {}) => {
      on_destroy = [];
      const result = { title: "", head: "", css: /* @__PURE__ */ new Set() };
      const html = $$render(result, props, {}, $$slots, context);
      run_all(on_destroy);
      return {
        html,
        css: {
          code: Array.from(result.css).map((css6) => css6.code).join("\n"),
          map: null
        },
        head: result.title + result.head
      };
    },
    $$render
  };
}
function add_attribute(name, value2, boolean) {
  if (value2 == null || boolean && !value2)
    return "";
  const assignment = boolean && value2 === true ? "" : `="${escape(value2, true)}"`;
  return ` ${name}${assignment}`;
}
function add_classes(classes) {
  return classes ? ` class="${classes}"` : "";
}
function style_object_to_string(style_object) {
  return Object.keys(style_object).filter((key2) => style_object[key2]).map((key2) => `${key2}: ${escape_attribute_value(style_object[key2])};`).join(" ");
}
var identity;
var is_client;
var now;
var raf;
var tasks;
var current_component;
var dirty_components;
var binding_callbacks;
var render_callbacks;
var flush_callbacks;
var resolved_promise;
var update_scheduled;
var seen_callbacks;
var flushidx;
var _boolean_attributes;
var boolean_attributes;
var void_element_names;
var invalid_attribute_name_character;
var ATTR_REGEX;
var CONTENT_REGEX;
var missing_component;
var on_destroy;
var init_index2 = __esm({
  ".svelte-kit/output/server/chunks/index2.js"() {
    identity = (x2) => x2;
    is_client = typeof window !== "undefined";
    now = is_client ? () => window.performance.now() : () => Date.now();
    raf = is_client ? (cb) => requestAnimationFrame(cb) : noop;
    tasks = /* @__PURE__ */ new Set();
    dirty_components = [];
    binding_callbacks = [];
    render_callbacks = [];
    flush_callbacks = [];
    resolved_promise = /* @__PURE__ */ Promise.resolve();
    update_scheduled = false;
    seen_callbacks = /* @__PURE__ */ new Set();
    flushidx = 0;
    _boolean_attributes = [
      "allowfullscreen",
      "allowpaymentrequest",
      "async",
      "autofocus",
      "autoplay",
      "checked",
      "controls",
      "default",
      "defer",
      "disabled",
      "formnovalidate",
      "hidden",
      "inert",
      "ismap",
      "loop",
      "multiple",
      "muted",
      "nomodule",
      "novalidate",
      "open",
      "playsinline",
      "readonly",
      "required",
      "reversed",
      "selected"
    ];
    boolean_attributes = /* @__PURE__ */ new Set([..._boolean_attributes]);
    void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;
    invalid_attribute_name_character = /[\s'">/=\u{FDD0}-\u{FDEF}\u{FFFE}\u{FFFF}\u{1FFFE}\u{1FFFF}\u{2FFFE}\u{2FFFF}\u{3FFFE}\u{3FFFF}\u{4FFFE}\u{4FFFF}\u{5FFFE}\u{5FFFF}\u{6FFFE}\u{6FFFF}\u{7FFFE}\u{7FFFF}\u{8FFFE}\u{8FFFF}\u{9FFFE}\u{9FFFF}\u{AFFFE}\u{AFFFF}\u{BFFFE}\u{BFFFF}\u{CFFFE}\u{CFFFF}\u{DFFFE}\u{DFFFF}\u{EFFFE}\u{EFFFF}\u{FFFFE}\u{FFFFF}\u{10FFFE}\u{10FFFF}]/u;
    ATTR_REGEX = /[&"]/g;
    CONTENT_REGEX = /[&<]/g;
    missing_component = {
      $$render: () => ""
    };
  }
});
var PUBLIC_SUPABASE_URL;
var PUBLIC_SUPABASE_ANON_KEY;
var init_public = __esm({
  ".svelte-kit/output/server/chunks/public.js"() {
    PUBLIC_SUPABASE_URL = "https://bpjcaiybudgwujfpyevt.supabase.co";
    PUBLIC_SUPABASE_ANON_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJwamNhaXlidWRnd3VqZnB5ZXZ0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE2NzMyODg3NzIsImV4cCI6MTk4ODg2NDc3Mn0.s8MK11TtrcjWiaeOtM5wCWQ9yoVKJP1Uy1w_HIDqVUs";
  }
});
var webcrypto_default;
var init_webcrypto = __esm({
  "node_modules/jose/dist/browser/runtime/webcrypto.js"() {
    webcrypto_default = crypto;
  }
});
var init_digest = __esm({
  "node_modules/jose/dist/browser/runtime/digest.js"() {
    init_webcrypto();
  }
});
var encoder;
var decoder;
var MAX_INT32;
var init_buffer_utils = __esm({
  "node_modules/jose/dist/browser/lib/buffer_utils.js"() {
    init_digest();
    encoder = new TextEncoder();
    decoder = new TextDecoder();
    MAX_INT32 = 2 ** 32;
  }
});
var encodeBase64;
var encode;
var decodeBase64;
var decode;
var init_base64url = __esm({
  "node_modules/jose/dist/browser/runtime/base64url.js"() {
    init_buffer_utils();
    encodeBase64 = (input) => {
      let unencoded = input;
      if (typeof unencoded === "string") {
        unencoded = encoder.encode(unencoded);
      }
      const CHUNK_SIZE = 32768;
      const arr = [];
      for (let i2 = 0; i2 < unencoded.length; i2 += CHUNK_SIZE) {
        arr.push(String.fromCharCode.apply(null, unencoded.subarray(i2, i2 + CHUNK_SIZE)));
      }
      return btoa(arr.join(""));
    };
    encode = (input) => {
      return encodeBase64(input).replace(/=/g, "").replace(/\+/g, "-").replace(/\//g, "_");
    };
    decodeBase64 = (encoded) => {
      const binary = atob(encoded);
      const bytes = new Uint8Array(binary.length);
      for (let i2 = 0; i2 < binary.length; i2++) {
        bytes[i2] = binary.charCodeAt(i2);
      }
      return bytes;
    };
    decode = (input) => {
      let encoded = input;
      if (encoded instanceof Uint8Array) {
        encoded = decoder.decode(encoded);
      }
      encoded = encoded.replace(/-/g, "+").replace(/_/g, "/").replace(/\s/g, "");
      try {
        return decodeBase64(encoded);
      } catch (_a) {
        throw new TypeError("The input to be decoded is not correctly encoded.");
      }
    };
  }
});
var init_errors = __esm({
  "node_modules/jose/dist/browser/util/errors.js"() {
  }
});
var random_default;
var init_random = __esm({
  "node_modules/jose/dist/browser/runtime/random.js"() {
    init_webcrypto();
    random_default = webcrypto_default.getRandomValues.bind(webcrypto_default);
  }
});
var init_iv = __esm({
  "node_modules/jose/dist/browser/lib/iv.js"() {
    init_errors();
    init_random();
  }
});
var init_check_iv_length = __esm({
  "node_modules/jose/dist/browser/lib/check_iv_length.js"() {
    init_errors();
    init_iv();
  }
});
var init_check_cek_length = __esm({
  "node_modules/jose/dist/browser/runtime/check_cek_length.js"() {
    init_errors();
  }
});
var init_timing_safe_equal = __esm({
  "node_modules/jose/dist/browser/runtime/timing_safe_equal.js"() {
  }
});
var init_crypto_key = __esm({
  "node_modules/jose/dist/browser/lib/crypto_key.js"() {
  }
});
var init_invalid_key_input = __esm({
  "node_modules/jose/dist/browser/lib/invalid_key_input.js"() {
  }
});
var init_is_key_like = __esm({
  "node_modules/jose/dist/browser/runtime/is_key_like.js"() {
    init_webcrypto();
  }
});
var init_decrypt = __esm({
  "node_modules/jose/dist/browser/runtime/decrypt.js"() {
    init_buffer_utils();
    init_check_iv_length();
    init_check_cek_length();
    init_timing_safe_equal();
    init_errors();
    init_webcrypto();
    init_crypto_key();
    init_invalid_key_input();
    init_is_key_like();
  }
});
var init_zlib = __esm({
  "node_modules/jose/dist/browser/runtime/zlib.js"() {
    init_errors();
  }
});
var init_is_disjoint = __esm({
  "node_modules/jose/dist/browser/lib/is_disjoint.js"() {
  }
});
var init_is_object = __esm({
  "node_modules/jose/dist/browser/lib/is_object.js"() {
  }
});
var init_bogus = __esm({
  "node_modules/jose/dist/browser/runtime/bogus.js"() {
  }
});
var init_aeskw = __esm({
  "node_modules/jose/dist/browser/runtime/aeskw.js"() {
    init_bogus();
    init_webcrypto();
    init_crypto_key();
    init_invalid_key_input();
    init_is_key_like();
  }
});
var init_ecdhes = __esm({
  "node_modules/jose/dist/browser/runtime/ecdhes.js"() {
    init_buffer_utils();
    init_webcrypto();
    init_crypto_key();
    init_invalid_key_input();
    init_is_key_like();
  }
});
var init_check_p2s = __esm({
  "node_modules/jose/dist/browser/lib/check_p2s.js"() {
    init_errors();
  }
});
var init_pbes2kw = __esm({
  "node_modules/jose/dist/browser/runtime/pbes2kw.js"() {
    init_random();
    init_buffer_utils();
    init_base64url();
    init_aeskw();
    init_check_p2s();
    init_webcrypto();
    init_crypto_key();
    init_invalid_key_input();
    init_is_key_like();
  }
});
var init_subtle_rsaes = __esm({
  "node_modules/jose/dist/browser/runtime/subtle_rsaes.js"() {
    init_errors();
  }
});
var init_check_key_length = __esm({
  "node_modules/jose/dist/browser/runtime/check_key_length.js"() {
  }
});
var init_rsaes = __esm({
  "node_modules/jose/dist/browser/runtime/rsaes.js"() {
    init_subtle_rsaes();
    init_bogus();
    init_webcrypto();
    init_crypto_key();
    init_check_key_length();
    init_invalid_key_input();
    init_is_key_like();
  }
});
var init_cek = __esm({
  "node_modules/jose/dist/browser/lib/cek.js"() {
    init_errors();
    init_random();
  }
});
var init_format_pem = __esm({
  "node_modules/jose/dist/browser/lib/format_pem.js"() {
  }
});
var init_asn1 = __esm({
  "node_modules/jose/dist/browser/runtime/asn1.js"() {
    init_webcrypto();
    init_invalid_key_input();
    init_base64url();
    init_format_pem();
    init_errors();
    init_is_key_like();
  }
});
var init_jwk_to_key = __esm({
  "node_modules/jose/dist/browser/runtime/jwk_to_key.js"() {
    init_webcrypto();
    init_errors();
    init_base64url();
  }
});
var init_import = __esm({
  "node_modules/jose/dist/browser/key/import.js"() {
    init_base64url();
    init_asn1();
    init_jwk_to_key();
    init_errors();
    init_is_object();
  }
});
var init_check_key_type = __esm({
  "node_modules/jose/dist/browser/lib/check_key_type.js"() {
    init_invalid_key_input();
    init_is_key_like();
  }
});
var init_encrypt = __esm({
  "node_modules/jose/dist/browser/runtime/encrypt.js"() {
    init_buffer_utils();
    init_check_iv_length();
    init_check_cek_length();
    init_webcrypto();
    init_crypto_key();
    init_invalid_key_input();
    init_errors();
    init_is_key_like();
  }
});
var init_aesgcmkw = __esm({
  "node_modules/jose/dist/browser/lib/aesgcmkw.js"() {
    init_encrypt();
    init_decrypt();
    init_iv();
    init_base64url();
  }
});
var init_decrypt_key_management = __esm({
  "node_modules/jose/dist/browser/lib/decrypt_key_management.js"() {
    init_aeskw();
    init_ecdhes();
    init_pbes2kw();
    init_rsaes();
    init_base64url();
    init_errors();
    init_cek();
    init_import();
    init_check_key_type();
    init_is_object();
    init_aesgcmkw();
  }
});
var init_validate_crit = __esm({
  "node_modules/jose/dist/browser/lib/validate_crit.js"() {
    init_errors();
  }
});
var init_validate_algorithms = __esm({
  "node_modules/jose/dist/browser/lib/validate_algorithms.js"() {
  }
});
var init_decrypt2 = __esm({
  "node_modules/jose/dist/browser/jwe/flattened/decrypt.js"() {
    init_base64url();
    init_decrypt();
    init_zlib();
    init_errors();
    init_is_disjoint();
    init_is_object();
    init_decrypt_key_management();
    init_buffer_utils();
    init_cek();
    init_validate_crit();
    init_validate_algorithms();
  }
});
var init_decrypt3 = __esm({
  "node_modules/jose/dist/browser/jwe/compact/decrypt.js"() {
    init_decrypt2();
    init_errors();
    init_buffer_utils();
  }
});
var init_decrypt4 = __esm({
  "node_modules/jose/dist/browser/jwe/general/decrypt.js"() {
    init_decrypt2();
    init_errors();
    init_is_object();
  }
});
var init_key_to_jwk = __esm({
  "node_modules/jose/dist/browser/runtime/key_to_jwk.js"() {
    init_webcrypto();
    init_invalid_key_input();
    init_base64url();
    init_is_key_like();
  }
});
var init_export = __esm({
  "node_modules/jose/dist/browser/key/export.js"() {
    init_asn1();
    init_asn1();
    init_key_to_jwk();
  }
});
var init_encrypt_key_management = __esm({
  "node_modules/jose/dist/browser/lib/encrypt_key_management.js"() {
    init_aeskw();
    init_ecdhes();
    init_pbes2kw();
    init_rsaes();
    init_base64url();
    init_cek();
    init_errors();
    init_export();
    init_check_key_type();
    init_aesgcmkw();
  }
});
var unprotected;
var init_encrypt2 = __esm({
  "node_modules/jose/dist/browser/jwe/flattened/encrypt.js"() {
    init_base64url();
    init_encrypt();
    init_zlib();
    init_iv();
    init_encrypt_key_management();
    init_errors();
    init_is_disjoint();
    init_buffer_utils();
    init_validate_crit();
    unprotected = Symbol();
  }
});
var init_encrypt3 = __esm({
  "node_modules/jose/dist/browser/jwe/general/encrypt.js"() {
    init_encrypt2();
    init_errors();
    init_cek();
    init_is_disjoint();
    init_encrypt_key_management();
    init_base64url();
    init_validate_crit();
  }
});
var init_subtle_dsa = __esm({
  "node_modules/jose/dist/browser/runtime/subtle_dsa.js"() {
    init_errors();
  }
});
var init_get_sign_verify_key = __esm({
  "node_modules/jose/dist/browser/runtime/get_sign_verify_key.js"() {
    init_webcrypto();
    init_crypto_key();
    init_invalid_key_input();
    init_is_key_like();
  }
});
var init_verify = __esm({
  "node_modules/jose/dist/browser/runtime/verify.js"() {
    init_subtle_dsa();
    init_webcrypto();
    init_check_key_length();
    init_get_sign_verify_key();
  }
});
var init_verify2 = __esm({
  "node_modules/jose/dist/browser/jws/flattened/verify.js"() {
    init_base64url();
    init_verify();
    init_errors();
    init_buffer_utils();
    init_is_disjoint();
    init_is_object();
    init_check_key_type();
    init_validate_crit();
    init_validate_algorithms();
  }
});
var init_verify3 = __esm({
  "node_modules/jose/dist/browser/jws/compact/verify.js"() {
    init_verify2();
    init_errors();
    init_buffer_utils();
  }
});
var init_verify4 = __esm({
  "node_modules/jose/dist/browser/jws/general/verify.js"() {
    init_verify2();
    init_errors();
    init_is_object();
  }
});
var init_epoch = __esm({
  "node_modules/jose/dist/browser/lib/epoch.js"() {
  }
});
var minute;
var hour;
var day;
var week;
var year;
var init_secs = __esm({
  "node_modules/jose/dist/browser/lib/secs.js"() {
    minute = 60;
    hour = minute * 60;
    day = hour * 24;
    week = day * 7;
    year = day * 365.25;
  }
});
var init_jwt_claims_set = __esm({
  "node_modules/jose/dist/browser/lib/jwt_claims_set.js"() {
    init_errors();
    init_buffer_utils();
    init_epoch();
    init_secs();
    init_is_object();
  }
});
var init_verify5 = __esm({
  "node_modules/jose/dist/browser/jwt/verify.js"() {
    init_verify3();
    init_jwt_claims_set();
    init_errors();
  }
});
var init_decrypt5 = __esm({
  "node_modules/jose/dist/browser/jwt/decrypt.js"() {
    init_decrypt3();
    init_jwt_claims_set();
    init_errors();
  }
});
var init_encrypt4 = __esm({
  "node_modules/jose/dist/browser/jwe/compact/encrypt.js"() {
    init_encrypt2();
  }
});
var init_sign = __esm({
  "node_modules/jose/dist/browser/runtime/sign.js"() {
    init_subtle_dsa();
    init_webcrypto();
    init_check_key_length();
    init_get_sign_verify_key();
  }
});
var init_sign2 = __esm({
  "node_modules/jose/dist/browser/jws/flattened/sign.js"() {
    init_base64url();
    init_sign();
    init_is_disjoint();
    init_errors();
    init_buffer_utils();
    init_check_key_type();
    init_validate_crit();
  }
});
var init_sign3 = __esm({
  "node_modules/jose/dist/browser/jws/compact/sign.js"() {
    init_sign2();
  }
});
var init_sign4 = __esm({
  "node_modules/jose/dist/browser/jws/general/sign.js"() {
    init_sign2();
    init_errors();
  }
});
var init_produce = __esm({
  "node_modules/jose/dist/browser/jwt/produce.js"() {
    init_epoch();
    init_is_object();
    init_secs();
  }
});
var init_sign5 = __esm({
  "node_modules/jose/dist/browser/jwt/sign.js"() {
    init_sign3();
    init_errors();
    init_buffer_utils();
    init_produce();
  }
});
var init_encrypt5 = __esm({
  "node_modules/jose/dist/browser/jwt/encrypt.js"() {
    init_encrypt4();
    init_buffer_utils();
    init_produce();
  }
});
var init_thumbprint = __esm({
  "node_modules/jose/dist/browser/jwk/thumbprint.js"() {
    init_digest();
    init_base64url();
    init_errors();
    init_buffer_utils();
    init_is_object();
  }
});
var init_embedded = __esm({
  "node_modules/jose/dist/browser/jwk/embedded.js"() {
    init_import();
    init_is_object();
    init_errors();
  }
});
var init_local = __esm({
  "node_modules/jose/dist/browser/jwks/local.js"() {
    init_import();
    init_errors();
    init_is_object();
  }
});
var init_fetch_jwks = __esm({
  "node_modules/jose/dist/browser/runtime/fetch_jwks.js"() {
    init_errors();
  }
});
var init_remote = __esm({
  "node_modules/jose/dist/browser/jwks/remote.js"() {
    init_fetch_jwks();
    init_errors();
    init_local();
  }
});
var init_unsecured = __esm({
  "node_modules/jose/dist/browser/jwt/unsecured.js"() {
    init_base64url();
    init_buffer_utils();
    init_errors();
    init_jwt_claims_set();
    init_produce();
  }
});
var base64url_exports2 = {};
__export(base64url_exports2, {
  decode: () => decode2,
  encode: () => encode2
});
var encode2;
var decode2;
var init_base64url2 = __esm({
  "node_modules/jose/dist/browser/util/base64url.js"() {
    init_base64url();
    encode2 = encode;
    decode2 = decode;
  }
});
var init_decode_protected_header = __esm({
  "node_modules/jose/dist/browser/util/decode_protected_header.js"() {
    init_base64url2();
    init_buffer_utils();
    init_is_object();
  }
});
var init_decode_jwt = __esm({
  "node_modules/jose/dist/browser/util/decode_jwt.js"() {
    init_base64url2();
    init_buffer_utils();
    init_is_object();
    init_errors();
  }
});
var init_generate = __esm({
  "node_modules/jose/dist/browser/runtime/generate.js"() {
    init_webcrypto();
    init_errors();
    init_random();
  }
});
var init_generate_key_pair = __esm({
  "node_modules/jose/dist/browser/key/generate_key_pair.js"() {
    init_generate();
  }
});
var init_generate_secret = __esm({
  "node_modules/jose/dist/browser/key/generate_secret.js"() {
    init_generate();
  }
});
var init_browser = __esm({
  "node_modules/jose/dist/browser/index.js"() {
    init_decrypt3();
    init_decrypt2();
    init_decrypt4();
    init_encrypt3();
    init_verify3();
    init_verify2();
    init_verify4();
    init_verify5();
    init_decrypt5();
    init_encrypt4();
    init_encrypt2();
    init_sign3();
    init_sign2();
    init_sign4();
    init_sign5();
    init_encrypt5();
    init_thumbprint();
    init_embedded();
    init_local();
    init_remote();
    init_unsecured();
    init_export();
    init_import();
    init_decode_protected_header();
    init_decode_jwt();
    init_errors();
    init_generate_key_pair();
    init_generate_secret();
    init_base64url2();
  }
});
var require_browser_ponyfill = __commonJS({
  "node_modules/cross-fetch/dist/browser-ponyfill.js"(exports, module) {
    var global = typeof self !== "undefined" ? self : exports;
    var __self__ = function() {
      function F2() {
        this.fetch = false;
        this.DOMException = global.DOMException;
      }
      F2.prototype = global;
      return new F2();
    }();
    (function(self2) {
      var irrelevant = function(exports2) {
        var support = {
          searchParams: "URLSearchParams" in self2,
          iterable: "Symbol" in self2 && "iterator" in Symbol,
          blob: "FileReader" in self2 && "Blob" in self2 && function() {
            try {
              new Blob();
              return true;
            } catch (e2) {
              return false;
            }
          }(),
          formData: "FormData" in self2,
          arrayBuffer: "ArrayBuffer" in self2
        };
        function isDataView(obj) {
          return obj && DataView.prototype.isPrototypeOf(obj);
        }
        if (support.arrayBuffer) {
          var viewClasses = [
            "[object Int8Array]",
            "[object Uint8Array]",
            "[object Uint8ClampedArray]",
            "[object Int16Array]",
            "[object Uint16Array]",
            "[object Int32Array]",
            "[object Uint32Array]",
            "[object Float32Array]",
            "[object Float64Array]"
          ];
          var isArrayBufferView = ArrayBuffer.isView || function(obj) {
            return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;
          };
        }
        function normalizeName(name) {
          if (typeof name !== "string") {
            name = String(name);
          }
          if (/[^a-z0-9\-#$%&'*+.^_`|~]/i.test(name)) {
            throw new TypeError("Invalid character in header field name");
          }
          return name.toLowerCase();
        }
        function normalizeValue(value2) {
          if (typeof value2 !== "string") {
            value2 = String(value2);
          }
          return value2;
        }
        function iteratorFor(items) {
          var iterator = {
            next: function() {
              var value2 = items.shift();
              return { done: value2 === void 0, value: value2 };
            }
          };
          if (support.iterable) {
            iterator[Symbol.iterator] = function() {
              return iterator;
            };
          }
          return iterator;
        }
        function Headers2(headers) {
          this.map = {};
          if (headers instanceof Headers2) {
            headers.forEach(function(value2, name) {
              this.append(name, value2);
            }, this);
          } else if (Array.isArray(headers)) {
            headers.forEach(function(header) {
              this.append(header[0], header[1]);
            }, this);
          } else if (headers) {
            Object.getOwnPropertyNames(headers).forEach(function(name) {
              this.append(name, headers[name]);
            }, this);
          }
        }
        Headers2.prototype.append = function(name, value2) {
          name = normalizeName(name);
          value2 = normalizeValue(value2);
          var oldValue = this.map[name];
          this.map[name] = oldValue ? oldValue + ", " + value2 : value2;
        };
        Headers2.prototype["delete"] = function(name) {
          delete this.map[normalizeName(name)];
        };
        Headers2.prototype.get = function(name) {
          name = normalizeName(name);
          return this.has(name) ? this.map[name] : null;
        };
        Headers2.prototype.has = function(name) {
          return this.map.hasOwnProperty(normalizeName(name));
        };
        Headers2.prototype.set = function(name, value2) {
          this.map[normalizeName(name)] = normalizeValue(value2);
        };
        Headers2.prototype.forEach = function(callback, thisArg) {
          for (var name in this.map) {
            if (this.map.hasOwnProperty(name)) {
              callback.call(thisArg, this.map[name], name, this);
            }
          }
        };
        Headers2.prototype.keys = function() {
          var items = [];
          this.forEach(function(value2, name) {
            items.push(name);
          });
          return iteratorFor(items);
        };
        Headers2.prototype.values = function() {
          var items = [];
          this.forEach(function(value2) {
            items.push(value2);
          });
          return iteratorFor(items);
        };
        Headers2.prototype.entries = function() {
          var items = [];
          this.forEach(function(value2, name) {
            items.push([name, value2]);
          });
          return iteratorFor(items);
        };
        if (support.iterable) {
          Headers2.prototype[Symbol.iterator] = Headers2.prototype.entries;
        }
        function consumed(body) {
          if (body.bodyUsed) {
            return Promise.reject(new TypeError("Already read"));
          }
          body.bodyUsed = true;
        }
        function fileReaderReady(reader) {
          return new Promise(function(resolve, reject) {
            reader.onload = function() {
              resolve(reader.result);
            };
            reader.onerror = function() {
              reject(reader.error);
            };
          });
        }
        function readBlobAsArrayBuffer(blob) {
          var reader = new FileReader();
          var promise = fileReaderReady(reader);
          reader.readAsArrayBuffer(blob);
          return promise;
        }
        function readBlobAsText(blob) {
          var reader = new FileReader();
          var promise = fileReaderReady(reader);
          reader.readAsText(blob);
          return promise;
        }
        function readArrayBufferAsText(buf) {
          var view = new Uint8Array(buf);
          var chars3 = new Array(view.length);
          for (var i2 = 0; i2 < view.length; i2++) {
            chars3[i2] = String.fromCharCode(view[i2]);
          }
          return chars3.join("");
        }
        function bufferClone(buf) {
          if (buf.slice) {
            return buf.slice(0);
          } else {
            var view = new Uint8Array(buf.byteLength);
            view.set(new Uint8Array(buf));
            return view.buffer;
          }
        }
        function Body() {
          this.bodyUsed = false;
          this._initBody = function(body) {
            this._bodyInit = body;
            if (!body) {
              this._bodyText = "";
            } else if (typeof body === "string") {
              this._bodyText = body;
            } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
              this._bodyBlob = body;
            } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
              this._bodyFormData = body;
            } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
              this._bodyText = body.toString();
            } else if (support.arrayBuffer && support.blob && isDataView(body)) {
              this._bodyArrayBuffer = bufferClone(body.buffer);
              this._bodyInit = new Blob([this._bodyArrayBuffer]);
            } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
              this._bodyArrayBuffer = bufferClone(body);
            } else {
              this._bodyText = body = Object.prototype.toString.call(body);
            }
            if (!this.headers.get("content-type")) {
              if (typeof body === "string") {
                this.headers.set("content-type", "text/plain;charset=UTF-8");
              } else if (this._bodyBlob && this._bodyBlob.type) {
                this.headers.set("content-type", this._bodyBlob.type);
              } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
                this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8");
              }
            }
          };
          if (support.blob) {
            this.blob = function() {
              var rejected = consumed(this);
              if (rejected) {
                return rejected;
              }
              if (this._bodyBlob) {
                return Promise.resolve(this._bodyBlob);
              } else if (this._bodyArrayBuffer) {
                return Promise.resolve(new Blob([this._bodyArrayBuffer]));
              } else if (this._bodyFormData) {
                throw new Error("could not read FormData body as blob");
              } else {
                return Promise.resolve(new Blob([this._bodyText]));
              }
            };
            this.arrayBuffer = function() {
              if (this._bodyArrayBuffer) {
                return consumed(this) || Promise.resolve(this._bodyArrayBuffer);
              } else {
                return this.blob().then(readBlobAsArrayBuffer);
              }
            };
          }
          this.text = function() {
            var rejected = consumed(this);
            if (rejected) {
              return rejected;
            }
            if (this._bodyBlob) {
              return readBlobAsText(this._bodyBlob);
            } else if (this._bodyArrayBuffer) {
              return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));
            } else if (this._bodyFormData) {
              throw new Error("could not read FormData body as text");
            } else {
              return Promise.resolve(this._bodyText);
            }
          };
          if (support.formData) {
            this.formData = function() {
              return this.text().then(decode3);
            };
          }
          this.json = function() {
            return this.text().then(JSON.parse);
          };
          return this;
        }
        var methods = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];
        function normalizeMethod(method) {
          var upcased = method.toUpperCase();
          return methods.indexOf(upcased) > -1 ? upcased : method;
        }
        function Request2(input, options2) {
          options2 = options2 || {};
          var body = options2.body;
          if (input instanceof Request2) {
            if (input.bodyUsed) {
              throw new TypeError("Already read");
            }
            this.url = input.url;
            this.credentials = input.credentials;
            if (!options2.headers) {
              this.headers = new Headers2(input.headers);
            }
            this.method = input.method;
            this.mode = input.mode;
            this.signal = input.signal;
            if (!body && input._bodyInit != null) {
              body = input._bodyInit;
              input.bodyUsed = true;
            }
          } else {
            this.url = String(input);
          }
          this.credentials = options2.credentials || this.credentials || "same-origin";
          if (options2.headers || !this.headers) {
            this.headers = new Headers2(options2.headers);
          }
          this.method = normalizeMethod(options2.method || this.method || "GET");
          this.mode = options2.mode || this.mode || null;
          this.signal = options2.signal || this.signal;
          this.referrer = null;
          if ((this.method === "GET" || this.method === "HEAD") && body) {
            throw new TypeError("Body not allowed for GET or HEAD requests");
          }
          this._initBody(body);
        }
        Request2.prototype.clone = function() {
          return new Request2(this, { body: this._bodyInit });
        };
        function decode3(body) {
          var form = new FormData();
          body.trim().split("&").forEach(function(bytes) {
            if (bytes) {
              var split = bytes.split("=");
              var name = split.shift().replace(/\+/g, " ");
              var value2 = split.join("=").replace(/\+/g, " ");
              form.append(decodeURIComponent(name), decodeURIComponent(value2));
            }
          });
          return form;
        }
        function parseHeaders(rawHeaders) {
          var headers = new Headers2();
          var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, " ");
          preProcessedHeaders.split(/\r?\n/).forEach(function(line) {
            var parts = line.split(":");
            var key2 = parts.shift().trim();
            if (key2) {
              var value2 = parts.join(":").trim();
              headers.append(key2, value2);
            }
          });
          return headers;
        }
        Body.call(Request2.prototype);
        function Response2(bodyInit, options2) {
          if (!options2) {
            options2 = {};
          }
          this.type = "default";
          this.status = options2.status === void 0 ? 200 : options2.status;
          this.ok = this.status >= 200 && this.status < 300;
          this.statusText = "statusText" in options2 ? options2.statusText : "OK";
          this.headers = new Headers2(options2.headers);
          this.url = options2.url || "";
          this._initBody(bodyInit);
        }
        Body.call(Response2.prototype);
        Response2.prototype.clone = function() {
          return new Response2(this._bodyInit, {
            status: this.status,
            statusText: this.statusText,
            headers: new Headers2(this.headers),
            url: this.url
          });
        };
        Response2.error = function() {
          var response = new Response2(null, { status: 0, statusText: "" });
          response.type = "error";
          return response;
        };
        var redirectStatuses = [301, 302, 303, 307, 308];
        Response2.redirect = function(url, status) {
          if (redirectStatuses.indexOf(status) === -1) {
            throw new RangeError("Invalid status code");
          }
          return new Response2(null, { status, headers: { location: url } });
        };
        exports2.DOMException = self2.DOMException;
        try {
          new exports2.DOMException();
        } catch (err) {
          exports2.DOMException = function(message, name) {
            this.message = message;
            this.name = name;
            var error2 = Error(message);
            this.stack = error2.stack;
          };
          exports2.DOMException.prototype = Object.create(Error.prototype);
          exports2.DOMException.prototype.constructor = exports2.DOMException;
        }
        function fetch2(input, init2) {
          return new Promise(function(resolve, reject) {
            var request = new Request2(input, init2);
            if (request.signal && request.signal.aborted) {
              return reject(new exports2.DOMException("Aborted", "AbortError"));
            }
            var xhr = new XMLHttpRequest();
            function abortXhr() {
              xhr.abort();
            }
            xhr.onload = function() {
              var options2 = {
                status: xhr.status,
                statusText: xhr.statusText,
                headers: parseHeaders(xhr.getAllResponseHeaders() || "")
              };
              options2.url = "responseURL" in xhr ? xhr.responseURL : options2.headers.get("X-Request-URL");
              var body = "response" in xhr ? xhr.response : xhr.responseText;
              resolve(new Response2(body, options2));
            };
            xhr.onerror = function() {
              reject(new TypeError("Network request failed"));
            };
            xhr.ontimeout = function() {
              reject(new TypeError("Network request failed"));
            };
            xhr.onabort = function() {
              reject(new exports2.DOMException("Aborted", "AbortError"));
            };
            xhr.open(request.method, request.url, true);
            if (request.credentials === "include") {
              xhr.withCredentials = true;
            } else if (request.credentials === "omit") {
              xhr.withCredentials = false;
            }
            if ("responseType" in xhr && support.blob) {
              xhr.responseType = "blob";
            }
            request.headers.forEach(function(value2, name) {
              xhr.setRequestHeader(name, value2);
            });
            if (request.signal) {
              request.signal.addEventListener("abort", abortXhr);
              xhr.onreadystatechange = function() {
                if (xhr.readyState === 4) {
                  request.signal.removeEventListener("abort", abortXhr);
                }
              };
            }
            xhr.send(typeof request._bodyInit === "undefined" ? null : request._bodyInit);
          });
        }
        fetch2.polyfill = true;
        if (!self2.fetch) {
          self2.fetch = fetch2;
          self2.Headers = Headers2;
          self2.Request = Request2;
          self2.Response = Response2;
        }
        exports2.Headers = Headers2;
        exports2.Request = Request2;
        exports2.Response = Response2;
        exports2.fetch = fetch2;
        Object.defineProperty(exports2, "__esModule", { value: true });
        return exports2;
      }({});
    })(__self__);
    __self__.fetch.ponyfill = true;
    delete __self__.fetch.polyfill;
    var ctx = __self__;
    exports = ctx.fetch;
    exports.default = ctx.fetch;
    exports.fetch = ctx.fetch;
    exports.Headers = ctx.Headers;
    exports.Request = ctx.Request;
    exports.Response = ctx.Response;
    module.exports = exports;
  }
});
var __awaiter;
var resolveFetch;
var init_helper = __esm({
  "node_modules/@supabase/functions-js/dist/module/helper.js"() {
    __awaiter = function(thisArg, _arguments, P2, generator) {
      function adopt(value2) {
        return value2 instanceof P2 ? value2 : new P2(function(resolve) {
          resolve(value2);
        });
      }
      return new (P2 || (P2 = Promise))(function(resolve, reject) {
        function fulfilled(value2) {
          try {
            step(generator.next(value2));
          } catch (e2) {
            reject(e2);
          }
        }
        function rejected(value2) {
          try {
            step(generator["throw"](value2));
          } catch (e2) {
            reject(e2);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    resolveFetch = (customFetch) => {
      let _fetch;
      if (customFetch) {
        _fetch = customFetch;
      } else if (typeof fetch === "undefined") {
        _fetch = (...args) => __awaiter(void 0, void 0, void 0, function* () {
          return yield (yield Promise.resolve().then(() => __toESM(require_browser_ponyfill()))).fetch(...args);
        });
      } else {
        _fetch = fetch;
      }
      return (...args) => _fetch(...args);
    };
  }
});
var FunctionsError;
var FunctionsFetchError;
var FunctionsRelayError;
var FunctionsHttpError;
var init_types = __esm({
  "node_modules/@supabase/functions-js/dist/module/types.js"() {
    FunctionsError = class extends Error {
      constructor(message, name = "FunctionsError", context) {
        super(message);
        super.name = name;
        this.context = context;
      }
    };
    FunctionsFetchError = class extends FunctionsError {
      constructor(context) {
        super("Failed to send a request to the Edge Function", "FunctionsFetchError", context);
      }
    };
    FunctionsRelayError = class extends FunctionsError {
      constructor(context) {
        super("Relay Error invoking the Edge Function", "FunctionsRelayError", context);
      }
    };
    FunctionsHttpError = class extends FunctionsError {
      constructor(context) {
        super("Edge Function returned a non-2xx status code", "FunctionsHttpError", context);
      }
    };
  }
});
var __awaiter2;
var FunctionsClient;
var init_FunctionsClient = __esm({
  "node_modules/@supabase/functions-js/dist/module/FunctionsClient.js"() {
    init_helper();
    init_types();
    __awaiter2 = function(thisArg, _arguments, P2, generator) {
      function adopt(value2) {
        return value2 instanceof P2 ? value2 : new P2(function(resolve) {
          resolve(value2);
        });
      }
      return new (P2 || (P2 = Promise))(function(resolve, reject) {
        function fulfilled(value2) {
          try {
            step(generator.next(value2));
          } catch (e2) {
            reject(e2);
          }
        }
        function rejected(value2) {
          try {
            step(generator["throw"](value2));
          } catch (e2) {
            reject(e2);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    FunctionsClient = class {
      constructor(url, { headers = {}, customFetch } = {}) {
        this.url = url;
        this.headers = headers;
        this.fetch = resolveFetch(customFetch);
      }
      setAuth(token) {
        this.headers.Authorization = `Bearer ${token}`;
      }
      invoke(functionName, options2 = {}) {
        var _a;
        return __awaiter2(this, void 0, void 0, function* () {
          try {
            const { headers, method, body: functionArgs } = options2;
            let _headers = {};
            let body;
            if (functionArgs && (headers && !Object.prototype.hasOwnProperty.call(headers, "Content-Type") || !headers)) {
              if (typeof Blob !== "undefined" && functionArgs instanceof Blob || functionArgs instanceof ArrayBuffer) {
                _headers["Content-Type"] = "application/octet-stream";
                body = functionArgs;
              } else if (typeof functionArgs === "string") {
                _headers["Content-Type"] = "text/plain";
                body = functionArgs;
              } else if (typeof FormData !== "undefined" && functionArgs instanceof FormData) {
                body = functionArgs;
              } else {
                _headers["Content-Type"] = "application/json";
                body = JSON.stringify(functionArgs);
              }
            }
            const response = yield this.fetch(`${this.url}/${functionName}`, {
              method: method || "POST",
              headers: Object.assign(Object.assign(Object.assign({}, _headers), this.headers), headers),
              body
            }).catch((fetchError) => {
              throw new FunctionsFetchError(fetchError);
            });
            const isRelayError = response.headers.get("x-relay-error");
            if (isRelayError && isRelayError === "true") {
              throw new FunctionsRelayError(response);
            }
            if (!response.ok) {
              throw new FunctionsHttpError(response);
            }
            let responseType = ((_a = response.headers.get("Content-Type")) !== null && _a !== void 0 ? _a : "text/plain").split(";")[0].trim();
            let data;
            if (responseType === "application/json") {
              data = yield response.json();
            } else if (responseType === "application/octet-stream") {
              data = yield response.blob();
            } else if (responseType === "multipart/form-data") {
              data = yield response.formData();
            } else {
              data = yield response.text();
            }
            return { data, error: null };
          } catch (error2) {
            return { data: null, error: error2 };
          }
        });
      }
    };
  }
});
var init_module = __esm({
  "node_modules/@supabase/functions-js/dist/module/index.js"() {
    init_FunctionsClient();
  }
});
var import_cross_fetch;
var PostgrestBuilder;
var init_PostgrestBuilder = __esm({
  "node_modules/@supabase/postgrest-js/dist/module/PostgrestBuilder.js"() {
    import_cross_fetch = __toESM(require_browser_ponyfill());
    PostgrestBuilder = class {
      constructor(builder) {
        this.shouldThrowOnError = false;
        this.method = builder.method;
        this.url = builder.url;
        this.headers = builder.headers;
        this.schema = builder.schema;
        this.body = builder.body;
        this.shouldThrowOnError = builder.shouldThrowOnError;
        this.signal = builder.signal;
        this.isMaybeSingle = builder.isMaybeSingle;
        if (builder.fetch) {
          this.fetch = builder.fetch;
        } else if (typeof fetch === "undefined") {
          this.fetch = import_cross_fetch.default;
        } else {
          this.fetch = fetch;
        }
      }
      throwOnError() {
        this.shouldThrowOnError = true;
        return this;
      }
      then(onfulfilled, onrejected) {
        if (this.schema === void 0) {
        } else if (["GET", "HEAD"].includes(this.method)) {
          this.headers["Accept-Profile"] = this.schema;
        } else {
          this.headers["Content-Profile"] = this.schema;
        }
        if (this.method !== "GET" && this.method !== "HEAD") {
          this.headers["Content-Type"] = "application/json";
        }
        const _fetch = this.fetch;
        let res = _fetch(this.url.toString(), {
          method: this.method,
          headers: this.headers,
          body: JSON.stringify(this.body),
          signal: this.signal
        }).then(async (res2) => {
          var _a, _b, _c;
          let error2 = null;
          let data = null;
          let count = null;
          let status = res2.status;
          let statusText = res2.statusText;
          if (res2.ok) {
            if (this.method !== "HEAD") {
              const body = await res2.text();
              if (body === "") {
              } else if (this.headers["Accept"] === "text/csv") {
                data = body;
              } else if (this.headers["Accept"] && this.headers["Accept"].includes("application/vnd.pgrst.plan+text")) {
                data = body;
              } else {
                data = JSON.parse(body);
              }
            }
            const countHeader = (_a = this.headers["Prefer"]) === null || _a === void 0 ? void 0 : _a.match(/count=(exact|planned|estimated)/);
            const contentRange = (_b = res2.headers.get("content-range")) === null || _b === void 0 ? void 0 : _b.split("/");
            if (countHeader && contentRange && contentRange.length > 1) {
              count = parseInt(contentRange[1]);
            }
            if (this.isMaybeSingle && this.method === "GET" && Array.isArray(data)) {
              if (data.length > 1) {
                error2 = {
                  code: "PGRST116",
                  details: `Results contain ${data.length} rows, application/vnd.pgrst.object+json requires 1 row`,
                  hint: null,
                  message: "JSON object requested, multiple (or no) rows returned"
                };
                data = null;
                count = null;
                status = 406;
                statusText = "Not Acceptable";
              } else if (data.length === 1) {
                data = data[0];
              } else {
                data = null;
              }
            }
          } else {
            const body = await res2.text();
            try {
              error2 = JSON.parse(body);
              if (Array.isArray(error2) && res2.status === 404) {
                data = [];
                error2 = null;
                status = 200;
                statusText = "OK";
              }
            } catch (_d) {
              if (res2.status === 404 && body === "") {
                status = 204;
                statusText = "No Content";
              } else {
                error2 = {
                  message: body
                };
              }
            }
            if (error2 && this.isMaybeSingle && ((_c = error2 === null || error2 === void 0 ? void 0 : error2.details) === null || _c === void 0 ? void 0 : _c.includes("Results contain 0 rows"))) {
              error2 = null;
              status = 200;
              statusText = "OK";
            }
            if (error2 && this.shouldThrowOnError) {
              throw error2;
            }
          }
          const postgrestResponse = {
            error: error2,
            data,
            count,
            status,
            statusText
          };
          return postgrestResponse;
        });
        if (!this.shouldThrowOnError) {
          res = res.catch((fetchError) => {
            var _a, _b, _c;
            return {
              error: {
                message: `${(_a = fetchError === null || fetchError === void 0 ? void 0 : fetchError.name) !== null && _a !== void 0 ? _a : "FetchError"}: ${fetchError === null || fetchError === void 0 ? void 0 : fetchError.message}`,
                details: `${(_b = fetchError === null || fetchError === void 0 ? void 0 : fetchError.stack) !== null && _b !== void 0 ? _b : ""}`,
                hint: "",
                code: `${(_c = fetchError === null || fetchError === void 0 ? void 0 : fetchError.code) !== null && _c !== void 0 ? _c : ""}`
              },
              data: null,
              count: null,
              status: 0,
              statusText: ""
            };
          });
        }
        return res.then(onfulfilled, onrejected);
      }
    };
  }
});
var PostgrestTransformBuilder;
var init_PostgrestTransformBuilder = __esm({
  "node_modules/@supabase/postgrest-js/dist/module/PostgrestTransformBuilder.js"() {
    init_PostgrestBuilder();
    PostgrestTransformBuilder = class extends PostgrestBuilder {
      select(columns) {
        let quoted2 = false;
        const cleanedColumns = (columns !== null && columns !== void 0 ? columns : "*").split("").map((c2) => {
          if (/\s/.test(c2) && !quoted2) {
            return "";
          }
          if (c2 === '"') {
            quoted2 = !quoted2;
          }
          return c2;
        }).join("");
        this.url.searchParams.set("select", cleanedColumns);
        if (this.headers["Prefer"]) {
          this.headers["Prefer"] += ",";
        }
        this.headers["Prefer"] += "return=representation";
        return this;
      }
      order(column, { ascending = true, nullsFirst, foreignTable } = {}) {
        const key2 = foreignTable ? `${foreignTable}.order` : "order";
        const existingOrder = this.url.searchParams.get(key2);
        this.url.searchParams.set(key2, `${existingOrder ? `${existingOrder},` : ""}${column}.${ascending ? "asc" : "desc"}${nullsFirst === void 0 ? "" : nullsFirst ? ".nullsfirst" : ".nullslast"}`);
        return this;
      }
      limit(count, { foreignTable } = {}) {
        const key2 = typeof foreignTable === "undefined" ? "limit" : `${foreignTable}.limit`;
        this.url.searchParams.set(key2, `${count}`);
        return this;
      }
      range(from, to, { foreignTable } = {}) {
        const keyOffset = typeof foreignTable === "undefined" ? "offset" : `${foreignTable}.offset`;
        const keyLimit = typeof foreignTable === "undefined" ? "limit" : `${foreignTable}.limit`;
        this.url.searchParams.set(keyOffset, `${from}`);
        this.url.searchParams.set(keyLimit, `${to - from + 1}`);
        return this;
      }
      abortSignal(signal) {
        this.signal = signal;
        return this;
      }
      single() {
        this.headers["Accept"] = "application/vnd.pgrst.object+json";
        return this;
      }
      maybeSingle() {
        if (this.method === "GET") {
          this.headers["Accept"] = "application/json";
        } else {
          this.headers["Accept"] = "application/vnd.pgrst.object+json";
        }
        this.isMaybeSingle = true;
        return this;
      }
      csv() {
        this.headers["Accept"] = "text/csv";
        return this;
      }
      geojson() {
        this.headers["Accept"] = "application/geo+json";
        return this;
      }
      explain({ analyze = false, verbose = false, settings = false, buffers = false, wal = false, format = "text" } = {}) {
        const options2 = [
          analyze ? "analyze" : null,
          verbose ? "verbose" : null,
          settings ? "settings" : null,
          buffers ? "buffers" : null,
          wal ? "wal" : null
        ].filter(Boolean).join("|");
        const forMediatype = this.headers["Accept"];
        this.headers["Accept"] = `application/vnd.pgrst.plan+${format}; for="${forMediatype}"; options=${options2};`;
        if (format === "json")
          return this;
        else
          return this;
      }
      rollback() {
        var _a;
        if (((_a = this.headers["Prefer"]) !== null && _a !== void 0 ? _a : "").trim().length > 0) {
          this.headers["Prefer"] += ",tx=rollback";
        } else {
          this.headers["Prefer"] = "tx=rollback";
        }
        return this;
      }
      returns() {
        return this;
      }
    };
  }
});
var PostgrestFilterBuilder;
var init_PostgrestFilterBuilder = __esm({
  "node_modules/@supabase/postgrest-js/dist/module/PostgrestFilterBuilder.js"() {
    init_PostgrestTransformBuilder();
    PostgrestFilterBuilder = class extends PostgrestTransformBuilder {
      eq(column, value2) {
        this.url.searchParams.append(column, `eq.${value2}`);
        return this;
      }
      neq(column, value2) {
        this.url.searchParams.append(column, `neq.${value2}`);
        return this;
      }
      gt(column, value2) {
        this.url.searchParams.append(column, `gt.${value2}`);
        return this;
      }
      gte(column, value2) {
        this.url.searchParams.append(column, `gte.${value2}`);
        return this;
      }
      lt(column, value2) {
        this.url.searchParams.append(column, `lt.${value2}`);
        return this;
      }
      lte(column, value2) {
        this.url.searchParams.append(column, `lte.${value2}`);
        return this;
      }
      like(column, pattern2) {
        this.url.searchParams.append(column, `like.${pattern2}`);
        return this;
      }
      likeAllOf(column, patterns) {
        this.url.searchParams.append(column, `like(all).{${patterns.join(",")}}`);
        return this;
      }
      likeAnyOf(column, patterns) {
        this.url.searchParams.append(column, `like(any).{${patterns.join(",")}}`);
        return this;
      }
      ilike(column, pattern2) {
        this.url.searchParams.append(column, `ilike.${pattern2}`);
        return this;
      }
      ilikeAllOf(column, patterns) {
        this.url.searchParams.append(column, `ilike(all).{${patterns.join(",")}}`);
        return this;
      }
      ilikeAnyOf(column, patterns) {
        this.url.searchParams.append(column, `ilike(any).{${patterns.join(",")}}`);
        return this;
      }
      is(column, value2) {
        this.url.searchParams.append(column, `is.${value2}`);
        return this;
      }
      in(column, values) {
        const cleanedValues = values.map((s3) => {
          if (typeof s3 === "string" && new RegExp("[,()]").test(s3))
            return `"${s3}"`;
          else
            return `${s3}`;
        }).join(",");
        this.url.searchParams.append(column, `in.(${cleanedValues})`);
        return this;
      }
      contains(column, value2) {
        if (typeof value2 === "string") {
          this.url.searchParams.append(column, `cs.${value2}`);
        } else if (Array.isArray(value2)) {
          this.url.searchParams.append(column, `cs.{${value2.join(",")}}`);
        } else {
          this.url.searchParams.append(column, `cs.${JSON.stringify(value2)}`);
        }
        return this;
      }
      containedBy(column, value2) {
        if (typeof value2 === "string") {
          this.url.searchParams.append(column, `cd.${value2}`);
        } else if (Array.isArray(value2)) {
          this.url.searchParams.append(column, `cd.{${value2.join(",")}}`);
        } else {
          this.url.searchParams.append(column, `cd.${JSON.stringify(value2)}`);
        }
        return this;
      }
      rangeGt(column, range) {
        this.url.searchParams.append(column, `sr.${range}`);
        return this;
      }
      rangeGte(column, range) {
        this.url.searchParams.append(column, `nxl.${range}`);
        return this;
      }
      rangeLt(column, range) {
        this.url.searchParams.append(column, `sl.${range}`);
        return this;
      }
      rangeLte(column, range) {
        this.url.searchParams.append(column, `nxr.${range}`);
        return this;
      }
      rangeAdjacent(column, range) {
        this.url.searchParams.append(column, `adj.${range}`);
        return this;
      }
      overlaps(column, value2) {
        if (typeof value2 === "string") {
          this.url.searchParams.append(column, `ov.${value2}`);
        } else {
          this.url.searchParams.append(column, `ov.{${value2.join(",")}}`);
        }
        return this;
      }
      textSearch(column, query, { config, type } = {}) {
        let typePart = "";
        if (type === "plain") {
          typePart = "pl";
        } else if (type === "phrase") {
          typePart = "ph";
        } else if (type === "websearch") {
          typePart = "w";
        }
        const configPart = config === void 0 ? "" : `(${config})`;
        this.url.searchParams.append(column, `${typePart}fts${configPart}.${query}`);
        return this;
      }
      match(query) {
        Object.entries(query).forEach(([column, value2]) => {
          this.url.searchParams.append(column, `eq.${value2}`);
        });
        return this;
      }
      not(column, operator, value2) {
        this.url.searchParams.append(column, `not.${operator}.${value2}`);
        return this;
      }
      or(filters, { foreignTable } = {}) {
        const key2 = foreignTable ? `${foreignTable}.or` : "or";
        this.url.searchParams.append(key2, `(${filters})`);
        return this;
      }
      filter(column, operator, value2) {
        this.url.searchParams.append(column, `${operator}.${value2}`);
        return this;
      }
    };
  }
});
var PostgrestQueryBuilder;
var init_PostgrestQueryBuilder = __esm({
  "node_modules/@supabase/postgrest-js/dist/module/PostgrestQueryBuilder.js"() {
    init_PostgrestFilterBuilder();
    PostgrestQueryBuilder = class {
      constructor(url, { headers = {}, schema, fetch: fetch2 }) {
        this.url = url;
        this.headers = headers;
        this.schema = schema;
        this.fetch = fetch2;
      }
      select(columns, { head = false, count } = {}) {
        const method = head ? "HEAD" : "GET";
        let quoted2 = false;
        const cleanedColumns = (columns !== null && columns !== void 0 ? columns : "*").split("").map((c2) => {
          if (/\s/.test(c2) && !quoted2) {
            return "";
          }
          if (c2 === '"') {
            quoted2 = !quoted2;
          }
          return c2;
        }).join("");
        this.url.searchParams.set("select", cleanedColumns);
        if (count) {
          this.headers["Prefer"] = `count=${count}`;
        }
        return new PostgrestFilterBuilder({
          method,
          url: this.url,
          headers: this.headers,
          schema: this.schema,
          fetch: this.fetch,
          allowEmpty: false
        });
      }
      insert(values, { count, defaultToNull = true } = {}) {
        const method = "POST";
        const prefersHeaders = [];
        if (this.headers["Prefer"]) {
          prefersHeaders.push(this.headers["Prefer"]);
        }
        if (count) {
          prefersHeaders.push(`count=${count}`);
        }
        if (!defaultToNull) {
          prefersHeaders.push("missing=default");
        }
        this.headers["Prefer"] = prefersHeaders.join(",");
        if (Array.isArray(values)) {
          const columns = values.reduce((acc, x2) => acc.concat(Object.keys(x2)), []);
          if (columns.length > 0) {
            const uniqueColumns = [...new Set(columns)].map((column) => `"${column}"`);
            this.url.searchParams.set("columns", uniqueColumns.join(","));
          }
        }
        return new PostgrestFilterBuilder({
          method,
          url: this.url,
          headers: this.headers,
          schema: this.schema,
          body: values,
          fetch: this.fetch,
          allowEmpty: false
        });
      }
      upsert(values, { onConflict, ignoreDuplicates = false, count, defaultToNull = true } = {}) {
        const method = "POST";
        const prefersHeaders = [`resolution=${ignoreDuplicates ? "ignore" : "merge"}-duplicates`];
        if (onConflict !== void 0)
          this.url.searchParams.set("on_conflict", onConflict);
        if (this.headers["Prefer"]) {
          prefersHeaders.push(this.headers["Prefer"]);
        }
        if (count) {
          prefersHeaders.push(`count=${count}`);
        }
        if (!defaultToNull) {
          prefersHeaders.push("missing=default");
        }
        this.headers["Prefer"] = prefersHeaders.join(",");
        if (Array.isArray(values)) {
          const columns = values.reduce((acc, x2) => acc.concat(Object.keys(x2)), []);
          if (columns.length > 0) {
            const uniqueColumns = [...new Set(columns)].map((column) => `"${column}"`);
            this.url.searchParams.set("columns", uniqueColumns.join(","));
          }
        }
        return new PostgrestFilterBuilder({
          method,
          url: this.url,
          headers: this.headers,
          schema: this.schema,
          body: values,
          fetch: this.fetch,
          allowEmpty: false
        });
      }
      update(values, { count } = {}) {
        const method = "PATCH";
        const prefersHeaders = [];
        if (this.headers["Prefer"]) {
          prefersHeaders.push(this.headers["Prefer"]);
        }
        if (count) {
          prefersHeaders.push(`count=${count}`);
        }
        this.headers["Prefer"] = prefersHeaders.join(",");
        return new PostgrestFilterBuilder({
          method,
          url: this.url,
          headers: this.headers,
          schema: this.schema,
          body: values,
          fetch: this.fetch,
          allowEmpty: false
        });
      }
      delete({ count } = {}) {
        const method = "DELETE";
        const prefersHeaders = [];
        if (count) {
          prefersHeaders.push(`count=${count}`);
        }
        if (this.headers["Prefer"]) {
          prefersHeaders.unshift(this.headers["Prefer"]);
        }
        this.headers["Prefer"] = prefersHeaders.join(",");
        return new PostgrestFilterBuilder({
          method,
          url: this.url,
          headers: this.headers,
          schema: this.schema,
          fetch: this.fetch,
          allowEmpty: false
        });
      }
    };
  }
});
var version;
var init_version = __esm({
  "node_modules/@supabase/postgrest-js/dist/module/version.js"() {
    version = "1.7.0";
  }
});
var DEFAULT_HEADERS;
var init_constants = __esm({
  "node_modules/@supabase/postgrest-js/dist/module/constants.js"() {
    init_version();
    DEFAULT_HEADERS = { "X-Client-Info": `postgrest-js/${version}` };
  }
});
var PostgrestClient;
var init_PostgrestClient = __esm({
  "node_modules/@supabase/postgrest-js/dist/module/PostgrestClient.js"() {
    init_PostgrestQueryBuilder();
    init_PostgrestFilterBuilder();
    init_constants();
    PostgrestClient = class {
      constructor(url, { headers = {}, schema, fetch: fetch2 } = {}) {
        this.url = url;
        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), headers);
        this.schema = schema;
        this.fetch = fetch2;
      }
      from(relation) {
        const url = new URL(`${this.url}/${relation}`);
        return new PostgrestQueryBuilder(url, {
          headers: Object.assign({}, this.headers),
          schema: this.schema,
          fetch: this.fetch
        });
      }
      rpc(fn, args = {}, { head = false, count } = {}) {
        let method;
        const url = new URL(`${this.url}/rpc/${fn}`);
        let body;
        if (head) {
          method = "HEAD";
          Object.entries(args).forEach(([name, value2]) => {
            url.searchParams.append(name, `${value2}`);
          });
        } else {
          method = "POST";
          body = args;
        }
        const headers = Object.assign({}, this.headers);
        if (count) {
          headers["Prefer"] = `count=${count}`;
        }
        return new PostgrestFilterBuilder({
          method,
          url,
          headers,
          schema: this.schema,
          body,
          fetch: this.fetch,
          allowEmpty: false
        });
      }
    };
  }
});
var init_module2 = __esm({
  "node_modules/@supabase/postgrest-js/dist/module/index.js"() {
    init_PostgrestClient();
    init_PostgrestQueryBuilder();
    init_PostgrestFilterBuilder();
    init_PostgrestTransformBuilder();
    init_PostgrestBuilder();
  }
});
var require_global = __commonJS({
  "node_modules/es5-ext/global.js"(exports, module) {
    var naiveFallback = function() {
      if (typeof self === "object" && self)
        return self;
      if (typeof window === "object" && window)
        return window;
      throw new Error("Unable to resolve global `this`");
    };
    module.exports = function() {
      if (this)
        return this;
      if (typeof globalThis === "object" && globalThis)
        return globalThis;
      try {
        Object.defineProperty(Object.prototype, "__global__", {
          get: function() {
            return this;
          },
          configurable: true
        });
      } catch (error2) {
        return naiveFallback();
      }
      try {
        if (!__global__)
          return naiveFallback();
        return __global__;
      } finally {
        delete Object.prototype.__global__;
      }
    }();
  }
});
var require_package = __commonJS({
  "node_modules/websocket/package.json"(exports, module) {
    module.exports = {
      name: "websocket",
      description: "Websocket Client & Server Library implementing the WebSocket protocol as specified in RFC 6455.",
      keywords: [
        "websocket",
        "websockets",
        "socket",
        "networking",
        "comet",
        "push",
        "RFC-6455",
        "realtime",
        "server",
        "client"
      ],
      author: "Brian McKelvey <theturtle32@gmail.com> (https://github.com/theturtle32)",
      contributors: [
        "I\xF1aki Baz Castillo <ibc@aliax.net> (http://dev.sipdoc.net)"
      ],
      version: "1.0.34",
      repository: {
        type: "git",
        url: "https://github.com/theturtle32/WebSocket-Node.git"
      },
      homepage: "https://github.com/theturtle32/WebSocket-Node",
      engines: {
        node: ">=4.0.0"
      },
      dependencies: {
        bufferutil: "^4.0.1",
        debug: "^2.2.0",
        "es5-ext": "^0.10.50",
        "typedarray-to-buffer": "^3.1.5",
        "utf-8-validate": "^5.0.2",
        yaeti: "^0.0.6"
      },
      devDependencies: {
        "buffer-equal": "^1.0.0",
        gulp: "^4.0.2",
        "gulp-jshint": "^2.0.4",
        "jshint-stylish": "^2.2.1",
        jshint: "^2.0.0",
        tape: "^4.9.1"
      },
      config: {
        verbose: false
      },
      scripts: {
        test: "tape test/unit/*.js",
        gulp: "gulp"
      },
      main: "index",
      directories: {
        lib: "./lib"
      },
      browser: "lib/browser.js",
      license: "Apache-2.0"
    };
  }
});
var require_version = __commonJS({
  "node_modules/websocket/lib/version.js"(exports, module) {
    module.exports = require_package().version;
  }
});
var require_browser = __commonJS({
  "node_modules/websocket/lib/browser.js"(exports, module) {
    var _globalThis;
    if (typeof globalThis === "object") {
      _globalThis = globalThis;
    } else {
      try {
        _globalThis = require_global();
      } catch (error2) {
      } finally {
        if (!_globalThis && typeof window !== "undefined") {
          _globalThis = window;
        }
        if (!_globalThis) {
          throw new Error("Could not determine global this");
        }
      }
    }
    var NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;
    var websocket_version = require_version();
    function W3CWebSocket(uri, protocols) {
      var native_instance;
      if (protocols) {
        native_instance = new NativeWebSocket(uri, protocols);
      } else {
        native_instance = new NativeWebSocket(uri);
      }
      return native_instance;
    }
    if (NativeWebSocket) {
      ["CONNECTING", "OPEN", "CLOSING", "CLOSED"].forEach(function(prop) {
        Object.defineProperty(W3CWebSocket, prop, {
          get: function() {
            return NativeWebSocket[prop];
          }
        });
      });
    }
    module.exports = {
      "w3cwebsocket": NativeWebSocket ? W3CWebSocket : null,
      "version": websocket_version
    };
  }
});
var version2;
var init_version2 = __esm({
  "node_modules/@supabase/realtime-js/dist/module/lib/version.js"() {
    version2 = "2.7.2";
  }
});
var DEFAULT_HEADERS2;
var VSN;
var DEFAULT_TIMEOUT;
var WS_CLOSE_NORMAL;
var SOCKET_STATES;
var CHANNEL_STATES;
var CHANNEL_EVENTS;
var TRANSPORTS;
var CONNECTION_STATE;
var init_constants2 = __esm({
  "node_modules/@supabase/realtime-js/dist/module/lib/constants.js"() {
    init_version2();
    DEFAULT_HEADERS2 = { "X-Client-Info": `realtime-js/${version2}` };
    VSN = "1.0.0";
    DEFAULT_TIMEOUT = 1e4;
    WS_CLOSE_NORMAL = 1e3;
    (function(SOCKET_STATES2) {
      SOCKET_STATES2[SOCKET_STATES2["connecting"] = 0] = "connecting";
      SOCKET_STATES2[SOCKET_STATES2["open"] = 1] = "open";
      SOCKET_STATES2[SOCKET_STATES2["closing"] = 2] = "closing";
      SOCKET_STATES2[SOCKET_STATES2["closed"] = 3] = "closed";
    })(SOCKET_STATES || (SOCKET_STATES = {}));
    (function(CHANNEL_STATES2) {
      CHANNEL_STATES2["closed"] = "closed";
      CHANNEL_STATES2["errored"] = "errored";
      CHANNEL_STATES2["joined"] = "joined";
      CHANNEL_STATES2["joining"] = "joining";
      CHANNEL_STATES2["leaving"] = "leaving";
    })(CHANNEL_STATES || (CHANNEL_STATES = {}));
    (function(CHANNEL_EVENTS2) {
      CHANNEL_EVENTS2["close"] = "phx_close";
      CHANNEL_EVENTS2["error"] = "phx_error";
      CHANNEL_EVENTS2["join"] = "phx_join";
      CHANNEL_EVENTS2["reply"] = "phx_reply";
      CHANNEL_EVENTS2["leave"] = "phx_leave";
      CHANNEL_EVENTS2["access_token"] = "access_token";
    })(CHANNEL_EVENTS || (CHANNEL_EVENTS = {}));
    (function(TRANSPORTS2) {
      TRANSPORTS2["websocket"] = "websocket";
    })(TRANSPORTS || (TRANSPORTS = {}));
    (function(CONNECTION_STATE2) {
      CONNECTION_STATE2["Connecting"] = "connecting";
      CONNECTION_STATE2["Open"] = "open";
      CONNECTION_STATE2["Closing"] = "closing";
      CONNECTION_STATE2["Closed"] = "closed";
    })(CONNECTION_STATE || (CONNECTION_STATE = {}));
  }
});
var Timer;
var init_timer = __esm({
  "node_modules/@supabase/realtime-js/dist/module/lib/timer.js"() {
    Timer = class {
      constructor(callback, timerCalc) {
        this.callback = callback;
        this.timerCalc = timerCalc;
        this.timer = void 0;
        this.tries = 0;
        this.callback = callback;
        this.timerCalc = timerCalc;
      }
      reset() {
        this.tries = 0;
        clearTimeout(this.timer);
      }
      scheduleTimeout() {
        clearTimeout(this.timer);
        this.timer = setTimeout(() => {
          this.tries = this.tries + 1;
          this.callback();
        }, this.timerCalc(this.tries + 1));
      }
    };
  }
});
var Serializer;
var init_serializer = __esm({
  "node_modules/@supabase/realtime-js/dist/module/lib/serializer.js"() {
    Serializer = class {
      constructor() {
        this.HEADER_LENGTH = 1;
      }
      decode(rawPayload, callback) {
        if (rawPayload.constructor === ArrayBuffer) {
          return callback(this._binaryDecode(rawPayload));
        }
        if (typeof rawPayload === "string") {
          return callback(JSON.parse(rawPayload));
        }
        return callback({});
      }
      _binaryDecode(buffer) {
        const view = new DataView(buffer);
        const decoder2 = new TextDecoder();
        return this._decodeBroadcast(buffer, view, decoder2);
      }
      _decodeBroadcast(buffer, view, decoder2) {
        const topicSize = view.getUint8(1);
        const eventSize = view.getUint8(2);
        let offset = this.HEADER_LENGTH + 2;
        const topic = decoder2.decode(buffer.slice(offset, offset + topicSize));
        offset = offset + topicSize;
        const event = decoder2.decode(buffer.slice(offset, offset + eventSize));
        offset = offset + eventSize;
        const data = JSON.parse(decoder2.decode(buffer.slice(offset, buffer.byteLength)));
        return { ref: null, topic, event, payload: data };
      }
    };
  }
});
var Push;
var init_push = __esm({
  "node_modules/@supabase/realtime-js/dist/module/lib/push.js"() {
    init_constants2();
    Push = class {
      constructor(channel, event, payload = {}, timeout = DEFAULT_TIMEOUT) {
        this.channel = channel;
        this.event = event;
        this.payload = payload;
        this.timeout = timeout;
        this.sent = false;
        this.timeoutTimer = void 0;
        this.ref = "";
        this.receivedResp = null;
        this.recHooks = [];
        this.refEvent = null;
        this.rateLimited = false;
      }
      resend(timeout) {
        this.timeout = timeout;
        this._cancelRefEvent();
        this.ref = "";
        this.refEvent = null;
        this.receivedResp = null;
        this.sent = false;
        this.send();
      }
      send() {
        if (this._hasReceived("timeout")) {
          return;
        }
        this.startTimeout();
        this.sent = true;
        const status = this.channel.socket.push({
          topic: this.channel.topic,
          event: this.event,
          payload: this.payload,
          ref: this.ref,
          join_ref: this.channel._joinRef()
        });
        if (status === "rate limited") {
          this.rateLimited = true;
        }
      }
      updatePayload(payload) {
        this.payload = Object.assign(Object.assign({}, this.payload), payload);
      }
      receive(status, callback) {
        var _a;
        if (this._hasReceived(status)) {
          callback((_a = this.receivedResp) === null || _a === void 0 ? void 0 : _a.response);
        }
        this.recHooks.push({ status, callback });
        return this;
      }
      startTimeout() {
        if (this.timeoutTimer) {
          return;
        }
        this.ref = this.channel.socket._makeRef();
        this.refEvent = this.channel._replyEventName(this.ref);
        const callback = (payload) => {
          this._cancelRefEvent();
          this._cancelTimeout();
          this.receivedResp = payload;
          this._matchReceive(payload);
        };
        this.channel._on(this.refEvent, {}, callback);
        this.timeoutTimer = setTimeout(() => {
          this.trigger("timeout", {});
        }, this.timeout);
      }
      trigger(status, response) {
        if (this.refEvent)
          this.channel._trigger(this.refEvent, { status, response });
      }
      destroy() {
        this._cancelRefEvent();
        this._cancelTimeout();
      }
      _cancelRefEvent() {
        if (!this.refEvent) {
          return;
        }
        this.channel._off(this.refEvent, {});
      }
      _cancelTimeout() {
        clearTimeout(this.timeoutTimer);
        this.timeoutTimer = void 0;
      }
      _matchReceive({ status, response }) {
        this.recHooks.filter((h2) => h2.status === status).forEach((h2) => h2.callback(response));
      }
      _hasReceived(status) {
        return this.receivedResp && this.receivedResp.status === status;
      }
    };
  }
});
var REALTIME_PRESENCE_LISTEN_EVENTS;
var RealtimePresence;
var init_RealtimePresence = __esm({
  "node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js"() {
    (function(REALTIME_PRESENCE_LISTEN_EVENTS2) {
      REALTIME_PRESENCE_LISTEN_EVENTS2["SYNC"] = "sync";
      REALTIME_PRESENCE_LISTEN_EVENTS2["JOIN"] = "join";
      REALTIME_PRESENCE_LISTEN_EVENTS2["LEAVE"] = "leave";
    })(REALTIME_PRESENCE_LISTEN_EVENTS || (REALTIME_PRESENCE_LISTEN_EVENTS = {}));
    RealtimePresence = class {
      constructor(channel, opts) {
        this.channel = channel;
        this.state = {};
        this.pendingDiffs = [];
        this.joinRef = null;
        this.caller = {
          onJoin: () => {
          },
          onLeave: () => {
          },
          onSync: () => {
          }
        };
        const events = (opts === null || opts === void 0 ? void 0 : opts.events) || {
          state: "presence_state",
          diff: "presence_diff"
        };
        this.channel._on(events.state, {}, (newState) => {
          const { onJoin, onLeave, onSync } = this.caller;
          this.joinRef = this.channel._joinRef();
          this.state = RealtimePresence.syncState(this.state, newState, onJoin, onLeave);
          this.pendingDiffs.forEach((diff) => {
            this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);
          });
          this.pendingDiffs = [];
          onSync();
        });
        this.channel._on(events.diff, {}, (diff) => {
          const { onJoin, onLeave, onSync } = this.caller;
          if (this.inPendingSyncState()) {
            this.pendingDiffs.push(diff);
          } else {
            this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);
            onSync();
          }
        });
        this.onJoin((key2, currentPresences, newPresences) => {
          this.channel._trigger("presence", {
            event: "join",
            key: key2,
            currentPresences,
            newPresences
          });
        });
        this.onLeave((key2, currentPresences, leftPresences) => {
          this.channel._trigger("presence", {
            event: "leave",
            key: key2,
            currentPresences,
            leftPresences
          });
        });
        this.onSync(() => {
          this.channel._trigger("presence", { event: "sync" });
        });
      }
      static syncState(currentState, newState, onJoin, onLeave) {
        const state = this.cloneDeep(currentState);
        const transformedState = this.transformState(newState);
        const joins = {};
        const leaves = {};
        this.map(state, (key2, presences) => {
          if (!transformedState[key2]) {
            leaves[key2] = presences;
          }
        });
        this.map(transformedState, (key2, newPresences) => {
          const currentPresences = state[key2];
          if (currentPresences) {
            const newPresenceRefs = newPresences.map((m2) => m2.presence_ref);
            const curPresenceRefs = currentPresences.map((m2) => m2.presence_ref);
            const joinedPresences = newPresences.filter((m2) => curPresenceRefs.indexOf(m2.presence_ref) < 0);
            const leftPresences = currentPresences.filter((m2) => newPresenceRefs.indexOf(m2.presence_ref) < 0);
            if (joinedPresences.length > 0) {
              joins[key2] = joinedPresences;
            }
            if (leftPresences.length > 0) {
              leaves[key2] = leftPresences;
            }
          } else {
            joins[key2] = newPresences;
          }
        });
        return this.syncDiff(state, { joins, leaves }, onJoin, onLeave);
      }
      static syncDiff(state, diff, onJoin, onLeave) {
        const { joins, leaves } = {
          joins: this.transformState(diff.joins),
          leaves: this.transformState(diff.leaves)
        };
        if (!onJoin) {
          onJoin = () => {
          };
        }
        if (!onLeave) {
          onLeave = () => {
          };
        }
        this.map(joins, (key2, newPresences) => {
          var _a;
          const currentPresences = (_a = state[key2]) !== null && _a !== void 0 ? _a : [];
          state[key2] = this.cloneDeep(newPresences);
          if (currentPresences.length > 0) {
            const joinedPresenceRefs = state[key2].map((m2) => m2.presence_ref);
            const curPresences = currentPresences.filter((m2) => joinedPresenceRefs.indexOf(m2.presence_ref) < 0);
            state[key2].unshift(...curPresences);
          }
          onJoin(key2, currentPresences, newPresences);
        });
        this.map(leaves, (key2, leftPresences) => {
          let currentPresences = state[key2];
          if (!currentPresences)
            return;
          const presenceRefsToRemove = leftPresences.map((m2) => m2.presence_ref);
          currentPresences = currentPresences.filter((m2) => presenceRefsToRemove.indexOf(m2.presence_ref) < 0);
          state[key2] = currentPresences;
          onLeave(key2, currentPresences, leftPresences);
          if (currentPresences.length === 0)
            delete state[key2];
        });
        return state;
      }
      static map(obj, func) {
        return Object.getOwnPropertyNames(obj).map((key2) => func(key2, obj[key2]));
      }
      static transformState(state) {
        state = this.cloneDeep(state);
        return Object.getOwnPropertyNames(state).reduce((newState, key2) => {
          const presences = state[key2];
          if ("metas" in presences) {
            newState[key2] = presences.metas.map((presence) => {
              presence["presence_ref"] = presence["phx_ref"];
              delete presence["phx_ref"];
              delete presence["phx_ref_prev"];
              return presence;
            });
          } else {
            newState[key2] = presences;
          }
          return newState;
        }, {});
      }
      static cloneDeep(obj) {
        return JSON.parse(JSON.stringify(obj));
      }
      onJoin(callback) {
        this.caller.onJoin = callback;
      }
      onLeave(callback) {
        this.caller.onLeave = callback;
      }
      onSync(callback) {
        this.caller.onSync = callback;
      }
      inPendingSyncState() {
        return !this.joinRef || this.joinRef !== this.channel._joinRef();
      }
    };
  }
});
var PostgresTypes;
var convertChangeData;
var convertColumn;
var convertCell;
var noop2;
var toBoolean;
var toNumber;
var toJson;
var toArray;
var toTimestampString;
var init_transformers = __esm({
  "node_modules/@supabase/realtime-js/dist/module/lib/transformers.js"() {
    (function(PostgresTypes2) {
      PostgresTypes2["abstime"] = "abstime";
      PostgresTypes2["bool"] = "bool";
      PostgresTypes2["date"] = "date";
      PostgresTypes2["daterange"] = "daterange";
      PostgresTypes2["float4"] = "float4";
      PostgresTypes2["float8"] = "float8";
      PostgresTypes2["int2"] = "int2";
      PostgresTypes2["int4"] = "int4";
      PostgresTypes2["int4range"] = "int4range";
      PostgresTypes2["int8"] = "int8";
      PostgresTypes2["int8range"] = "int8range";
      PostgresTypes2["json"] = "json";
      PostgresTypes2["jsonb"] = "jsonb";
      PostgresTypes2["money"] = "money";
      PostgresTypes2["numeric"] = "numeric";
      PostgresTypes2["oid"] = "oid";
      PostgresTypes2["reltime"] = "reltime";
      PostgresTypes2["text"] = "text";
      PostgresTypes2["time"] = "time";
      PostgresTypes2["timestamp"] = "timestamp";
      PostgresTypes2["timestamptz"] = "timestamptz";
      PostgresTypes2["timetz"] = "timetz";
      PostgresTypes2["tsrange"] = "tsrange";
      PostgresTypes2["tstzrange"] = "tstzrange";
    })(PostgresTypes || (PostgresTypes = {}));
    convertChangeData = (columns, record, options2 = {}) => {
      var _a;
      const skipTypes = (_a = options2.skipTypes) !== null && _a !== void 0 ? _a : [];
      return Object.keys(record).reduce((acc, rec_key) => {
        acc[rec_key] = convertColumn(rec_key, columns, record, skipTypes);
        return acc;
      }, {});
    };
    convertColumn = (columnName, columns, record, skipTypes) => {
      const column = columns.find((x2) => x2.name === columnName);
      const colType = column === null || column === void 0 ? void 0 : column.type;
      const value2 = record[columnName];
      if (colType && !skipTypes.includes(colType)) {
        return convertCell(colType, value2);
      }
      return noop2(value2);
    };
    convertCell = (type, value2) => {
      if (type.charAt(0) === "_") {
        const dataType = type.slice(1, type.length);
        return toArray(value2, dataType);
      }
      switch (type) {
        case PostgresTypes.bool:
          return toBoolean(value2);
        case PostgresTypes.float4:
        case PostgresTypes.float8:
        case PostgresTypes.int2:
        case PostgresTypes.int4:
        case PostgresTypes.int8:
        case PostgresTypes.numeric:
        case PostgresTypes.oid:
          return toNumber(value2);
        case PostgresTypes.json:
        case PostgresTypes.jsonb:
          return toJson(value2);
        case PostgresTypes.timestamp:
          return toTimestampString(value2);
        case PostgresTypes.abstime:
        case PostgresTypes.date:
        case PostgresTypes.daterange:
        case PostgresTypes.int4range:
        case PostgresTypes.int8range:
        case PostgresTypes.money:
        case PostgresTypes.reltime:
        case PostgresTypes.text:
        case PostgresTypes.time:
        case PostgresTypes.timestamptz:
        case PostgresTypes.timetz:
        case PostgresTypes.tsrange:
        case PostgresTypes.tstzrange:
          return noop2(value2);
        default:
          return noop2(value2);
      }
    };
    noop2 = (value2) => {
      return value2;
    };
    toBoolean = (value2) => {
      switch (value2) {
        case "t":
          return true;
        case "f":
          return false;
        default:
          return value2;
      }
    };
    toNumber = (value2) => {
      if (typeof value2 === "string") {
        const parsedValue = parseFloat(value2);
        if (!Number.isNaN(parsedValue)) {
          return parsedValue;
        }
      }
      return value2;
    };
    toJson = (value2) => {
      if (typeof value2 === "string") {
        try {
          return JSON.parse(value2);
        } catch (error2) {
          console.log(`JSON parse error: ${error2}`);
          return value2;
        }
      }
      return value2;
    };
    toArray = (value2, type) => {
      if (typeof value2 !== "string") {
        return value2;
      }
      const lastIdx = value2.length - 1;
      const closeBrace = value2[lastIdx];
      const openBrace = value2[0];
      if (openBrace === "{" && closeBrace === "}") {
        let arr;
        const valTrim = value2.slice(1, lastIdx);
        try {
          arr = JSON.parse("[" + valTrim + "]");
        } catch (_2) {
          arr = valTrim ? valTrim.split(",") : [];
        }
        return arr.map((val) => convertCell(type, val));
      }
      return value2;
    };
    toTimestampString = (value2) => {
      if (typeof value2 === "string") {
        return value2.replace(" ", "T");
      }
      return value2;
    };
  }
});
var __awaiter3;
var REALTIME_POSTGRES_CHANGES_LISTEN_EVENT;
var REALTIME_LISTEN_TYPES;
var REALTIME_SUBSCRIBE_STATES;
var RealtimeChannel;
var init_RealtimeChannel = __esm({
  "node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js"() {
    init_constants2();
    init_push();
    init_timer();
    init_RealtimePresence();
    init_transformers();
    __awaiter3 = function(thisArg, _arguments, P2, generator) {
      function adopt(value2) {
        return value2 instanceof P2 ? value2 : new P2(function(resolve) {
          resolve(value2);
        });
      }
      return new (P2 || (P2 = Promise))(function(resolve, reject) {
        function fulfilled(value2) {
          try {
            step(generator.next(value2));
          } catch (e2) {
            reject(e2);
          }
        }
        function rejected(value2) {
          try {
            step(generator["throw"](value2));
          } catch (e2) {
            reject(e2);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    (function(REALTIME_POSTGRES_CHANGES_LISTEN_EVENT2) {
      REALTIME_POSTGRES_CHANGES_LISTEN_EVENT2["ALL"] = "*";
      REALTIME_POSTGRES_CHANGES_LISTEN_EVENT2["INSERT"] = "INSERT";
      REALTIME_POSTGRES_CHANGES_LISTEN_EVENT2["UPDATE"] = "UPDATE";
      REALTIME_POSTGRES_CHANGES_LISTEN_EVENT2["DELETE"] = "DELETE";
    })(REALTIME_POSTGRES_CHANGES_LISTEN_EVENT || (REALTIME_POSTGRES_CHANGES_LISTEN_EVENT = {}));
    (function(REALTIME_LISTEN_TYPES2) {
      REALTIME_LISTEN_TYPES2["BROADCAST"] = "broadcast";
      REALTIME_LISTEN_TYPES2["PRESENCE"] = "presence";
      REALTIME_LISTEN_TYPES2["POSTGRES_CHANGES"] = "postgres_changes";
    })(REALTIME_LISTEN_TYPES || (REALTIME_LISTEN_TYPES = {}));
    (function(REALTIME_SUBSCRIBE_STATES2) {
      REALTIME_SUBSCRIBE_STATES2["SUBSCRIBED"] = "SUBSCRIBED";
      REALTIME_SUBSCRIBE_STATES2["TIMED_OUT"] = "TIMED_OUT";
      REALTIME_SUBSCRIBE_STATES2["CLOSED"] = "CLOSED";
      REALTIME_SUBSCRIBE_STATES2["CHANNEL_ERROR"] = "CHANNEL_ERROR";
    })(REALTIME_SUBSCRIBE_STATES || (REALTIME_SUBSCRIBE_STATES = {}));
    RealtimeChannel = class {
      constructor(topic, params = { config: {} }, socket) {
        this.topic = topic;
        this.params = params;
        this.socket = socket;
        this.bindings = {};
        this.state = CHANNEL_STATES.closed;
        this.joinedOnce = false;
        this.pushBuffer = [];
        this.params.config = Object.assign({
          broadcast: { ack: false, self: false },
          presence: { key: "" }
        }, params.config);
        this.timeout = this.socket.timeout;
        this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);
        this.rejoinTimer = new Timer(() => this._rejoinUntilConnected(), this.socket.reconnectAfterMs);
        this.joinPush.receive("ok", () => {
          this.state = CHANNEL_STATES.joined;
          this.rejoinTimer.reset();
          this.pushBuffer.forEach((pushEvent) => pushEvent.send());
          this.pushBuffer = [];
        });
        this._onClose(() => {
          this.rejoinTimer.reset();
          this.socket.log("channel", `close ${this.topic} ${this._joinRef()}`);
          this.state = CHANNEL_STATES.closed;
          this.socket._remove(this);
        });
        this._onError((reason) => {
          if (this._isLeaving() || this._isClosed()) {
            return;
          }
          this.socket.log("channel", `error ${this.topic}`, reason);
          this.state = CHANNEL_STATES.errored;
          this.rejoinTimer.scheduleTimeout();
        });
        this.joinPush.receive("timeout", () => {
          if (!this._isJoining()) {
            return;
          }
          this.socket.log("channel", `timeout ${this.topic}`, this.joinPush.timeout);
          this.state = CHANNEL_STATES.errored;
          this.rejoinTimer.scheduleTimeout();
        });
        this._on(CHANNEL_EVENTS.reply, {}, (payload, ref) => {
          this._trigger(this._replyEventName(ref), payload);
        });
        this.presence = new RealtimePresence(this);
      }
      subscribe(callback, timeout = this.timeout) {
        var _a, _b;
        if (this.joinedOnce) {
          throw `tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance`;
        } else {
          const { config: { broadcast, presence } } = this.params;
          this._onError((e2) => callback && callback("CHANNEL_ERROR", e2));
          this._onClose(() => callback && callback("CLOSED"));
          const accessTokenPayload = {};
          const config = {
            broadcast,
            presence,
            postgres_changes: (_b = (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.map((r2) => r2.filter)) !== null && _b !== void 0 ? _b : []
          };
          if (this.socket.accessToken) {
            accessTokenPayload.access_token = this.socket.accessToken;
          }
          this.updateJoinPayload(Object.assign({ config }, accessTokenPayload));
          this.joinedOnce = true;
          this._rejoin(timeout);
          this.joinPush.receive("ok", ({ postgres_changes: serverPostgresFilters }) => {
            var _a2;
            this.socket.accessToken && this.socket.setAuth(this.socket.accessToken);
            if (serverPostgresFilters === void 0) {
              callback && callback("SUBSCRIBED");
              return;
            } else {
              const clientPostgresBindings = this.bindings.postgres_changes;
              const bindingsLen = (_a2 = clientPostgresBindings === null || clientPostgresBindings === void 0 ? void 0 : clientPostgresBindings.length) !== null && _a2 !== void 0 ? _a2 : 0;
              const newPostgresBindings = [];
              for (let i2 = 0; i2 < bindingsLen; i2++) {
                const clientPostgresBinding = clientPostgresBindings[i2];
                const { filter: { event, schema, table, filter } } = clientPostgresBinding;
                const serverPostgresFilter = serverPostgresFilters && serverPostgresFilters[i2];
                if (serverPostgresFilter && serverPostgresFilter.event === event && serverPostgresFilter.schema === schema && serverPostgresFilter.table === table && serverPostgresFilter.filter === filter) {
                  newPostgresBindings.push(Object.assign(Object.assign({}, clientPostgresBinding), { id: serverPostgresFilter.id }));
                } else {
                  this.unsubscribe();
                  callback && callback("CHANNEL_ERROR", new Error("mismatch between server and client bindings for postgres changes"));
                  return;
                }
              }
              this.bindings.postgres_changes = newPostgresBindings;
              callback && callback("SUBSCRIBED");
              return;
            }
          }).receive("error", (error2) => {
            callback && callback("CHANNEL_ERROR", new Error(JSON.stringify(Object.values(error2).join(", ") || "error")));
            return;
          }).receive("timeout", () => {
            callback && callback("TIMED_OUT");
            return;
          });
        }
        return this;
      }
      presenceState() {
        return this.presence.state;
      }
      track(payload, opts = {}) {
        return __awaiter3(this, void 0, void 0, function* () {
          return yield this.send({
            type: "presence",
            event: "track",
            payload
          }, opts.timeout || this.timeout);
        });
      }
      untrack(opts = {}) {
        return __awaiter3(this, void 0, void 0, function* () {
          return yield this.send({
            type: "presence",
            event: "untrack"
          }, opts);
        });
      }
      on(type, filter, callback) {
        return this._on(type, filter, callback);
      }
      send(payload, opts = {}) {
        return new Promise((resolve) => {
          var _a, _b, _c;
          const push = this._push(payload.type, payload, opts.timeout || this.timeout);
          if (push.rateLimited) {
            resolve("rate limited");
          }
          if (payload.type === "broadcast" && !((_c = (_b = (_a = this.params) === null || _a === void 0 ? void 0 : _a.config) === null || _b === void 0 ? void 0 : _b.broadcast) === null || _c === void 0 ? void 0 : _c.ack)) {
            resolve("ok");
          }
          push.receive("ok", () => resolve("ok"));
          push.receive("timeout", () => resolve("timed out"));
        });
      }
      updateJoinPayload(payload) {
        this.joinPush.updatePayload(payload);
      }
      unsubscribe(timeout = this.timeout) {
        this.state = CHANNEL_STATES.leaving;
        const onClose = () => {
          this.socket.log("channel", `leave ${this.topic}`);
          this._trigger(CHANNEL_EVENTS.close, "leave", this._joinRef());
        };
        this.rejoinTimer.reset();
        this.joinPush.destroy();
        return new Promise((resolve) => {
          const leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);
          leavePush.receive("ok", () => {
            onClose();
            resolve("ok");
          }).receive("timeout", () => {
            onClose();
            resolve("timed out");
          }).receive("error", () => {
            resolve("error");
          });
          leavePush.send();
          if (!this._canPush()) {
            leavePush.trigger("ok", {});
          }
        });
      }
      _push(event, payload, timeout = this.timeout) {
        if (!this.joinedOnce) {
          throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;
        }
        let pushEvent = new Push(this, event, payload, timeout);
        if (this._canPush()) {
          pushEvent.send();
        } else {
          pushEvent.startTimeout();
          this.pushBuffer.push(pushEvent);
        }
        return pushEvent;
      }
      _onMessage(_event, payload, _ref) {
        return payload;
      }
      _isMember(topic) {
        return this.topic === topic;
      }
      _joinRef() {
        return this.joinPush.ref;
      }
      _trigger(type, payload, ref) {
        var _a, _b;
        const typeLower = type.toLocaleLowerCase();
        const { close, error: error2, leave, join } = CHANNEL_EVENTS;
        const events = [close, error2, leave, join];
        if (ref && events.indexOf(typeLower) >= 0 && ref !== this._joinRef()) {
          return;
        }
        let handledPayload = this._onMessage(typeLower, payload, ref);
        if (payload && !handledPayload) {
          throw "channel onMessage callbacks must return the payload, modified or unmodified";
        }
        if (["insert", "update", "delete"].includes(typeLower)) {
          (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.filter((bind) => {
            var _a2, _b2, _c;
            return ((_a2 = bind.filter) === null || _a2 === void 0 ? void 0 : _a2.event) === "*" || ((_c = (_b2 = bind.filter) === null || _b2 === void 0 ? void 0 : _b2.event) === null || _c === void 0 ? void 0 : _c.toLocaleLowerCase()) === typeLower;
          }).map((bind) => bind.callback(handledPayload, ref));
        } else {
          (_b = this.bindings[typeLower]) === null || _b === void 0 ? void 0 : _b.filter((bind) => {
            var _a2, _b2, _c, _d, _e, _f;
            if (["broadcast", "presence", "postgres_changes"].includes(typeLower)) {
              if ("id" in bind) {
                const bindId = bind.id;
                const bindEvent = (_a2 = bind.filter) === null || _a2 === void 0 ? void 0 : _a2.event;
                return bindId && ((_b2 = payload.ids) === null || _b2 === void 0 ? void 0 : _b2.includes(bindId)) && (bindEvent === "*" || (bindEvent === null || bindEvent === void 0 ? void 0 : bindEvent.toLocaleLowerCase()) === ((_c = payload.data) === null || _c === void 0 ? void 0 : _c.type.toLocaleLowerCase()));
              } else {
                const bindEvent = (_e = (_d = bind === null || bind === void 0 ? void 0 : bind.filter) === null || _d === void 0 ? void 0 : _d.event) === null || _e === void 0 ? void 0 : _e.toLocaleLowerCase();
                return bindEvent === "*" || bindEvent === ((_f = payload === null || payload === void 0 ? void 0 : payload.event) === null || _f === void 0 ? void 0 : _f.toLocaleLowerCase());
              }
            } else {
              return bind.type.toLocaleLowerCase() === typeLower;
            }
          }).map((bind) => {
            if (typeof handledPayload === "object" && "ids" in handledPayload) {
              const postgresChanges = handledPayload.data;
              const { schema, table, commit_timestamp, type: type2, errors } = postgresChanges;
              const enrichedPayload = {
                schema,
                table,
                commit_timestamp,
                eventType: type2,
                new: {},
                old: {},
                errors
              };
              handledPayload = Object.assign(Object.assign({}, enrichedPayload), this._getPayloadRecords(postgresChanges));
            }
            bind.callback(handledPayload, ref);
          });
        }
      }
      _isClosed() {
        return this.state === CHANNEL_STATES.closed;
      }
      _isJoined() {
        return this.state === CHANNEL_STATES.joined;
      }
      _isJoining() {
        return this.state === CHANNEL_STATES.joining;
      }
      _isLeaving() {
        return this.state === CHANNEL_STATES.leaving;
      }
      _replyEventName(ref) {
        return `chan_reply_${ref}`;
      }
      _on(type, filter, callback) {
        const typeLower = type.toLocaleLowerCase();
        const binding = {
          type: typeLower,
          filter,
          callback
        };
        if (this.bindings[typeLower]) {
          this.bindings[typeLower].push(binding);
        } else {
          this.bindings[typeLower] = [binding];
        }
        return this;
      }
      _off(type, filter) {
        const typeLower = type.toLocaleLowerCase();
        this.bindings[typeLower] = this.bindings[typeLower].filter((bind) => {
          var _a;
          return !(((_a = bind.type) === null || _a === void 0 ? void 0 : _a.toLocaleLowerCase()) === typeLower && RealtimeChannel.isEqual(bind.filter, filter));
        });
        return this;
      }
      static isEqual(obj1, obj2) {
        if (Object.keys(obj1).length !== Object.keys(obj2).length) {
          return false;
        }
        for (const k2 in obj1) {
          if (obj1[k2] !== obj2[k2]) {
            return false;
          }
        }
        return true;
      }
      _rejoinUntilConnected() {
        this.rejoinTimer.scheduleTimeout();
        if (this.socket.isConnected()) {
          this._rejoin();
        }
      }
      _onClose(callback) {
        this._on(CHANNEL_EVENTS.close, {}, callback);
      }
      _onError(callback) {
        this._on(CHANNEL_EVENTS.error, {}, (reason) => callback(reason));
      }
      _canPush() {
        return this.socket.isConnected() && this._isJoined();
      }
      _rejoin(timeout = this.timeout) {
        if (this._isLeaving()) {
          return;
        }
        this.socket._leaveOpenTopic(this.topic);
        this.state = CHANNEL_STATES.joining;
        this.joinPush.resend(timeout);
      }
      _getPayloadRecords(payload) {
        const records = {
          new: {},
          old: {}
        };
        if (payload.type === "INSERT" || payload.type === "UPDATE") {
          records.new = convertChangeData(payload.columns, payload.record);
        }
        if (payload.type === "UPDATE" || payload.type === "DELETE") {
          records.old = convertChangeData(payload.columns, payload.old_record);
        }
        return records;
      }
    };
  }
});
var import_websocket;
var __awaiter4;
var noop3;
var RealtimeClient;
var init_RealtimeClient = __esm({
  "node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js"() {
    import_websocket = __toESM(require_browser());
    init_constants2();
    init_timer();
    init_serializer();
    init_RealtimeChannel();
    __awaiter4 = function(thisArg, _arguments, P2, generator) {
      function adopt(value2) {
        return value2 instanceof P2 ? value2 : new P2(function(resolve) {
          resolve(value2);
        });
      }
      return new (P2 || (P2 = Promise))(function(resolve, reject) {
        function fulfilled(value2) {
          try {
            step(generator.next(value2));
          } catch (e2) {
            reject(e2);
          }
        }
        function rejected(value2) {
          try {
            step(generator["throw"](value2));
          } catch (e2) {
            reject(e2);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    noop3 = () => {
    };
    RealtimeClient = class {
      constructor(endPoint, options2) {
        var _a;
        this.accessToken = null;
        this.channels = [];
        this.endPoint = "";
        this.headers = DEFAULT_HEADERS2;
        this.params = {};
        this.timeout = DEFAULT_TIMEOUT;
        this.transport = import_websocket.w3cwebsocket;
        this.heartbeatIntervalMs = 3e4;
        this.heartbeatTimer = void 0;
        this.pendingHeartbeatRef = null;
        this.ref = 0;
        this.logger = noop3;
        this.conn = null;
        this.sendBuffer = [];
        this.serializer = new Serializer();
        this.stateChangeCallbacks = {
          open: [],
          close: [],
          error: [],
          message: []
        };
        this.eventsPerSecondLimitMs = 100;
        this.inThrottle = false;
        this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`;
        if (options2 === null || options2 === void 0 ? void 0 : options2.params)
          this.params = options2.params;
        if (options2 === null || options2 === void 0 ? void 0 : options2.headers)
          this.headers = Object.assign(Object.assign({}, this.headers), options2.headers);
        if (options2 === null || options2 === void 0 ? void 0 : options2.timeout)
          this.timeout = options2.timeout;
        if (options2 === null || options2 === void 0 ? void 0 : options2.logger)
          this.logger = options2.logger;
        if (options2 === null || options2 === void 0 ? void 0 : options2.transport)
          this.transport = options2.transport;
        if (options2 === null || options2 === void 0 ? void 0 : options2.heartbeatIntervalMs)
          this.heartbeatIntervalMs = options2.heartbeatIntervalMs;
        const eventsPerSecond = (_a = options2 === null || options2 === void 0 ? void 0 : options2.params) === null || _a === void 0 ? void 0 : _a.eventsPerSecond;
        if (eventsPerSecond)
          this.eventsPerSecondLimitMs = Math.floor(1e3 / eventsPerSecond);
        this.reconnectAfterMs = (options2 === null || options2 === void 0 ? void 0 : options2.reconnectAfterMs) ? options2.reconnectAfterMs : (tries) => {
          return [1e3, 2e3, 5e3, 1e4][tries - 1] || 1e4;
        };
        this.encode = (options2 === null || options2 === void 0 ? void 0 : options2.encode) ? options2.encode : (payload, callback) => {
          return callback(JSON.stringify(payload));
        };
        this.decode = (options2 === null || options2 === void 0 ? void 0 : options2.decode) ? options2.decode : this.serializer.decode.bind(this.serializer);
        this.reconnectTimer = new Timer(() => __awaiter4(this, void 0, void 0, function* () {
          this.disconnect();
          this.connect();
        }), this.reconnectAfterMs);
      }
      connect() {
        if (this.conn) {
          return;
        }
        this.conn = new this.transport(this._endPointURL(), [], null, this.headers);
        if (this.conn) {
          this.conn.binaryType = "arraybuffer";
          this.conn.onopen = () => this._onConnOpen();
          this.conn.onerror = (error2) => this._onConnError(error2);
          this.conn.onmessage = (event) => this._onConnMessage(event);
          this.conn.onclose = (event) => this._onConnClose(event);
        }
      }
      disconnect(code, reason) {
        if (this.conn) {
          this.conn.onclose = function() {
          };
          if (code) {
            this.conn.close(code, reason !== null && reason !== void 0 ? reason : "");
          } else {
            this.conn.close();
          }
          this.conn = null;
          this.heartbeatTimer && clearInterval(this.heartbeatTimer);
          this.reconnectTimer.reset();
        }
      }
      getChannels() {
        return this.channels;
      }
      removeChannel(channel) {
        return __awaiter4(this, void 0, void 0, function* () {
          const status = yield channel.unsubscribe();
          if (this.channels.length === 0) {
            this.disconnect();
          }
          return status;
        });
      }
      removeAllChannels() {
        return __awaiter4(this, void 0, void 0, function* () {
          const values_1 = yield Promise.all(this.channels.map((channel) => channel.unsubscribe()));
          this.disconnect();
          return values_1;
        });
      }
      log(kind, msg, data) {
        this.logger(kind, msg, data);
      }
      connectionState() {
        switch (this.conn && this.conn.readyState) {
          case SOCKET_STATES.connecting:
            return CONNECTION_STATE.Connecting;
          case SOCKET_STATES.open:
            return CONNECTION_STATE.Open;
          case SOCKET_STATES.closing:
            return CONNECTION_STATE.Closing;
          default:
            return CONNECTION_STATE.Closed;
        }
      }
      isConnected() {
        return this.connectionState() === CONNECTION_STATE.Open;
      }
      channel(topic, params = { config: {} }) {
        if (!this.isConnected()) {
          this.connect();
        }
        const chan = new RealtimeChannel(`realtime:${topic}`, params, this);
        this.channels.push(chan);
        return chan;
      }
      push(data) {
        const { topic, event, payload, ref } = data;
        let callback = () => {
          this.encode(data, (result) => {
            var _a;
            (_a = this.conn) === null || _a === void 0 ? void 0 : _a.send(result);
          });
        };
        this.log("push", `${topic} ${event} (${ref})`, payload);
        if (this.isConnected()) {
          if (["broadcast", "presence", "postgres_changes"].includes(event)) {
            const isThrottled = this._throttle(callback)();
            if (isThrottled) {
              return "rate limited";
            }
          } else {
            callback();
          }
        } else {
          this.sendBuffer.push(callback);
        }
      }
      setAuth(token) {
        this.accessToken = token;
        this.channels.forEach((channel) => {
          token && channel.updateJoinPayload({ access_token: token });
          if (channel.joinedOnce && channel._isJoined()) {
            channel._push(CHANNEL_EVENTS.access_token, { access_token: token });
          }
        });
      }
      _makeRef() {
        let newRef = this.ref + 1;
        if (newRef === this.ref) {
          this.ref = 0;
        } else {
          this.ref = newRef;
        }
        return this.ref.toString();
      }
      _leaveOpenTopic(topic) {
        let dupChannel = this.channels.find((c2) => c2.topic === topic && (c2._isJoined() || c2._isJoining()));
        if (dupChannel) {
          this.log("transport", `leaving duplicate topic "${topic}"`);
          dupChannel.unsubscribe();
        }
      }
      _remove(channel) {
        this.channels = this.channels.filter((c2) => c2._joinRef() !== channel._joinRef());
      }
      _endPointURL() {
        return this._appendParams(this.endPoint, Object.assign({}, this.params, { vsn: VSN }));
      }
      _onConnMessage(rawMessage) {
        this.decode(rawMessage.data, (msg) => {
          let { topic, event, payload, ref } = msg;
          if (ref && ref === this.pendingHeartbeatRef || event === (payload === null || payload === void 0 ? void 0 : payload.type)) {
            this.pendingHeartbeatRef = null;
          }
          this.log("receive", `${payload.status || ""} ${topic} ${event} ${ref && "(" + ref + ")" || ""}`, payload);
          this.channels.filter((channel) => channel._isMember(topic)).forEach((channel) => channel._trigger(event, payload, ref));
          this.stateChangeCallbacks.message.forEach((callback) => callback(msg));
        });
      }
      _onConnOpen() {
        this.log("transport", `connected to ${this._endPointURL()}`);
        this._flushSendBuffer();
        this.reconnectTimer.reset();
        this.heartbeatTimer && clearInterval(this.heartbeatTimer);
        this.heartbeatTimer = setInterval(() => this._sendHeartbeat(), this.heartbeatIntervalMs);
        this.stateChangeCallbacks.open.forEach((callback) => callback());
      }
      _onConnClose(event) {
        this.log("transport", "close", event);
        this._triggerChanError();
        this.heartbeatTimer && clearInterval(this.heartbeatTimer);
        this.reconnectTimer.scheduleTimeout();
        this.stateChangeCallbacks.close.forEach((callback) => callback(event));
      }
      _onConnError(error2) {
        this.log("transport", error2.message);
        this._triggerChanError();
        this.stateChangeCallbacks.error.forEach((callback) => callback(error2));
      }
      _triggerChanError() {
        this.channels.forEach((channel) => channel._trigger(CHANNEL_EVENTS.error));
      }
      _appendParams(url, params) {
        if (Object.keys(params).length === 0) {
          return url;
        }
        const prefix = url.match(/\?/) ? "&" : "?";
        const query = new URLSearchParams(params);
        return `${url}${prefix}${query}`;
      }
      _flushSendBuffer() {
        if (this.isConnected() && this.sendBuffer.length > 0) {
          this.sendBuffer.forEach((callback) => callback());
          this.sendBuffer = [];
        }
      }
      _sendHeartbeat() {
        var _a;
        if (!this.isConnected()) {
          return;
        }
        if (this.pendingHeartbeatRef) {
          this.pendingHeartbeatRef = null;
          this.log("transport", "heartbeat timeout. Attempting to re-establish connection");
          (_a = this.conn) === null || _a === void 0 ? void 0 : _a.close(WS_CLOSE_NORMAL, "hearbeat timeout");
          return;
        }
        this.pendingHeartbeatRef = this._makeRef();
        this.push({
          topic: "phoenix",
          event: "heartbeat",
          payload: {},
          ref: this.pendingHeartbeatRef
        });
        this.setAuth(this.accessToken);
      }
      _throttle(callback, eventsPerSecondLimitMs = this.eventsPerSecondLimitMs) {
        return () => {
          if (this.inThrottle)
            return true;
          callback();
          if (eventsPerSecondLimitMs > 0) {
            this.inThrottle = true;
            setTimeout(() => {
              this.inThrottle = false;
            }, eventsPerSecondLimitMs);
          }
          return false;
        };
      }
    };
  }
});
var init_module3 = __esm({
  "node_modules/@supabase/realtime-js/dist/module/index.js"() {
    init_RealtimeClient();
    init_RealtimeChannel();
    init_RealtimePresence();
  }
});
function isStorageError(error2) {
  return typeof error2 === "object" && error2 !== null && "__isStorageError" in error2;
}
var StorageError;
var StorageApiError;
var StorageUnknownError;
var init_errors2 = __esm({
  "node_modules/@supabase/storage-js/dist/module/lib/errors.js"() {
    StorageError = class extends Error {
      constructor(message) {
        super(message);
        this.__isStorageError = true;
        this.name = "StorageError";
      }
    };
    StorageApiError = class extends StorageError {
      constructor(message, status) {
        super(message);
        this.name = "StorageApiError";
        this.status = status;
      }
      toJSON() {
        return {
          name: this.name,
          message: this.message,
          status: this.status
        };
      }
    };
    StorageUnknownError = class extends StorageError {
      constructor(message, originalError) {
        super(message);
        this.name = "StorageUnknownError";
        this.originalError = originalError;
      }
    };
  }
});
var __awaiter5;
var resolveFetch2;
var resolveResponse;
var init_helpers = __esm({
  "node_modules/@supabase/storage-js/dist/module/lib/helpers.js"() {
    __awaiter5 = function(thisArg, _arguments, P2, generator) {
      function adopt(value2) {
        return value2 instanceof P2 ? value2 : new P2(function(resolve) {
          resolve(value2);
        });
      }
      return new (P2 || (P2 = Promise))(function(resolve, reject) {
        function fulfilled(value2) {
          try {
            step(generator.next(value2));
          } catch (e2) {
            reject(e2);
          }
        }
        function rejected(value2) {
          try {
            step(generator["throw"](value2));
          } catch (e2) {
            reject(e2);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    resolveFetch2 = (customFetch) => {
      let _fetch;
      if (customFetch) {
        _fetch = customFetch;
      } else if (typeof fetch === "undefined") {
        _fetch = (...args) => __awaiter5(void 0, void 0, void 0, function* () {
          return yield (yield Promise.resolve().then(() => __toESM(require_browser_ponyfill()))).fetch(...args);
        });
      } else {
        _fetch = fetch;
      }
      return (...args) => _fetch(...args);
    };
    resolveResponse = () => __awaiter5(void 0, void 0, void 0, function* () {
      if (typeof Response === "undefined") {
        return (yield Promise.resolve().then(() => __toESM(require_browser_ponyfill()))).Response;
      }
      return Response;
    });
  }
});
function _handleRequest(fetcher, method, url, options2, parameters, body) {
  return __awaiter6(this, void 0, void 0, function* () {
    return new Promise((resolve, reject) => {
      fetcher(url, _getRequestParams(method, options2, parameters, body)).then((result) => {
        if (!result.ok)
          throw result;
        if (options2 === null || options2 === void 0 ? void 0 : options2.noResolveJson)
          return result;
        return result.json();
      }).then((data) => resolve(data)).catch((error2) => handleError(error2, reject));
    });
  });
}
function get(fetcher, url, options2, parameters) {
  return __awaiter6(this, void 0, void 0, function* () {
    return _handleRequest(fetcher, "GET", url, options2, parameters);
  });
}
function post(fetcher, url, body, options2, parameters) {
  return __awaiter6(this, void 0, void 0, function* () {
    return _handleRequest(fetcher, "POST", url, options2, parameters, body);
  });
}
function put(fetcher, url, body, options2, parameters) {
  return __awaiter6(this, void 0, void 0, function* () {
    return _handleRequest(fetcher, "PUT", url, options2, parameters, body);
  });
}
function remove(fetcher, url, body, options2, parameters) {
  return __awaiter6(this, void 0, void 0, function* () {
    return _handleRequest(fetcher, "DELETE", url, options2, parameters, body);
  });
}
var __awaiter6;
var _getErrorMessage;
var handleError;
var _getRequestParams;
var init_fetch = __esm({
  "node_modules/@supabase/storage-js/dist/module/lib/fetch.js"() {
    init_errors2();
    init_helpers();
    __awaiter6 = function(thisArg, _arguments, P2, generator) {
      function adopt(value2) {
        return value2 instanceof P2 ? value2 : new P2(function(resolve) {
          resolve(value2);
        });
      }
      return new (P2 || (P2 = Promise))(function(resolve, reject) {
        function fulfilled(value2) {
          try {
            step(generator.next(value2));
          } catch (e2) {
            reject(e2);
          }
        }
        function rejected(value2) {
          try {
            step(generator["throw"](value2));
          } catch (e2) {
            reject(e2);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);
    handleError = (error2, reject) => __awaiter6(void 0, void 0, void 0, function* () {
      const Res = yield resolveResponse();
      if (error2 instanceof Res) {
        error2.json().then((err) => {
          reject(new StorageApiError(_getErrorMessage(err), error2.status || 500));
        }).catch((err) => {
          reject(new StorageUnknownError(_getErrorMessage(err), err));
        });
      } else {
        reject(new StorageUnknownError(_getErrorMessage(error2), error2));
      }
    });
    _getRequestParams = (method, options2, parameters, body) => {
      const params = { method, headers: (options2 === null || options2 === void 0 ? void 0 : options2.headers) || {} };
      if (method === "GET") {
        return params;
      }
      params.headers = Object.assign({ "Content-Type": "application/json" }, options2 === null || options2 === void 0 ? void 0 : options2.headers);
      params.body = JSON.stringify(body);
      return Object.assign(Object.assign({}, params), parameters);
    };
  }
});
var __awaiter7;
var DEFAULT_SEARCH_OPTIONS;
var DEFAULT_FILE_OPTIONS;
var StorageFileApi;
var init_StorageFileApi = __esm({
  "node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.js"() {
    init_errors2();
    init_fetch();
    init_helpers();
    __awaiter7 = function(thisArg, _arguments, P2, generator) {
      function adopt(value2) {
        return value2 instanceof P2 ? value2 : new P2(function(resolve) {
          resolve(value2);
        });
      }
      return new (P2 || (P2 = Promise))(function(resolve, reject) {
        function fulfilled(value2) {
          try {
            step(generator.next(value2));
          } catch (e2) {
            reject(e2);
          }
        }
        function rejected(value2) {
          try {
            step(generator["throw"](value2));
          } catch (e2) {
            reject(e2);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    DEFAULT_SEARCH_OPTIONS = {
      limit: 100,
      offset: 0,
      sortBy: {
        column: "name",
        order: "asc"
      }
    };
    DEFAULT_FILE_OPTIONS = {
      cacheControl: "3600",
      contentType: "text/plain;charset=UTF-8",
      upsert: false
    };
    StorageFileApi = class {
      constructor(url, headers = {}, bucketId, fetch2) {
        this.url = url;
        this.headers = headers;
        this.bucketId = bucketId;
        this.fetch = resolveFetch2(fetch2);
      }
      uploadOrUpdate(method, path, fileBody, fileOptions) {
        return __awaiter7(this, void 0, void 0, function* () {
          try {
            let body;
            const options2 = Object.assign(Object.assign({}, DEFAULT_FILE_OPTIONS), fileOptions);
            const headers = Object.assign(Object.assign({}, this.headers), method === "POST" && { "x-upsert": String(options2.upsert) });
            if (typeof Blob !== "undefined" && fileBody instanceof Blob) {
              body = new FormData();
              body.append("cacheControl", options2.cacheControl);
              body.append("", fileBody);
            } else if (typeof FormData !== "undefined" && fileBody instanceof FormData) {
              body = fileBody;
              body.append("cacheControl", options2.cacheControl);
            } else {
              body = fileBody;
              headers["cache-control"] = `max-age=${options2.cacheControl}`;
              headers["content-type"] = options2.contentType;
            }
            const cleanPath = this._removeEmptyFolders(path);
            const _path = this._getFinalPath(cleanPath);
            const res = yield this.fetch(`${this.url}/object/${_path}`, Object.assign({ method, body, headers }, (options2 === null || options2 === void 0 ? void 0 : options2.duplex) ? { duplex: options2.duplex } : {}));
            if (res.ok) {
              return {
                data: { path: cleanPath },
                error: null
              };
            } else {
              const error2 = yield res.json();
              return { data: null, error: error2 };
            }
          } catch (error2) {
            if (isStorageError(error2)) {
              return { data: null, error: error2 };
            }
            throw error2;
          }
        });
      }
      upload(path, fileBody, fileOptions) {
        return __awaiter7(this, void 0, void 0, function* () {
          return this.uploadOrUpdate("POST", path, fileBody, fileOptions);
        });
      }
      uploadToSignedUrl(path, token, fileBody, fileOptions) {
        return __awaiter7(this, void 0, void 0, function* () {
          const cleanPath = this._removeEmptyFolders(path);
          const _path = this._getFinalPath(cleanPath);
          const url = new URL(this.url + `/object/upload/sign/${_path}`);
          url.searchParams.set("token", token);
          try {
            let body;
            const options2 = Object.assign({ upsert: DEFAULT_FILE_OPTIONS.upsert }, fileOptions);
            const headers = Object.assign(Object.assign({}, this.headers), { "x-upsert": String(options2.upsert) });
            if (typeof Blob !== "undefined" && fileBody instanceof Blob) {
              body = new FormData();
              body.append("cacheControl", options2.cacheControl);
              body.append("", fileBody);
            } else if (typeof FormData !== "undefined" && fileBody instanceof FormData) {
              body = fileBody;
              body.append("cacheControl", options2.cacheControl);
            } else {
              body = fileBody;
              headers["cache-control"] = `max-age=${options2.cacheControl}`;
              headers["content-type"] = options2.contentType;
            }
            const res = yield this.fetch(url.toString(), {
              method: "PUT",
              body,
              headers
            });
            if (res.ok) {
              return {
                data: { path: cleanPath },
                error: null
              };
            } else {
              const error2 = yield res.json();
              return { data: null, error: error2 };
            }
          } catch (error2) {
            if (isStorageError(error2)) {
              return { data: null, error: error2 };
            }
            throw error2;
          }
        });
      }
      createSignedUploadUrl(path) {
        return __awaiter7(this, void 0, void 0, function* () {
          try {
            let _path = this._getFinalPath(path);
            const data = yield post(this.fetch, `${this.url}/object/upload/sign/${_path}`, {}, { headers: this.headers });
            const url = new URL(this.url + data.url);
            const token = url.searchParams.get("token");
            if (!token) {
              throw new StorageError("No token returned by API");
            }
            return { data: { signedUrl: url.toString(), path, token }, error: null };
          } catch (error2) {
            if (isStorageError(error2)) {
              return { data: null, error: error2 };
            }
            throw error2;
          }
        });
      }
      update(path, fileBody, fileOptions) {
        return __awaiter7(this, void 0, void 0, function* () {
          return this.uploadOrUpdate("PUT", path, fileBody, fileOptions);
        });
      }
      move(fromPath, toPath) {
        return __awaiter7(this, void 0, void 0, function* () {
          try {
            const data = yield post(this.fetch, `${this.url}/object/move`, { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath }, { headers: this.headers });
            return { data, error: null };
          } catch (error2) {
            if (isStorageError(error2)) {
              return { data: null, error: error2 };
            }
            throw error2;
          }
        });
      }
      copy(fromPath, toPath) {
        return __awaiter7(this, void 0, void 0, function* () {
          try {
            const data = yield post(this.fetch, `${this.url}/object/copy`, { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath }, { headers: this.headers });
            return { data: { path: data.Key }, error: null };
          } catch (error2) {
            if (isStorageError(error2)) {
              return { data: null, error: error2 };
            }
            throw error2;
          }
        });
      }
      createSignedUrl(path, expiresIn, options2) {
        return __awaiter7(this, void 0, void 0, function* () {
          try {
            let _path = this._getFinalPath(path);
            let data = yield post(this.fetch, `${this.url}/object/sign/${_path}`, Object.assign({ expiresIn }, (options2 === null || options2 === void 0 ? void 0 : options2.transform) ? { transform: options2.transform } : {}), { headers: this.headers });
            const downloadQueryParam = (options2 === null || options2 === void 0 ? void 0 : options2.download) ? `&download=${options2.download === true ? "" : options2.download}` : "";
            const signedUrl = encodeURI(`${this.url}${data.signedURL}${downloadQueryParam}`);
            data = { signedUrl };
            return { data, error: null };
          } catch (error2) {
            if (isStorageError(error2)) {
              return { data: null, error: error2 };
            }
            throw error2;
          }
        });
      }
      createSignedUrls(paths, expiresIn, options2) {
        return __awaiter7(this, void 0, void 0, function* () {
          try {
            const data = yield post(this.fetch, `${this.url}/object/sign/${this.bucketId}`, { expiresIn, paths }, { headers: this.headers });
            const downloadQueryParam = (options2 === null || options2 === void 0 ? void 0 : options2.download) ? `&download=${options2.download === true ? "" : options2.download}` : "";
            return {
              data: data.map((datum) => Object.assign(Object.assign({}, datum), { signedUrl: datum.signedURL ? encodeURI(`${this.url}${datum.signedURL}${downloadQueryParam}`) : null })),
              error: null
            };
          } catch (error2) {
            if (isStorageError(error2)) {
              return { data: null, error: error2 };
            }
            throw error2;
          }
        });
      }
      download(path, options2) {
        return __awaiter7(this, void 0, void 0, function* () {
          const wantsTransformation = typeof (options2 === null || options2 === void 0 ? void 0 : options2.transform) !== "undefined";
          const renderPath = wantsTransformation ? "render/image/authenticated" : "object";
          const transformationQuery = this.transformOptsToQueryString((options2 === null || options2 === void 0 ? void 0 : options2.transform) || {});
          const queryString = transformationQuery ? `?${transformationQuery}` : "";
          try {
            const _path = this._getFinalPath(path);
            const res = yield get(this.fetch, `${this.url}/${renderPath}/${_path}${queryString}`, {
              headers: this.headers,
              noResolveJson: true
            });
            const data = yield res.blob();
            return { data, error: null };
          } catch (error2) {
            if (isStorageError(error2)) {
              return { data: null, error: error2 };
            }
            throw error2;
          }
        });
      }
      getPublicUrl(path, options2) {
        const _path = this._getFinalPath(path);
        const _queryString = [];
        const downloadQueryParam = (options2 === null || options2 === void 0 ? void 0 : options2.download) ? `download=${options2.download === true ? "" : options2.download}` : "";
        if (downloadQueryParam !== "") {
          _queryString.push(downloadQueryParam);
        }
        const wantsTransformation = typeof (options2 === null || options2 === void 0 ? void 0 : options2.transform) !== "undefined";
        const renderPath = wantsTransformation ? "render/image" : "object";
        const transformationQuery = this.transformOptsToQueryString((options2 === null || options2 === void 0 ? void 0 : options2.transform) || {});
        if (transformationQuery !== "") {
          _queryString.push(transformationQuery);
        }
        let queryString = _queryString.join("&");
        if (queryString !== "") {
          queryString = `?${queryString}`;
        }
        return {
          data: { publicUrl: encodeURI(`${this.url}/${renderPath}/public/${_path}${queryString}`) }
        };
      }
      remove(paths) {
        return __awaiter7(this, void 0, void 0, function* () {
          try {
            const data = yield remove(this.fetch, `${this.url}/object/${this.bucketId}`, { prefixes: paths }, { headers: this.headers });
            return { data, error: null };
          } catch (error2) {
            if (isStorageError(error2)) {
              return { data: null, error: error2 };
            }
            throw error2;
          }
        });
      }
      list(path, options2, parameters) {
        return __awaiter7(this, void 0, void 0, function* () {
          try {
            const body = Object.assign(Object.assign(Object.assign({}, DEFAULT_SEARCH_OPTIONS), options2), { prefix: path || "" });
            const data = yield post(this.fetch, `${this.url}/object/list/${this.bucketId}`, body, { headers: this.headers }, parameters);
            return { data, error: null };
          } catch (error2) {
            if (isStorageError(error2)) {
              return { data: null, error: error2 };
            }
            throw error2;
          }
        });
      }
      _getFinalPath(path) {
        return `${this.bucketId}/${path}`;
      }
      _removeEmptyFolders(path) {
        return path.replace(/^\/|\/$/g, "").replace(/\/+/g, "/");
      }
      transformOptsToQueryString(transform) {
        const params = [];
        if (transform.width) {
          params.push(`width=${transform.width}`);
        }
        if (transform.height) {
          params.push(`height=${transform.height}`);
        }
        if (transform.resize) {
          params.push(`resize=${transform.resize}`);
        }
        if (transform.format) {
          params.push(`format=${transform.format}`);
        }
        if (transform.quality) {
          params.push(`quality=${transform.quality}`);
        }
        return params.join("&");
      }
    };
  }
});
var version3;
var init_version3 = __esm({
  "node_modules/@supabase/storage-js/dist/module/lib/version.js"() {
    version3 = "2.5.1";
  }
});
var DEFAULT_HEADERS3;
var init_constants3 = __esm({
  "node_modules/@supabase/storage-js/dist/module/lib/constants.js"() {
    init_version3();
    DEFAULT_HEADERS3 = { "X-Client-Info": `storage-js/${version3}` };
  }
});
var __awaiter8;
var StorageBucketApi;
var init_StorageBucketApi = __esm({
  "node_modules/@supabase/storage-js/dist/module/packages/StorageBucketApi.js"() {
    init_constants3();
    init_errors2();
    init_fetch();
    init_helpers();
    __awaiter8 = function(thisArg, _arguments, P2, generator) {
      function adopt(value2) {
        return value2 instanceof P2 ? value2 : new P2(function(resolve) {
          resolve(value2);
        });
      }
      return new (P2 || (P2 = Promise))(function(resolve, reject) {
        function fulfilled(value2) {
          try {
            step(generator.next(value2));
          } catch (e2) {
            reject(e2);
          }
        }
        function rejected(value2) {
          try {
            step(generator["throw"](value2));
          } catch (e2) {
            reject(e2);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    StorageBucketApi = class {
      constructor(url, headers = {}, fetch2) {
        this.url = url;
        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS3), headers);
        this.fetch = resolveFetch2(fetch2);
      }
      listBuckets() {
        return __awaiter8(this, void 0, void 0, function* () {
          try {
            const data = yield get(this.fetch, `${this.url}/bucket`, { headers: this.headers });
            return { data, error: null };
          } catch (error2) {
            if (isStorageError(error2)) {
              return { data: null, error: error2 };
            }
            throw error2;
          }
        });
      }
      getBucket(id) {
        return __awaiter8(this, void 0, void 0, function* () {
          try {
            const data = yield get(this.fetch, `${this.url}/bucket/${id}`, { headers: this.headers });
            return { data, error: null };
          } catch (error2) {
            if (isStorageError(error2)) {
              return { data: null, error: error2 };
            }
            throw error2;
          }
        });
      }
      createBucket(id, options2 = {
        public: false
      }) {
        return __awaiter8(this, void 0, void 0, function* () {
          try {
            const data = yield post(this.fetch, `${this.url}/bucket`, {
              id,
              name: id,
              public: options2.public,
              file_size_limit: options2.fileSizeLimit,
              allowed_mime_types: options2.allowedMimeTypes
            }, { headers: this.headers });
            return { data, error: null };
          } catch (error2) {
            if (isStorageError(error2)) {
              return { data: null, error: error2 };
            }
            throw error2;
          }
        });
      }
      updateBucket(id, options2) {
        return __awaiter8(this, void 0, void 0, function* () {
          try {
            const data = yield put(this.fetch, `${this.url}/bucket/${id}`, {
              id,
              name: id,
              public: options2.public,
              file_size_limit: options2.fileSizeLimit,
              allowed_mime_types: options2.allowedMimeTypes
            }, { headers: this.headers });
            return { data, error: null };
          } catch (error2) {
            if (isStorageError(error2)) {
              return { data: null, error: error2 };
            }
            throw error2;
          }
        });
      }
      emptyBucket(id) {
        return __awaiter8(this, void 0, void 0, function* () {
          try {
            const data = yield post(this.fetch, `${this.url}/bucket/${id}/empty`, {}, { headers: this.headers });
            return { data, error: null };
          } catch (error2) {
            if (isStorageError(error2)) {
              return { data: null, error: error2 };
            }
            throw error2;
          }
        });
      }
      deleteBucket(id) {
        return __awaiter8(this, void 0, void 0, function* () {
          try {
            const data = yield remove(this.fetch, `${this.url}/bucket/${id}`, {}, { headers: this.headers });
            return { data, error: null };
          } catch (error2) {
            if (isStorageError(error2)) {
              return { data: null, error: error2 };
            }
            throw error2;
          }
        });
      }
    };
  }
});
var StorageClient;
var init_StorageClient = __esm({
  "node_modules/@supabase/storage-js/dist/module/StorageClient.js"() {
    init_StorageFileApi();
    init_StorageBucketApi();
    StorageClient = class extends StorageBucketApi {
      constructor(url, headers = {}, fetch2) {
        super(url, headers, fetch2);
      }
      from(id) {
        return new StorageFileApi(this.url, this.headers, id, this.fetch);
      }
    };
  }
});
var init_types2 = __esm({
  "node_modules/@supabase/storage-js/dist/module/lib/types.js"() {
  }
});
var init_module4 = __esm({
  "node_modules/@supabase/storage-js/dist/module/index.js"() {
    init_StorageClient();
    init_types2();
    init_errors2();
  }
});
var version4;
var init_version4 = __esm({
  "node_modules/@supabase/supabase-js/dist/module/lib/version.js"() {
    version4 = "2.24.0";
  }
});
var DEFAULT_HEADERS4;
var init_constants4 = __esm({
  "node_modules/@supabase/supabase-js/dist/module/lib/constants.js"() {
    init_version4();
    DEFAULT_HEADERS4 = { "X-Client-Info": `supabase-js/${version4}` };
  }
});
var import_cross_fetch2;
var __awaiter9;
var resolveFetch3;
var resolveHeadersConstructor;
var fetchWithAuth;
var init_fetch2 = __esm({
  "node_modules/@supabase/supabase-js/dist/module/lib/fetch.js"() {
    import_cross_fetch2 = __toESM(require_browser_ponyfill());
    __awaiter9 = function(thisArg, _arguments, P2, generator) {
      function adopt(value2) {
        return value2 instanceof P2 ? value2 : new P2(function(resolve) {
          resolve(value2);
        });
      }
      return new (P2 || (P2 = Promise))(function(resolve, reject) {
        function fulfilled(value2) {
          try {
            step(generator.next(value2));
          } catch (e2) {
            reject(e2);
          }
        }
        function rejected(value2) {
          try {
            step(generator["throw"](value2));
          } catch (e2) {
            reject(e2);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    resolveFetch3 = (customFetch) => {
      let _fetch;
      if (customFetch) {
        _fetch = customFetch;
      } else if (typeof fetch === "undefined") {
        _fetch = import_cross_fetch2.default;
      } else {
        _fetch = fetch;
      }
      return (...args) => _fetch(...args);
    };
    resolveHeadersConstructor = () => {
      if (typeof Headers === "undefined") {
        return import_cross_fetch2.Headers;
      }
      return Headers;
    };
    fetchWithAuth = (supabaseKey, getAccessToken, customFetch) => {
      const fetch2 = resolveFetch3(customFetch);
      const HeadersConstructor = resolveHeadersConstructor();
      return (input, init2) => __awaiter9(void 0, void 0, void 0, function* () {
        var _a;
        const accessToken = (_a = yield getAccessToken()) !== null && _a !== void 0 ? _a : supabaseKey;
        let headers = new HeadersConstructor(init2 === null || init2 === void 0 ? void 0 : init2.headers);
        if (!headers.has("apikey")) {
          headers.set("apikey", supabaseKey);
        }
        if (!headers.has("Authorization")) {
          headers.set("Authorization", `Bearer ${accessToken}`);
        }
        return fetch2(input, Object.assign(Object.assign({}, init2), { headers }));
      });
    };
  }
});
function stripTrailingSlash(url) {
  return url.replace(/\/$/, "");
}
function applySettingDefaults(options2, defaults) {
  const { db: dbOptions, auth: authOptions, realtime: realtimeOptions, global: globalOptions } = options2;
  const { db: DEFAULT_DB_OPTIONS2, auth: DEFAULT_AUTH_OPTIONS2, realtime: DEFAULT_REALTIME_OPTIONS2, global: DEFAULT_GLOBAL_OPTIONS2 } = defaults;
  return {
    db: Object.assign(Object.assign({}, DEFAULT_DB_OPTIONS2), dbOptions),
    auth: Object.assign(Object.assign({}, DEFAULT_AUTH_OPTIONS2), authOptions),
    realtime: Object.assign(Object.assign({}, DEFAULT_REALTIME_OPTIONS2), realtimeOptions),
    global: Object.assign(Object.assign({}, DEFAULT_GLOBAL_OPTIONS2), globalOptions)
  };
}
var init_helpers2 = __esm({
  "node_modules/@supabase/supabase-js/dist/module/lib/helpers.js"() {
  }
});
function expiresAt(expiresIn) {
  const timeNow = Math.round(Date.now() / 1e3);
  return timeNow + expiresIn;
}
function uuid() {
  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(c2) {
    const r2 = Math.random() * 16 | 0, v2 = c2 == "x" ? r2 : r2 & 3 | 8;
    return v2.toString(16);
  });
}
function getParameterByName(name, url) {
  var _a;
  if (!url)
    url = ((_a = window === null || window === void 0 ? void 0 : window.location) === null || _a === void 0 ? void 0 : _a.href) || "";
  name = name.replace(/[\[\]]/g, "\\$&");
  const regex = new RegExp("[?&#]" + name + "(=([^&#]*)|&|#|$)"), results = regex.exec(url);
  if (!results)
    return null;
  if (!results[2])
    return "";
  return decodeURIComponent(results[2].replace(/\+/g, " "));
}
function decodeBase64URL(value2) {
  const key2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
  let base642 = "";
  let chr1, chr2, chr3;
  let enc1, enc2, enc3, enc4;
  let i2 = 0;
  value2 = value2.replace("-", "+").replace("_", "/");
  while (i2 < value2.length) {
    enc1 = key2.indexOf(value2.charAt(i2++));
    enc2 = key2.indexOf(value2.charAt(i2++));
    enc3 = key2.indexOf(value2.charAt(i2++));
    enc4 = key2.indexOf(value2.charAt(i2++));
    chr1 = enc1 << 2 | enc2 >> 4;
    chr2 = (enc2 & 15) << 4 | enc3 >> 2;
    chr3 = (enc3 & 3) << 6 | enc4;
    base642 = base642 + String.fromCharCode(chr1);
    if (enc3 != 64 && chr2 != 0) {
      base642 = base642 + String.fromCharCode(chr2);
    }
    if (enc4 != 64 && chr3 != 0) {
      base642 = base642 + String.fromCharCode(chr3);
    }
  }
  return base642;
}
function decodeJWTPayload(token) {
  const base64UrlRegex = /^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}=?$|[a-z0-9_-]{2}(==)?$)$/i;
  const parts = token.split(".");
  if (parts.length !== 3) {
    throw new Error("JWT is not valid: not a JWT structure");
  }
  if (!base64UrlRegex.test(parts[1])) {
    throw new Error("JWT is not valid: payload is not in base64url format");
  }
  const base64Url = parts[1];
  return JSON.parse(decodeBase64URL(base64Url));
}
function sleep(time) {
  return new Promise((accept) => {
    setTimeout(() => accept(null), time);
  });
}
function retryable(fn, isRetryable) {
  const promise = new Promise((accept, reject) => {
    ;
    (() => __awaiter10(this, void 0, void 0, function* () {
      for (let attempt = 0; attempt < Infinity; attempt++) {
        try {
          const result = yield fn(attempt);
          if (!isRetryable(attempt, null, result)) {
            accept(result);
            return;
          }
        } catch (e2) {
          if (!isRetryable(attempt, e2)) {
            reject(e2);
            return;
          }
        }
      }
    }))();
  });
  return promise;
}
function dec2hex(dec) {
  return ("0" + dec.toString(16)).substr(-2);
}
function generatePKCEVerifier() {
  const verifierLength = 56;
  const array2 = new Uint32Array(verifierLength);
  if (typeof crypto === "undefined") {
    const charSet = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~";
    const charSetLen = charSet.length;
    let verifier = "";
    for (let i2 = 0; i2 < verifierLength; i2++) {
      verifier += charSet.charAt(Math.floor(Math.random() * charSetLen));
    }
    return verifier;
  }
  crypto.getRandomValues(array2);
  return Array.from(array2, dec2hex).join("");
}
function sha256(randomString) {
  return __awaiter10(this, void 0, void 0, function* () {
    const encoder4 = new TextEncoder();
    const encodedData = encoder4.encode(randomString);
    const hash2 = yield crypto.subtle.digest("SHA-256", encodedData);
    const bytes = new Uint8Array(hash2);
    return Array.from(bytes).map((c2) => String.fromCharCode(c2)).join("");
  });
}
function base64urlencode(str) {
  return btoa(str).replace(/\+/g, "-").replace(/\//g, "_").replace(/=+$/, "");
}
function generatePKCEChallenge(verifier) {
  return __awaiter10(this, void 0, void 0, function* () {
    if (typeof crypto === "undefined") {
      console.warn("WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256.");
      return verifier;
    }
    const hashed = yield sha256(verifier);
    return base64urlencode(hashed);
  });
}
var __awaiter10;
var isBrowser;
var localStorageWriteTests;
var supportsLocalStorage;
var resolveFetch4;
var looksLikeFetchResponse;
var setItemAsync;
var getItemAsync;
var removeItemAsync;
var Deferred;
var init_helpers3 = __esm({
  "node_modules/@supabase/gotrue-js/dist/module/lib/helpers.js"() {
    __awaiter10 = function(thisArg, _arguments, P2, generator) {
      function adopt(value2) {
        return value2 instanceof P2 ? value2 : new P2(function(resolve) {
          resolve(value2);
        });
      }
      return new (P2 || (P2 = Promise))(function(resolve, reject) {
        function fulfilled(value2) {
          try {
            step(generator.next(value2));
          } catch (e2) {
            reject(e2);
          }
        }
        function rejected(value2) {
          try {
            step(generator["throw"](value2));
          } catch (e2) {
            reject(e2);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    isBrowser = () => typeof document !== "undefined";
    localStorageWriteTests = {
      tested: false,
      writable: false
    };
    supportsLocalStorage = () => {
      if (!isBrowser()) {
        return false;
      }
      try {
        if (typeof globalThis.localStorage !== "object") {
          return false;
        }
      } catch (e2) {
        return false;
      }
      if (localStorageWriteTests.tested) {
        return localStorageWriteTests.writable;
      }
      const randomKey = `lswt-${Math.random()}${Math.random()}`;
      try {
        globalThis.localStorage.setItem(randomKey, randomKey);
        globalThis.localStorage.removeItem(randomKey);
        localStorageWriteTests.tested = true;
        localStorageWriteTests.writable = true;
      } catch (e2) {
        localStorageWriteTests.tested = true;
        localStorageWriteTests.writable = false;
      }
      return localStorageWriteTests.writable;
    };
    resolveFetch4 = (customFetch) => {
      let _fetch;
      if (customFetch) {
        _fetch = customFetch;
      } else if (typeof fetch === "undefined") {
        _fetch = (...args) => __awaiter10(void 0, void 0, void 0, function* () {
          return yield (yield Promise.resolve().then(() => __toESM(require_browser_ponyfill()))).fetch(...args);
        });
      } else {
        _fetch = fetch;
      }
      return (...args) => _fetch(...args);
    };
    looksLikeFetchResponse = (maybeResponse) => {
      return typeof maybeResponse === "object" && maybeResponse !== null && "status" in maybeResponse && "ok" in maybeResponse && "json" in maybeResponse && typeof maybeResponse.json === "function";
    };
    setItemAsync = (storage, key2, data) => __awaiter10(void 0, void 0, void 0, function* () {
      yield storage.setItem(key2, JSON.stringify(data));
    });
    getItemAsync = (storage, key2) => __awaiter10(void 0, void 0, void 0, function* () {
      const value2 = yield storage.getItem(key2);
      if (!value2) {
        return null;
      }
      try {
        return JSON.parse(value2);
      } catch (_a) {
        return value2;
      }
    });
    removeItemAsync = (storage, key2) => __awaiter10(void 0, void 0, void 0, function* () {
      yield storage.removeItem(key2);
    });
    Deferred = class {
      constructor() {
        ;
        this.promise = new Deferred.promiseConstructor((res, rej) => {
          ;
          this.resolve = res;
          this.reject = rej;
        });
      }
    };
    Deferred.promiseConstructor = Promise;
  }
});
function isAuthError(error2) {
  return typeof error2 === "object" && error2 !== null && "__isAuthError" in error2;
}
function isAuthApiError(error2) {
  return isAuthError(error2) && error2.name === "AuthApiError";
}
var AuthError;
var AuthApiError;
var AuthUnknownError;
var CustomAuthError;
var AuthSessionMissingError;
var AuthInvalidCredentialsError;
var AuthImplicitGrantRedirectError;
var AuthPKCEGrantCodeExchangeError;
var AuthRetryableFetchError;
var init_errors3 = __esm({
  "node_modules/@supabase/gotrue-js/dist/module/lib/errors.js"() {
    AuthError = class extends Error {
      constructor(message, status) {
        super(message);
        this.__isAuthError = true;
        this.name = "AuthError";
        this.status = status;
      }
    };
    AuthApiError = class extends AuthError {
      constructor(message, status) {
        super(message, status);
        this.name = "AuthApiError";
        this.status = status;
      }
      toJSON() {
        return {
          name: this.name,
          message: this.message,
          status: this.status
        };
      }
    };
    AuthUnknownError = class extends AuthError {
      constructor(message, originalError) {
        super(message);
        this.name = "AuthUnknownError";
        this.originalError = originalError;
      }
    };
    CustomAuthError = class extends AuthError {
      constructor(message, name, status) {
        super(message);
        this.name = name;
        this.status = status;
      }
      toJSON() {
        return {
          name: this.name,
          message: this.message,
          status: this.status
        };
      }
    };
    AuthSessionMissingError = class extends CustomAuthError {
      constructor() {
        super("Auth session missing!", "AuthSessionMissingError", 400);
      }
    };
    AuthInvalidCredentialsError = class extends CustomAuthError {
      constructor(message) {
        super(message, "AuthInvalidCredentialsError", 400);
      }
    };
    AuthImplicitGrantRedirectError = class extends CustomAuthError {
      constructor(message, details = null) {
        super(message, "AuthImplicitGrantRedirectError", 500);
        this.details = null;
        this.details = details;
      }
      toJSON() {
        return {
          name: this.name,
          message: this.message,
          status: this.status,
          details: this.details
        };
      }
    };
    AuthPKCEGrantCodeExchangeError = class extends CustomAuthError {
      constructor(message, details = null) {
        super(message, "AuthPKCEGrantCodeExchangeError", 500);
        this.details = null;
        this.details = details;
      }
      toJSON() {
        return {
          name: this.name,
          message: this.message,
          status: this.status,
          details: this.details
        };
      }
    };
    AuthRetryableFetchError = class extends CustomAuthError {
      constructor(message, status) {
        super(message, "AuthRetryableFetchError", status);
      }
    };
  }
});
function _request(fetcher, method, url, options2) {
  var _a;
  return __awaiter11(this, void 0, void 0, function* () {
    const headers = Object.assign({}, options2 === null || options2 === void 0 ? void 0 : options2.headers);
    if (options2 === null || options2 === void 0 ? void 0 : options2.jwt) {
      headers["Authorization"] = `Bearer ${options2.jwt}`;
    }
    const qs = (_a = options2 === null || options2 === void 0 ? void 0 : options2.query) !== null && _a !== void 0 ? _a : {};
    if (options2 === null || options2 === void 0 ? void 0 : options2.redirectTo) {
      qs["redirect_to"] = options2.redirectTo;
    }
    const queryString = Object.keys(qs).length ? "?" + new URLSearchParams(qs).toString() : "";
    const data = yield _handleRequest2(fetcher, method, url + queryString, { headers, noResolveJson: options2 === null || options2 === void 0 ? void 0 : options2.noResolveJson }, {}, options2 === null || options2 === void 0 ? void 0 : options2.body);
    return (options2 === null || options2 === void 0 ? void 0 : options2.xform) ? options2 === null || options2 === void 0 ? void 0 : options2.xform(data) : { data: Object.assign({}, data), error: null };
  });
}
function _handleRequest2(fetcher, method, url, options2, parameters, body) {
  return __awaiter11(this, void 0, void 0, function* () {
    return new Promise((resolve, reject) => {
      fetcher(url, _getRequestParams2(method, options2, parameters, body)).then((result) => {
        if (!result.ok)
          throw result;
        if (options2 === null || options2 === void 0 ? void 0 : options2.noResolveJson)
          return result;
        return result.json();
      }).then((data) => resolve(data)).catch((error2) => handleError2(error2, reject));
    });
  });
}
function _sessionResponse(data) {
  var _a;
  let session = null;
  if (hasSession(data)) {
    session = Object.assign({}, data);
    session.expires_at = expiresAt(data.expires_in);
  }
  const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;
  return { data: { session, user }, error: null };
}
function _userResponse(data) {
  var _a;
  const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;
  return { data: { user }, error: null };
}
function _ssoResponse(data) {
  return { data, error: null };
}
function _generateLinkResponse(data) {
  const { action_link, email_otp, hashed_token, redirect_to, verification_type } = data, rest = __rest(data, ["action_link", "email_otp", "hashed_token", "redirect_to", "verification_type"]);
  const properties = {
    action_link,
    email_otp,
    hashed_token,
    redirect_to,
    verification_type
  };
  const user = Object.assign({}, rest);
  return {
    data: {
      properties,
      user
    },
    error: null
  };
}
function _noResolveJsonResponse(data) {
  return data;
}
function hasSession(data) {
  return data.access_token && data.refresh_token && data.expires_in;
}
var __awaiter11;
var __rest;
var _getErrorMessage2;
var handleError2;
var _getRequestParams2;
var init_fetch3 = __esm({
  "node_modules/@supabase/gotrue-js/dist/module/lib/fetch.js"() {
    init_helpers3();
    init_errors3();
    __awaiter11 = function(thisArg, _arguments, P2, generator) {
      function adopt(value2) {
        return value2 instanceof P2 ? value2 : new P2(function(resolve) {
          resolve(value2);
        });
      }
      return new (P2 || (P2 = Promise))(function(resolve, reject) {
        function fulfilled(value2) {
          try {
            step(generator.next(value2));
          } catch (e2) {
            reject(e2);
          }
        }
        function rejected(value2) {
          try {
            step(generator["throw"](value2));
          } catch (e2) {
            reject(e2);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    __rest = function(s3, e2) {
      var t2 = {};
      for (var p2 in s3)
        if (Object.prototype.hasOwnProperty.call(s3, p2) && e2.indexOf(p2) < 0)
          t2[p2] = s3[p2];
      if (s3 != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i2 = 0, p2 = Object.getOwnPropertySymbols(s3); i2 < p2.length; i2++) {
          if (e2.indexOf(p2[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s3, p2[i2]))
            t2[p2[i2]] = s3[p2[i2]];
        }
      return t2;
    };
    _getErrorMessage2 = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);
    handleError2 = (error2, reject) => __awaiter11(void 0, void 0, void 0, function* () {
      const NETWORK_ERROR_CODES = [502, 503, 504];
      if (!looksLikeFetchResponse(error2)) {
        reject(new AuthRetryableFetchError(_getErrorMessage2(error2), 0));
      } else if (NETWORK_ERROR_CODES.includes(error2.status)) {
        reject(new AuthRetryableFetchError(_getErrorMessage2(error2), error2.status));
      } else {
        error2.json().then((err) => {
          reject(new AuthApiError(_getErrorMessage2(err), error2.status || 500));
        }).catch((e2) => {
          reject(new AuthUnknownError(_getErrorMessage2(e2), e2));
        });
      }
    });
    _getRequestParams2 = (method, options2, parameters, body) => {
      const params = { method, headers: (options2 === null || options2 === void 0 ? void 0 : options2.headers) || {} };
      if (method === "GET") {
        return params;
      }
      params.headers = Object.assign({ "Content-Type": "application/json;charset=UTF-8" }, options2 === null || options2 === void 0 ? void 0 : options2.headers);
      params.body = JSON.stringify(body);
      return Object.assign(Object.assign({}, params), parameters);
    };
  }
});
var __awaiter12;
var __rest2;
var GoTrueAdminApi;
var init_GoTrueAdminApi = __esm({
  "node_modules/@supabase/gotrue-js/dist/module/GoTrueAdminApi.js"() {
    init_fetch3();
    init_helpers3();
    init_errors3();
    __awaiter12 = function(thisArg, _arguments, P2, generator) {
      function adopt(value2) {
        return value2 instanceof P2 ? value2 : new P2(function(resolve) {
          resolve(value2);
        });
      }
      return new (P2 || (P2 = Promise))(function(resolve, reject) {
        function fulfilled(value2) {
          try {
            step(generator.next(value2));
          } catch (e2) {
            reject(e2);
          }
        }
        function rejected(value2) {
          try {
            step(generator["throw"](value2));
          } catch (e2) {
            reject(e2);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    __rest2 = function(s3, e2) {
      var t2 = {};
      for (var p2 in s3)
        if (Object.prototype.hasOwnProperty.call(s3, p2) && e2.indexOf(p2) < 0)
          t2[p2] = s3[p2];
      if (s3 != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i2 = 0, p2 = Object.getOwnPropertySymbols(s3); i2 < p2.length; i2++) {
          if (e2.indexOf(p2[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s3, p2[i2]))
            t2[p2[i2]] = s3[p2[i2]];
        }
      return t2;
    };
    GoTrueAdminApi = class {
      constructor({ url = "", headers = {}, fetch: fetch2 }) {
        this.url = url;
        this.headers = headers;
        this.fetch = resolveFetch4(fetch2);
        this.mfa = {
          listFactors: this._listFactors.bind(this),
          deleteFactor: this._deleteFactor.bind(this)
        };
      }
      signOut(jwt) {
        return __awaiter12(this, void 0, void 0, function* () {
          try {
            yield _request(this.fetch, "POST", `${this.url}/logout`, {
              headers: this.headers,
              jwt,
              noResolveJson: true
            });
            return { data: null, error: null };
          } catch (error2) {
            if (isAuthError(error2)) {
              return { data: null, error: error2 };
            }
            throw error2;
          }
        });
      }
      inviteUserByEmail(email, options2 = {}) {
        return __awaiter12(this, void 0, void 0, function* () {
          try {
            return yield _request(this.fetch, "POST", `${this.url}/invite`, {
              body: { email, data: options2.data },
              headers: this.headers,
              redirectTo: options2.redirectTo,
              xform: _userResponse
            });
          } catch (error2) {
            if (isAuthError(error2)) {
              return { data: { user: null }, error: error2 };
            }
            throw error2;
          }
        });
      }
      generateLink(params) {
        return __awaiter12(this, void 0, void 0, function* () {
          try {
            const { options: options2 } = params, rest = __rest2(params, ["options"]);
            const body = Object.assign(Object.assign({}, rest), options2);
            if ("newEmail" in rest) {
              body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;
              delete body["newEmail"];
            }
            return yield _request(this.fetch, "POST", `${this.url}/admin/generate_link`, {
              body,
              headers: this.headers,
              xform: _generateLinkResponse,
              redirectTo: options2 === null || options2 === void 0 ? void 0 : options2.redirectTo
            });
          } catch (error2) {
            if (isAuthError(error2)) {
              return {
                data: {
                  properties: null,
                  user: null
                },
                error: error2
              };
            }
            throw error2;
          }
        });
      }
      createUser(attributes) {
        return __awaiter12(this, void 0, void 0, function* () {
          try {
            return yield _request(this.fetch, "POST", `${this.url}/admin/users`, {
              body: attributes,
              headers: this.headers,
              xform: _userResponse
            });
          } catch (error2) {
            if (isAuthError(error2)) {
              return { data: { user: null }, error: error2 };
            }
            throw error2;
          }
        });
      }
      listUsers(params) {
        var _a, _b, _c, _d, _e, _f, _g;
        return __awaiter12(this, void 0, void 0, function* () {
          try {
            const pagination = { nextPage: null, lastPage: 0, total: 0 };
            const response = yield _request(this.fetch, "GET", `${this.url}/admin/users`, {
              headers: this.headers,
              noResolveJson: true,
              query: {
                page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : "",
                per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ""
              },
              xform: _noResolveJsonResponse
            });
            if (response.error)
              throw response.error;
            const users = yield response.json();
            const total = (_e = response.headers.get("x-total-count")) !== null && _e !== void 0 ? _e : 0;
            const links = (_g = (_f = response.headers.get("link")) === null || _f === void 0 ? void 0 : _f.split(",")) !== null && _g !== void 0 ? _g : [];
            if (links.length > 0) {
              links.forEach((link) => {
                const page2 = parseInt(link.split(";")[0].split("=")[1].substring(0, 1));
                const rel = JSON.parse(link.split(";")[1].split("=")[1]);
                pagination[`${rel}Page`] = page2;
              });
              pagination.total = parseInt(total);
            }
            return { data: Object.assign(Object.assign({}, users), pagination), error: null };
          } catch (error2) {
            if (isAuthError(error2)) {
              return { data: { users: [] }, error: error2 };
            }
            throw error2;
          }
        });
      }
      getUserById(uid) {
        return __awaiter12(this, void 0, void 0, function* () {
          try {
            return yield _request(this.fetch, "GET", `${this.url}/admin/users/${uid}`, {
              headers: this.headers,
              xform: _userResponse
            });
          } catch (error2) {
            if (isAuthError(error2)) {
              return { data: { user: null }, error: error2 };
            }
            throw error2;
          }
        });
      }
      updateUserById(uid, attributes) {
        return __awaiter12(this, void 0, void 0, function* () {
          try {
            return yield _request(this.fetch, "PUT", `${this.url}/admin/users/${uid}`, {
              body: attributes,
              headers: this.headers,
              xform: _userResponse
            });
          } catch (error2) {
            if (isAuthError(error2)) {
              return { data: { user: null }, error: error2 };
            }
            throw error2;
          }
        });
      }
      deleteUser(id, shouldSoftDelete = false) {
        return __awaiter12(this, void 0, void 0, function* () {
          try {
            return yield _request(this.fetch, "DELETE", `${this.url}/admin/users/${id}`, {
              headers: this.headers,
              body: {
                should_soft_delete: shouldSoftDelete
              },
              xform: _userResponse
            });
          } catch (error2) {
            if (isAuthError(error2)) {
              return { data: { user: null }, error: error2 };
            }
            throw error2;
          }
        });
      }
      _listFactors(params) {
        return __awaiter12(this, void 0, void 0, function* () {
          try {
            const { data, error: error2 } = yield _request(this.fetch, "GET", `${this.url}/admin/users/${params.userId}/factors`, {
              headers: this.headers,
              xform: (factors) => {
                return { data: { factors }, error: null };
              }
            });
            return { data, error: error2 };
          } catch (error2) {
            if (isAuthError(error2)) {
              return { data: null, error: error2 };
            }
            throw error2;
          }
        });
      }
      _deleteFactor(params) {
        return __awaiter12(this, void 0, void 0, function* () {
          try {
            const data = yield _request(this.fetch, "DELETE", `${this.url}/admin/users/${params.userId}/factors/${params.id}`, {
              headers: this.headers
            });
            return { data, error: null };
          } catch (error2) {
            if (isAuthError(error2)) {
              return { data: null, error: error2 };
            }
            throw error2;
          }
        });
      }
    };
  }
});
var version5;
var init_version5 = __esm({
  "node_modules/@supabase/gotrue-js/dist/module/lib/version.js"() {
    version5 = "2.28.1";
  }
});
var GOTRUE_URL;
var STORAGE_KEY;
var DEFAULT_HEADERS5;
var EXPIRY_MARGIN;
var init_constants5 = __esm({
  "node_modules/@supabase/gotrue-js/dist/module/lib/constants.js"() {
    init_version5();
    GOTRUE_URL = "http://localhost:9999";
    STORAGE_KEY = "supabase.auth.token";
    DEFAULT_HEADERS5 = { "X-Client-Info": `gotrue-js/${version5}` };
    EXPIRY_MARGIN = 10;
  }
});
var localStorageAdapter;
var local_storage_default;
var init_local_storage = __esm({
  "node_modules/@supabase/gotrue-js/dist/module/lib/local-storage.js"() {
    init_helpers3();
    localStorageAdapter = {
      getItem: (key2) => {
        if (!supportsLocalStorage()) {
          return null;
        }
        return globalThis.localStorage.getItem(key2);
      },
      setItem: (key2, value2) => {
        if (!supportsLocalStorage()) {
          return;
        }
        globalThis.localStorage.setItem(key2, value2);
      },
      removeItem: (key2) => {
        if (!supportsLocalStorage()) {
          return;
        }
        globalThis.localStorage.removeItem(key2);
      }
    };
    local_storage_default = localStorageAdapter;
  }
});
function polyfillGlobalThis() {
  if (typeof globalThis === "object")
    return;
  try {
    Object.defineProperty(Object.prototype, "__magic__", {
      get: function() {
        return this;
      },
      configurable: true
    });
    __magic__.globalThis = __magic__;
    delete Object.prototype.__magic__;
  } catch (e2) {
    if (typeof self !== "undefined") {
      self.globalThis = self;
    }
  }
}
var init_polyfills = __esm({
  "node_modules/@supabase/gotrue-js/dist/module/lib/polyfills.js"() {
  }
});
var __awaiter13;
var DEFAULT_OPTIONS;
var AUTO_REFRESH_TICK_DURATION;
var AUTO_REFRESH_TICK_THRESHOLD;
var GoTrueClient;
var init_GoTrueClient = __esm({
  "node_modules/@supabase/gotrue-js/dist/module/GoTrueClient.js"() {
    init_GoTrueAdminApi();
    init_constants5();
    init_errors3();
    init_fetch3();
    init_helpers3();
    init_local_storage();
    init_polyfills();
    __awaiter13 = function(thisArg, _arguments, P2, generator) {
      function adopt(value2) {
        return value2 instanceof P2 ? value2 : new P2(function(resolve) {
          resolve(value2);
        });
      }
      return new (P2 || (P2 = Promise))(function(resolve, reject) {
        function fulfilled(value2) {
          try {
            step(generator.next(value2));
          } catch (e2) {
            reject(e2);
          }
        }
        function rejected(value2) {
          try {
            step(generator["throw"](value2));
          } catch (e2) {
            reject(e2);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    polyfillGlobalThis();
    DEFAULT_OPTIONS = {
      url: GOTRUE_URL,
      storageKey: STORAGE_KEY,
      autoRefreshToken: true,
      persistSession: true,
      detectSessionInUrl: true,
      headers: DEFAULT_HEADERS5,
      flowType: "implicit"
    };
    AUTO_REFRESH_TICK_DURATION = 30 * 1e3;
    AUTO_REFRESH_TICK_THRESHOLD = 3;
    GoTrueClient = class {
      constructor(options2) {
        var _a;
        this.stateChangeEmitters = /* @__PURE__ */ new Map();
        this.autoRefreshTicker = null;
        this.visibilityChangedCallback = null;
        this.refreshingDeferred = null;
        this.initializePromise = null;
        this.detectSessionInUrl = true;
        this.broadcastChannel = null;
        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options2);
        this.inMemorySession = null;
        this.storageKey = settings.storageKey;
        this.autoRefreshToken = settings.autoRefreshToken;
        this.persistSession = settings.persistSession;
        this.storage = settings.storage || local_storage_default;
        this.admin = new GoTrueAdminApi({
          url: settings.url,
          headers: settings.headers,
          fetch: settings.fetch
        });
        this.url = settings.url;
        this.headers = settings.headers;
        this.fetch = resolveFetch4(settings.fetch);
        this.detectSessionInUrl = settings.detectSessionInUrl;
        this.flowType = settings.flowType;
        this.mfa = {
          verify: this._verify.bind(this),
          enroll: this._enroll.bind(this),
          unenroll: this._unenroll.bind(this),
          challenge: this._challenge.bind(this),
          listFactors: this._listFactors.bind(this),
          challengeAndVerify: this._challengeAndVerify.bind(this),
          getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this)
        };
        if (this.persistSession && this.storage === local_storage_default && !supportsLocalStorage()) {
          console.warn(`No storage option exists to persist the session, which may result in unexpected behavior when using auth.
        If you want to set persistSession to true, please provide a storage option or you may set persistSession to false to disable this warning.`);
        }
        if (isBrowser() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {
          try {
            this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey);
          } catch (e2) {
            console.error("Failed to create a new BroadcastChannel, multi-tab state changes will not be available", e2);
          }
          (_a = this.broadcastChannel) === null || _a === void 0 ? void 0 : _a.addEventListener("message", (event) => {
            this._notifyAllSubscribers(event.data.event, event.data.session, false);
          });
        }
        this.initialize();
      }
      initialize() {
        if (!this.initializePromise) {
          this.initializePromise = this._initialize();
        }
        return this.initializePromise;
      }
      _initialize() {
        return __awaiter13(this, void 0, void 0, function* () {
          if (this.initializePromise) {
            return this.initializePromise;
          }
          try {
            const isPKCEFlow = yield this._isPKCEFlow();
            if (this.detectSessionInUrl && this._isImplicitGrantFlow() || isPKCEFlow) {
              const { data, error: error2 } = yield this._getSessionFromUrl(isPKCEFlow);
              if (error2) {
                yield this._removeSession();
                return { error: error2 };
              }
              const { session, redirectType } = data;
              yield this._saveSession(session);
              setTimeout(() => {
                if (redirectType === "recovery") {
                  this._notifyAllSubscribers("PASSWORD_RECOVERY", session);
                } else {
                  this._notifyAllSubscribers("SIGNED_IN", session);
                }
              }, 0);
              return { error: null };
            }
            yield this._recoverAndRefresh();
            return { error: null };
          } catch (error2) {
            if (isAuthError(error2)) {
              return { error: error2 };
            }
            return {
              error: new AuthUnknownError("Unexpected error during initialization", error2)
            };
          } finally {
            yield this._handleVisibilityChange();
          }
        });
      }
      signUp(credentials) {
        var _a, _b, _c;
        return __awaiter13(this, void 0, void 0, function* () {
          try {
            yield this._removeSession();
            let res;
            if ("email" in credentials) {
              const { email, password, options: options2 } = credentials;
              let codeChallenge = null;
              let codeChallengeMethod = null;
              if (this.flowType === "pkce") {
                const codeVerifier = generatePKCEVerifier();
                yield setItemAsync(this.storage, `${this.storageKey}-code-verifier`, codeVerifier);
                codeChallenge = yield generatePKCEChallenge(codeVerifier);
                codeChallengeMethod = codeVerifier === codeChallenge ? "plain" : "s256";
              }
              res = yield _request(this.fetch, "POST", `${this.url}/signup`, {
                headers: this.headers,
                redirectTo: options2 === null || options2 === void 0 ? void 0 : options2.emailRedirectTo,
                body: {
                  email,
                  password,
                  data: (_a = options2 === null || options2 === void 0 ? void 0 : options2.data) !== null && _a !== void 0 ? _a : {},
                  gotrue_meta_security: { captcha_token: options2 === null || options2 === void 0 ? void 0 : options2.captchaToken },
                  code_challenge: codeChallenge,
                  code_challenge_method: codeChallengeMethod
                },
                xform: _sessionResponse
              });
            } else if ("phone" in credentials) {
              const { phone, password, options: options2 } = credentials;
              res = yield _request(this.fetch, "POST", `${this.url}/signup`, {
                headers: this.headers,
                body: {
                  phone,
                  password,
                  data: (_b = options2 === null || options2 === void 0 ? void 0 : options2.data) !== null && _b !== void 0 ? _b : {},
                  channel: (_c = options2 === null || options2 === void 0 ? void 0 : options2.channel) !== null && _c !== void 0 ? _c : "sms",
                  gotrue_meta_security: { captcha_token: options2 === null || options2 === void 0 ? void 0 : options2.captchaToken }
                },
                xform: _sessionResponse
              });
            } else {
              throw new AuthInvalidCredentialsError("You must provide either an email or phone number and a password");
            }
            const { data, error: error2 } = res;
            if (error2 || !data) {
              return { data: { user: null, session: null }, error: error2 };
            }
            const session = data.session;
            const user = data.user;
            if (data.session) {
              yield this._saveSession(data.session);
              this._notifyAllSubscribers("SIGNED_IN", session);
            }
            return { data: { user, session }, error: null };
          } catch (error2) {
            if (isAuthError(error2)) {
              return { data: { user: null, session: null }, error: error2 };
            }
            throw error2;
          }
        });
      }
      signInWithPassword(credentials) {
        return __awaiter13(this, void 0, void 0, function* () {
          try {
            yield this._removeSession();
            let res;
            if ("email" in credentials) {
              const { email, password, options: options2 } = credentials;
              res = yield _request(this.fetch, "POST", `${this.url}/token?grant_type=password`, {
                headers: this.headers,
                body: {
                  email,
                  password,
                  gotrue_meta_security: { captcha_token: options2 === null || options2 === void 0 ? void 0 : options2.captchaToken }
                },
                xform: _sessionResponse
              });
            } else if ("phone" in credentials) {
              const { phone, password, options: options2 } = credentials;
              res = yield _request(this.fetch, "POST", `${this.url}/token?grant_type=password`, {
                headers: this.headers,
                body: {
                  phone,
                  password,
                  gotrue_meta_security: { captcha_token: options2 === null || options2 === void 0 ? void 0 : options2.captchaToken }
                },
                xform: _sessionResponse
              });
            } else {
              throw new AuthInvalidCredentialsError("You must provide either an email or phone number and a password");
            }
            const { data, error: error2 } = res;
            if (error2 || !data)
              return { data: { user: null, session: null }, error: error2 };
            if (data.session) {
              yield this._saveSession(data.session);
              this._notifyAllSubscribers("SIGNED_IN", data.session);
            }
            return { data, error: error2 };
          } catch (error2) {
            if (isAuthError(error2)) {
              return { data: { user: null, session: null }, error: error2 };
            }
            throw error2;
          }
        });
      }
      signInWithOAuth(credentials) {
        var _a, _b, _c, _d;
        return __awaiter13(this, void 0, void 0, function* () {
          yield this._removeSession();
          return yield this._handleProviderSignIn(credentials.provider, {
            redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,
            scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,
            queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,
            skipBrowserRedirect: (_d = credentials.options) === null || _d === void 0 ? void 0 : _d.skipBrowserRedirect
          });
        });
      }
      exchangeCodeForSession(authCode) {
        return __awaiter13(this, void 0, void 0, function* () {
          const codeVerifier = yield getItemAsync(this.storage, `${this.storageKey}-code-verifier`);
          const { data, error: error2 } = yield _request(this.fetch, "POST", `${this.url}/token?grant_type=pkce`, {
            headers: this.headers,
            body: {
              auth_code: authCode,
              code_verifier: codeVerifier
            },
            xform: _sessionResponse
          });
          yield removeItemAsync(this.storage, `${this.storageKey}-code-verifier`);
          if (error2 || !data)
            return { data: { user: null, session: null }, error: error2 };
          if (data.session) {
            yield this._saveSession(data.session);
            this._notifyAllSubscribers("SIGNED_IN", data.session);
          }
          return { data, error: error2 };
        });
      }
      signInWithIdToken(credentials) {
        return __awaiter13(this, void 0, void 0, function* () {
          yield this._removeSession();
          try {
            const { options: options2, provider, token, nonce } = credentials;
            const res = yield _request(this.fetch, "POST", `${this.url}/token?grant_type=id_token`, {
              headers: this.headers,
              body: {
                provider,
                id_token: token,
                nonce,
                gotrue_meta_security: { captcha_token: options2 === null || options2 === void 0 ? void 0 : options2.captchaToken }
              },
              xform: _sessionResponse
            });
            const { data, error: error2 } = res;
            if (error2 || !data)
              return { data: { user: null, session: null }, error: error2 };
            if (data.session) {
              yield this._saveSession(data.session);
              this._notifyAllSubscribers("SIGNED_IN", data.session);
            }
            return { data, error: error2 };
          } catch (error2) {
            if (isAuthError(error2)) {
              return { data: { user: null, session: null }, error: error2 };
            }
            throw error2;
          }
        });
      }
      signInWithOtp(credentials) {
        var _a, _b, _c, _d, _e;
        return __awaiter13(this, void 0, void 0, function* () {
          try {
            yield this._removeSession();
            if ("email" in credentials) {
              const { email, options: options2 } = credentials;
              let codeChallenge = null;
              let codeChallengeMethod = null;
              if (this.flowType === "pkce") {
                const codeVerifier = generatePKCEVerifier();
                yield setItemAsync(this.storage, `${this.storageKey}-code-verifier`, codeVerifier);
                codeChallenge = yield generatePKCEChallenge(codeVerifier);
                codeChallengeMethod = codeVerifier === codeChallenge ? "plain" : "s256";
              }
              const { error: error2 } = yield _request(this.fetch, "POST", `${this.url}/otp`, {
                headers: this.headers,
                body: {
                  email,
                  data: (_a = options2 === null || options2 === void 0 ? void 0 : options2.data) !== null && _a !== void 0 ? _a : {},
                  create_user: (_b = options2 === null || options2 === void 0 ? void 0 : options2.shouldCreateUser) !== null && _b !== void 0 ? _b : true,
                  gotrue_meta_security: { captcha_token: options2 === null || options2 === void 0 ? void 0 : options2.captchaToken },
                  code_challenge: codeChallenge,
                  code_challenge_method: codeChallengeMethod
                },
                redirectTo: options2 === null || options2 === void 0 ? void 0 : options2.emailRedirectTo
              });
              return { data: { user: null, session: null }, error: error2 };
            }
            if ("phone" in credentials) {
              const { phone, options: options2 } = credentials;
              const { error: error2 } = yield _request(this.fetch, "POST", `${this.url}/otp`, {
                headers: this.headers,
                body: {
                  phone,
                  data: (_c = options2 === null || options2 === void 0 ? void 0 : options2.data) !== null && _c !== void 0 ? _c : {},
                  create_user: (_d = options2 === null || options2 === void 0 ? void 0 : options2.shouldCreateUser) !== null && _d !== void 0 ? _d : true,
                  gotrue_meta_security: { captcha_token: options2 === null || options2 === void 0 ? void 0 : options2.captchaToken },
                  channel: (_e = options2 === null || options2 === void 0 ? void 0 : options2.channel) !== null && _e !== void 0 ? _e : "sms"
                }
              });
              return { data: { user: null, session: null }, error: error2 };
            }
            throw new AuthInvalidCredentialsError("You must provide either an email or phone number.");
          } catch (error2) {
            if (isAuthError(error2)) {
              return { data: { user: null, session: null }, error: error2 };
            }
            throw error2;
          }
        });
      }
      verifyOtp(params) {
        var _a, _b;
        return __awaiter13(this, void 0, void 0, function* () {
          try {
            if (params.type !== "email_change" && params.type !== "phone_change") {
              yield this._removeSession();
            }
            const { data, error: error2 } = yield _request(this.fetch, "POST", `${this.url}/verify`, {
              headers: this.headers,
              body: Object.assign(Object.assign({}, params), { gotrue_meta_security: { captcha_token: (_a = params.options) === null || _a === void 0 ? void 0 : _a.captchaToken } }),
              redirectTo: (_b = params.options) === null || _b === void 0 ? void 0 : _b.redirectTo,
              xform: _sessionResponse
            });
            if (error2) {
              throw error2;
            }
            if (!data) {
              throw new Error("An error occurred on token verification.");
            }
            const session = data.session;
            const user = data.user;
            if (session === null || session === void 0 ? void 0 : session.access_token) {
              yield this._saveSession(session);
              this._notifyAllSubscribers("SIGNED_IN", session);
            }
            return { data: { user, session }, error: null };
          } catch (error2) {
            if (isAuthError(error2)) {
              return { data: { user: null, session: null }, error: error2 };
            }
            throw error2;
          }
        });
      }
      signInWithSSO(params) {
        var _a, _b, _c;
        return __awaiter13(this, void 0, void 0, function* () {
          try {
            yield this._removeSession();
            return yield _request(this.fetch, "POST", `${this.url}/sso`, {
              body: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, "providerId" in params ? { provider_id: params.providerId } : null), "domain" in params ? { domain: params.domain } : null), { redirect_to: (_b = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo) !== null && _b !== void 0 ? _b : void 0 }), ((_c = params === null || params === void 0 ? void 0 : params.options) === null || _c === void 0 ? void 0 : _c.captchaToken) ? { gotrue_meta_security: { captcha_token: params.options.captchaToken } } : null), { skip_http_redirect: true }),
              headers: this.headers,
              xform: _ssoResponse
            });
          } catch (error2) {
            if (isAuthError(error2)) {
              return { data: null, error: error2 };
            }
            throw error2;
          }
        });
      }
      reauthenticate() {
        return __awaiter13(this, void 0, void 0, function* () {
          try {
            const { data: { session }, error: sessionError } = yield this.getSession();
            if (sessionError)
              throw sessionError;
            if (!session)
              throw new AuthSessionMissingError();
            const { error: error2 } = yield _request(this.fetch, "GET", `${this.url}/reauthenticate`, {
              headers: this.headers,
              jwt: session.access_token
            });
            return { data: { user: null, session: null }, error: error2 };
          } catch (error2) {
            if (isAuthError(error2)) {
              return { data: { user: null, session: null }, error: error2 };
            }
            throw error2;
          }
        });
      }
      resend(credentials) {
        return __awaiter13(this, void 0, void 0, function* () {
          try {
            yield this._removeSession();
            const endpoint = `${this.url}/resend`;
            if ("email" in credentials) {
              const { email, type, options: options2 } = credentials;
              const { error: error2 } = yield _request(this.fetch, "POST", endpoint, {
                headers: this.headers,
                body: {
                  email,
                  type,
                  gotrue_meta_security: { captcha_token: options2 === null || options2 === void 0 ? void 0 : options2.captchaToken }
                }
              });
              return { data: { user: null, session: null }, error: error2 };
            } else if ("phone" in credentials) {
              const { phone, type, options: options2 } = credentials;
              const { error: error2 } = yield _request(this.fetch, "POST", endpoint, {
                headers: this.headers,
                body: {
                  phone,
                  type,
                  gotrue_meta_security: { captcha_token: options2 === null || options2 === void 0 ? void 0 : options2.captchaToken }
                }
              });
              return { data: { user: null, session: null }, error: error2 };
            }
            throw new AuthInvalidCredentialsError("You must provide either an email or phone number and a type");
          } catch (error2) {
            if (isAuthError(error2)) {
              return { data: { user: null, session: null }, error: error2 };
            }
            throw error2;
          }
        });
      }
      getSession() {
        return __awaiter13(this, void 0, void 0, function* () {
          yield this.initializePromise;
          let currentSession = null;
          if (this.persistSession) {
            const maybeSession = yield getItemAsync(this.storage, this.storageKey);
            if (maybeSession !== null) {
              if (this._isValidSession(maybeSession)) {
                currentSession = maybeSession;
              } else {
                yield this._removeSession();
              }
            }
          } else {
            currentSession = this.inMemorySession;
          }
          if (!currentSession) {
            return { data: { session: null }, error: null };
          }
          const hasExpired = currentSession.expires_at ? currentSession.expires_at <= Date.now() / 1e3 : false;
          if (!hasExpired) {
            return { data: { session: currentSession }, error: null };
          }
          const { session, error: error2 } = yield this._callRefreshToken(currentSession.refresh_token);
          if (error2) {
            return { data: { session: null }, error: error2 };
          }
          return { data: { session }, error: null };
        });
      }
      getUser(jwt) {
        var _a, _b;
        return __awaiter13(this, void 0, void 0, function* () {
          try {
            if (!jwt) {
              const { data, error: error2 } = yield this.getSession();
              if (error2) {
                throw error2;
              }
              jwt = (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : void 0;
            }
            return yield _request(this.fetch, "GET", `${this.url}/user`, {
              headers: this.headers,
              jwt,
              xform: _userResponse
            });
          } catch (error2) {
            if (isAuthError(error2)) {
              return { data: { user: null }, error: error2 };
            }
            throw error2;
          }
        });
      }
      updateUser(attributes, options2 = {}) {
        return __awaiter13(this, void 0, void 0, function* () {
          try {
            const { data: sessionData, error: sessionError } = yield this.getSession();
            if (sessionError) {
              throw sessionError;
            }
            if (!sessionData.session) {
              throw new AuthSessionMissingError();
            }
            const session = sessionData.session;
            const { data, error: userError } = yield _request(this.fetch, "PUT", `${this.url}/user`, {
              headers: this.headers,
              redirectTo: options2 === null || options2 === void 0 ? void 0 : options2.emailRedirectTo,
              body: attributes,
              jwt: session.access_token,
              xform: _userResponse
            });
            if (userError)
              throw userError;
            session.user = data.user;
            yield this._saveSession(session);
            this._notifyAllSubscribers("USER_UPDATED", session);
            return { data: { user: session.user }, error: null };
          } catch (error2) {
            if (isAuthError(error2)) {
              return { data: { user: null }, error: error2 };
            }
            throw error2;
          }
        });
      }
      _decodeJWT(jwt) {
        return decodeJWTPayload(jwt);
      }
      setSession(currentSession) {
        return __awaiter13(this, void 0, void 0, function* () {
          try {
            if (!currentSession.access_token || !currentSession.refresh_token) {
              throw new AuthSessionMissingError();
            }
            const timeNow = Date.now() / 1e3;
            let expiresAt2 = timeNow;
            let hasExpired = true;
            let session = null;
            const payload = decodeJWTPayload(currentSession.access_token);
            if (payload.exp) {
              expiresAt2 = payload.exp;
              hasExpired = expiresAt2 <= timeNow;
            }
            if (hasExpired) {
              const { session: refreshedSession, error: error2 } = yield this._callRefreshToken(currentSession.refresh_token);
              if (error2) {
                return { data: { user: null, session: null }, error: error2 };
              }
              if (!refreshedSession) {
                return { data: { user: null, session: null }, error: null };
              }
              session = refreshedSession;
            } else {
              const { data, error: error2 } = yield this.getUser(currentSession.access_token);
              if (error2) {
                throw error2;
              }
              session = {
                access_token: currentSession.access_token,
                refresh_token: currentSession.refresh_token,
                user: data.user,
                token_type: "bearer",
                expires_in: expiresAt2 - timeNow,
                expires_at: expiresAt2
              };
              yield this._saveSession(session);
              this._notifyAllSubscribers("SIGNED_IN", session);
            }
            return { data: { user: session.user, session }, error: null };
          } catch (error2) {
            if (isAuthError(error2)) {
              return { data: { session: null, user: null }, error: error2 };
            }
            throw error2;
          }
        });
      }
      refreshSession(currentSession) {
        var _a;
        return __awaiter13(this, void 0, void 0, function* () {
          try {
            if (!currentSession) {
              const { data, error: error3 } = yield this.getSession();
              if (error3) {
                throw error3;
              }
              currentSession = (_a = data.session) !== null && _a !== void 0 ? _a : void 0;
            }
            if (!(currentSession === null || currentSession === void 0 ? void 0 : currentSession.refresh_token)) {
              throw new AuthSessionMissingError();
            }
            const { session, error: error2 } = yield this._callRefreshToken(currentSession.refresh_token);
            if (error2) {
              return { data: { user: null, session: null }, error: error2 };
            }
            if (!session) {
              return { data: { user: null, session: null }, error: null };
            }
            return { data: { user: session.user, session }, error: null };
          } catch (error2) {
            if (isAuthError(error2)) {
              return { data: { user: null, session: null }, error: error2 };
            }
            throw error2;
          }
        });
      }
      _getSessionFromUrl(isPKCEFlow) {
        return __awaiter13(this, void 0, void 0, function* () {
          try {
            if (!isBrowser())
              throw new AuthImplicitGrantRedirectError("No browser detected.");
            if (this.flowType === "implicit" && !this._isImplicitGrantFlow()) {
              throw new AuthImplicitGrantRedirectError("Not a valid implicit grant flow url.");
            } else if (this.flowType == "pkce" && !isPKCEFlow) {
              throw new AuthPKCEGrantCodeExchangeError("Not a valid PKCE flow url.");
            }
            if (isPKCEFlow) {
              const authCode = getParameterByName("code");
              if (!authCode)
                throw new AuthPKCEGrantCodeExchangeError("No code detected.");
              const { data: data2, error: error3 } = yield this.exchangeCodeForSession(authCode);
              if (error3)
                throw error3;
              if (!data2.session)
                throw new AuthPKCEGrantCodeExchangeError("No session detected.");
              let url = new URL(window.location.href);
              url.searchParams.delete("code");
              window.history.replaceState(window.history.state, "", url.toString());
              return { data: { session: data2.session, redirectType: null }, error: null };
            }
            const error_description = getParameterByName("error_description");
            if (error_description) {
              const error_code = getParameterByName("error_code");
              if (!error_code)
                throw new AuthImplicitGrantRedirectError("No error_code detected.");
              const error3 = getParameterByName("error");
              if (!error3)
                throw new AuthImplicitGrantRedirectError("No error detected.");
              throw new AuthImplicitGrantRedirectError(error_description, { error: error3, code: error_code });
            }
            const provider_token = getParameterByName("provider_token");
            const provider_refresh_token = getParameterByName("provider_refresh_token");
            const access_token = getParameterByName("access_token");
            if (!access_token)
              throw new AuthImplicitGrantRedirectError("No access_token detected.");
            const expires_in = getParameterByName("expires_in");
            if (!expires_in)
              throw new AuthImplicitGrantRedirectError("No expires_in detected.");
            const refresh_token = getParameterByName("refresh_token");
            if (!refresh_token)
              throw new AuthImplicitGrantRedirectError("No refresh_token detected.");
            const token_type = getParameterByName("token_type");
            if (!token_type)
              throw new AuthImplicitGrantRedirectError("No token_type detected.");
            const timeNow = Math.round(Date.now() / 1e3);
            const expires_at = timeNow + parseInt(expires_in);
            const { data, error: error2 } = yield this.getUser(access_token);
            if (error2)
              throw error2;
            const user = data.user;
            const session = {
              provider_token,
              provider_refresh_token,
              access_token,
              expires_in: parseInt(expires_in),
              expires_at,
              refresh_token,
              token_type,
              user
            };
            const redirectType = getParameterByName("type");
            window.location.hash = "";
            return { data: { session, redirectType }, error: null };
          } catch (error2) {
            if (isAuthError(error2)) {
              return { data: { session: null, redirectType: null }, error: error2 };
            }
            throw error2;
          }
        });
      }
      _isImplicitGrantFlow() {
        return isBrowser() && (Boolean(getParameterByName("access_token")) || Boolean(getParameterByName("error_description")));
      }
      _isPKCEFlow() {
        return __awaiter13(this, void 0, void 0, function* () {
          const currentStorageContent = yield getItemAsync(this.storage, `${this.storageKey}-code-verifier`);
          return isBrowser() && Boolean(getParameterByName("code")) && Boolean(currentStorageContent);
        });
      }
      signOut() {
        var _a;
        return __awaiter13(this, void 0, void 0, function* () {
          const { data, error: sessionError } = yield this.getSession();
          if (sessionError) {
            return { error: sessionError };
          }
          const accessToken = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token;
          if (accessToken) {
            const { error: error2 } = yield this.admin.signOut(accessToken);
            if (error2) {
              if (!(isAuthApiError(error2) && (error2.status === 404 || error2.status === 401))) {
                return { error: error2 };
              }
            }
          }
          yield this._removeSession();
          yield removeItemAsync(this.storage, `${this.storageKey}-code-verifier`);
          this._notifyAllSubscribers("SIGNED_OUT", null);
          return { error: null };
        });
      }
      onAuthStateChange(callback) {
        const id = uuid();
        const subscription = {
          id,
          callback,
          unsubscribe: () => {
            this.stateChangeEmitters.delete(id);
          }
        };
        this.stateChangeEmitters.set(id, subscription);
        this.emitInitialSession(id);
        return { data: { subscription } };
      }
      emitInitialSession(id) {
        var _a, _b;
        return __awaiter13(this, void 0, void 0, function* () {
          try {
            const { data: { session }, error: error2 } = yield this.getSession();
            if (error2)
              throw error2;
            (_a = this.stateChangeEmitters.get(id)) === null || _a === void 0 ? void 0 : _a.callback("INITIAL_SESSION", session);
          } catch (err) {
            (_b = this.stateChangeEmitters.get(id)) === null || _b === void 0 ? void 0 : _b.callback("INITIAL_SESSION", null);
            console.error(err);
          }
        });
      }
      resetPasswordForEmail(email, options2 = {}) {
        return __awaiter13(this, void 0, void 0, function* () {
          let codeChallenge = null;
          let codeChallengeMethod = null;
          if (this.flowType === "pkce") {
            const codeVerifier = generatePKCEVerifier();
            yield setItemAsync(this.storage, `${this.storageKey}-code-verifier`, codeVerifier);
            codeChallenge = yield generatePKCEChallenge(codeVerifier);
            codeChallengeMethod = codeVerifier === codeChallenge ? "plain" : "s256";
          }
          try {
            return yield _request(this.fetch, "POST", `${this.url}/recover`, {
              body: {
                email,
                code_challenge: codeChallenge,
                code_challenge_method: codeChallengeMethod,
                gotrue_meta_security: { captcha_token: options2.captchaToken }
              },
              headers: this.headers,
              redirectTo: options2.redirectTo
            });
          } catch (error2) {
            if (isAuthError(error2)) {
              return { data: null, error: error2 };
            }
            throw error2;
          }
        });
      }
      _refreshAccessToken(refreshToken) {
        return __awaiter13(this, void 0, void 0, function* () {
          try {
            const startedAt = Date.now();
            return yield retryable((attempt) => __awaiter13(this, void 0, void 0, function* () {
              yield sleep(attempt * 200);
              return yield _request(this.fetch, "POST", `${this.url}/token?grant_type=refresh_token`, {
                body: { refresh_token: refreshToken },
                headers: this.headers,
                xform: _sessionResponse
              });
            }), (attempt, _2, result) => result && result.error && result.error instanceof AuthRetryableFetchError && Date.now() + (attempt + 1) * 200 - startedAt < AUTO_REFRESH_TICK_DURATION);
          } catch (error2) {
            if (isAuthError(error2)) {
              return { data: { session: null, user: null }, error: error2 };
            }
            throw error2;
          }
        });
      }
      _isValidSession(maybeSession) {
        const isValidSession = typeof maybeSession === "object" && maybeSession !== null && "access_token" in maybeSession && "refresh_token" in maybeSession && "expires_at" in maybeSession;
        return isValidSession;
      }
      _handleProviderSignIn(provider, options2) {
        return __awaiter13(this, void 0, void 0, function* () {
          const url = yield this._getUrlForProvider(provider, {
            redirectTo: options2.redirectTo,
            scopes: options2.scopes,
            queryParams: options2.queryParams
          });
          if (isBrowser() && !options2.skipBrowserRedirect) {
            window.location.assign(url);
          }
          return { data: { provider, url }, error: null };
        });
      }
      _recoverAndRefresh() {
        var _a;
        return __awaiter13(this, void 0, void 0, function* () {
          try {
            const currentSession = yield getItemAsync(this.storage, this.storageKey);
            if (!this._isValidSession(currentSession)) {
              if (currentSession !== null) {
                yield this._removeSession();
              }
              return;
            }
            const timeNow = Math.round(Date.now() / 1e3);
            if (((_a = currentSession.expires_at) !== null && _a !== void 0 ? _a : Infinity) < timeNow + EXPIRY_MARGIN) {
              if (this.autoRefreshToken && currentSession.refresh_token) {
                const { error: error2 } = yield this._callRefreshToken(currentSession.refresh_token);
                if (error2) {
                  console.log(error2.message);
                  yield this._removeSession();
                }
              }
            } else {
              if (this.persistSession) {
                yield this._saveSession(currentSession);
              }
              this._notifyAllSubscribers("SIGNED_IN", currentSession);
            }
          } catch (err) {
            console.error(err);
            return;
          }
        });
      }
      _callRefreshToken(refreshToken) {
        var _a, _b;
        return __awaiter13(this, void 0, void 0, function* () {
          if (this.refreshingDeferred) {
            return this.refreshingDeferred.promise;
          }
          try {
            this.refreshingDeferred = new Deferred();
            if (!refreshToken) {
              throw new AuthSessionMissingError();
            }
            const { data, error: error2 } = yield this._refreshAccessToken(refreshToken);
            if (error2)
              throw error2;
            if (!data.session)
              throw new AuthSessionMissingError();
            yield this._saveSession(data.session);
            this._notifyAllSubscribers("TOKEN_REFRESHED", data.session);
            const result = { session: data.session, error: null };
            this.refreshingDeferred.resolve(result);
            return result;
          } catch (error2) {
            if (isAuthError(error2)) {
              const result = { session: null, error: error2 };
              (_a = this.refreshingDeferred) === null || _a === void 0 ? void 0 : _a.resolve(result);
              return result;
            }
            (_b = this.refreshingDeferred) === null || _b === void 0 ? void 0 : _b.reject(error2);
            throw error2;
          } finally {
            this.refreshingDeferred = null;
          }
        });
      }
      _notifyAllSubscribers(event, session, broadcast = true) {
        if (this.broadcastChannel && broadcast) {
          this.broadcastChannel.postMessage({ event, session });
        }
        this.stateChangeEmitters.forEach((x2) => x2.callback(event, session));
      }
      _saveSession(session) {
        return __awaiter13(this, void 0, void 0, function* () {
          if (!this.persistSession) {
            this.inMemorySession = session;
          }
          if (this.persistSession && session.expires_at) {
            yield this._persistSession(session);
          }
        });
      }
      _persistSession(currentSession) {
        return setItemAsync(this.storage, this.storageKey, currentSession);
      }
      _removeSession() {
        return __awaiter13(this, void 0, void 0, function* () {
          if (this.persistSession) {
            yield removeItemAsync(this.storage, this.storageKey);
          } else {
            this.inMemorySession = null;
          }
        });
      }
      _removeVisibilityChangedCallback() {
        const callback = this.visibilityChangedCallback;
        this.visibilityChangedCallback = null;
        try {
          if (callback && isBrowser() && (window === null || window === void 0 ? void 0 : window.removeEventListener)) {
            window.removeEventListener("visibilitychange", callback);
          }
        } catch (e2) {
          console.error("removing visibilitychange callback failed", e2);
        }
      }
      _startAutoRefresh() {
        return __awaiter13(this, void 0, void 0, function* () {
          yield this._stopAutoRefresh();
          const ticker = setInterval(() => this._autoRefreshTokenTick(), AUTO_REFRESH_TICK_DURATION);
          this.autoRefreshTicker = ticker;
          if (ticker && typeof ticker === "object" && typeof ticker.unref === "function") {
            ticker.unref();
          } else if (typeof Deno !== "undefined" && typeof Deno.unrefTimer === "function") {
            Deno.unrefTimer(ticker);
          }
          yield this._autoRefreshTokenTick();
        });
      }
      _stopAutoRefresh() {
        return __awaiter13(this, void 0, void 0, function* () {
          const ticker = this.autoRefreshTicker;
          this.autoRefreshTicker = null;
          if (ticker) {
            clearInterval(ticker);
          }
        });
      }
      startAutoRefresh() {
        return __awaiter13(this, void 0, void 0, function* () {
          this._removeVisibilityChangedCallback();
          yield this._startAutoRefresh();
        });
      }
      stopAutoRefresh() {
        return __awaiter13(this, void 0, void 0, function* () {
          this._removeVisibilityChangedCallback();
          yield this._stopAutoRefresh();
        });
      }
      _autoRefreshTokenTick() {
        return __awaiter13(this, void 0, void 0, function* () {
          const now2 = Date.now();
          try {
            const { data: { session } } = yield this.getSession();
            if (!session || !session.refresh_token || !session.expires_at) {
              return;
            }
            const expiresInTicks = Math.floor((session.expires_at * 1e3 - now2) / AUTO_REFRESH_TICK_DURATION);
            if (expiresInTicks < AUTO_REFRESH_TICK_THRESHOLD) {
              yield this._callRefreshToken(session.refresh_token);
            }
          } catch (e2) {
            console.error("Auto refresh tick failed with error. This is likely a transient error.", e2);
          }
        });
      }
      _handleVisibilityChange() {
        return __awaiter13(this, void 0, void 0, function* () {
          if (!isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {
            if (this.autoRefreshToken) {
              this.startAutoRefresh();
            }
            return false;
          }
          try {
            this.visibilityChangedCallback = () => __awaiter13(this, void 0, void 0, function* () {
              return yield this._onVisibilityChanged(false);
            });
            window === null || window === void 0 ? void 0 : window.addEventListener("visibilitychange", this.visibilityChangedCallback);
            yield this._onVisibilityChanged(true);
          } catch (error2) {
            console.error("_handleVisibilityChange", error2);
          }
        });
      }
      _onVisibilityChanged(isInitial) {
        return __awaiter13(this, void 0, void 0, function* () {
          if (document.visibilityState === "visible") {
            if (!isInitial) {
              yield this.initializePromise;
              yield this._recoverAndRefresh();
            }
            if (this.autoRefreshToken) {
              this._startAutoRefresh();
            }
          } else if (document.visibilityState === "hidden") {
            if (this.autoRefreshToken) {
              this._stopAutoRefresh();
            }
          }
        });
      }
      _getUrlForProvider(provider, options2) {
        return __awaiter13(this, void 0, void 0, function* () {
          const urlParams = [`provider=${encodeURIComponent(provider)}`];
          if (options2 === null || options2 === void 0 ? void 0 : options2.redirectTo) {
            urlParams.push(`redirect_to=${encodeURIComponent(options2.redirectTo)}`);
          }
          if (options2 === null || options2 === void 0 ? void 0 : options2.scopes) {
            urlParams.push(`scopes=${encodeURIComponent(options2.scopes)}`);
          }
          if (this.flowType === "pkce") {
            const codeVerifier = generatePKCEVerifier();
            yield setItemAsync(this.storage, `${this.storageKey}-code-verifier`, codeVerifier);
            const codeChallenge = yield generatePKCEChallenge(codeVerifier);
            const codeChallengeMethod = codeVerifier === codeChallenge ? "plain" : "s256";
            const flowParams = new URLSearchParams({
              code_challenge: `${encodeURIComponent(codeChallenge)}`,
              code_challenge_method: `${encodeURIComponent(codeChallengeMethod)}`
            });
            urlParams.push(flowParams.toString());
          }
          if (options2 === null || options2 === void 0 ? void 0 : options2.queryParams) {
            const query = new URLSearchParams(options2.queryParams);
            urlParams.push(query.toString());
          }
          return `${this.url}/authorize?${urlParams.join("&")}`;
        });
      }
      _unenroll(params) {
        var _a;
        return __awaiter13(this, void 0, void 0, function* () {
          try {
            const { data: sessionData, error: sessionError } = yield this.getSession();
            if (sessionError) {
              return { data: null, error: sessionError };
            }
            return yield _request(this.fetch, "DELETE", `${this.url}/factors/${params.factorId}`, {
              headers: this.headers,
              jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token
            });
          } catch (error2) {
            if (isAuthError(error2)) {
              return { data: null, error: error2 };
            }
            throw error2;
          }
        });
      }
      _enroll(params) {
        var _a, _b;
        return __awaiter13(this, void 0, void 0, function* () {
          try {
            const { data: sessionData, error: sessionError } = yield this.getSession();
            if (sessionError) {
              return { data: null, error: sessionError };
            }
            const { data, error: error2 } = yield _request(this.fetch, "POST", `${this.url}/factors`, {
              body: {
                friendly_name: params.friendlyName,
                factor_type: params.factorType,
                issuer: params.issuer
              },
              headers: this.headers,
              jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token
            });
            if (error2) {
              return { data: null, error: error2 };
            }
            if ((_b = data === null || data === void 0 ? void 0 : data.totp) === null || _b === void 0 ? void 0 : _b.qr_code) {
              data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`;
            }
            return { data, error: null };
          } catch (error2) {
            if (isAuthError(error2)) {
              return { data: null, error: error2 };
            }
            throw error2;
          }
        });
      }
      _verify(params) {
        var _a;
        return __awaiter13(this, void 0, void 0, function* () {
          try {
            const { data: sessionData, error: sessionError } = yield this.getSession();
            if (sessionError) {
              return { data: null, error: sessionError };
            }
            const { data, error: error2 } = yield _request(this.fetch, "POST", `${this.url}/factors/${params.factorId}/verify`, {
              body: { code: params.code, challenge_id: params.challengeId },
              headers: this.headers,
              jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token
            });
            if (error2) {
              return { data: null, error: error2 };
            }
            yield this._saveSession(Object.assign({ expires_at: Math.round(Date.now() / 1e3) + data.expires_in }, data));
            this._notifyAllSubscribers("MFA_CHALLENGE_VERIFIED", data);
            return { data, error: error2 };
          } catch (error2) {
            if (isAuthError(error2)) {
              return { data: null, error: error2 };
            }
            throw error2;
          }
        });
      }
      _challenge(params) {
        var _a;
        return __awaiter13(this, void 0, void 0, function* () {
          try {
            const { data: sessionData, error: sessionError } = yield this.getSession();
            if (sessionError) {
              return { data: null, error: sessionError };
            }
            return yield _request(this.fetch, "POST", `${this.url}/factors/${params.factorId}/challenge`, {
              headers: this.headers,
              jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token
            });
          } catch (error2) {
            if (isAuthError(error2)) {
              return { data: null, error: error2 };
            }
            throw error2;
          }
        });
      }
      _challengeAndVerify(params) {
        return __awaiter13(this, void 0, void 0, function* () {
          const { data: challengeData, error: challengeError } = yield this._challenge({
            factorId: params.factorId
          });
          if (challengeError) {
            return { data: null, error: challengeError };
          }
          return yield this._verify({
            factorId: params.factorId,
            challengeId: challengeData.id,
            code: params.code
          });
        });
      }
      _listFactors() {
        return __awaiter13(this, void 0, void 0, function* () {
          const { data: { user }, error: userError } = yield this.getUser();
          if (userError) {
            return { data: null, error: userError };
          }
          const factors = (user === null || user === void 0 ? void 0 : user.factors) || [];
          const totp = factors.filter((factor) => factor.factor_type === "totp" && factor.status === "verified");
          return {
            data: {
              all: factors,
              totp
            },
            error: null
          };
        });
      }
      _getAuthenticatorAssuranceLevel() {
        var _a, _b;
        return __awaiter13(this, void 0, void 0, function* () {
          const { data: { session }, error: sessionError } = yield this.getSession();
          if (sessionError) {
            return { data: null, error: sessionError };
          }
          if (!session) {
            return {
              data: { currentLevel: null, nextLevel: null, currentAuthenticationMethods: [] },
              error: null
            };
          }
          const payload = this._decodeJWT(session.access_token);
          let currentLevel = null;
          if (payload.aal) {
            currentLevel = payload.aal;
          }
          let nextLevel = currentLevel;
          const verifiedFactors = (_b = (_a = session.user.factors) === null || _a === void 0 ? void 0 : _a.filter((factor) => factor.status === "verified")) !== null && _b !== void 0 ? _b : [];
          if (verifiedFactors.length > 0) {
            nextLevel = "aal2";
          }
          const currentAuthenticationMethods = payload.amr || [];
          return { data: { currentLevel, nextLevel, currentAuthenticationMethods }, error: null };
        });
      }
    };
  }
});
var init_types3 = __esm({
  "node_modules/@supabase/gotrue-js/dist/module/lib/types.js"() {
  }
});
var init_module5 = __esm({
  "node_modules/@supabase/gotrue-js/dist/module/index.js"() {
    init_GoTrueAdminApi();
    init_GoTrueClient();
    init_types3();
    init_errors3();
  }
});
var SupabaseAuthClient;
var init_SupabaseAuthClient = __esm({
  "node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js"() {
    init_module5();
    SupabaseAuthClient = class extends GoTrueClient {
      constructor(options2) {
        super(options2);
      }
    };
  }
});
var __awaiter14;
var DEFAULT_GLOBAL_OPTIONS;
var DEFAULT_DB_OPTIONS;
var DEFAULT_AUTH_OPTIONS;
var DEFAULT_REALTIME_OPTIONS;
var SupabaseClient;
var init_SupabaseClient = __esm({
  "node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js"() {
    init_module();
    init_module2();
    init_module3();
    init_module4();
    init_constants4();
    init_fetch2();
    init_helpers2();
    init_SupabaseAuthClient();
    __awaiter14 = function(thisArg, _arguments, P2, generator) {
      function adopt(value2) {
        return value2 instanceof P2 ? value2 : new P2(function(resolve) {
          resolve(value2);
        });
      }
      return new (P2 || (P2 = Promise))(function(resolve, reject) {
        function fulfilled(value2) {
          try {
            step(generator.next(value2));
          } catch (e2) {
            reject(e2);
          }
        }
        function rejected(value2) {
          try {
            step(generator["throw"](value2));
          } catch (e2) {
            reject(e2);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    DEFAULT_GLOBAL_OPTIONS = {
      headers: DEFAULT_HEADERS4
    };
    DEFAULT_DB_OPTIONS = {
      schema: "public"
    };
    DEFAULT_AUTH_OPTIONS = {
      autoRefreshToken: true,
      persistSession: true,
      detectSessionInUrl: true,
      flowType: "implicit"
    };
    DEFAULT_REALTIME_OPTIONS = {};
    SupabaseClient = class {
      constructor(supabaseUrl, supabaseKey, options2) {
        var _a, _b, _c, _d, _e, _f, _g, _h;
        this.supabaseUrl = supabaseUrl;
        this.supabaseKey = supabaseKey;
        if (!supabaseUrl)
          throw new Error("supabaseUrl is required.");
        if (!supabaseKey)
          throw new Error("supabaseKey is required.");
        const _supabaseUrl = stripTrailingSlash(supabaseUrl);
        this.realtimeUrl = `${_supabaseUrl}/realtime/v1`.replace(/^http/i, "ws");
        this.authUrl = `${_supabaseUrl}/auth/v1`;
        this.storageUrl = `${_supabaseUrl}/storage/v1`;
        this.functionsUrl = `${_supabaseUrl}/functions/v1`;
        const defaultStorageKey = `sb-${new URL(this.authUrl).hostname.split(".")[0]}-auth-token`;
        const DEFAULTS = {
          db: DEFAULT_DB_OPTIONS,
          realtime: DEFAULT_REALTIME_OPTIONS,
          auth: Object.assign(Object.assign({}, DEFAULT_AUTH_OPTIONS), { storageKey: defaultStorageKey }),
          global: DEFAULT_GLOBAL_OPTIONS
        };
        const settings = applySettingDefaults(options2 !== null && options2 !== void 0 ? options2 : {}, DEFAULTS);
        this.storageKey = (_b = (_a = settings.auth) === null || _a === void 0 ? void 0 : _a.storageKey) !== null && _b !== void 0 ? _b : "";
        this.headers = (_d = (_c = settings.global) === null || _c === void 0 ? void 0 : _c.headers) !== null && _d !== void 0 ? _d : {};
        this.auth = this._initSupabaseAuthClient((_e = settings.auth) !== null && _e !== void 0 ? _e : {}, this.headers, (_f = settings.global) === null || _f === void 0 ? void 0 : _f.fetch);
        this.fetch = fetchWithAuth(supabaseKey, this._getAccessToken.bind(this), (_g = settings.global) === null || _g === void 0 ? void 0 : _g.fetch);
        this.realtime = this._initRealtimeClient(Object.assign({ headers: this.headers }, settings.realtime));
        this.rest = new PostgrestClient(`${_supabaseUrl}/rest/v1`, {
          headers: this.headers,
          schema: (_h = settings.db) === null || _h === void 0 ? void 0 : _h.schema,
          fetch: this.fetch
        });
        this._listenForAuthEvents();
      }
      get functions() {
        return new FunctionsClient(this.functionsUrl, {
          headers: this.headers,
          customFetch: this.fetch
        });
      }
      get storage() {
        return new StorageClient(this.storageUrl, this.headers, this.fetch);
      }
      from(relation) {
        return this.rest.from(relation);
      }
      rpc(fn, args = {}, options2) {
        return this.rest.rpc(fn, args, options2);
      }
      channel(name, opts = { config: {} }) {
        return this.realtime.channel(name, opts);
      }
      getChannels() {
        return this.realtime.getChannels();
      }
      removeChannel(channel) {
        return this.realtime.removeChannel(channel);
      }
      removeAllChannels() {
        return this.realtime.removeAllChannels();
      }
      _getAccessToken() {
        var _a, _b;
        return __awaiter14(this, void 0, void 0, function* () {
          const { data } = yield this.auth.getSession();
          return (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : null;
        });
      }
      _initSupabaseAuthClient({ autoRefreshToken, persistSession, detectSessionInUrl, storage, storageKey, flowType }, headers, fetch2) {
        const authHeaders = {
          Authorization: `Bearer ${this.supabaseKey}`,
          apikey: `${this.supabaseKey}`
        };
        return new SupabaseAuthClient({
          url: this.authUrl,
          headers: Object.assign(Object.assign({}, authHeaders), headers),
          storageKey,
          autoRefreshToken,
          persistSession,
          detectSessionInUrl,
          storage,
          flowType,
          fetch: fetch2
        });
      }
      _initRealtimeClient(options2) {
        return new RealtimeClient(this.realtimeUrl, Object.assign(Object.assign({}, options2), { params: Object.assign({ apikey: this.supabaseKey }, options2 === null || options2 === void 0 ? void 0 : options2.params) }));
      }
      _listenForAuthEvents() {
        let data = this.auth.onAuthStateChange((event, session) => {
          this._handleTokenChanged(event, session === null || session === void 0 ? void 0 : session.access_token, "CLIENT");
        });
        return data;
      }
      _handleTokenChanged(event, token, source) {
        if ((event === "TOKEN_REFRESHED" || event === "SIGNED_IN") && this.changedAccessToken !== token) {
          this.realtime.setAuth(token !== null && token !== void 0 ? token : null);
          this.changedAccessToken = token;
        } else if (event === "SIGNED_OUT") {
          this.realtime.setAuth(this.supabaseKey);
          if (source == "STORAGE")
            this.auth.signOut();
          this.changedAccessToken = void 0;
        }
      }
    };
  }
});
var createClient;
var init_module6 = __esm({
  "node_modules/@supabase/supabase-js/dist/module/index.js"() {
    init_SupabaseClient();
    init_module5();
    init_module3();
    createClient = (supabaseUrl, supabaseKey, options2) => {
      return new SupabaseClient(supabaseUrl, supabaseKey, options2);
    };
  }
});
function parseSupabaseCookie(str) {
  if (!str) {
    return null;
  }
  try {
    const session = JSON.parse(str);
    if (!session) {
      return null;
    }
    if (session.constructor.name === "Object") {
      return session;
    }
    if (session.constructor.name !== "Array") {
      throw new Error(`Unexpected format: ${session.constructor.name}`);
    }
    const [_header, payloadStr, _signature] = session[0].split(".");
    const payload = base64url_exports2.decode(payloadStr);
    const decoder2 = new TextDecoder();
    const { exp, sub, ...user } = JSON.parse(decoder2.decode(payload));
    return {
      expires_at: exp,
      expires_in: exp - Math.round(Date.now() / 1e3),
      token_type: "bearer",
      access_token: session[0],
      refresh_token: session[1],
      provider_token: session[2],
      provider_refresh_token: session[3],
      user: {
        id: sub,
        factors: session[4],
        ...user
      }
    };
  } catch (err) {
    console.warn("Failed to parse cookie string:", err);
    return null;
  }
}
function stringifySupabaseSession(session) {
  var _a;
  return JSON.stringify([
    session.access_token,
    session.refresh_token,
    session.provider_token,
    session.provider_refresh_token,
    ((_a = session.user) == null ? void 0 : _a.factors) ?? null
  ]);
}
function isBrowser2() {
  return typeof window !== "undefined" && typeof window.document !== "undefined";
}
function createSupabaseClient(supabaseUrl, supabaseKey, options2) {
  var _a;
  const bowser = isBrowser2();
  return createClient(supabaseUrl, supabaseKey, {
    ...options2,
    auth: {
      flowType: "pkce",
      autoRefreshToken: bowser,
      detectSessionInUrl: bowser,
      persistSession: true,
      storage: options2.auth.storage,
      ...((_a = options2.auth) == null ? void 0 : _a.storageKey) ? {
        storageKey: options2.auth.storageKey
      } : {}
    }
  });
}
var __create2;
var __defProp2;
var __getOwnPropDesc2;
var __getOwnPropNames2;
var __getProtoOf2;
var __hasOwnProp2;
var __commonJS2;
var __copyProps2;
var __toESM2;
var require_cookie;
var import_cookie2;
var import_cookie;
var DEFAULT_COOKIE_OPTIONS;
var CookieAuthStorageAdapter;
var BrowserCookieAuthStorageAdapter;
var export_parseCookies;
var export_serializeCookie;
var init_dist = __esm({
  "node_modules/@supabase/auth-helpers-shared/dist/index.mjs"() {
    init_browser();
    init_module6();
    __create2 = Object.create;
    __defProp2 = Object.defineProperty;
    __getOwnPropDesc2 = Object.getOwnPropertyDescriptor;
    __getOwnPropNames2 = Object.getOwnPropertyNames;
    __getProtoOf2 = Object.getPrototypeOf;
    __hasOwnProp2 = Object.prototype.hasOwnProperty;
    __commonJS2 = (cb, mod) => function __require() {
      return mod || (0, cb[__getOwnPropNames2(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
    };
    __copyProps2 = (to, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key2 of __getOwnPropNames2(from))
          if (!__hasOwnProp2.call(to, key2) && key2 !== except)
            __defProp2(to, key2, { get: () => from[key2], enumerable: !(desc = __getOwnPropDesc2(from, key2)) || desc.enumerable });
      }
      return to;
    };
    __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
      isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: true }) : target,
      mod
    ));
    require_cookie = __commonJS2({
      "../../node_modules/.pnpm/cookie@0.5.0/node_modules/cookie/index.js"(exports) {
        "use strict";
        exports.parse = parse3;
        exports.serialize = serialize3;
        var __toString = Object.prototype.toString;
        var fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
        function parse3(str, options2) {
          if (typeof str !== "string") {
            throw new TypeError("argument str must be a string");
          }
          var obj = {};
          var opt = options2 || {};
          var dec = opt.decode || decode3;
          var index28 = 0;
          while (index28 < str.length) {
            var eqIdx = str.indexOf("=", index28);
            if (eqIdx === -1) {
              break;
            }
            var endIdx = str.indexOf(";", index28);
            if (endIdx === -1) {
              endIdx = str.length;
            } else if (endIdx < eqIdx) {
              index28 = str.lastIndexOf(";", eqIdx - 1) + 1;
              continue;
            }
            var key2 = str.slice(index28, eqIdx).trim();
            if (void 0 === obj[key2]) {
              var val = str.slice(eqIdx + 1, endIdx).trim();
              if (val.charCodeAt(0) === 34) {
                val = val.slice(1, -1);
              }
              obj[key2] = tryDecode(val, dec);
            }
            index28 = endIdx + 1;
          }
          return obj;
        }
        function serialize3(name, val, options2) {
          var opt = options2 || {};
          var enc = opt.encode || encode4;
          if (typeof enc !== "function") {
            throw new TypeError("option encode is invalid");
          }
          if (!fieldContentRegExp.test(name)) {
            throw new TypeError("argument name is invalid");
          }
          var value2 = enc(val);
          if (value2 && !fieldContentRegExp.test(value2)) {
            throw new TypeError("argument val is invalid");
          }
          var str = name + "=" + value2;
          if (null != opt.maxAge) {
            var maxAge = opt.maxAge - 0;
            if (isNaN(maxAge) || !isFinite(maxAge)) {
              throw new TypeError("option maxAge is invalid");
            }
            str += "; Max-Age=" + Math.floor(maxAge);
          }
          if (opt.domain) {
            if (!fieldContentRegExp.test(opt.domain)) {
              throw new TypeError("option domain is invalid");
            }
            str += "; Domain=" + opt.domain;
          }
          if (opt.path) {
            if (!fieldContentRegExp.test(opt.path)) {
              throw new TypeError("option path is invalid");
            }
            str += "; Path=" + opt.path;
          }
          if (opt.expires) {
            var expires = opt.expires;
            if (!isDate(expires) || isNaN(expires.valueOf())) {
              throw new TypeError("option expires is invalid");
            }
            str += "; Expires=" + expires.toUTCString();
          }
          if (opt.httpOnly) {
            str += "; HttpOnly";
          }
          if (opt.secure) {
            str += "; Secure";
          }
          if (opt.priority) {
            var priority = typeof opt.priority === "string" ? opt.priority.toLowerCase() : opt.priority;
            switch (priority) {
              case "low":
                str += "; Priority=Low";
                break;
              case "medium":
                str += "; Priority=Medium";
                break;
              case "high":
                str += "; Priority=High";
                break;
              default:
                throw new TypeError("option priority is invalid");
            }
          }
          if (opt.sameSite) {
            var sameSite = typeof opt.sameSite === "string" ? opt.sameSite.toLowerCase() : opt.sameSite;
            switch (sameSite) {
              case true:
                str += "; SameSite=Strict";
                break;
              case "lax":
                str += "; SameSite=Lax";
                break;
              case "strict":
                str += "; SameSite=Strict";
                break;
              case "none":
                str += "; SameSite=None";
                break;
              default:
                throw new TypeError("option sameSite is invalid");
            }
          }
          return str;
        }
        function decode3(str) {
          return str.indexOf("%") !== -1 ? decodeURIComponent(str) : str;
        }
        function encode4(val) {
          return encodeURIComponent(val);
        }
        function isDate(val) {
          return __toString.call(val) === "[object Date]" || val instanceof Date;
        }
        function tryDecode(str, decode22) {
          try {
            return decode22(str);
          } catch (e2) {
            return str;
          }
        }
      }
    });
    import_cookie2 = __toESM2(require_cookie());
    import_cookie = __toESM2(require_cookie());
    DEFAULT_COOKIE_OPTIONS = {
      path: "/",
      maxAge: 60 * 60 * 24 * 365 * 1e3
    };
    CookieAuthStorageAdapter = class {
      constructor(cookieOptions) {
        this.cookieOptions = {
          ...DEFAULT_COOKIE_OPTIONS,
          ...cookieOptions
        };
      }
      getItem(key2) {
        const value2 = this.getCookie(key2);
        if (!value2)
          return null;
        if (key2.endsWith("-code-verifier")) {
          return value2;
        }
        return JSON.stringify(parseSupabaseCookie(value2));
      }
      setItem(key2, value2) {
        if (key2.endsWith("-code-verifier")) {
          this.setCookie(key2, value2);
          return;
        }
        let session = JSON.parse(value2);
        const sessionStr = stringifySupabaseSession(session);
        this.setCookie(key2, sessionStr);
      }
      removeItem(key2) {
        this.deleteCookie(key2);
      }
    };
    BrowserCookieAuthStorageAdapter = class extends CookieAuthStorageAdapter {
      constructor(cookieOptions) {
        super(cookieOptions);
      }
      getCookie(name) {
        if (!isBrowser2())
          return null;
        const cookies = (0, import_cookie2.parse)(document.cookie);
        return cookies[name];
      }
      setCookie(name, value2) {
        if (!isBrowser2())
          return null;
        document.cookie = (0, import_cookie2.serialize)(name, value2, {
          ...this.cookieOptions,
          httpOnly: false
        });
      }
      deleteCookie(name) {
        if (!isBrowser2())
          return null;
        document.cookie = (0, import_cookie2.serialize)(name, "", {
          ...this.cookieOptions,
          maxAge: 0,
          httpOnly: false
        });
      }
    };
    export_parseCookies = import_cookie.parse;
    export_serializeCookie = import_cookie.serialize;
  }
});
function createSupabaseLoadClient({
  supabaseUrl,
  supabaseKey,
  event,
  serverSession,
  options: options2,
  cookieOptions
}) {
  var _a;
  const browser2 = isBrowser2();
  if (browser2 && cachedBrowserClient) {
    return cachedBrowserClient;
  }
  const client = createSupabaseClient(supabaseUrl, supabaseKey, {
    ...options2,
    global: {
      fetch: event.fetch,
      ...options2 == null ? void 0 : options2.global,
      headers: {
        ...(_a = options2 == null ? void 0 : options2.global) == null ? void 0 : _a.headers,
        "X-Client-Info": `${"@supabase/auth-helpers-sveltekit"}@${"0.10.1"}`
      }
    },
    auth: {
      storageKey: cookieOptions == null ? void 0 : cookieOptions.name,
      storage: new SvelteKitLoadAuthStorageAdapter(serverSession, cookieOptions)
    }
  });
  if (browser2) {
    cachedBrowserClient = client;
  }
  return client;
}
function createSupabaseServerClient({
  supabaseUrl,
  supabaseKey,
  event,
  options: options2,
  cookieOptions,
  expiryMargin
}) {
  var _a;
  const client = createSupabaseClient(supabaseUrl, supabaseKey, {
    ...options2,
    global: {
      ...options2 == null ? void 0 : options2.global,
      headers: {
        ...(_a = options2 == null ? void 0 : options2.global) == null ? void 0 : _a.headers,
        "X-Client-Info": `${"@supabase/auth-helpers-sveltekit"}@${"0.10.1"}`
      }
    },
    auth: {
      storageKey: cookieOptions == null ? void 0 : cookieOptions.name,
      storage: new SvelteKitServerAuthStorageAdapter(event, cookieOptions, expiryMargin)
    }
  });
  return client;
}
var SvelteKitLoadAuthStorageAdapter;
var cachedBrowserClient;
var SvelteKitServerAuthStorageAdapter;
var init_dist2 = __esm({
  "node_modules/@supabase/auth-helpers-sveltekit/dist/index.js"() {
    init_dist();
    init_dist();
    init_dist();
    init_dist();
    SvelteKitLoadAuthStorageAdapter = class extends BrowserCookieAuthStorageAdapter {
      constructor(serverSession = null, cookieOptions) {
        super(cookieOptions);
        this.serverSession = serverSession;
      }
      getItem(key2) {
        if (!isBrowser2()) {
          return JSON.stringify(this.serverSession);
        }
        return super.getItem(key2);
      }
    };
    SvelteKitServerAuthStorageAdapter = class extends CookieAuthStorageAdapter {
      constructor(event, cookieOptions, expiryMargin = 60) {
        super(cookieOptions);
        this.event = event;
        this.expiryMargin = expiryMargin;
        this.isInitialDelete = true;
        this.currentSession = null;
      }
      getCookie(name) {
        return this.event.cookies.get(name);
      }
      setCookie(name, value2) {
        this.event.cookies.set(name, value2, {
          httpOnly: false,
          ...this.cookieOptions
        });
      }
      deleteCookie(name) {
        this.event.cookies.delete(name, {
          httpOnly: false,
          ...this.cookieOptions
        });
      }
      async getItem(key2) {
        const sessionStr = await super.getItem(key2);
        if (!sessionStr) {
          this.currentSession = null;
          return null;
        }
        const session = JSON.parse(sessionStr);
        this.currentSession = session;
        if (session == null ? void 0 : session.expires_at) {
          session.expires_at -= this.expiryMargin;
        }
        return JSON.stringify(session);
      }
      removeItem(key2) {
        var _a;
        if (this.isInitialDelete && ((_a = this.currentSession) == null ? void 0 : _a.expires_at)) {
          const now2 = Math.round(Date.now() / 1e3);
          if (this.currentSession.expires_at < now2 + 10) {
            this.isInitialDelete = false;
            return;
          }
        }
        super.removeItem(key2);
      }
    };
  }
});
var hooks_server_exports = {};
__export(hooks_server_exports, {
  handle: () => handle
});
var handle;
var init_hooks_server = __esm({
  ".svelte-kit/output/server/chunks/hooks.server.js"() {
    init_public();
    init_dist2();
    handle = async ({ event, resolve }) => {
      event.locals.supabase = createSupabaseServerClient({
        supabaseUrl: PUBLIC_SUPABASE_URL,
        supabaseKey: PUBLIC_SUPABASE_ANON_KEY,
        event
      });
      event.locals.getSession = async () => {
        const {
          data: { session }
        } = await event.locals.supabase.auth.getSession();
        return session;
      };
      return resolve(event, {
        filterSerializedResponseHeaders(name) {
          return name === "content-range";
        }
      });
    };
  }
});
function error(status, body) {
  if (isNaN(status) || status < 400 || status > 599) {
    throw new Error(`HTTP error status codes must be between 400 and 599 \u2014 ${status} is invalid`);
  }
  return new HttpError(status, body);
}
function redirect(status, location2) {
  if (isNaN(status) || status < 300 || status > 308) {
    throw new Error("Invalid status code");
  }
  return new Redirect(status, location2);
}
function json(data, init2) {
  const body = JSON.stringify(data);
  const headers = new Headers(init2?.headers);
  if (!headers.has("content-length")) {
    headers.set("content-length", encoder2.encode(body).byteLength.toString());
  }
  if (!headers.has("content-type")) {
    headers.set("content-type", "application/json");
  }
  return new Response(body, {
    ...init2,
    headers
  });
}
function text(body, init2) {
  const headers = new Headers(init2?.headers);
  if (!headers.has("content-length")) {
    headers.set("content-length", encoder2.encode(body).byteLength.toString());
  }
  return new Response(body, {
    ...init2,
    headers
  });
}
var HttpError;
var Redirect;
var ActionFailure;
var encoder2;
var init_chunks = __esm({
  ".svelte-kit/output/server/chunks/index.js"() {
    HttpError = class {
      constructor(status, body) {
        this.status = status;
        if (typeof body === "string") {
          this.body = { message: body };
        } else if (body) {
          this.body = body;
        } else {
          this.body = { message: `Error: ${status}` };
        }
      }
      toString() {
        return JSON.stringify(this.body);
      }
    };
    Redirect = class {
      constructor(status, location2) {
        this.status = status;
        this.location = location2;
      }
    };
    ActionFailure = class {
      constructor(status, data) {
        this.status = status;
        this.data = data;
      }
    };
    encoder2 = new TextEncoder();
  }
});
function is_primitive(thing) {
  return Object(thing) !== thing;
}
function is_plain_object(thing) {
  const proto = Object.getPrototypeOf(thing);
  return proto === Object.prototype || proto === null || Object.getOwnPropertyNames(proto).sort().join("\0") === object_proto_names;
}
function get_type(thing) {
  return Object.prototype.toString.call(thing).slice(8, -1);
}
function get_escaped_char(char) {
  switch (char) {
    case '"':
      return '\\"';
    case "<":
      return "\\u003C";
    case "\\":
      return "\\\\";
    case "\n":
      return "\\n";
    case "\r":
      return "\\r";
    case "	":
      return "\\t";
    case "\b":
      return "\\b";
    case "\f":
      return "\\f";
    case "\u2028":
      return "\\u2028";
    case "\u2029":
      return "\\u2029";
    default:
      return char < " " ? `\\u${char.charCodeAt(0).toString(16).padStart(4, "0")}` : "";
  }
}
function stringify_string(str) {
  let result = "";
  let last_pos = 0;
  const len = str.length;
  for (let i2 = 0; i2 < len; i2 += 1) {
    const char = str[i2];
    const replacement = get_escaped_char(char);
    if (replacement) {
      result += str.slice(last_pos, i2) + replacement;
      last_pos = i2 + 1;
    }
  }
  return `"${last_pos === 0 ? str : result + str.slice(last_pos)}"`;
}
var escaped;
var DevalueError;
var object_proto_names;
var init_utils = __esm({
  "node_modules/devalue/src/utils.js"() {
    escaped = {
      "<": "\\u003C",
      "\\": "\\\\",
      "\b": "\\b",
      "\f": "\\f",
      "\n": "\\n",
      "\r": "\\r",
      "	": "\\t",
      "\u2028": "\\u2028",
      "\u2029": "\\u2029"
    };
    DevalueError = class extends Error {
      constructor(message, keys) {
        super(message);
        this.name = "DevalueError";
        this.path = keys.join("");
      }
    };
    object_proto_names = /* @__PURE__ */ Object.getOwnPropertyNames(
      Object.prototype
    ).sort().join("\0");
  }
});
function uneval(value2, replacer) {
  const counts = /* @__PURE__ */ new Map();
  const keys = [];
  const custom = /* @__PURE__ */ new Map();
  function walk(thing) {
    if (typeof thing === "function") {
      throw new DevalueError(`Cannot stringify a function`, keys);
    }
    if (!is_primitive(thing)) {
      if (counts.has(thing)) {
        counts.set(thing, counts.get(thing) + 1);
        return;
      }
      counts.set(thing, 1);
      if (replacer) {
        const str2 = replacer(thing);
        if (typeof str2 === "string") {
          custom.set(thing, str2);
          return;
        }
      }
      const type = get_type(thing);
      switch (type) {
        case "Number":
        case "BigInt":
        case "String":
        case "Boolean":
        case "Date":
        case "RegExp":
          return;
        case "Array":
          thing.forEach((value3, i2) => {
            keys.push(`[${i2}]`);
            walk(value3);
            keys.pop();
          });
          break;
        case "Set":
          Array.from(thing).forEach(walk);
          break;
        case "Map":
          for (const [key2, value3] of thing) {
            keys.push(
              `.get(${is_primitive(key2) ? stringify_primitive(key2) : "..."})`
            );
            walk(value3);
            keys.pop();
          }
          break;
        default:
          if (!is_plain_object(thing)) {
            throw new DevalueError(
              `Cannot stringify arbitrary non-POJOs`,
              keys
            );
          }
          if (Object.getOwnPropertySymbols(thing).length > 0) {
            throw new DevalueError(
              `Cannot stringify POJOs with symbolic keys`,
              keys
            );
          }
          for (const key2 in thing) {
            keys.push(`.${key2}`);
            walk(thing[key2]);
            keys.pop();
          }
      }
    }
  }
  walk(value2);
  const names = /* @__PURE__ */ new Map();
  Array.from(counts).filter((entry) => entry[1] > 1).sort((a2, b2) => b2[1] - a2[1]).forEach((entry, i2) => {
    names.set(entry[0], get_name(i2));
  });
  function stringify2(thing) {
    if (names.has(thing)) {
      return names.get(thing);
    }
    if (is_primitive(thing)) {
      return stringify_primitive(thing);
    }
    if (custom.has(thing)) {
      return custom.get(thing);
    }
    const type = get_type(thing);
    switch (type) {
      case "Number":
      case "String":
      case "Boolean":
        return `Object(${stringify2(thing.valueOf())})`;
      case "RegExp":
        return `new RegExp(${stringify_string(thing.source)}, "${thing.flags}")`;
      case "Date":
        return `new Date(${thing.getTime()})`;
      case "Array":
        const members = thing.map(
          (v2, i2) => i2 in thing ? stringify2(v2) : ""
        );
        const tail = thing.length === 0 || thing.length - 1 in thing ? "" : ",";
        return `[${members.join(",")}${tail}]`;
      case "Set":
      case "Map":
        return `new ${type}([${Array.from(thing).map(stringify2).join(",")}])`;
      default:
        const obj = `{${Object.keys(thing).map((key2) => `${safe_key(key2)}:${stringify2(thing[key2])}`).join(",")}}`;
        const proto = Object.getPrototypeOf(thing);
        if (proto === null) {
          return Object.keys(thing).length > 0 ? `Object.assign(Object.create(null),${obj})` : `Object.create(null)`;
        }
        return obj;
    }
  }
  const str = stringify2(value2);
  if (names.size) {
    const params = [];
    const statements = [];
    const values = [];
    names.forEach((name, thing) => {
      params.push(name);
      if (custom.has(thing)) {
        values.push(
          custom.get(thing)
        );
        return;
      }
      if (is_primitive(thing)) {
        values.push(stringify_primitive(thing));
        return;
      }
      const type = get_type(thing);
      switch (type) {
        case "Number":
        case "String":
        case "Boolean":
          values.push(`Object(${stringify2(thing.valueOf())})`);
          break;
        case "RegExp":
          values.push(thing.toString());
          break;
        case "Date":
          values.push(`new Date(${thing.getTime()})`);
          break;
        case "Array":
          values.push(`Array(${thing.length})`);
          thing.forEach((v2, i2) => {
            statements.push(`${name}[${i2}]=${stringify2(v2)}`);
          });
          break;
        case "Set":
          values.push(`new Set`);
          statements.push(
            `${name}.${Array.from(thing).map((v2) => `add(${stringify2(v2)})`).join(".")}`
          );
          break;
        case "Map":
          values.push(`new Map`);
          statements.push(
            `${name}.${Array.from(thing).map(([k2, v2]) => `set(${stringify2(k2)}, ${stringify2(v2)})`).join(".")}`
          );
          break;
        default:
          values.push(
            Object.getPrototypeOf(thing) === null ? "Object.create(null)" : "{}"
          );
          Object.keys(thing).forEach((key2) => {
            statements.push(
              `${name}${safe_prop(key2)}=${stringify2(thing[key2])}`
            );
          });
      }
    });
    statements.push(`return ${str}`);
    return `(function(${params.join(",")}){${statements.join(
      ";"
    )}}(${values.join(",")}))`;
  } else {
    return str;
  }
}
function get_name(num) {
  let name = "";
  do {
    name = chars[num % chars.length] + name;
    num = ~~(num / chars.length) - 1;
  } while (num >= 0);
  return reserved.test(name) ? `${name}0` : name;
}
function escape_unsafe_char(c2) {
  return escaped[c2] || c2;
}
function escape_unsafe_chars(str) {
  return str.replace(unsafe_chars, escape_unsafe_char);
}
function safe_key(key2) {
  return /^[_$a-zA-Z][_$a-zA-Z0-9]*$/.test(key2) ? key2 : escape_unsafe_chars(JSON.stringify(key2));
}
function safe_prop(key2) {
  return /^[_$a-zA-Z][_$a-zA-Z0-9]*$/.test(key2) ? `.${key2}` : `[${escape_unsafe_chars(JSON.stringify(key2))}]`;
}
function stringify_primitive(thing) {
  if (typeof thing === "string")
    return stringify_string(thing);
  if (thing === void 0)
    return "void 0";
  if (thing === 0 && 1 / thing < 0)
    return "-0";
  const str = String(thing);
  if (typeof thing === "number")
    return str.replace(/^(-)?0\./, "$1.");
  if (typeof thing === "bigint")
    return thing + "n";
  return str;
}
var chars;
var unsafe_chars;
var reserved;
var init_uneval = __esm({
  "node_modules/devalue/src/uneval.js"() {
    init_utils();
    chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_$";
    unsafe_chars = /[<\b\f\n\r\t\0\u2028\u2029]/g;
    reserved = /^(?:do|if|in|for|int|let|new|try|var|byte|case|char|else|enum|goto|long|this|void|with|await|break|catch|class|const|final|float|short|super|throw|while|yield|delete|double|export|import|native|return|switch|throws|typeof|boolean|default|extends|finally|package|private|abstract|continue|debugger|function|volatile|interface|protected|transient|implements|instanceof|synchronized)$/;
  }
});
var UNDEFINED;
var HOLE;
var NAN;
var POSITIVE_INFINITY;
var NEGATIVE_INFINITY;
var NEGATIVE_ZERO;
var init_constants6 = __esm({
  "node_modules/devalue/src/constants.js"() {
    UNDEFINED = -1;
    HOLE = -2;
    NAN = -3;
    POSITIVE_INFINITY = -4;
    NEGATIVE_INFINITY = -5;
    NEGATIVE_ZERO = -6;
  }
});
var init_parse = __esm({
  "node_modules/devalue/src/parse.js"() {
    init_constants6();
  }
});
function stringify(value2, reducers) {
  const stringified = [];
  const indexes = /* @__PURE__ */ new Map();
  const custom = [];
  for (const key2 in reducers) {
    custom.push({ key: key2, fn: reducers[key2] });
  }
  const keys = [];
  let p2 = 0;
  function flatten(thing) {
    if (typeof thing === "function") {
      throw new DevalueError(`Cannot stringify a function`, keys);
    }
    if (indexes.has(thing))
      return indexes.get(thing);
    if (thing === void 0)
      return UNDEFINED;
    if (Number.isNaN(thing))
      return NAN;
    if (thing === Infinity)
      return POSITIVE_INFINITY;
    if (thing === -Infinity)
      return NEGATIVE_INFINITY;
    if (thing === 0 && 1 / thing < 0)
      return NEGATIVE_ZERO;
    const index29 = p2++;
    indexes.set(thing, index29);
    for (const { key: key2, fn } of custom) {
      const value3 = fn(thing);
      if (value3) {
        stringified[index29] = `["${key2}",${flatten(value3)}]`;
        return index29;
      }
    }
    let str = "";
    if (is_primitive(thing)) {
      str = stringify_primitive2(thing);
    } else {
      const type = get_type(thing);
      switch (type) {
        case "Number":
        case "String":
        case "Boolean":
          str = `["Object",${stringify_primitive2(thing)}]`;
          break;
        case "BigInt":
          str = `["BigInt",${thing}]`;
          break;
        case "Date":
          str = `["Date","${thing.toISOString()}"]`;
          break;
        case "RegExp":
          const { source, flags } = thing;
          str = flags ? `["RegExp",${stringify_string(source)},"${flags}"]` : `["RegExp",${stringify_string(source)}]`;
          break;
        case "Array":
          str = "[";
          for (let i2 = 0; i2 < thing.length; i2 += 1) {
            if (i2 > 0)
              str += ",";
            if (i2 in thing) {
              keys.push(`[${i2}]`);
              str += flatten(thing[i2]);
              keys.pop();
            } else {
              str += HOLE;
            }
          }
          str += "]";
          break;
        case "Set":
          str = '["Set"';
          for (const value3 of thing) {
            str += `,${flatten(value3)}`;
          }
          str += "]";
          break;
        case "Map":
          str = '["Map"';
          for (const [key2, value3] of thing) {
            keys.push(
              `.get(${is_primitive(key2) ? stringify_primitive2(key2) : "..."})`
            );
            str += `,${flatten(key2)},${flatten(value3)}`;
          }
          str += "]";
          break;
        default:
          if (!is_plain_object(thing)) {
            throw new DevalueError(
              `Cannot stringify arbitrary non-POJOs`,
              keys
            );
          }
          if (Object.getOwnPropertySymbols(thing).length > 0) {
            throw new DevalueError(
              `Cannot stringify POJOs with symbolic keys`,
              keys
            );
          }
          if (Object.getPrototypeOf(thing) === null) {
            str = '["null"';
            for (const key2 in thing) {
              keys.push(`.${key2}`);
              str += `,${stringify_string(key2)},${flatten(thing[key2])}`;
              keys.pop();
            }
            str += "]";
          } else {
            str = "{";
            let started = false;
            for (const key2 in thing) {
              if (started)
                str += ",";
              started = true;
              keys.push(`.${key2}`);
              str += `${stringify_string(key2)}:${flatten(thing[key2])}`;
              keys.pop();
            }
            str += "}";
          }
      }
    }
    stringified[index29] = str;
    return index29;
  }
  const index28 = flatten(value2);
  if (index28 < 0)
    return `${index28}`;
  return `[${stringified.join(",")}]`;
}
function stringify_primitive2(thing) {
  const type = typeof thing;
  if (type === "string")
    return stringify_string(thing);
  if (thing instanceof String)
    return stringify_string(thing.toString());
  if (thing === void 0)
    return UNDEFINED.toString();
  if (thing === 0 && 1 / thing < 0)
    return NEGATIVE_ZERO.toString();
  if (type === "bigint")
    return `["BigInt","${thing}"]`;
  return String(thing);
}
var init_stringify = __esm({
  "node_modules/devalue/src/stringify.js"() {
    init_utils();
    init_constants6();
  }
});
var init_devalue = __esm({
  "node_modules/devalue/index.js"() {
    init_uneval();
    init_parse();
    init_stringify();
  }
});
function readable(value2, start) {
  return {
    subscribe: writable(value2, start).subscribe
  };
}
function writable(value2, start = noop) {
  let stop;
  const subscribers = /* @__PURE__ */ new Set();
  function set(new_value) {
    if (safe_not_equal(value2, new_value)) {
      value2 = new_value;
      if (stop) {
        const run_queue = !subscriber_queue.length;
        for (const subscriber of subscribers) {
          subscriber[1]();
          subscriber_queue.push(subscriber, value2);
        }
        if (run_queue) {
          for (let i2 = 0; i2 < subscriber_queue.length; i2 += 2) {
            subscriber_queue[i2][0](subscriber_queue[i2 + 1]);
          }
          subscriber_queue.length = 0;
        }
      }
    }
  }
  function update2(fn) {
    set(fn(value2));
  }
  function subscribe2(run2, invalidate = noop) {
    const subscriber = [run2, invalidate];
    subscribers.add(subscriber);
    if (subscribers.size === 1) {
      stop = start(set) || noop;
    }
    run2(value2);
    return () => {
      subscribers.delete(subscriber);
      if (subscribers.size === 0 && stop) {
        stop();
        stop = null;
      }
    };
  }
  return { set, update: update2, subscribe: subscribe2 };
}
function derived(stores, fn, initial_value) {
  const single = !Array.isArray(stores);
  const stores_array = single ? [stores] : stores;
  const auto = fn.length < 2;
  return readable(initial_value, (set) => {
    let started = false;
    const values = [];
    let pending = 0;
    let cleanup = noop;
    const sync = () => {
      if (pending) {
        return;
      }
      cleanup();
      const result = fn(single ? values[0] : values, set);
      if (auto) {
        set(result);
      } else {
        cleanup = is_function(result) ? result : noop;
      }
    };
    const unsubscribers = stores_array.map((store, i2) => subscribe(store, (value2) => {
      values[i2] = value2;
      pending &= ~(1 << i2);
      if (started) {
        sync();
      }
    }, () => {
      pending |= 1 << i2;
    }));
    started = true;
    sync();
    return function stop() {
      run_all(unsubscribers);
      cleanup();
      started = false;
    };
  });
}
var subscriber_queue;
var init_index3 = __esm({
  ".svelte-kit/output/server/chunks/index3.js"() {
    init_index2();
    subscriber_queue = [];
  }
});
var require_cookie2 = __commonJS({
  "node_modules/cookie/index.js"(exports) {
    "use strict";
    exports.parse = parse3;
    exports.serialize = serialize2;
    var __toString = Object.prototype.toString;
    var fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
    function parse3(str, options2) {
      if (typeof str !== "string") {
        throw new TypeError("argument str must be a string");
      }
      var obj = {};
      var opt = options2 || {};
      var dec = opt.decode || decode3;
      var index28 = 0;
      while (index28 < str.length) {
        var eqIdx = str.indexOf("=", index28);
        if (eqIdx === -1) {
          break;
        }
        var endIdx = str.indexOf(";", index28);
        if (endIdx === -1) {
          endIdx = str.length;
        } else if (endIdx < eqIdx) {
          index28 = str.lastIndexOf(";", eqIdx - 1) + 1;
          continue;
        }
        var key2 = str.slice(index28, eqIdx).trim();
        if (void 0 === obj[key2]) {
          var val = str.slice(eqIdx + 1, endIdx).trim();
          if (val.charCodeAt(0) === 34) {
            val = val.slice(1, -1);
          }
          obj[key2] = tryDecode(val, dec);
        }
        index28 = endIdx + 1;
      }
      return obj;
    }
    function serialize2(name, val, options2) {
      var opt = options2 || {};
      var enc = opt.encode || encode4;
      if (typeof enc !== "function") {
        throw new TypeError("option encode is invalid");
      }
      if (!fieldContentRegExp.test(name)) {
        throw new TypeError("argument name is invalid");
      }
      var value2 = enc(val);
      if (value2 && !fieldContentRegExp.test(value2)) {
        throw new TypeError("argument val is invalid");
      }
      var str = name + "=" + value2;
      if (null != opt.maxAge) {
        var maxAge = opt.maxAge - 0;
        if (isNaN(maxAge) || !isFinite(maxAge)) {
          throw new TypeError("option maxAge is invalid");
        }
        str += "; Max-Age=" + Math.floor(maxAge);
      }
      if (opt.domain) {
        if (!fieldContentRegExp.test(opt.domain)) {
          throw new TypeError("option domain is invalid");
        }
        str += "; Domain=" + opt.domain;
      }
      if (opt.path) {
        if (!fieldContentRegExp.test(opt.path)) {
          throw new TypeError("option path is invalid");
        }
        str += "; Path=" + opt.path;
      }
      if (opt.expires) {
        var expires = opt.expires;
        if (!isDate(expires) || isNaN(expires.valueOf())) {
          throw new TypeError("option expires is invalid");
        }
        str += "; Expires=" + expires.toUTCString();
      }
      if (opt.httpOnly) {
        str += "; HttpOnly";
      }
      if (opt.secure) {
        str += "; Secure";
      }
      if (opt.priority) {
        var priority = typeof opt.priority === "string" ? opt.priority.toLowerCase() : opt.priority;
        switch (priority) {
          case "low":
            str += "; Priority=Low";
            break;
          case "medium":
            str += "; Priority=Medium";
            break;
          case "high":
            str += "; Priority=High";
            break;
          default:
            throw new TypeError("option priority is invalid");
        }
      }
      if (opt.sameSite) {
        var sameSite = typeof opt.sameSite === "string" ? opt.sameSite.toLowerCase() : opt.sameSite;
        switch (sameSite) {
          case true:
            str += "; SameSite=Strict";
            break;
          case "lax":
            str += "; SameSite=Lax";
            break;
          case "strict":
            str += "; SameSite=Strict";
            break;
          case "none":
            str += "; SameSite=None";
            break;
          default:
            throw new TypeError("option sameSite is invalid");
        }
      }
      return str;
    }
    function decode3(str) {
      return str.indexOf("%") !== -1 ? decodeURIComponent(str) : str;
    }
    function encode4(val) {
      return encodeURIComponent(val);
    }
    function isDate(val) {
      return __toString.call(val) === "[object Date]" || val instanceof Date;
    }
    function tryDecode(str, decode4) {
      try {
        return decode4(str);
      } catch (e2) {
        return str;
      }
    }
  }
});
var require_set_cookie = __commonJS({
  "node_modules/set-cookie-parser/lib/set-cookie.js"(exports, module) {
    "use strict";
    var defaultParseOptions = {
      decodeValues: true,
      map: false,
      silent: false
    };
    function isNonEmptyString(str) {
      return typeof str === "string" && !!str.trim();
    }
    function parseString2(setCookieValue, options2) {
      var parts = setCookieValue.split(";").filter(isNonEmptyString);
      var nameValuePairStr = parts.shift();
      var parsed = parseNameValuePair(nameValuePairStr);
      var name = parsed.name;
      var value2 = parsed.value;
      options2 = options2 ? Object.assign({}, defaultParseOptions, options2) : defaultParseOptions;
      try {
        value2 = options2.decodeValues ? decodeURIComponent(value2) : value2;
      } catch (e2) {
        console.error(
          "set-cookie-parser encountered an error while decoding a cookie with value '" + value2 + "'. Set options.decodeValues to false to disable this feature.",
          e2
        );
      }
      var cookie = {
        name,
        value: value2
      };
      parts.forEach(function(part) {
        var sides = part.split("=");
        var key2 = sides.shift().trimLeft().toLowerCase();
        var value3 = sides.join("=");
        if (key2 === "expires") {
          cookie.expires = new Date(value3);
        } else if (key2 === "max-age") {
          cookie.maxAge = parseInt(value3, 10);
        } else if (key2 === "secure") {
          cookie.secure = true;
        } else if (key2 === "httponly") {
          cookie.httpOnly = true;
        } else if (key2 === "samesite") {
          cookie.sameSite = value3;
        } else {
          cookie[key2] = value3;
        }
      });
      return cookie;
    }
    function parseNameValuePair(nameValuePairStr) {
      var name = "";
      var value2 = "";
      var nameValueArr = nameValuePairStr.split("=");
      if (nameValueArr.length > 1) {
        name = nameValueArr.shift();
        value2 = nameValueArr.join("=");
      } else {
        value2 = nameValuePairStr;
      }
      return { name, value: value2 };
    }
    function parse3(input, options2) {
      options2 = options2 ? Object.assign({}, defaultParseOptions, options2) : defaultParseOptions;
      if (!input) {
        if (!options2.map) {
          return [];
        } else {
          return {};
        }
      }
      if (input.headers) {
        if (typeof input.headers.getSetCookie === "function") {
          input = input.headers.getSetCookie();
        } else if (input.headers["set-cookie"]) {
          input = input.headers["set-cookie"];
        } else {
          var sch = input.headers[Object.keys(input.headers).find(function(key2) {
            return key2.toLowerCase() === "set-cookie";
          })];
          if (!sch && input.headers.cookie && !options2.silent) {
            console.warn(
              "Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning."
            );
          }
          input = sch;
        }
      }
      if (!Array.isArray(input)) {
        input = [input];
      }
      options2 = options2 ? Object.assign({}, defaultParseOptions, options2) : defaultParseOptions;
      if (!options2.map) {
        return input.filter(isNonEmptyString).map(function(str) {
          return parseString2(str, options2);
        });
      } else {
        var cookies = {};
        return input.filter(isNonEmptyString).reduce(function(cookies2, str) {
          var cookie = parseString2(str, options2);
          cookies2[cookie.name] = cookie;
          return cookies2;
        }, cookies);
      }
    }
    function splitCookiesString2(cookiesString) {
      if (Array.isArray(cookiesString)) {
        return cookiesString;
      }
      if (typeof cookiesString !== "string") {
        return [];
      }
      var cookiesStrings = [];
      var pos = 0;
      var start;
      var ch;
      var lastComma;
      var nextStart;
      var cookiesSeparatorFound;
      function skipWhitespace() {
        while (pos < cookiesString.length && /\s/.test(cookiesString.charAt(pos))) {
          pos += 1;
        }
        return pos < cookiesString.length;
      }
      function notSpecialChar() {
        ch = cookiesString.charAt(pos);
        return ch !== "=" && ch !== ";" && ch !== ",";
      }
      while (pos < cookiesString.length) {
        start = pos;
        cookiesSeparatorFound = false;
        while (skipWhitespace()) {
          ch = cookiesString.charAt(pos);
          if (ch === ",") {
            lastComma = pos;
            pos += 1;
            skipWhitespace();
            nextStart = pos;
            while (pos < cookiesString.length && notSpecialChar()) {
              pos += 1;
            }
            if (pos < cookiesString.length && cookiesString.charAt(pos) === "=") {
              cookiesSeparatorFound = true;
              pos = nextStart;
              cookiesStrings.push(cookiesString.substring(start, lastComma));
              start = pos;
            } else {
              pos = lastComma + 1;
            }
          } else {
            pos += 1;
          }
        }
        if (!cookiesSeparatorFound || pos >= cookiesString.length) {
          cookiesStrings.push(cookiesString.substring(start, cookiesString.length));
        }
      }
      return cookiesStrings;
    }
    module.exports = parse3;
    module.exports.parse = parse3;
    module.exports.parseString = parseString2;
    module.exports.splitCookiesString = splitCookiesString2;
  }
});
var layout_ts_exports = {};
__export(layout_ts_exports, {
  load: () => load
});
var load;
var init_layout_ts = __esm({
  ".svelte-kit/output/server/entries/pages/_layout.ts.js"() {
    init_public();
    init_dist2();
    load = async ({ fetch: fetch2, data, depends }) => {
      depends("supabase:auth");
      const supabase = createSupabaseLoadClient({
        supabaseUrl: PUBLIC_SUPABASE_URL,
        supabaseKey: PUBLIC_SUPABASE_ANON_KEY,
        event: { fetch: fetch2 },
        serverSession: data.session
      });
      const {
        data: { session }
      } = await supabase.auth.getSession();
      if (session) {
        const response = await fetch2("/api/users");
        return { user: await response.json(), supabase, session };
      }
      return { supabase, session };
    };
  }
});
var layout_server_ts_exports = {};
__export(layout_server_ts_exports, {
  load: () => load2,
  ssr: () => ssr
});
var ssr;
var load2;
var init_layout_server_ts = __esm({
  ".svelte-kit/output/server/entries/pages/_layout.server.ts.js"() {
    ssr = false;
    load2 = async ({ locals: { getSession } }) => {
      return {
        session: await getSession()
      };
    };
  }
});
var R;
var init_web_vitals = __esm({
  "node_modules/web-vitals/dist/web-vitals.js"() {
    R = 1 / 0;
  }
});
var layout_svelte_exports = {};
__export(layout_svelte_exports, {
  default: () => Layout
});
var Layout;
var init_layout_svelte = __esm({
  ".svelte-kit/output/server/entries/pages/_layout.svelte.js"() {
    init_index2();
    init_web_vitals();
    Layout = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { data } = $$props;
      if ($$props.data === void 0 && $$bindings.data && data !== void 0)
        $$bindings.data(data);
      return `${$$result.head += `<!-- HEAD_svelte-1t6m3k2_START --><meta charset="utf-8"><meta content="width=device-width, initial-scale=1, shrink-to-fit=no" name="viewport">${$$result.title = `<title>CSBOX</title>`, ""}<!-- HEAD_svelte-1t6m3k2_END -->`, ""}

${slots.default ? slots.default({}) : ``}`;
    });
  }
});
var __exports = {};
__export(__exports, {
  component: () => component,
  fonts: () => fonts,
  imports: () => imports,
  index: () => index,
  server: () => layout_server_ts_exports,
  server_id: () => server_id,
  stylesheets: () => stylesheets,
  universal: () => layout_ts_exports,
  universal_id: () => universal_id
});
var index;
var component;
var universal_id;
var server_id;
var imports;
var stylesheets;
var fonts;
var init__ = __esm({
  ".svelte-kit/output/server/nodes/0.js"() {
    init_layout_ts();
    init_layout_server_ts();
    index = 0;
    component = async () => (await Promise.resolve().then(() => (init_layout_svelte(), layout_svelte_exports))).default;
    universal_id = "src/routes/+layout.ts";
    server_id = "src/routes/+layout.server.ts";
    imports = ["_app/immutable/nodes/0.d80f68dc.js", "_app/immutable/chunks/_commonjsHelpers.725317a4.js", "_app/immutable/chunks/preload-helper.41c905a7.js", "_app/immutable/chunks/index.7ee2e23d.js", "_app/immutable/chunks/navigation.0d698c81.js", "_app/immutable/chunks/singletons.21d018a5.js", "_app/immutable/chunks/paths.1c0372a3.js"];
    stylesheets = ["_app/immutable/assets/0.7358dca4.css"];
    fonts = [];
  }
});
var getStores;
var page;
var init_stores = __esm({
  ".svelte-kit/output/server/chunks/stores.js"() {
    init_index2();
    getStores = () => {
      const stores = getContext("__svelte__");
      return {
        page: {
          subscribe: stores.page.subscribe
        },
        navigating: {
          subscribe: stores.navigating.subscribe
        },
        updated: stores.updated
      };
    };
    page = {
      subscribe(fn) {
        const store = getStores().page;
        return store.subscribe(fn);
      }
    };
  }
});
var error_svelte_exports = {};
__export(error_svelte_exports, {
  default: () => Error2
});
var Error2;
var init_error_svelte = __esm({
  ".svelte-kit/output/server/entries/pages/_error.svelte.js"() {
    init_index2();
    init_stores();
    Error2 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $page, $$unsubscribe_page;
      $$unsubscribe_page = subscribe(page, (value2) => $page = value2);
      $$unsubscribe_page();
      return `<h1>${escape($page.error.message)}</h1>
<hr>
<h1>Looks like the spaghetti code broke...</h1>
<hr>
<h2>Sign out and sign back in.</h2>
<h2>Clear browser cache &amp; cookies.</h2>`;
    });
  }
});
var __exports2 = {};
__export(__exports2, {
  component: () => component2,
  fonts: () => fonts2,
  imports: () => imports2,
  index: () => index2,
  stylesheets: () => stylesheets2
});
var index2;
var component2;
var imports2;
var stylesheets2;
var fonts2;
var init__2 = __esm({
  ".svelte-kit/output/server/nodes/1.js"() {
    index2 = 1;
    component2 = async () => (await Promise.resolve().then(() => (init_error_svelte(), error_svelte_exports))).default;
    imports2 = ["_app/immutable/nodes/1.1c01d59b.js", "_app/immutable/chunks/index.7ee2e23d.js", "_app/immutable/chunks/stores.2de0b66f.js", "_app/immutable/chunks/singletons.21d018a5.js", "_app/immutable/chunks/paths.1c0372a3.js", "_app/immutable/chunks/navigation.0d698c81.js"];
    stylesheets2 = [];
    fonts2 = [];
  }
});
var layout_server_ts_exports2 = {};
__export(layout_server_ts_exports2, {
  load: () => load3
});
var load3;
var init_layout_server_ts2 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/_layout.server.ts.js"() {
    load3 = async ({ locals: { getSession } }) => {
      return {
        session: await getSession()
      };
    };
  }
});
var require_classnames = __commonJS({
  "node_modules/classnames/index.js"(exports, module) {
    (function() {
      "use strict";
      var hasOwn = {}.hasOwnProperty;
      var nativeCodeString = "[native code]";
      function classNames8() {
        var classes = [];
        for (var i2 = 0; i2 < arguments.length; i2++) {
          var arg = arguments[i2];
          if (!arg)
            continue;
          var argType = typeof arg;
          if (argType === "string" || argType === "number") {
            classes.push(arg);
          } else if (Array.isArray(arg)) {
            if (arg.length) {
              var inner = classNames8.apply(null, arg);
              if (inner) {
                classes.push(inner);
              }
            }
          } else if (argType === "object") {
            if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes("[native code]")) {
              classes.push(arg.toString());
              continue;
            }
            for (var key2 in arg) {
              if (hasOwn.call(arg, key2) && arg[key2]) {
                classes.push(key2);
              }
            }
          }
        }
        return classes.join(" ");
      }
      if (typeof module !== "undefined" && module.exports) {
        classNames8.default = classNames8;
        module.exports = classNames8;
      } else if (typeof define === "function" && typeof define.amd === "object" && define.amd) {
        define("classnames", [], function() {
          return classNames8;
        });
      } else {
        window.classNames = classNames8;
      }
    })();
  }
});
function cubicInOut(t2) {
  return t2 < 0.5 ? 4 * t2 * t2 * t2 : 0.5 * Math.pow(2 * t2 - 2, 3) + 1;
}
function cubicOut(t2) {
  const f2 = t2 - 1;
  return f2 * f2 * f2 + 1;
}
function __rest3(s3, e2) {
  var t2 = {};
  for (var p2 in s3)
    if (Object.prototype.hasOwnProperty.call(s3, p2) && e2.indexOf(p2) < 0)
      t2[p2] = s3[p2];
  if (s3 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i2 = 0, p2 = Object.getOwnPropertySymbols(s3); i2 < p2.length; i2++) {
      if (e2.indexOf(p2[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s3, p2[i2]))
        t2[p2[i2]] = s3[p2[i2]];
    }
  return t2;
}
function fade(node, { delay = 0, duration: duration2 = 400, easing = identity } = {}) {
  const o2 = +getComputedStyle(node).opacity;
  return {
    delay,
    duration: duration2,
    easing,
    css: (t2) => `opacity: ${t2 * o2}`
  };
}
function slide(node, { delay = 0, duration: duration2 = 400, easing = cubicOut, axis = "y" } = {}) {
  const style = getComputedStyle(node);
  const opacity = +style.opacity;
  const primary_property = axis === "y" ? "height" : "width";
  const primary_property_value = parseFloat(style[primary_property]);
  const secondary_properties = axis === "y" ? ["top", "bottom"] : ["left", "right"];
  const capitalized_secondary_properties = secondary_properties.map((e2) => `${e2[0].toUpperCase()}${e2.slice(1)}`);
  const padding_start_value = parseFloat(style[`padding${capitalized_secondary_properties[0]}`]);
  const padding_end_value = parseFloat(style[`padding${capitalized_secondary_properties[1]}`]);
  const margin_start_value = parseFloat(style[`margin${capitalized_secondary_properties[0]}`]);
  const margin_end_value = parseFloat(style[`margin${capitalized_secondary_properties[1]}`]);
  const border_width_start_value = parseFloat(style[`border${capitalized_secondary_properties[0]}Width`]);
  const border_width_end_value = parseFloat(style[`border${capitalized_secondary_properties[1]}Width`]);
  return {
    delay,
    duration: duration2,
    easing,
    css: (t2) => `overflow: hidden;opacity: ${Math.min(t2 * 20, 1) * opacity};${primary_property}: ${t2 * primary_property_value}px;padding-${secondary_properties[0]}: ${t2 * padding_start_value}px;padding-${secondary_properties[1]}: ${t2 * padding_end_value}px;margin-${secondary_properties[0]}: ${t2 * margin_start_value}px;margin-${secondary_properties[1]}: ${t2 * margin_end_value}px;border-${secondary_properties[0]}-width: ${t2 * border_width_start_value}px;border-${secondary_properties[1]}-width: ${t2 * border_width_end_value}px;`
  };
}
function crossfade(_a) {
  var { fallback } = _a, defaults = __rest3(_a, ["fallback"]);
  const to_receive = /* @__PURE__ */ new Map();
  const to_send = /* @__PURE__ */ new Map();
  function crossfade2(from_node, node, params) {
    const { delay = 0, duration: duration2 = (d22) => Math.sqrt(d22) * 30, easing = cubicOut } = assign(assign({}, defaults), params);
    const from = from_node.getBoundingClientRect();
    const to = node.getBoundingClientRect();
    const dx = from.left - to.left;
    const dy = from.top - to.top;
    const dw = from.width / to.width;
    const dh = from.height / to.height;
    const d2 = Math.sqrt(dx * dx + dy * dy);
    const style = getComputedStyle(node);
    const transform = style.transform === "none" ? "" : style.transform;
    const opacity = +style.opacity;
    return {
      delay,
      duration: is_function(duration2) ? duration2(d2) : duration2,
      easing,
      css: (t2, u2) => `
				opacity: ${t2 * opacity};
				transform-origin: top left;
				transform: ${transform} translate(${u2 * dx}px,${u2 * dy}px) scale(${t2 + (1 - t2) * dw}, ${t2 + (1 - t2) * dh});
			`
    };
  }
  function transition(items, counterparts, intro) {
    return (node, params) => {
      items.set(params.key, node);
      return () => {
        if (counterparts.has(params.key)) {
          const other_node = counterparts.get(params.key);
          counterparts.delete(params.key);
          return crossfade2(other_node, node, params);
        }
        items.delete(params.key);
        return fallback && fallback(node, params, intro);
      };
    };
  }
  return [
    transition(to_send, to_receive, false),
    transition(to_receive, to_send, true)
  ];
}
var init_index4 = __esm({
  ".svelte-kit/output/server/chunks/index4.js"() {
    init_index2();
  }
});
var import_classnames;
var Frame;
var ToolbarButton;
var CloseButton;
var init_CloseButton = __esm({
  ".svelte-kit/output/server/chunks/CloseButton.js"() {
    init_index2();
    import_classnames = __toESM(require_classnames(), 1);
    Frame = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$restProps = compute_rest_props($$props, [
        "tag",
        "color",
        "rounded",
        "border",
        "shadow",
        "transition",
        "params",
        "node",
        "use",
        "options"
      ]);
      setContext("background", true);
      let { tag = "div" } = $$props;
      let { color = "default" } = $$props;
      let { rounded = false } = $$props;
      let { border = false } = $$props;
      let { shadow = false } = $$props;
      let { transition = void 0 } = $$props;
      let { params = {} } = $$props;
      let { node = void 0 } = $$props;
      let { use = noop } = $$props;
      let { options: options2 = {} } = $$props;
      const bgColors = {
        gray: "bg-gray-50 dark:bg-gray-800",
        red: "bg-red-50 dark:bg-gray-800",
        yellow: "bg-yellow-50 dark:bg-gray-800 ",
        green: "bg-green-50 dark:bg-gray-800 ",
        indigo: "bg-indigo-50 dark:bg-gray-800 ",
        purple: "bg-purple-50 dark:bg-gray-800 ",
        pink: "bg-pink-50 dark:bg-gray-800 ",
        blue: "bg-blue-50 dark:bg-gray-800 ",
        light: "bg-gray-50 dark:bg-gray-700",
        dark: "bg-gray-50 dark:bg-gray-800",
        default: "bg-white dark:bg-gray-800",
        dropdown: "bg-white dark:bg-gray-700",
        navbar: "bg-white dark:bg-gray-900",
        navbarUl: "bg-gray-50 dark:bg-gray-800",
        form: "bg-gray-50 dark:bg-gray-700",
        primary: "bg-primary-50 dark:bg-gray-800 ",
        orange: "bg-orange-50 dark:bg-orange-800",
        none: ""
      };
      const textColors = {
        gray: "text-gray-800 dark:text-gray-300",
        red: "text-red-800 dark:text-red-400",
        yellow: "text-yellow-800 dark:text-yellow-300",
        green: "text-green-800 dark:text-green-400",
        indigo: "text-indigo-800 dark:text-indigo-400",
        purple: "text-purple-800 dark:text-purple-400",
        pink: "text-pink-800 dark:text-pink-400",
        blue: "text-blue-800 dark:text-blue-400",
        light: "text-gray-700 dark:text-gray-300",
        dark: "text-gray-700 dark:text-gray-300",
        default: "text-gray-500 dark:text-gray-400",
        dropdown: "text-gray-700 dark:text-gray-200",
        navbar: "text-gray-700 dark:text-gray-200",
        navbarUl: "text-gray-700 dark:text-gray-400",
        form: "text-gray-900 dark:text-white",
        primary: "text-primary-800 dark:text-primary-400",
        orange: "text-orange-800 dark:text-orange-400",
        none: ""
      };
      const borderColors = {
        gray: "border-gray-300 dark:border-gray-800",
        red: "border-red-300 dark:border-red-800",
        yellow: "border-yellow-300 dark:border-yellow-800",
        green: "border-green-300 dark:border-green-800",
        indigo: "border-indigo-300 dark:border-indigo-800",
        purple: "border-purple-300 dark:border-purple-800",
        pink: "border-pink-300 dark:border-pink-800",
        blue: "border-blue-300 dark:border-blue-800",
        light: "border-gray-500",
        dark: "border-gray-500",
        default: "border-gray-200 dark:border-gray-700",
        dropdown: "border-gray-100 dark:border-gray-700",
        navbar: "border-gray-100 dark:border-gray-700",
        navbarUl: "border-gray-100 dark:border-gray-700",
        form: "border-gray-300 dark:border-gray-700",
        primary: "border-primary-500 dark:bg-primary-200 ",
        orange: "border-orange-300 dark:bg-orange-800",
        none: ""
      };
      let divClass;
      if ($$props.tag === void 0 && $$bindings.tag && tag !== void 0)
        $$bindings.tag(tag);
      if ($$props.color === void 0 && $$bindings.color && color !== void 0)
        $$bindings.color(color);
      if ($$props.rounded === void 0 && $$bindings.rounded && rounded !== void 0)
        $$bindings.rounded(rounded);
      if ($$props.border === void 0 && $$bindings.border && border !== void 0)
        $$bindings.border(border);
      if ($$props.shadow === void 0 && $$bindings.shadow && shadow !== void 0)
        $$bindings.shadow(shadow);
      if ($$props.transition === void 0 && $$bindings.transition && transition !== void 0)
        $$bindings.transition(transition);
      if ($$props.params === void 0 && $$bindings.params && params !== void 0)
        $$bindings.params(params);
      if ($$props.node === void 0 && $$bindings.node && node !== void 0)
        $$bindings.node(node);
      if ($$props.use === void 0 && $$bindings.use && use !== void 0)
        $$bindings.use(use);
      if ($$props.options === void 0 && $$bindings.options && options2 !== void 0)
        $$bindings.options(options2);
      color = color ?? "default";
      {
        setContext("color", color);
      }
      divClass = (0, import_classnames.default)(bgColors[color], textColors[color], rounded && (color === "dropdown" ? "rounded" : "rounded-lg"), border && "border", borderColors[color], shadow && "shadow-md", $$props.class);
      return `${transition ? `${((tag$1) => {
        return tag$1 ? `<${tag}${spread([escape_object($$restProps), { class: escape_attribute_value(divClass) }], {})}${add_attribute("this", node, 0)}>${is_void(tag$1) ? "" : `${slots.default ? slots.default({}) : ``}`}${is_void(tag$1) ? "" : `</${tag$1}>`}` : "";
      })(tag)}` : `${((tag$1) => {
        return tag$1 ? `<${tag}${spread([escape_object($$restProps), { class: escape_attribute_value(divClass) }], {})}${add_attribute("this", node, 0)}>${is_void(tag$1) ? "" : `${slots.default ? slots.default({}) : ``}`}${is_void(tag$1) ? "" : `</${tag$1}>`}` : "";
      })(tag)}`}

`;
    });
    ToolbarButton = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$restProps = compute_rest_props($$props, ["color", "name", "ariaLabel", "size", "href"]);
      const background = getContext("background");
      let { color = "default" } = $$props;
      let { name = void 0 } = $$props;
      let { ariaLabel = void 0 } = $$props;
      let { size: size2 = "md" } = $$props;
      let { href = void 0 } = $$props;
      const colors = {
        dark: "text-gray-500 hover:text-gray-900 hover:bg-gray-200 dark:text-gray-400 dark:hover:text-white dark:hover:bg-gray-700",
        gray: "text-gray-500 focus:ring-gray-400 hover:bg-gray-200 dark:hover:bg-gray-700",
        red: "text-red-500 focus:ring-red-400 hover:bg-red-200 dark:hover:bg-gray-700",
        yellow: "text-yellow-500 focus:ring-yellow-400 hover:bg-yellow-200 dark:hover:bg-gray-700",
        green: "text-green-500 focus:ring-green-400 hover:bg-green-200 dark:hover:bg-gray-700",
        indigo: "text-indigo-500 focus:ring-indigo-400 hover:bg-indigo-200 dark:hover:bg-gray-700",
        purple: "text-purple-500 focus:ring-purple-400 hover:bg-purple-200 dark:hover:bg-gray-700",
        pink: "text-pink-500 focus:ring-pink-400 hover:bg-pink-200 dark:hover:bg-gray-700",
        blue: "text-blue-500 focus:ring-blue-400 hover:bg-blue-200 dark:hover:bg-gray-700",
        default: "focus:ring-gray-400 "
      };
      const sizing = {
        xs: "m-0.5 rounded focus:ring-1 p-0.5",
        sm: "m-0.5 rounded focus:ring-1 p-0.5",
        md: "m-0.5 rounded-lg focus:ring-2 p-1.5",
        lg: "m-0.5 rounded-lg focus:ring-2 p-2.5"
      };
      let buttonClass;
      const svgSizes = {
        xs: "w-3 h-3",
        sm: "w-3.5 h-3.5",
        md: "w-5 h-5",
        lg: "w-5 h-5"
      };
      if ($$props.color === void 0 && $$bindings.color && color !== void 0)
        $$bindings.color(color);
      if ($$props.name === void 0 && $$bindings.name && name !== void 0)
        $$bindings.name(name);
      if ($$props.ariaLabel === void 0 && $$bindings.ariaLabel && ariaLabel !== void 0)
        $$bindings.ariaLabel(ariaLabel);
      if ($$props.size === void 0 && $$bindings.size && size2 !== void 0)
        $$bindings.size(size2);
      if ($$props.href === void 0 && $$bindings.href && href !== void 0)
        $$bindings.href(href);
      buttonClass = (0, import_classnames.default)(
        "focus:outline-none whitespace-normal",
        sizing[size2],
        colors[color],
        color === "default" && (background ? "hover:bg-gray-100 dark:hover:bg-gray-600" : "hover:bg-gray-100 dark:hover:bg-gray-700"),
        $$props.class
      );
      return `${href ? `<a${spread(
        [
          { href: escape_attribute_value(href) },
          escape_object($$restProps),
          {
            class: escape_attribute_value(buttonClass)
          },
          {
            "aria-label": escape_attribute_value(ariaLabel ?? name)
          }
        ],
        {}
      )}>${name ? `<span class="sr-only">${escape(name)}</span>` : ``}
    ${slots.default ? slots.default({ svgSize: svgSizes[size2] }) : ``}</a>` : `<button${spread(
        [
          { type: "button" },
          escape_object($$restProps),
          {
            class: escape_attribute_value(buttonClass)
          },
          {
            "aria-label": escape_attribute_value(ariaLabel ?? name)
          }
        ],
        {}
      )}>${name ? `<span class="sr-only">${escape(name)}</span>` : ``}
    ${slots.default ? slots.default({ svgSize: svgSizes[size2] }) : ``}</button>`}

`;
    });
    CloseButton = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$restProps = compute_rest_props($$props, ["name"]);
      let { name = "Close" } = $$props;
      if ($$props.name === void 0 && $$bindings.name && name !== void 0)
        $$bindings.name(name);
      return `${validate_component(ToolbarButton, "ToolbarButton").$$render(
        $$result,
        Object.assign({}, { name }, $$restProps, {
          class: (0, import_classnames.default)("ml-auto", $$props.class)
        }),
        {},
        {
          default: ({ svgSize }) => {
            return `<svg${add_attribute("class", svgSize, 0)} fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>`;
          }
        }
      )}

`;
    });
  }
});
var layout_svelte_exports2 = {};
__export(layout_svelte_exports2, {
  default: () => Layout2
});
var import_classnames2;
var clsBtnExtraClass;
var Toast;
var NotificationBuilder;
var notifications;
var Layout2;
var init_layout_svelte2 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/_layout.svelte.js"() {
    init_index2();
    import_classnames2 = __toESM(require_classnames(), 1);
    init_index4();
    init_CloseButton();
    init_index3();
    init_chunks();
    clsBtnExtraClass = "-mx-1.5 -my-1.5 text-gray-400 hover:text-gray-900 focus:!ring-gray-300 hover:bg-gray-100 dark:text-gray-500 dark:hover:text-white dark:hover:bg-gray-700";
    Toast = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$restProps = compute_rest_props($$props, [
        "simple",
        "color",
        "position",
        "open",
        "divClass",
        "defaultIconClass",
        "contentClass",
        "align"
      ]);
      let $$slots = compute_slots(slots);
      let { simple = false } = $$props;
      let { color = "primary" } = $$props;
      let { position = "none" } = $$props;
      let { open: open2 = true } = $$props;
      let { divClass = "w-full max-w-xs p-4 text-gray-500 bg-white shadow dark:text-gray-400 dark:bg-gray-800 gap-3" } = $$props;
      let { defaultIconClass = "w-8 h-8" } = $$props;
      let { contentClass = "w-full text-sm font-normal" } = $$props;
      let { align = true } = $$props;
      const positions = {
        "top-left": "absolute top-5 left-5",
        "top-right": "absolute top-5 right-5",
        "bottom-left": "absolute bottom-5 left-5",
        "bottom-right": "absolute bottom-5 right-5",
        none: ""
      };
      let finalDivClass;
      const colors = {
        primary: "text-primary-500 bg-primary-100 dark:bg-primary-800 dark:text-primary-200",
        gray: "text-gray-500 bg-gray-100 dark:bg-gray-700 dark:text-gray-200",
        red: "text-red-500 bg-red-100 dark:bg-red-800 dark:text-red-200",
        yellow: "text-yellow-500 bg-yellow-100 dark:bg-yellow-800 dark:text-yellow-200",
        green: "text-green-500 bg-green-100 dark:bg-green-800 dark:text-green-200",
        blue: "text-blue-500 bg-blue-100 dark:bg-blue-800 dark:text-blue-200",
        indigo: "text-indigo-500 bg-indigo-100 dark:bg-indigo-800 dark:text-indigo-200",
        purple: "text-purple-500 bg-purple-100 dark:bg-purple-800 dark:text-purple-200",
        orange: "text-orange-500 bg-orange-100 dark:bg-orange-700 dark:text-orange-200",
        none: ""
      };
      let iconClass;
      if ($$props.simple === void 0 && $$bindings.simple && simple !== void 0)
        $$bindings.simple(simple);
      if ($$props.color === void 0 && $$bindings.color && color !== void 0)
        $$bindings.color(color);
      if ($$props.position === void 0 && $$bindings.position && position !== void 0)
        $$bindings.position(position);
      if ($$props.open === void 0 && $$bindings.open && open2 !== void 0)
        $$bindings.open(open2);
      if ($$props.divClass === void 0 && $$bindings.divClass && divClass !== void 0)
        $$bindings.divClass(divClass);
      if ($$props.defaultIconClass === void 0 && $$bindings.defaultIconClass && defaultIconClass !== void 0)
        $$bindings.defaultIconClass(defaultIconClass);
      if ($$props.contentClass === void 0 && $$bindings.contentClass && contentClass !== void 0)
        $$bindings.contentClass(contentClass);
      if ($$props.align === void 0 && $$bindings.align && align !== void 0)
        $$bindings.align(align);
      finalDivClass = (0, import_classnames2.default)("flex", align ? "items-center" : "items-start", divClass, positions[position], $$props.class);
      iconClass = (0, import_classnames2.default)("inline-flex items-center justify-center shrink-0", colors[color], defaultIconClass);
      return `${open2 ? `${validate_component(Frame, "Frame").$$render($$result, Object.assign({}, { rounded: true }, { transition: fade }, { color: "none" }, $$restProps, { class: finalDivClass }, { role: "alert" }), {}, {
        default: () => {
          return `${$$slots.icon ? `${validate_component(Frame, "Frame").$$render(
            $$result,
            {
              rounded: true,
              color: "none",
              class: iconClass
            },
            {},
            {
              default: () => {
                return `${slots.icon ? slots.icon({}) : ``}`;
              }
            }
          )}` : ``}

    <div${add_attribute("class", contentClass, 0)}>${slots.default ? slots.default({}) : ``}</div>

    ${!simple ? `${validate_component(CloseButton, "CloseButton").$$render($$result, { class: clsBtnExtraClass }, {}, {})}` : ``}`;
        }
      })}` : ``}

`;
    });
    NotificationBuilder = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { title = "" } = $$props;
      let { content = "" } = $$props;
      if ($$props.title === void 0 && $$bindings.title && title !== void 0)
        $$bindings.title(title);
      if ($$props.content === void 0 && $$bindings.content && content !== void 0)
        $$bindings.content(content);
      return `${validate_component(Toast, "Toast").$$render(
        $$result,
        {
          position: "bottom-right",
          transition: slide,
          params: { delay: 20, duration: 1e3 }
        },
        {},
        {
          default: () => {
            return `<p class="text-blue-400 font-bold text-lg">${escape(title)}</p> <p class="text-gray-200">${escape(content)}</p>`;
          }
        }
      )}`;
    });
    notifications = writable([]);
    Layout2 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $notifications, $$unsubscribe_notifications;
      $$unsubscribe_notifications = subscribe(notifications, (value2) => $notifications = value2);
      let { data } = $$props;
      if ($$props.data === void 0 && $$bindings.data && data !== void 0)
        $$bindings.data(data);
      $$unsubscribe_notifications();
      return `${$$result.head += `<!-- HEAD_svelte-1t6m3k2_START --><meta charset="utf-8"><meta content="width=device-width, initial-scale=1, shrink-to-fit=no" name="viewport">${$$result.title = `<title>CSBOX</title>`, ""}<!-- HEAD_svelte-1t6m3k2_END -->`, ""}
${slots.default ? slots.default({}) : ``}


	${each($notifications, (notification) => {
        return `${validate_component(NotificationBuilder, "Notification").$$render(
          $$result,
          {
            title: notification.title,
            content: notification.message
          },
          {},
          {}
        )}`;
      })}`;
    });
  }
});
var __exports3 = {};
__export(__exports3, {
  component: () => component3,
  fonts: () => fonts3,
  imports: () => imports3,
  index: () => index3,
  server: () => layout_server_ts_exports2,
  server_id: () => server_id2,
  stylesheets: () => stylesheets3
});
var index3;
var component3;
var server_id2;
var imports3;
var stylesheets3;
var fonts3;
var init__3 = __esm({
  ".svelte-kit/output/server/nodes/2.js"() {
    init_layout_server_ts2();
    index3 = 2;
    component3 = async () => (await Promise.resolve().then(() => (init_layout_svelte2(), layout_svelte_exports2))).default;
    server_id2 = "src/routes/d/(d)/+layout.server.ts";
    imports3 = ["_app/immutable/nodes/2.37f19cb5.js", "_app/immutable/chunks/index.7ee2e23d.js", "_app/immutable/chunks/navigation.0d698c81.js", "_app/immutable/chunks/singletons.21d018a5.js", "_app/immutable/chunks/paths.1c0372a3.js", "_app/immutable/chunks/Indicator.svelte_svelte_type_style_lang.880982d3.js", "_app/immutable/chunks/_commonjsHelpers.725317a4.js", "_app/immutable/chunks/index.24430090.js", "_app/immutable/chunks/CloseButton.ed454e30.js", "_app/immutable/chunks/notifications.93f6c838.js", "_app/immutable/chunks/stores.ec6fd508.js", "_app/immutable/chunks/index.ade5cbd2.js", "_app/immutable/chunks/control.f5b05b5f.js"];
    stylesheets3 = ["_app/immutable/assets/Indicator.1d121e74.css"];
    fonts3 = [];
  }
});
var layout_ts_exports2 = {};
__export(layout_ts_exports2, {
  load: () => load4,
  prerender: () => prerender
});
var prerender;
var load4;
var init_layout_ts2 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/courses/_layout.ts.js"() {
    init_chunks();
    prerender = false;
    load4 = async ({ fetch: fetch2, data, request, url, parent }) => {
      const parentData = await parent();
      const session = parentData.session;
      if (!session) {
        throw redirect(303, "/");
      }
      const response = await fetch2("/api/courses");
      return {
        courses: await response.json()
      };
    };
  }
});
var layout_svelte_exports3 = {};
__export(layout_svelte_exports3, {
  default: () => Layout3
});
var Layout3;
var init_layout_svelte3 = __esm({
  ".svelte-kit/output/server/entries/fallbacks/layout.svelte.js"() {
    init_index2();
    Layout3 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${slots.default ? slots.default({}) : ``}`;
    });
  }
});
var __exports4 = {};
__export(__exports4, {
  component: () => component4,
  fonts: () => fonts4,
  imports: () => imports4,
  index: () => index4,
  stylesheets: () => stylesheets4,
  universal: () => layout_ts_exports2,
  universal_id: () => universal_id2
});
var index4;
var component4;
var universal_id2;
var imports4;
var stylesheets4;
var fonts4;
var init__4 = __esm({
  ".svelte-kit/output/server/nodes/3.js"() {
    init_layout_ts2();
    index4 = 3;
    component4 = async () => (await Promise.resolve().then(() => (init_layout_svelte3(), layout_svelte_exports3))).default;
    universal_id2 = "src/routes/d/(d)/courses/+layout.ts";
    imports4 = ["_app/immutable/nodes/3.31c2abdd.js", "_app/immutable/chunks/index.ade5cbd2.js", "_app/immutable/chunks/control.f5b05b5f.js", "_app/immutable/chunks/layout.72d3c2fa.js", "_app/immutable/chunks/index.7ee2e23d.js"];
    stylesheets4 = [];
    fonts4 = [];
  }
});
var layout_ts_exports3 = {};
__export(layout_ts_exports3, {
  load: () => load5
});
var load5;
var init_layout_ts3 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/courses/(course)/_layout.ts.js"() {
    load5 = async ({ params, parent }) => {
      const { courses } = await parent();
      const { slug } = params;
      if (courses.data.length === 0) {
        throw "/d";
      }
      return {
        courses,
        slug
      };
    };
  }
});
var Navbar;
var Settings;
var init_Settings = __esm({
  ".svelte-kit/output/server/chunks/Settings.js"() {
    init_index2();
    init_stores();
    Navbar = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $page, $$unsubscribe_page;
      $$unsubscribe_page = subscribe(page, (value2) => $page = value2);
      const prerender12 = false;
      if ($$props.prerender === void 0 && $$bindings.prerender && prerender12 !== void 0)
        $$bindings.prerender(prerender12);
      $$unsubscribe_page();
      return `<div class="z-1 relative"><nav class="lg:hidden flex items-center justify-between p-8 bg-gray-700 mb-3"><div class="w-full xl:w-auto px-2 xl:mr-12"><div class="flex items-center justify-between"><a class="inline-flex items-center h-8"${add_attribute("href", "#", 0)}><img class="object-contain" src="" alt=""></a>
        <div class="xl:hidden"><button class="navbar-burger text-gray-400 hover:text-gray-300 focus:outline-none"><svg class="svelte-fa svelte-1cj2gr0" style="height:1em;line-height:.75em;font-size:1.33333em;vertical-align:-.225em;transform-origin:center;overflow:visible" viewBox="0 0 448 512" aria-hidden="true" role="img" xmlns="http://www.w3.org/2000/svg"><g transform="translate(224 256)" transform-origin="112 0"><g transform="translate(0,0) scale(1,1)"><path d="M0 96C0 78.3 14.3 64 32 64H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H32C14.3 128 0 113.7 0 96zM0 256c0-17.7 14.3-32 32-32H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H32c-17.7 0-32-14.3-32-32zM448 416c0 17.7-14.3 32-32 32H32c-17.7 0-32-14.3-32-32s14.3-32 32-32H416c17.7 0 32 14.3 32 32z" fill="currentColor" transform="translate(-224 -256)"></path></g></g></svg>
              <title>Mobile menu</title></button></div></div></div></nav>
  <div class="hidden lg:block navbar-menu relative z-10"><div class="lg:hidden navbar-backdrop fixed top-0 left-0 w-full h-full bg-gray-800 opacity-50"></div>
    <nav class="fixed top-0 left-0 bottom-0 max-w-max flex flex-col h-full py-6 px-4 bg-gray-700 overflow-auto"><a class="inline-block mb-4"${add_attribute("href", "#", 0)}><img class="object-contain h-7 my-2 mx-auto" src="/cloud.png" alt=""></a>
      <div class="mb-6"><ul><li>${$page.route.id === "/d" ? `<a class="flex items-center justify-center w-12 h-12 rounded-xl text-blue-500 hover:bg-gray-800 mb-2" sveltekit:prefetch href="/d"><svg class="svelte-fa svelte-1cj2gr0 " style="height:1em;line-height:.75em;font-size:1.33333em;vertical-align:-.225em;transform-origin:center;overflow:visible" viewBox="0 0 512 512" aria-hidden="true" role="img" xmlns="http://www.w3.org/2000/svg"><g transform="translate(256 256)" transform-origin="128 0"><g transform="translate(0,0) scale(1,1)"><path d="M0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm320 96c0-15.9-5.8-30.4-15.3-41.6l76.6-147.4c6.1-11.8 1.5-26.3-10.2-32.4s-26.2-1.5-32.4 10.2L262.1 288.3c-2-.2-4-.3-6.1-.3c-35.3 0-64 28.7-64 64s28.7 64 64 64s64-28.7 64-64z" fill="currentColor" transform="translate(-256 -256)"></path></g></g></svg></a>` : `<a class="flex items-center justify-center w-12 h-12 rounded-xl text-gray-400 hover:text-blue-500 hover:bg-gray-800 mb-2" sveltekit:prefetch href="/d"><svg class="svelte-fa svelte-1cj2gr0" style="height:1em;line-height:.75em;font-size:1.33333em;vertical-align:-.225em;transform-origin:center;overflow:visible" viewBox="0 0 512 512" aria-hidden="true" role="img" xmlns="http://www.w3.org/2000/svg"><g transform="translate(256 256)" transform-origin="128 0"><g transform="translate(0,0) scale(1,1)"><path d="M0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm320 96c0-15.9-5.8-30.4-15.3-41.6l76.6-147.4c6.1-11.8 1.5-26.3-10.2-32.4s-26.2-1.5-32.4 10.2L262.1 288.3c-2-.2-4-.3-6.1-.3c-35.3 0-64 28.7-64 64s28.7 64 64 64s64-28.7 64-64z" fill="currentColor" transform="translate(-256 -256)"></path></g></g></svg></a>`}</li>

          <li>${$page.route.id.includes("/d/courses") ? `<a class="flex items-center justify-center w-12 h-12 rounded-xl text-blue-500 hover:bg-gray-800 mb-2" sveltekit:prefetch href="/d/courses"><svg class="svelte-fa svelte-1cj2gr0" style="height:1em;line-height:.75em;font-size:1.33333em;vertical-align:-.225em;transform-origin:center;overflow:visible" viewBox="0 0 448 512" aria-hidden="true" role="img" xmlns="http://www.w3.org/2000/svg"><g transform="translate(224 256)" transform-origin="112 0"><g transform="translate(0,0) scale(1,1)"><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z" fill="currentColor" transform="translate(-224 -256)"></path></g></g></svg></a>` : `<a class="flex items-center justify-center w-12 h-12 rounded-xl text-gray-400 hover:text-blue-500 hover:bg-gray-800 mb-2" sveltekit:prefetch href="/d/courses"><svg class="svelte-fa svelte-1cj2gr0" style="height:1em;line-height:.75em;font-size:1.33333em;vertical-align:-.225em;transform-origin:center;overflow:visible" viewBox="0 0 448 512" aria-hidden="true" role="img" xmlns="http://www.w3.org/2000/svg"><g transform="translate(224 256)" transform-origin="112 0"><g transform="translate(0,0) scale(1,1)"><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z" fill="currentColor" transform="translate(-224 -256)"></path></g></g></svg></a>`}</li>

          <li>${$page.route.id === "/d/instances" ? `<a class="flex items-center justify-center w-12 h-12 rounded-xl text-blue-500 hover:bg-gray-800 mb-2" sveltekit:prefetch href="/d/instances"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" aria-label="server" viewBox="0 0 512 512"><path d="M64 32C28.7 32 0 60.7 0 96v64c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V96c0-35.3-28.7-64-64-64H64zM344 152c-13.3 0-24-10.7-24-24s10.7-24 24-24s24 10.7 24 24s-10.7 24-24 24zm96-24c0 13.3-10.7 24-24 24s-24-10.7-24-24s10.7-24 24-24s24 10.7 24 24zM64 288c-35.3 0-64 28.7-64 64v64c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V352c0-35.3-28.7-64-64-64H64zM344 408c-13.3 0-24-10.7-24-24s10.7-24 24-24s24 10.7 24 24s-10.7 24-24 24zm104-24c0 13.3-10.7 24-24 24s-24-10.7-24-24s10.7-24 24-24s24 10.7 24 24z"></path></svg></a>` : `<a class="flex items-center justify-center w-12 h-12 rounded-xl text-gray-400 hover:text-blue-500 hover:bg-gray-800 mb-2" sveltekit:prefetch href="/d/instances"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" aria-label="server" viewBox="0 0 512 512"><path d="M64 32C28.7 32 0 60.7 0 96v64c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V96c0-35.3-28.7-64-64-64H64zM344 152c-13.3 0-24-10.7-24-24s10.7-24 24-24s24 10.7 24 24s-10.7 24-24 24zm96-24c0 13.3-10.7 24-24 24s-24-10.7-24-24s10.7-24 24-24s24 10.7 24 24zM64 288c-35.3 0-64 28.7-64 64v64c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V352c0-35.3-28.7-64-64-64H64zM344 408c-13.3 0-24-10.7-24-24s10.7-24 24-24s24 10.7 24 24s-10.7 24-24 24zm104-24c0 13.3-10.7 24-24 24s-24-10.7-24-24s10.7-24 24-24s24 10.7 24 24z"></path></svg></a>`}</li>

          <li><a class="flex items-center justify-center w-12 h-12 rounded-xl text-gray-400 hover:text-blue-500 hover:bg-gray-800 mb-2"${add_attribute("href", "#", 0)}><svg class="svelte-fa svelte-1cj2gr0" style="height:1em;line-height:.75em;font-size:1.33333em;vertical-align:-.225em;transform-origin:center;overflow:visible" viewBox="0 0 448 512" aria-hidden="true" role="img" xmlns="http://www.w3.org/2000/svg"><g transform="translate(224 256)" transform-origin="112 0"><g transform="translate(0,0) scale(1,1)"><path d="M96 32V64H48C21.5 64 0 85.5 0 112v48H448V112c0-26.5-21.5-48-48-48H352V32c0-17.7-14.3-32-32-32s-32 14.3-32 32V64H160V32c0-17.7-14.3-32-32-32S96 14.3 96 32zM448 192H0V464c0 26.5 21.5 48 48 48H400c26.5 0 48-21.5 48-48V192z" fill="currentColor" transform="translate(-224 -256)"></path></g></g></svg></a></li>
          <li><a class="flex items-center justify-center w-12 h-12 rounded-xl text-gray-400 hover:text-blue-500 hover:bg-gray-800 mb-2"${add_attribute("href", "#", 0)}><svg class="svelte-fa svelte-1cj2gr0" style="height:1em;line-height:.75em;font-size:1.33333em;vertical-align:-.225em;transform-origin:center;overflow:visible" viewBox="0 0 512 512" aria-hidden="true" role="img" xmlns="http://www.w3.org/2000/svg"><g transform="translate(256 256)" transform-origin="128 0"><g transform="translate(0,0) scale(1,1)"><path d="M121 32C91.6 32 66 52 58.9 80.5L1.9 308.4C.6 313.5 0 318.7 0 323.9V416c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V323.9c0-5.2-.6-10.4-1.9-15.5l-57-227.9C446 52 420.4 32 391 32H121zm0 64H391l48 192H387.8c-12.1 0-23.2 6.8-28.6 17.7l-14.3 28.6c-5.4 10.8-16.5 17.7-28.6 17.7H195.8c-12.1 0-23.2-6.8-28.6-17.7l-14.3-28.6c-5.4-10.8-16.5-17.7-28.6-17.7H73L121 96z" fill="currentColor" transform="translate(-256 -256)"></path></g></g></svg></a></li>
          <li><a class="flex items-center justify-center w-12 h-12 rounded-xl text-gray-400 hover:text-blue-500 hover:bg-gray-800 mb-2"${add_attribute("href", "#", 0)}><svg class="svelte-fa svelte-1cj2gr0" style="height:1em;line-height:.75em;font-size:1.33333em;vertical-align:-.225em;transform-origin:center;overflow:visible" viewBox="0 0 512 512" aria-hidden="true" role="img" xmlns="http://www.w3.org/2000/svg"><g transform="translate(256 256)" transform-origin="128 0"><g transform="translate(0,0) scale(1,1)"><path d="M481.9 166.6c3.2 8.7 .5 18.4-6.4 24.6l-30.9 28.1c-7.7 7.1-11.4 17.5-10.9 27.9c.1 2.9 .2 5.8 .2 8.8s-.1 5.9-.2 8.8c-.5 10.5 3.1 20.9 10.9 27.9l30.9 28.1c6.9 6.2 9.6 15.9 6.4 24.6c-4.4 11.9-9.7 23.3-15.8 34.3l-4.7 8.1c-6.6 11-14 21.4-22.1 31.2c-5.9 7.2-15.7 9.6-24.5 6.8l-39.7-12.6c-10-3.2-20.8-1.1-29.7 4.6c-4.9 3.1-9.9 6.1-15.1 8.7c-9.3 4.8-16.5 13.2-18.8 23.4l-8.9 40.7c-2 9.1-9 16.3-18.2 17.8c-13.8 2.3-28 3.5-42.5 3.5s-28.7-1.2-42.5-3.5c-9.2-1.5-16.2-8.7-18.2-17.8l-8.9-40.7c-2.2-10.2-9.5-18.6-18.8-23.4c-5.2-2.7-10.2-5.6-15.1-8.7c-8.8-5.7-19.7-7.8-29.7-4.6L69.1 425.9c-8.8 2.8-18.6 .3-24.5-6.8c-8.1-9.8-15.5-20.2-22.1-31.2l-4.7-8.1c-6.1-11-11.4-22.4-15.8-34.3c-3.2-8.7-.5-18.4 6.4-24.6l30.9-28.1c7.7-7.1 11.4-17.5 10.9-27.9c-.1-2.9-.2-5.8-.2-8.8s.1-5.9 .2-8.8c.5-10.5-3.1-20.9-10.9-27.9L8.4 191.2c-6.9-6.2-9.6-15.9-6.4-24.6c4.4-11.9 9.7-23.3 15.8-34.3l4.7-8.1c6.6-11 14-21.4 22.1-31.2c5.9-7.2 15.7-9.6 24.5-6.8l39.7 12.6c10 3.2 20.8 1.1 29.7-4.6c4.9-3.1 9.9-6.1 15.1-8.7c9.3-4.8 16.5-13.2 18.8-23.4l8.9-40.7c2-9.1 9-16.3 18.2-17.8C213.3 1.2 227.5 0 242 0s28.7 1.2 42.5 3.5c9.2 1.5 16.2 8.7 18.2 17.8l8.9 40.7c2.2 10.2 9.4 18.6 18.8 23.4c5.2 2.7 10.2 5.6 15.1 8.7c8.8 5.7 19.7 7.7 29.7 4.6l39.7-12.6c8.8-2.8 18.6-.3 24.5 6.8c8.1 9.8 15.5 20.2 22.1 31.2l4.7 8.1c6.1 11 11.4 22.4 15.8 34.3zM242 336a80 80 0 1 0 0-160 80 80 0 1 0 0 160z" fill="currentColor" transform="translate(-256 -256)"></path></g></g></svg></a></li></ul></div>
      <div class="mt-auto"><a class="flex items-center justify-center w-12 h-12 rounded-xl text-gray-400 hover:text-blue-500 hover:bg-gray-800"${add_attribute("href", "#", 0)}><svg width="20" height="22" viewBox="0 0 20 22" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M13.71 11.7099C14.6904 10.9385 15.406 9.8808 15.7572 8.68382C16.1085 7.48684 16.0779 6.21015 15.6698 5.03135C15.2617 3.85255 14.4963 2.83027 13.4801 2.10674C12.4639 1.3832 11.2474 0.994385 10 0.994385C8.75255 0.994385 7.53611 1.3832 6.51993 2.10674C5.50374 2.83027 4.73834 3.85255 4.33021 5.03135C3.92208 6.21015 3.89151 7.48684 4.24276 8.68382C4.59401 9.8808 5.3096 10.9385 6.29 11.7099C4.61007 12.3829 3.14428 13.4992 2.04889 14.9398C0.953495 16.3804 0.26956 18.0912 0.0699967 19.8899C0.0555513 20.0212 0.0671132 20.1541 0.104022 20.2809C0.140931 20.4078 0.202464 20.5261 0.285108 20.6292C0.452016 20.8374 0.69478 20.9707 0.959997 20.9999C1.22521 21.0291 1.49116 20.9517 1.69932 20.7848C1.90749 20.6179 2.04082 20.3751 2.07 20.1099C2.28958 18.1551 3.22168 16.3497 4.68822 15.0387C6.15475 13.7277 8.0529 13.0029 10.02 13.0029C11.9871 13.0029 13.8852 13.7277 15.3518 15.0387C16.8183 16.3497 17.7504 18.1551 17.97 20.1099C17.9972 20.3556 18.1144 20.5825 18.2991 20.7469C18.4838 20.9113 18.7228 21.0014 18.97 20.9999H19.08C19.3421 20.9697 19.5817 20.8372 19.7466 20.6311C19.9114 20.4251 19.9881 20.1622 19.96 19.8999C19.7595 18.0961 19.0719 16.3809 17.9708 14.9381C16.8698 13.4953 15.3969 12.3794 13.71 11.7099ZM10 10.9999C9.20887 10.9999 8.43551 10.7653 7.77772 10.3258C7.11992 9.88623 6.60723 9.26152 6.30448 8.53061C6.00173 7.79971 5.92251 6.99544 6.07686 6.21952C6.2312 5.4436 6.61216 4.73086 7.17157 4.17145C7.73098 3.61204 8.44371 3.23108 9.21964 3.07674C9.99556 2.9224 10.7998 3.00161 11.5307 3.30436C12.2616 3.60711 12.8863 4.1198 13.3259 4.7776C13.7654 5.4354 14 6.20876 14 6.99988C14 8.06075 13.5786 9.07816 12.8284 9.82831C12.0783 10.5785 11.0609 10.9999 10 10.9999Z" fill="currentColor"></path></svg></a>
        <a class="flex items-center justify-center w-12 h-12 rounded-xl text-gray-400 hover:text-blue-500 bg-gray-800"${add_attribute("href", "#", 0)}><svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M10.59 11.0001L8.29 13.2901C8.19627 13.3831 8.12188 13.4937 8.07111 13.6155C8.02034 13.7374 7.9942 13.8681 7.9942 14.0001C7.9942 14.1321 8.02034 14.2628 8.07111 14.3847C8.12188 14.5065 8.19627 14.6171 8.29 14.7101C8.38296 14.8038 8.49356 14.8782 8.61542 14.929C8.73728 14.9798 8.86799 15.0059 9 15.0059C9.13201 15.0059 9.26272 14.9798 9.38458 14.929C9.50644 14.8782 9.61704 14.8038 9.71 14.7101L13.71 10.7101C13.801 10.615 13.8724 10.5029 13.92 10.3801C14.02 10.1366 14.02 9.86356 13.92 9.6201C13.8724 9.49735 13.801 9.3852 13.71 9.2901L9.71 5.2901C9.61676 5.19686 9.50607 5.1229 9.38425 5.07244C9.26243 5.02198 9.13186 4.99601 9 4.99601C8.86814 4.99601 8.73757 5.02198 8.61575 5.07244C8.49393 5.1229 8.38324 5.19686 8.29 5.2901C8.19676 5.38334 8.1228 5.49403 8.07234 5.61585C8.02188 5.73767 7.99591 5.86824 7.99591 6.0001C7.99591 6.13196 8.02188 6.26253 8.07234 6.38435C8.1228 6.50617 8.19676 6.61686 8.29 6.7101L10.59 9.0001H1C0.734784 9.0001 0.48043 9.10546 0.292893 9.29299C0.105357 9.48053 0 9.73488 0 10.0001C0 10.2653 0.105357 10.5197 0.292893 10.7072C0.48043 10.8947 0.734784 11.0001 1 11.0001H10.59ZM10 9.96937e-05C8.13109 -0.00824409 6.29724 0.507313 4.70647 1.48829C3.11569 2.46927 1.83165 3.87641 1 5.5501C0.880653 5.78879 0.861015 6.06512 0.945406 6.3183C1.0298 6.57147 1.21131 6.78075 1.45 6.9001C1.68869 7.01945 1.96502 7.03909 2.2182 6.95469C2.47137 6.8703 2.68065 6.68879 2.8 6.4501C3.43219 5.17342 4.39383 4.08872 5.58555 3.30809C6.77727 2.52746 8.15582 2.07922 9.57876 2.00969C11.0017 1.94017 12.4174 2.25188 13.6795 2.91261C14.9417 3.57334 16.0045 4.55913 16.7581 5.7681C17.5118 6.97706 17.9289 8.36535 17.9664 9.78948C18.0039 11.2136 17.6605 12.6219 16.9715 13.8689C16.2826 15.1159 15.2731 16.1563 14.0475 16.8825C12.8219 17.6088 11.4246 17.9946 10 18.0001C8.50888 18.0066 7.04615 17.5925 5.77969 16.8053C4.51323 16.0182 3.49435 14.89 2.84 13.5501C2.72065 13.3114 2.51137 13.1299 2.2582 13.0455C2.00502 12.9611 1.72869 12.9808 1.49 13.1001C1.25131 13.2194 1.0698 13.4287 0.985406 13.6819C0.901015 13.9351 0.920653 14.2114 1.04 14.4501C1.83283 16.0456 3.03752 17.4003 4.52947 18.3741C6.02142 19.348 7.74645 19.9055 9.52612 19.9891C11.3058 20.0727 13.0755 19.6793 14.6521 18.8496C16.2288 18.0199 17.5552 16.7841 18.4941 15.2699C19.433 13.7558 19.9503 12.0182 19.9925 10.2371C20.0347 8.45597 19.6003 6.69589 18.7342 5.13893C17.8682 3.58197 16.6018 2.28467 15.0663 1.38121C13.5307 0.477745 11.7816 0.000936146 10 9.96937e-05Z" fill="currentColor"></path></svg></a></div></nav></div></div>`;
    });
    Settings = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $page, $$unsubscribe_page;
      $$unsubscribe_page = subscribe(page, (value2) => $page = value2);
      const ssr7 = true;
      let { showTopRightMenuModel = false } = $$props;
      function handleToggleMenuTopRight(s3) {
        showTopRightMenuModel = s3 == "inside" && !showTopRightMenuModel;
      }
      const { data: user } = $page.data.user;
      const { email } = $page.data.session?.user;
      const { updated_at: updated2 } = $page.data.user;
      const avatarUrl = `${user.avatar_url}?t=${updated2}`;
      const full_name = `${user.first_name} ${user.last_name}`;
      if ($$props.ssr === void 0 && $$bindings.ssr && ssr7 !== void 0)
        $$bindings.ssr(ssr7);
      if ($$props.showTopRightMenuModel === void 0 && $$bindings.showTopRightMenuModel && showTopRightMenuModel !== void 0)
        $$bindings.showTopRightMenuModel(showTopRightMenuModel);
      if ($$props.handleToggleMenuTopRight === void 0 && $$bindings.handleToggleMenuTopRight && handleToggleMenuTopRight !== void 0)
        $$bindings.handleToggleMenuTopRight(handleToggleMenuTopRight);
      $$unsubscribe_page();
      return `<div class="w-full sm:w-auto"><div class="relative inline-block text-left"><div><button type="button" class="inline-flex items-center justify-center py-2 pl-2 pr-3 bg-gray-500 hover:bg-gray-400 hover:bg-opacity-40 transition duration-150 rounded-full" id="menu-button" aria-expanded="true" aria-haspopup="true"><img class="h-8 w-8 mr-3 rounded-full object-cover"${add_attribute("src", avatarUrl, 0)}${add_attribute("alt", avatarUrl, 0)}>
        <h4 id="fullname" class="text-white font-bold tracking-wide mr-5">${escape(full_name)}</h4>
        <svg width="10" height="6" viewBox="0 0 10 6" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M1 1L5 5L9 1" stroke="#3D485B" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></button>

      ${showTopRightMenuModel ? `<div class="absolute right-0 z-10 mt-2 w-56 origin-top-right rounded-md bg-gray-500 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none" role="menu" aria-orientation="vertical" aria-labelledby="menu-button" tabindex="-1"><div class="px-4 py-3 text-sm text-gray-900 dark:text-white"><div class="truncate font-bold">${escape(email)}</div></div>
          <div class="py-1" role="none">
            <a href="/d/profile" class="font-semibold text-gray-100 block px-4 py-2 text-sm hover:bg-gray-700" role="menuitem" tabindex="-1" id="menu-item-0">Account settings</a>
            <button type="submit" class="font-semibold text-gray-100 block w-full px-4 py-2 text-left text-sm hover:bg-gray-700" role="menuitem" tabindex="-1" id="menu-item-3">Sign out</button></div></div>` : ``}</div></div></div>`;
    });
  }
});
var require_dayjs_min = __commonJS({
  "node_modules/dayjs/dayjs.min.js"(exports, module) {
    !function(t2, e2) {
      "object" == typeof exports && "undefined" != typeof module ? module.exports = e2() : "function" == typeof define && define.amd ? define(e2) : (t2 = "undefined" != typeof globalThis ? globalThis : t2 || self).dayjs = e2();
    }(exports, function() {
      "use strict";
      var t2 = 1e3, e2 = 6e4, n2 = 36e5, r2 = "millisecond", i2 = "second", s3 = "minute", u2 = "hour", a2 = "day", o2 = "week", f2 = "month", h2 = "quarter", c2 = "year", d2 = "date", l2 = "Invalid Date", $2 = /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/, y2 = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g, M2 = { name: "en", weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"), ordinal: function(t3) {
        var e3 = ["th", "st", "nd", "rd"], n3 = t3 % 100;
        return "[" + t3 + (e3[(n3 - 20) % 10] || e3[n3] || e3[0]) + "]";
      } }, m2 = function(t3, e3, n3) {
        var r3 = String(t3);
        return !r3 || r3.length >= e3 ? t3 : "" + Array(e3 + 1 - r3.length).join(n3) + t3;
      }, v2 = { s: m2, z: function(t3) {
        var e3 = -t3.utcOffset(), n3 = Math.abs(e3), r3 = Math.floor(n3 / 60), i3 = n3 % 60;
        return (e3 <= 0 ? "+" : "-") + m2(r3, 2, "0") + ":" + m2(i3, 2, "0");
      }, m: function t3(e3, n3) {
        if (e3.date() < n3.date())
          return -t3(n3, e3);
        var r3 = 12 * (n3.year() - e3.year()) + (n3.month() - e3.month()), i3 = e3.clone().add(r3, f2), s4 = n3 - i3 < 0, u3 = e3.clone().add(r3 + (s4 ? -1 : 1), f2);
        return +(-(r3 + (n3 - i3) / (s4 ? i3 - u3 : u3 - i3)) || 0);
      }, a: function(t3) {
        return t3 < 0 ? Math.ceil(t3) || 0 : Math.floor(t3);
      }, p: function(t3) {
        return { M: f2, y: c2, w: o2, d: a2, D: d2, h: u2, m: s3, s: i2, ms: r2, Q: h2 }[t3] || String(t3 || "").toLowerCase().replace(/s$/, "");
      }, u: function(t3) {
        return void 0 === t3;
      } }, g2 = "en", D2 = {};
      D2[g2] = M2;
      var p2 = function(t3) {
        return t3 instanceof _2;
      }, S2 = function t3(e3, n3, r3) {
        var i3;
        if (!e3)
          return g2;
        if ("string" == typeof e3) {
          var s4 = e3.toLowerCase();
          D2[s4] && (i3 = s4), n3 && (D2[s4] = n3, i3 = s4);
          var u3 = e3.split("-");
          if (!i3 && u3.length > 1)
            return t3(u3[0]);
        } else {
          var a3 = e3.name;
          D2[a3] = e3, i3 = a3;
        }
        return !r3 && i3 && (g2 = i3), i3 || !r3 && g2;
      }, w2 = function(t3, e3) {
        if (p2(t3))
          return t3.clone();
        var n3 = "object" == typeof e3 ? e3 : {};
        return n3.date = t3, n3.args = arguments, new _2(n3);
      }, O2 = v2;
      O2.l = S2, O2.i = p2, O2.w = function(t3, e3) {
        return w2(t3, { locale: e3.$L, utc: e3.$u, x: e3.$x, $offset: e3.$offset });
      };
      var _2 = function() {
        function M3(t3) {
          this.$L = S2(t3.locale, null, true), this.parse(t3);
        }
        var m3 = M3.prototype;
        return m3.parse = function(t3) {
          this.$d = function(t4) {
            var e3 = t4.date, n3 = t4.utc;
            if (null === e3)
              return /* @__PURE__ */ new Date(NaN);
            if (O2.u(e3))
              return /* @__PURE__ */ new Date();
            if (e3 instanceof Date)
              return new Date(e3);
            if ("string" == typeof e3 && !/Z$/i.test(e3)) {
              var r3 = e3.match($2);
              if (r3) {
                var i3 = r3[2] - 1 || 0, s4 = (r3[7] || "0").substring(0, 3);
                return n3 ? new Date(Date.UTC(r3[1], i3, r3[3] || 1, r3[4] || 0, r3[5] || 0, r3[6] || 0, s4)) : new Date(r3[1], i3, r3[3] || 1, r3[4] || 0, r3[5] || 0, r3[6] || 0, s4);
              }
            }
            return new Date(e3);
          }(t3), this.$x = t3.x || {}, this.init();
        }, m3.init = function() {
          var t3 = this.$d;
          this.$y = t3.getFullYear(), this.$M = t3.getMonth(), this.$D = t3.getDate(), this.$W = t3.getDay(), this.$H = t3.getHours(), this.$m = t3.getMinutes(), this.$s = t3.getSeconds(), this.$ms = t3.getMilliseconds();
        }, m3.$utils = function() {
          return O2;
        }, m3.isValid = function() {
          return !(this.$d.toString() === l2);
        }, m3.isSame = function(t3, e3) {
          var n3 = w2(t3);
          return this.startOf(e3) <= n3 && n3 <= this.endOf(e3);
        }, m3.isAfter = function(t3, e3) {
          return w2(t3) < this.startOf(e3);
        }, m3.isBefore = function(t3, e3) {
          return this.endOf(e3) < w2(t3);
        }, m3.$g = function(t3, e3, n3) {
          return O2.u(t3) ? this[e3] : this.set(n3, t3);
        }, m3.unix = function() {
          return Math.floor(this.valueOf() / 1e3);
        }, m3.valueOf = function() {
          return this.$d.getTime();
        }, m3.startOf = function(t3, e3) {
          var n3 = this, r3 = !!O2.u(e3) || e3, h3 = O2.p(t3), l3 = function(t4, e4) {
            var i3 = O2.w(n3.$u ? Date.UTC(n3.$y, e4, t4) : new Date(n3.$y, e4, t4), n3);
            return r3 ? i3 : i3.endOf(a2);
          }, $3 = function(t4, e4) {
            return O2.w(n3.toDate()[t4].apply(n3.toDate("s"), (r3 ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(e4)), n3);
          }, y3 = this.$W, M4 = this.$M, m4 = this.$D, v3 = "set" + (this.$u ? "UTC" : "");
          switch (h3) {
            case c2:
              return r3 ? l3(1, 0) : l3(31, 11);
            case f2:
              return r3 ? l3(1, M4) : l3(0, M4 + 1);
            case o2:
              var g3 = this.$locale().weekStart || 0, D3 = (y3 < g3 ? y3 + 7 : y3) - g3;
              return l3(r3 ? m4 - D3 : m4 + (6 - D3), M4);
            case a2:
            case d2:
              return $3(v3 + "Hours", 0);
            case u2:
              return $3(v3 + "Minutes", 1);
            case s3:
              return $3(v3 + "Seconds", 2);
            case i2:
              return $3(v3 + "Milliseconds", 3);
            default:
              return this.clone();
          }
        }, m3.endOf = function(t3) {
          return this.startOf(t3, false);
        }, m3.$set = function(t3, e3) {
          var n3, o3 = O2.p(t3), h3 = "set" + (this.$u ? "UTC" : ""), l3 = (n3 = {}, n3[a2] = h3 + "Date", n3[d2] = h3 + "Date", n3[f2] = h3 + "Month", n3[c2] = h3 + "FullYear", n3[u2] = h3 + "Hours", n3[s3] = h3 + "Minutes", n3[i2] = h3 + "Seconds", n3[r2] = h3 + "Milliseconds", n3)[o3], $3 = o3 === a2 ? this.$D + (e3 - this.$W) : e3;
          if (o3 === f2 || o3 === c2) {
            var y3 = this.clone().set(d2, 1);
            y3.$d[l3]($3), y3.init(), this.$d = y3.set(d2, Math.min(this.$D, y3.daysInMonth())).$d;
          } else
            l3 && this.$d[l3]($3);
          return this.init(), this;
        }, m3.set = function(t3, e3) {
          return this.clone().$set(t3, e3);
        }, m3.get = function(t3) {
          return this[O2.p(t3)]();
        }, m3.add = function(r3, h3) {
          var d3, l3 = this;
          r3 = Number(r3);
          var $3 = O2.p(h3), y3 = function(t3) {
            var e3 = w2(l3);
            return O2.w(e3.date(e3.date() + Math.round(t3 * r3)), l3);
          };
          if ($3 === f2)
            return this.set(f2, this.$M + r3);
          if ($3 === c2)
            return this.set(c2, this.$y + r3);
          if ($3 === a2)
            return y3(1);
          if ($3 === o2)
            return y3(7);
          var M4 = (d3 = {}, d3[s3] = e2, d3[u2] = n2, d3[i2] = t2, d3)[$3] || 1, m4 = this.$d.getTime() + r3 * M4;
          return O2.w(m4, this);
        }, m3.subtract = function(t3, e3) {
          return this.add(-1 * t3, e3);
        }, m3.format = function(t3) {
          var e3 = this, n3 = this.$locale();
          if (!this.isValid())
            return n3.invalidDate || l2;
          var r3 = t3 || "YYYY-MM-DDTHH:mm:ssZ", i3 = O2.z(this), s4 = this.$H, u3 = this.$m, a3 = this.$M, o3 = n3.weekdays, f3 = n3.months, h3 = function(t4, n4, i4, s5) {
            return t4 && (t4[n4] || t4(e3, r3)) || i4[n4].slice(0, s5);
          }, c3 = function(t4) {
            return O2.s(s4 % 12 || 12, t4, "0");
          }, d3 = n3.meridiem || function(t4, e4, n4) {
            var r4 = t4 < 12 ? "AM" : "PM";
            return n4 ? r4.toLowerCase() : r4;
          }, $3 = { YY: String(this.$y).slice(-2), YYYY: O2.s(this.$y, 4, "0"), M: a3 + 1, MM: O2.s(a3 + 1, 2, "0"), MMM: h3(n3.monthsShort, a3, f3, 3), MMMM: h3(f3, a3), D: this.$D, DD: O2.s(this.$D, 2, "0"), d: String(this.$W), dd: h3(n3.weekdaysMin, this.$W, o3, 2), ddd: h3(n3.weekdaysShort, this.$W, o3, 3), dddd: o3[this.$W], H: String(s4), HH: O2.s(s4, 2, "0"), h: c3(1), hh: c3(2), a: d3(s4, u3, true), A: d3(s4, u3, false), m: String(u3), mm: O2.s(u3, 2, "0"), s: String(this.$s), ss: O2.s(this.$s, 2, "0"), SSS: O2.s(this.$ms, 3, "0"), Z: i3 };
          return r3.replace(y2, function(t4, e4) {
            return e4 || $3[t4] || i3.replace(":", "");
          });
        }, m3.utcOffset = function() {
          return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);
        }, m3.diff = function(r3, d3, l3) {
          var $3, y3 = O2.p(d3), M4 = w2(r3), m4 = (M4.utcOffset() - this.utcOffset()) * e2, v3 = this - M4, g3 = O2.m(this, M4);
          return g3 = ($3 = {}, $3[c2] = g3 / 12, $3[f2] = g3, $3[h2] = g3 / 3, $3[o2] = (v3 - m4) / 6048e5, $3[a2] = (v3 - m4) / 864e5, $3[u2] = v3 / n2, $3[s3] = v3 / e2, $3[i2] = v3 / t2, $3)[y3] || v3, l3 ? g3 : O2.a(g3);
        }, m3.daysInMonth = function() {
          return this.endOf(f2).$D;
        }, m3.$locale = function() {
          return D2[this.$L];
        }, m3.locale = function(t3, e3) {
          if (!t3)
            return this.$L;
          var n3 = this.clone(), r3 = S2(t3, e3, true);
          return r3 && (n3.$L = r3), n3;
        }, m3.clone = function() {
          return O2.w(this.$d, this);
        }, m3.toDate = function() {
          return new Date(this.valueOf());
        }, m3.toJSON = function() {
          return this.isValid() ? this.toISOString() : null;
        }, m3.toISOString = function() {
          return this.$d.toISOString();
        }, m3.toString = function() {
          return this.$d.toUTCString();
        }, M3;
      }(), T2 = _2.prototype;
      return w2.prototype = T2, [["$ms", r2], ["$s", i2], ["$m", s3], ["$H", u2], ["$W", a2], ["$M", f2], ["$y", c2], ["$D", d2]].forEach(function(t3) {
        T2[t3[1]] = function(e3) {
          return this.$g(e3, t3[0], t3[1]);
        };
      }), w2.extend = function(t3, e3) {
        return t3.$i || (t3(e3, _2, w2), t3.$i = true), w2;
      }, w2.locale = S2, w2.isDayjs = p2, w2.unix = function(t3) {
        return w2(1e3 * t3);
      }, w2.en = D2[g2], w2.Ls = D2, w2.p = {}, w2;
    });
  }
});
var require_just_throttle = __commonJS({
  "node_modules/just-throttle/index.js"(exports, module) {
    module.exports = throttle2;
    function throttle2(fn, interval, options2) {
      var timeoutId = null;
      var throttledFn = null;
      var leading = options2 && options2.leading;
      var trailing = options2 && options2.trailing;
      if (leading == null) {
        leading = true;
      }
      if (trailing == null) {
        trailing = !leading;
      }
      if (leading == true) {
        trailing = false;
      }
      var cancel = function() {
        if (timeoutId) {
          clearTimeout(timeoutId);
          timeoutId = null;
        }
      };
      var flush2 = function() {
        var call = throttledFn;
        cancel();
        if (call) {
          call();
        }
      };
      var throttleWrapper = function() {
        var callNow = leading && !timeoutId;
        var context = this;
        var args = arguments;
        throttledFn = function() {
          return fn.apply(context, args);
        };
        if (!timeoutId) {
          timeoutId = setTimeout(function() {
            timeoutId = null;
            if (trailing) {
              return throttledFn();
            }
          }, interval);
        }
        if (callNow) {
          callNow = false;
          return throttledFn();
        }
      };
      throttleWrapper.cancel = cancel;
      throttleWrapper.flush = flush2;
      return throttleWrapper;
    }
  }
});
function is_date(obj) {
  return Object.prototype.toString.call(obj) === "[object Date]";
}
function tick_spring(ctx, last_value, current_value, target_value) {
  if (typeof current_value === "number" || is_date(current_value)) {
    const delta = target_value - current_value;
    const velocity = (current_value - last_value) / (ctx.dt || 1 / 60);
    const spring2 = ctx.opts.stiffness * delta;
    const damper = ctx.opts.damping * velocity;
    const acceleration = (spring2 - damper) * ctx.inv_mass;
    const d2 = (velocity + acceleration) * ctx.dt;
    if (Math.abs(d2) < ctx.opts.precision && Math.abs(delta) < ctx.opts.precision) {
      return target_value;
    } else {
      ctx.settled = false;
      return is_date(current_value) ? new Date(current_value.getTime() + d2) : current_value + d2;
    }
  } else if (Array.isArray(current_value)) {
    return current_value.map((_2, i2) => tick_spring(ctx, last_value[i2], current_value[i2], target_value[i2]));
  } else if (typeof current_value === "object") {
    const next_value = {};
    for (const k2 in current_value) {
      next_value[k2] = tick_spring(ctx, last_value[k2], current_value[k2], target_value[k2]);
    }
    return next_value;
  } else {
    throw new Error(`Cannot spring ${typeof current_value} values`);
  }
}
function spring(value2, opts = {}) {
  const store = writable(value2);
  const { stiffness = 0.15, damping = 0.8, precision = 0.01 } = opts;
  let last_time;
  let task;
  let current_token;
  let last_value = value2;
  let target_value = value2;
  let inv_mass = 1;
  let inv_mass_recovery_rate = 0;
  let cancel_task = false;
  function set(new_value, opts2 = {}) {
    target_value = new_value;
    const token = current_token = {};
    if (value2 == null || opts2.hard || spring2.stiffness >= 1 && spring2.damping >= 1) {
      cancel_task = true;
      last_time = now();
      last_value = new_value;
      store.set(value2 = target_value);
      return Promise.resolve();
    } else if (opts2.soft) {
      const rate = opts2.soft === true ? 0.5 : +opts2.soft;
      inv_mass_recovery_rate = 1 / (rate * 60);
      inv_mass = 0;
    }
    if (!task) {
      last_time = now();
      cancel_task = false;
      task = loop((now2) => {
        if (cancel_task) {
          cancel_task = false;
          task = null;
          return false;
        }
        inv_mass = Math.min(inv_mass + inv_mass_recovery_rate, 1);
        const ctx = {
          inv_mass,
          opts: spring2,
          settled: true,
          dt: (now2 - last_time) * 60 / 1e3
        };
        const next_value = tick_spring(ctx, last_value, value2, target_value);
        last_time = now2;
        last_value = value2;
        store.set(value2 = next_value);
        if (ctx.settled) {
          task = null;
        }
        return !ctx.settled;
      });
    }
    return new Promise((fulfil) => {
      task.promise.then(() => {
        if (token === current_token)
          fulfil();
      });
    });
  }
  const spring2 = {
    set,
    update: (fn, opts2) => set(fn(target_value, value2), opts2),
    subscribe: store.subscribe,
    stiffness,
    damping,
    precision
  };
  return spring2;
}
var import_dayjs;
var import_just_throttle;
var PICKER_TYPES;
var updateSelected;
var pipe;
var zeroDay;
var get2;
var datepickerStore;
var storeContextKey;
var keyControlsContextKey;
var themeContextKey;
var Crossfade;
var css$9;
var Popover;
var light;
var Theme;
var KEY_CODES;
var KeyControls;
var css$8;
var Grid;
var css$7;
var InfiniteGrid;
var css$6;
var duration;
var DayPicker;
var ViewTransitionEffect;
var css$5;
var Arrow;
var css$4;
var CalendarControls;
var CrossfadeProvider;
var css$3;
var MonthPicker;
var css$2;
var YearPicker;
var css$1;
var Calendar;
var calendar;
var css;
var Datepicker;
var init_Scrollable_svelte_svelte_type_style_lang = __esm({
  ".svelte-kit/output/server/chunks/Scrollable.svelte_svelte_type_style_lang.js"() {
    init_index2();
    import_dayjs = __toESM(require_dayjs_min(), 1);
    init_index3();
    init_index4();
    import_just_throttle = __toESM(require_just_throttle(), 1);
    PICKER_TYPES = ["days", "months", "years"];
    updateSelected = (value2, property) => (state) => {
      const newState = { ...state, [property]: value2 };
      return { ...newState, selected: new Date(newState.year, newState.month, newState.day) };
    };
    pipe = (...fns) => (val) => fns.reduce((accum, fn) => fn(accum), val);
    zeroDay = (date) => (0, import_dayjs.default)(date).startOf("day").toDate();
    get2 = ({ selected, start, end, startOfWeekIndex = 0, shouldEnlargeDay = false }) => {
      const { subscribe: subscribe2, set, update: update2 } = writable({
        open: false,
        hasChosen: false,
        selected,
        start: zeroDay(start),
        end: zeroDay(end),
        shouldEnlargeDay,
        enlargeDay: false,
        year: selected.getFullYear(),
        month: selected.getMonth(),
        day: selected.getDate(),
        activeView: "days",
        activeViewDirection: 1,
        startOfWeekIndex
      });
      return {
        set,
        subscribe: subscribe2,
        getState() {
          return get_store_value({ subscribe: subscribe2 });
        },
        enlargeDay(enlargeDay = true) {
          update2((state) => ({ ...state, enlargeDay }));
        },
        getSelectableVector(date) {
          const { start: start2, end: end2 } = this.getState();
          if (date < start2)
            return -1;
          if (date > end2)
            return 1;
          return 0;
        },
        isSelectable(date, clamping = []) {
          const vector = this.getSelectableVector(date);
          if (vector === 0)
            return true;
          if (!clamping.length)
            return false;
          const clamped = this.clampValue((0, import_dayjs.default)(date), clamping).toDate();
          return this.isSelectable(clamped);
        },
        clampValue(day2, clampable) {
          const vector = this.getSelectableVector(day2.toDate());
          if (vector === 0)
            return day2;
          const boundaryKey = vector === 1 ? "end" : "start";
          const boundary = (0, import_dayjs.default)(this.getState()[boundaryKey]);
          return clampable.reduce((day22, type) => day22[type](boundary[type]()), day2);
        },
        add(amount, unit, clampable = []) {
          update2(({ month, year: year2, day: day2, ...state }) => {
            const d2 = this.clampValue((0, import_dayjs.default)(new Date(year2, month, day2)).add(amount, unit), clampable);
            if (!this.isSelectable(d2.toDate()))
              return { ...state, year: year2, month, day: day2 };
            return {
              ...state,
              month: d2.month(),
              year: d2.year(),
              day: d2.date(),
              selected: d2.toDate()
            };
          });
        },
        setActiveView(newActiveView) {
          const newIndex = PICKER_TYPES.indexOf(newActiveView);
          if (newIndex === -1)
            return;
          update2(({ activeView, ...state }) => ({
            ...state,
            activeViewDirection: PICKER_TYPES.indexOf(activeView) > newIndex ? -1 : 1,
            activeView: newActiveView
          }));
        },
        setYear(year2) {
          update2(updateSelected(year2, "year"));
        },
        setMonth(month) {
          update2(updateSelected(month, "month"));
        },
        setDay(day2) {
          update2(
            pipe(
              updateSelected(day2.getDate(), "day"),
              updateSelected(day2.getMonth(), "month"),
              updateSelected(day2.getFullYear(), "year")
            )
          );
        },
        close(extraState) {
          update2((state) => ({ ...state, ...extraState, open: false }));
        },
        selectDay() {
          this.close({ hasChosen: true });
        },
        getCalendarPage(month, year2) {
          const { startOfWeekIndex: startOfWeekIndex2 } = this.getState();
          let last = { date: new Date(year2, month, 1), outsider: false };
          const days = [];
          while (last.date.getMonth() === month) {
            days.push(last);
            const date = new Date(last.date);
            date.setDate(last.date.getDate() + 1);
            last = { date, outsider: false };
          }
          while (days[0].date.getDay() !== startOfWeekIndex2) {
            const date = new Date(days[0].date);
            date.setDate(days[0].date.getDate() - 1);
            days.unshift({
              date,
              outsider: true
            });
          }
          last.outsider = true;
          while (days.length < 42) {
            days.push(last);
            last = { date: new Date(last.date), outsider: true };
            last.date.setDate(last.date.getDate() + 1);
          }
          return days;
        }
      };
    };
    datepickerStore = { get: get2 };
    storeContextKey = {};
    keyControlsContextKey = {};
    themeContextKey = {};
    Crossfade = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { key: key2 = {} } = $$props;
      let { duration: duration2 = (d2) => Math.max(150, Math.sqrt(d2 * 150)) } = $$props;
      let { easing = cubicInOut } = $$props;
      const [send, receive] = crossfade({
        duration: duration2,
        easing,
        fallback(node, params) {
          const style = getComputedStyle(node);
          const transform = style.transform === "none" ? "" : style.transform;
          return {
            duration: duration2,
            easing,
            css: (t2) => `
					transform: ${transform} scale(${t2});
					opacity: ${t2}
				`
          };
        }
      });
      const store = readable({ key: key2, send, receive });
      setContext("crossfade", store);
      if ($$props.key === void 0 && $$bindings.key && key2 !== void 0)
        $$bindings.key(key2);
      if ($$props.duration === void 0 && $$bindings.duration && duration2 !== void 0)
        $$bindings.duration(duration2);
      if ($$props.easing === void 0 && $$bindings.easing && easing !== void 0)
        $$bindings.easing(easing);
      return `${slots.default ? slots.default({ key: key2, send, receive }) : ``}`;
    });
    css$9 = {
      code: ".trigger.svelte-ff0ii6{display:inline-block}.sc-popover.svelte-ff0ii6{position:relative;display:inline-block}.contents-wrapper.svelte-ff0ii6{transform:translate(-50%, -50%);position:absolute;top:50%;left:50%;z-index:10;overflow:hidden}",
      map: null
    };
    Popover = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { isOpen = false } = $$props;
      let { style = "" } = $$props;
      let translateY = 0;
      let translateX = 0;
      let popover;
      let triggerWidth;
      let triggerHeight;
      let contentsWrapper;
      const close = () => {
        isOpen = false;
      };
      if ($$props.isOpen === void 0 && $$bindings.isOpen && isOpen !== void 0)
        $$bindings.isOpen(isOpen);
      if ($$props.style === void 0 && $$bindings.style && style !== void 0)
        $$bindings.style(style);
      if ($$props.close === void 0 && $$bindings.close && close !== void 0)
        $$bindings.close(close);
      $$result.css.add(css$9);
      return `${validate_component(Crossfade, "Crossfade").$$render($$result, {}, {}, {
        default: ({ receive, send, key: key2 }) => {
          return `<div class="sc-popover svelte-ff0ii6" style="${escape(style, true) + "; min-width: " + escape(triggerWidth + 1, true) + "px; min-height: " + escape(triggerHeight + 1, true) + "px;"}"${add_attribute("this", popover, 0)}>${!isOpen ? `<div class="trigger svelte-ff0ii6">${slots.default ? slots.default({ key: key2, send, receive }) : ``}</div>` : `<div class="contents-wrapper svelte-ff0ii6" style="${"transform: translate(-50%,-50%) translate(" + escape(translateX, true) + "px, " + escape(translateY, true) + "px)"}"${add_attribute("this", contentsWrapper, 0)}><div class="contents"><div class="contents-inner">${slots.contents ? slots.contents({ key: key2, send, receive }) : ``}</div></div></div>`}</div>`;
        }
      })}`;
    });
    light = {
      calendar: {
        width: "700px",
        maxWidth: "100vw",
        legend: {
          height: "45px"
        },
        shadow: "0px 10px 26px rgba(0, 0, 0, 0.25)",
        colors: {
          text: {
            primary: "#333",
            highlight: "#fff"
          },
          background: {
            primary: "#fff",
            highlight: "#eb7400",
            hover: "#eee"
          },
          border: "#eee"
        },
        font: {
          regular: "1.5em",
          large: "37em"
        },
        grid: {
          disabledOpacity: ".35",
          outsiderOpacity: ".6"
        }
      }
    };
    Theme = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let style;
      let { theme: theme2 = {} } = $$props;
      let { appliedTheme } = $$props;
      let { prefix = "--sc-theme" } = $$props;
      let { defaultTheme = light } = $$props;
      const store = writable();
      setContext(themeContextKey, store);
      const getStyle = (obj) => Object.entries(obj).map(([k2, v2]) => `${prefix}-${k2}: ${v2}`).join(";");
      const getTheme = (defaults, overrides = {}, base2 = "") => Object.entries(defaults).reduce(
        (acc, [k2, v2]) => {
          if (typeof v2 === "object")
            return {
              ...acc,
              ...getTheme(v2, overrides[k2], [base2, k2].filter(Boolean).join("-"))
            };
          return {
            ...acc,
            [[base2, k2].filter(Boolean).join("-")]: overrides[k2] || v2
          };
        },
        {}
      );
      if ($$props.theme === void 0 && $$bindings.theme && theme2 !== void 0)
        $$bindings.theme(theme2);
      if ($$props.appliedTheme === void 0 && $$bindings.appliedTheme && appliedTheme !== void 0)
        $$bindings.appliedTheme(appliedTheme);
      if ($$props.prefix === void 0 && $$bindings.prefix && prefix !== void 0)
        $$bindings.prefix(prefix);
      if ($$props.defaultTheme === void 0 && $$bindings.defaultTheme && defaultTheme !== void 0)
        $$bindings.defaultTheme(defaultTheme);
      appliedTheme = getTheme(defaultTheme, theme2);
      style = getStyle(appliedTheme);
      {
        store.set(appliedTheme);
      }
      return `${slots.default ? slots.default({ appliedTheme, style }) : ``}`;
    });
    KEY_CODES = {
      33: "pageUp",
      34: "pageDown",
      37: "left",
      38: "up",
      39: "right",
      40: "down",
      27: "escape",
      13: "enter",
      17: "control"
    };
    KeyControls = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $currentCtx, $$unsubscribe_currentCtx;
      let { limit = 0 } = $$props;
      let { ctx = null } = $$props;
      const currentCtx = getContext(keyControlsContextKey);
      $$unsubscribe_currentCtx = subscribe(currentCtx, (value2) => $currentCtx = value2);
      const key2 = (evt) => {
        if (ctx && !ctx.includes($currentCtx))
          return;
        const mapping = $$props[KEY_CODES[evt.keyCode]];
        if (mapping)
          mapping();
      };
      if ($$props.limit === void 0 && $$bindings.limit && limit !== void 0)
        $$bindings.limit(limit);
      if ($$props.ctx === void 0 && $$bindings.ctx && ctx !== void 0)
        $$bindings.ctx(ctx);
      limit ? (0, import_just_throttle.default)(key2, limit) : key2;
      $$unsubscribe_currentCtx();
      return `

${slots.default ? slots.default({}) : ``}`;
    });
    css$8 = {
      code: ".grid.svelte-jmgdr0{display:grid;background:var(--sc-theme-calendar-colors-border);row-gap:1px;column-gap:1px;height:100%}.grid.svelte-jmgdr0>*{font-size:var(--sc-theme-calendar-font-regular);text-decoration:none;color:var(--sc-theme-calendar-colors-text-primary);transition:all 180ms ease-out;background:var(--sc-theme-calendar-colors-background-primary);display:grid;text-align:center;align-items:center}@media(max-width: 720px){.grid.svelte-jmgdr0>*{font-size:calc(var(--sc-theme-calendar-font-regular) * 0.75)}}.grid.svelte-jmgdr0>*:hover{background:var(--sc-theme-calendar-colors-background-hover)}.grid.svelte-jmgdr0>*.selected{background:var(--sc-theme-calendar-colors-background-highlight);color:var(--sc-theme-calendar-colors-text-highlight);opacity:1}.grid.svelte-jmgdr0>*.outsider{opacity:var(--sc-theme-calendar-grid-outsiderOpacity)}.grid.svelte-jmgdr0>*.disabled{opacity:var(--sc-theme-calendar-grid-disabledOpacity)}.grid.svelte-jmgdr0>*.disabled:hover{background:var(--sc-theme-calendar-colors-background-primary);cursor:default}",
      map: null
    };
    Grid = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { template: template2 = "repeat(4, 1fr) / repeat(3, 1fr)" } = $$props;
      if ($$props.template === void 0 && $$bindings.template && template2 !== void 0)
        $$bindings.template(template2);
      $$result.css.add(css$8);
      return `<div class="grid svelte-jmgdr0" style="${"grid-template: " + escape(template2, true) + ";"}">${slots.default ? slots.default({}) : ``}
</div>`;
    });
    css$7 = {
      code: ".grid.svelte-198r3wi.svelte-198r3wi{overflow:hidden;height:100%;display:grid}.grid.svelte-198r3wi>.svelte-198r3wi{position:absolute;top:0;left:0;right:0;bottom:0;transition-property:none !important}",
      map: null
    };
    InfiniteGrid = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let type;
      let gridStyle;
      let $initialized, $$unsubscribe_initialized;
      let $dim, $$unsubscribe_dim;
      let $offset, $$unsubscribe_offset;
      let $visibleData, $$unsubscribe_visibleData;
      let { cellCount = 4 } = $$props;
      let { itemCount = 0 } = $$props;
      let { index: index28 = 0 } = $$props;
      let { vertical = true } = $$props;
      let { get: get22 } = $$props;
      let { stiffness = 0.065 } = $$props;
      let { damping = 0.9 } = $$props;
      let { useCache = true } = $$props;
      let { idKey = void 0 } = $$props;
      const move = (amount) => {
        index28 = Math.max(0, Math.min(itemCount - 1, index28 + amount));
      };
      const forceUpdate = writable(false);
      const triggerUpdate = async () => {
        await tick();
        forceUpdate.set(true);
        await tick();
        forceUpdate.set(false);
      };
      const getCached = (index29) => $visibleData.find(({ index: i2 }) => i2 === index29)?.data || get22(index29);
      let inRange = [-Infinity, Infinity];
      const initialized = writable(false);
      $$unsubscribe_initialized = subscribe(initialized, (value2) => $initialized = value2);
      const dim = writable({ w: 0, h: 0 });
      $$unsubscribe_dim = subscribe(dim, (value2) => $dim = value2);
      const offset = spring(0, { stiffness, damping });
      $$unsubscribe_offset = subscribe(offset, (value2) => $offset = value2);
      const visibleData = derived(
        [dim, offset, initialized, forceUpdate],
        ([{ w: w2, h: h2 }, $o, $initialized2, $force]) => {
          if (!w2 || !h2 || !$initialized2)
            return [];
          if ($o < inRange[0] || $o > inRange[1])
            return $visibleData;
          const cellHeight = h2 / cellCount;
          const start = Math.max(-1, Math.floor(-1 * $o / cellHeight) - 1);
          const baseOffset = $o % cellHeight;
          return Array(cellCount + 2).fill(0).map((_2, i2) => {
            const index29 = i2 + start;
            const pos = baseOffset + (i2 - 1) * cellHeight;
            if (index29 < 0 || index29 >= itemCount)
              return void 0;
            const data = $force || !useCache ? get22(index29) : getCached(index29);
            return { data, pos, index: index29 };
          }).filter(Boolean);
        },
        []
      );
      $$unsubscribe_visibleData = subscribe(visibleData, (value2) => $visibleData = value2);
      const updateOffset = (o2) => {
        inRange = [o2, $offset].sort((a2, b2) => a2 - b2);
        offset.set(o2, { hard: !$initialized });
      };
      if ($$props.cellCount === void 0 && $$bindings.cellCount && cellCount !== void 0)
        $$bindings.cellCount(cellCount);
      if ($$props.itemCount === void 0 && $$bindings.itemCount && itemCount !== void 0)
        $$bindings.itemCount(itemCount);
      if ($$props.index === void 0 && $$bindings.index && index28 !== void 0)
        $$bindings.index(index28);
      if ($$props.vertical === void 0 && $$bindings.vertical && vertical !== void 0)
        $$bindings.vertical(vertical);
      if ($$props.get === void 0 && $$bindings.get && get22 !== void 0)
        $$bindings.get(get22);
      if ($$props.stiffness === void 0 && $$bindings.stiffness && stiffness !== void 0)
        $$bindings.stiffness(stiffness);
      if ($$props.damping === void 0 && $$bindings.damping && damping !== void 0)
        $$bindings.damping(damping);
      if ($$props.useCache === void 0 && $$bindings.useCache && useCache !== void 0)
        $$bindings.useCache(useCache);
      if ($$props.idKey === void 0 && $$bindings.idKey && idKey !== void 0)
        $$bindings.idKey(idKey);
      if ($$props.move === void 0 && $$bindings.move && move !== void 0)
        $$bindings.move(move);
      if ($$props.triggerUpdate === void 0 && $$bindings.triggerUpdate && triggerUpdate !== void 0)
        $$bindings.triggerUpdate(triggerUpdate);
      if ($$props.visibleData === void 0 && $$bindings.visibleData && visibleData !== void 0)
        $$bindings.visibleData(visibleData);
      $$result.css.add(css$7);
      type = vertical ? "rows" : "columns";
      gridStyle = `grid-template-${type}: repeat(${cellCount}, 1fr);`;
      {
        {
          if ($dim.w && $dim.h) {
            updateOffset($dim.h / cellCount * index28 * -1);
            if (!$initialized)
              initialized.set(true);
          }
        }
      }
      $$unsubscribe_initialized();
      $$unsubscribe_dim();
      $$unsubscribe_offset();
      $$unsubscribe_visibleData();
      return `<div class="grid svelte-198r3wi"${add_attribute("style", gridStyle, 0)}>${each($visibleData, (obj) => {
        return `<div style="${"transform: translateY(" + escape(obj.pos, true) + "px)"}" class="svelte-198r3wi">${slots.default ? slots.default({ ...obj.data, index: obj.index }) : ``}
		</div>`;
      })}
</div>`;
    });
    css$6 = {
      code: ".container.svelte-1unzsxu{display:grid;grid-template-rows:auto 1fr}.legend.svelte-1unzsxu{display:grid;grid-template:1fr / repeat(7, 1fr);height:var(--sc-theme-calendar-legend-height);z-index:2;background:var(--sc-theme-calendar-colors-background-primary);border-bottom:1px solid var(--sc-theme-calendar-colors-border);align-items:center}a.svelte-1unzsxu{font-size:1em}.stage.svelte-1unzsxu{display:grid;grid-row:2;grid-column:1}.selected-big.svelte-1unzsxu{color:var(--sc-theme-calendar-colors-background-highlight);background:var(--sc-theme-calendar-colors-background-hover);text-align:center;align-items:center;font-size:var(--sc-theme-calendar-font-large);z-index:2;opacity:1;line-height:0}@media(max-width: 720px){.selected-big.svelte-1unzsxu{font-size:calc(var(--sc-theme-calendar-font-large) * 0.7)}}",
      map: null
    };
    duration = 450;
    DayPicker = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let totalMonths;
      let monthIndex;
      let $store, $$unsubscribe_store;
      const store = getContext(storeContextKey);
      $$unsubscribe_store = subscribe(store, (value2) => $store = value2);
      const legend = Array(7).fill(0).map((d2, i2) => (0, import_dayjs.default)().day(($store.startOfWeekIndex + i2) % 7).format("ddd"));
      const add = (amount) => () => store.add(amount, "day");
      const select = (day2) => () => {
        if (!store.isSelectable(day2))
          return;
        store.setDay(day2 || $store.selected);
        if (!$store.shouldEnlargeDay)
          return store.selectDay();
        store.enlargeDay();
        setTimeout(
          () => {
            store.selectDay();
            store.enlargeDay(false);
          },
          duration + 60
        );
      };
      const KEY_MAPPINGS = {
        left: add(-1),
        right: add(1),
        up: add(-7),
        down: add(7),
        enter: select(),
        escape: () => store.close()
      };
      const calPagesBetweenDates = (a2, b2) => {
        const yearDelta = b2.getFullYear() - a2.getFullYear();
        const firstPartialYear = yearDelta ? 12 - a2.getMonth() : b2.getMonth() - a2.getMonth() + 1;
        const fullYears = yearDelta > 1 ? (yearDelta - 1) * 12 : 0;
        const lastPartialYear = yearDelta ? b2.getMonth() + 1 : 0;
        return firstPartialYear + fullYears + lastPartialYear;
      };
      const get22 = (index28) => {
        const d2 = (0, import_dayjs.default)($store.start).add(index28, "month");
        return {
          days: store.getCalendarPage(d2.month(), d2.year())
        };
      };
      $$result.css.add(css$6);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        totalMonths = calPagesBetweenDates($store.start, $store.end);
        monthIndex = calPagesBetweenDates($store.start, $store.selected) - 1;
        $$rendered = `${validate_component(KeyControls, "KeyControls").$$render($$result, Object.assign({}, KEY_MAPPINGS, { ctx: ["days"] }), {}, {})}

<div class="container svelte-1unzsxu"><div class="legend svelte-1unzsxu">${each(legend, (label) => {
          return `<span>${escape(label)}</span>`;
        })}</div>
	${validate_component(Crossfade, "Crossfade").$$render($$result, { duration }, {}, {
          default: ({ key: key2, receive, send }) => {
            return `<div class="stage svelte-1unzsxu">${validate_component(InfiniteGrid, "InfiniteGrid").$$render(
              $$result,
              {
                cellCount: 1,
                itemCount: totalMonths,
                get: get22,
                index: monthIndex
              },
              {
                index: ($$value) => {
                  monthIndex = $$value;
                  $$settled = false;
                }
              },
              {
                default: ({ days, index: index28 }) => {
                  return `${validate_component(Grid, "Grid").$$render(
                    $$result,
                    {
                      template: "repeat(6, 1fr) / repeat(7, 1fr)"
                    },
                    {},
                    {
                      default: () => {
                        return `${each(days, (day2, i2) => {
                          return `${!$store.enlargeDay || index28 !== monthIndex || !(0, import_dayjs.default)(day2.date).isSame($store.selected) ? `<a href="#pickday" class="${[
                            "svelte-1unzsxu",
                            (!store.isSelectable(day2.date) ? "disabled" : "") + " " + (index28 === monthIndex && (0, import_dayjs.default)(day2.date).isSame($store.selected, "day") ? "selected" : "") + " " + (day2.outsider ? "outsider" : "")
                          ].join(" ").trim()}">${escape(day2.date.getDate())}
							</a>` : ``}`;
                        })}`;
                      }
                    }
                  )}`;
                }
              }
            )}</div>
		${$store.enlargeDay ? `<div class="stage selected-big svelte-1unzsxu">${escape((0, import_dayjs.default)($store.selected).date())}</div>` : ``}`;
          }
        })}
</div>`;
      } while (!$$settled);
      $$unsubscribe_store();
      return $$rendered;
    });
    ViewTransitionEffect = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$unsubscribe_store;
      const store = getContext(storeContextKey);
      $$unsubscribe_store = subscribe(store, (value2) => value2);
      $$unsubscribe_store();
      return `<div>${slots.default ? slots.default({}) : ``}</div>`;
    });
    css$5 = {
      code: "i.svelte-1eiemu5{display:inline-block;width:23px;height:23px;border-style:solid;border-color:var(--sc-theme-calendar-colors-text-primary);border-width:0;border-bottom-width:3px;border-right-width:3px;transform-origin:center center}i.right.svelte-1eiemu5{transform:translateX(-6px) rotate(-45deg)}i.left.svelte-1eiemu5{transform:translateX(6px) rotate(135deg)}",
      map: null
    };
    Arrow = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { dir = "left" } = $$props;
      if ($$props.dir === void 0 && $$bindings.dir && dir !== void 0)
        $$bindings.dir(dir);
      $$result.css.add(css$5);
      return `<i class="${escape(null_to_empty(dir), true) + " svelte-1eiemu5"}"></i>`;
    });
    css$4 = {
      code: ".controls.svelte-1ro74h8{display:grid;grid-template-columns:auto 1fr auto auto;align-items:center;text-align:center;z-index:2;border-bottom:1px solid var(--sc-theme-calendar-colors-border);font-size:1.5em;overflow:hidden}.controls.svelte-1ro74h8>*{height:80px;padding:0 17px;display:grid;align-items:center}.button.svelte-1ro74h8{padding:10px 18px;cursor:pointer;background:var(--sc-theme-calendar-colors-background-primary);transition:all 100ms linear}.button.svelte-1ro74h8:hover{background:var(--sc-theme-calendar-colors-background-hover)}.label.svelte-1ro74h8{font-weight:bold}",
      map: null
    };
    CalendarControls = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let visibleMonth;
      let label;
      let addMult;
      let $store, $$unsubscribe_store;
      const store = getContext(storeContextKey);
      $$unsubscribe_store = subscribe(store, (value2) => $store = value2);
      const UNIT_BY_VIEW = {
        days: "month",
        months: "year",
        years: "year"
      };
      const add = (amount) => () => store.add(amount * addMult, UNIT_BY_VIEW[$store.activeView]);
      const VIEW_TRANSITIONS = ["days", "months", "years"];
      const updateActiveView = () => {
        const transitionIndex = VIEW_TRANSITIONS.indexOf($store.activeView) + 1;
        const newView = transitionIndex ? VIEW_TRANSITIONS[transitionIndex] : null;
        if (newView)
          store.setActiveView(newView);
      };
      const KEY_MAPPINGS = {
        pageDown: add(-1),
        pageUp: add(1),
        control: updateActiveView
      };
      $$result.css.add(css$4);
      visibleMonth = (0, import_dayjs.default)(new Date($store.year, $store.month, 1));
      label = `${$store.activeView === "days" ? visibleMonth.format("MMMM ") : ""}${$store.year}`;
      addMult = $store.activeView === "years" ? 10 : 1;
      $$unsubscribe_store();
      return `${validate_component(KeyControls, "KeyControls").$$render($$result, Object.assign({}, { ctx: ["days", "months", "years"] }, { limit: 180 }, KEY_MAPPINGS), {}, {})}
<div class="controls svelte-1ro74h8"><div class="button svelte-1ro74h8">${validate_component(Arrow, "Arrow").$$render($$result, { dir: "left" }, {}, {})}</div>
	<span class="button label svelte-1ro74h8">${escape(label)}</span>
	<div class="button svelte-1ro74h8">${validate_component(Arrow, "Arrow").$$render($$result, { dir: "right" }, {}, {})}</div>
</div>`;
    });
    CrossfadeProvider = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $store, $$unsubscribe_store;
      const noop4 = () => false;
      const store = getContext("crossfade") || writable({ send: noop4, receive: noop4 });
      $$unsubscribe_store = subscribe(store, (value2) => $store = value2);
      $$unsubscribe_store();
      return `${slots.default ? slots.default({
        key: $store.key,
        send: $store.send,
        receive: $store.receive
      }) : ``}`;
    });
    css$3 = {
      code: "div.svelte-t161t{display:grid;height:100%}",
      map: null
    };
    MonthPicker = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let yearIndex;
      let itemCount;
      let $store, $$unsubscribe_store;
      const store = getContext(storeContextKey);
      $$unsubscribe_store = subscribe(store, (value2) => $store = value2);
      let grid;
      const get22 = (index28) => ({
        months: Array(12).fill(0).map((d2, i2) => {
          const month = (0, import_dayjs.default)(new Date($store.start.getFullYear() + index28, i2, 1));
          return {
            year: $store.start.getFullYear() + index28,
            label: month.format("MMM"),
            index: i2,
            disabled: !store.isSelectable(month, ["date"])
          };
        })
      });
      const close = () => store.setActiveView("days");
      const add = (amount) => () => {
        store.add(amount, "month", ["date"]);
      };
      const KEY_MAPPINGS = {
        left: add(-1),
        right: add(1),
        up: add(-3),
        down: add(3),
        enter: close,
        escape: close
      };
      $$result.css.add(css$3);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        yearIndex = $store.year - $store.start.getFullYear();
        itemCount = $store.end.getFullYear() - $store.start.getFullYear() + 1;
        $$rendered = `${validate_component(KeyControls, "KeyControls").$$render($$result, Object.assign({}, KEY_MAPPINGS, { ctx: ["months"] }), {}, {})}
<div class="svelte-t161t">${validate_component(InfiniteGrid, "InfiniteGrid").$$render(
          $$result,
          {
            cellCount: 1,
            itemCount,
            get: get22,
            index: yearIndex,
            this: grid
          },
          {
            index: ($$value) => {
              yearIndex = $$value;
              $$settled = false;
            },
            this: ($$value) => {
              grid = $$value;
              $$settled = false;
            }
          },
          {
            default: ({ months }) => {
              return `${validate_component(Grid, "Grid").$$render(
                $$result,
                {
                  template: "repeat(4, 1fr) / repeat(3, 1fr)"
                },
                {},
                {
                  default: () => {
                    return `${each(months, (month, i2) => {
                      return `<a href="#selectMonth"${add_classes(((month.disabled ? "disabled" : "") + " " + ($store.month === i2 && $store.year === month.year ? "selected" : "")).trim())}>${escape(month.label)}
				</a>`;
                    })}`;
                  }
                }
              )}`;
            }
          }
        )}
</div>`;
      } while (!$$settled);
      $$unsubscribe_store();
      return $$rendered;
    });
    css$2 = {
      code: "div.svelte-t161t{display:grid;height:100%}",
      map: null
    };
    YearPicker = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let KEY_MAPPINGS;
      let startYear;
      let endYear;
      let numPerPage;
      let itemCount;
      let yearIndex;
      let $store, $$unsubscribe_store;
      let { rowCount = 3 } = $$props;
      let { colCount = 3 } = $$props;
      const store = getContext(storeContextKey);
      $$unsubscribe_store = subscribe(store, (value2) => $store = value2);
      const close = () => store.setActiveView("months");
      const add = (amount) => () => {
        const result = $store.year + amount;
        if (result < startYear || result > endYear)
          return;
        store.add(amount, "year", ["month", "date"]);
      };
      const get22 = (index28) => {
        const firstYear = startYear + index28 * numPerPage;
        return {
          years: Array(numPerPage).fill(0).map((d2, i2) => ({
            number: firstYear + i2,
            selectable: firstYear + i2 <= endYear
          }))
        };
      };
      if ($$props.rowCount === void 0 && $$bindings.rowCount && rowCount !== void 0)
        $$bindings.rowCount(rowCount);
      if ($$props.colCount === void 0 && $$bindings.colCount && colCount !== void 0)
        $$bindings.colCount(colCount);
      $$result.css.add(css$2);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        KEY_MAPPINGS = {
          up: add(-1 * colCount),
          down: add(colCount),
          left: add(-1),
          right: add(1),
          enter: close,
          escape: close
        };
        startYear = $store.start.getFullYear();
        endYear = $store.end.getFullYear();
        numPerPage = rowCount * colCount;
        itemCount = Math.ceil(endYear - startYear + 1) / numPerPage;
        yearIndex = Math.floor(($store.year - startYear) / numPerPage);
        $$rendered = `${validate_component(KeyControls, "KeyControls").$$render($$result, Object.assign({}, KEY_MAPPINGS, { ctx: ["years"] }), {}, {})}

<div class="svelte-t161t">${validate_component(InfiniteGrid, "InfiniteGrid").$$render(
          $$result,
          {
            cellCount: 1,
            itemCount,
            get: get22,
            index: yearIndex
          },
          {
            index: ($$value) => {
              yearIndex = $$value;
              $$settled = false;
            }
          },
          {
            default: ({ years }) => {
              return `${validate_component(Grid, "Grid").$$render(
                $$result,
                {
                  template: "repeat(" + rowCount + ", 1fr) / repeat(" + colCount + ", 1fr)"
                },
                {},
                {
                  default: () => {
                    return `${each(years, (year2) => {
                      return `<a href="#year"${add_classes((($store.year === year2.number ? "selected" : "") + " " + (!year2.selectable ? "disabled" : "")).trim())}>${escape(year2.number)}
				</a>`;
                    })}`;
                  }
                }
              )}`;
            }
          }
        )}
</div>`;
      } while (!$$settled);
      $$unsubscribe_store();
      return $$rendered;
    });
    css$1 = {
      code: ".grid.svelte-126ec0f.svelte-126ec0f{display:grid;width:var(--sc-theme-calendar-width);max-width:var(--sc-theme-calendar-maxWidth);grid-template-rows:auto calc(\n				min(var(--sc-theme-calendar-maxWidth), var(--sc-theme-calendar-width)) * 6 / 7 +\n					var(--sc-theme-calendar-legend-height)\n			);font-family:Rajdhani, -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial,\n			sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';box-shadow:var(--sc-theme-calendar-shadow);background:var(--sc-theme-calendar-colors-background-primary);text-align:center;color:var(--sc-theme-calendar-colors-text-primary)}.contents.svelte-126ec0f.svelte-126ec0f{display:grid;overflow:hidden}.grid.svelte-126ec0f .contents.svelte-126ec0f>*{display:grid;grid-row:1;grid-column:1;height:100%;grid-template:1fr / 1fr}",
      map: null
    };
    Calendar = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $store, $$unsubscribe_store;
      const store = getContext(storeContextKey);
      $$unsubscribe_store = subscribe(store, (value2) => $store = value2);
      $$result.css.add(css$1);
      $$unsubscribe_store();
      return `${validate_component(CrossfadeProvider, "CrossfadeProvider").$$render($$result, {}, {}, {
        default: ({ key: key2, send, receive }) => {
          return `<div class="grid svelte-126ec0f">${validate_component(CalendarControls, "DatepickerControls").$$render($$result, {}, {}, {})}
		<div class="contents svelte-126ec0f">${$store.activeView === "days" ? `${validate_component(ViewTransitionEffect, "ViewTransitionEffect").$$render($$result, {}, {}, {
            default: () => {
              return `${validate_component(DayPicker, "DayPicker").$$render($$result, {}, {}, {})}`;
            }
          })}` : `${$store.activeView === "months" ? `${validate_component(ViewTransitionEffect, "ViewTransitionEffect").$$render($$result, {}, {}, {
            default: () => {
              return `${validate_component(MonthPicker, "MonthPicker").$$render($$result, {}, {}, {})}`;
            }
          })}` : `${$store.activeView === "years" ? `${validate_component(ViewTransitionEffect, "ViewTransitionEffect").$$render($$result, {}, {}, {
            default: () => {
              return `${validate_component(YearPicker, "YearPicker").$$render($$result, {}, {}, {})}`;
            }
          })}` : ``}`}`}</div></div>`;
        }
      })}`;
    });
    calendar = {
      selected: /* @__PURE__ */ new Date(),
      start: (0, import_dayjs.default)().add(-100, "year").toDate(),
      end: (0, import_dayjs.default)().add(100, "year").toDate(),
      format: "MM/DD/YYYY"
    };
    css = {
      code: ".button-container.svelte-18igz6t.svelte-18igz6t{display:grid}.button-container.svelte-18igz6t>.svelte-18igz6t{grid-column:1;grid-row:1;height:100%}button.svelte-18igz6t.svelte-18igz6t{padding:16px 30px;background:var(--sc-theme-calendar-colors-background-primary);color:var(--sc-theme-calendar-colors-text-primary);font-size:1.3em;border-radius:2px;border:0;box-shadow:4px 3px 9px rgb(0 0 0 / 20%);cursor:pointer}.button-text.svelte-18igz6t.svelte-18igz6t{padding:16px 30px;color:var(--sc-theme-calendar-colors-text-primary);font-size:1.3em;cursor:pointer}",
      map: null
    };
    Datepicker = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $store, $$unsubscribe_store;
      let { selected = calendar.selected } = $$props;
      let { start = calendar.start } = $$props;
      let { end = calendar.end } = $$props;
      let { format = calendar.format } = $$props;
      let { formatted = "" } = $$props;
      let { theme: theme2 = {} } = $$props;
      let { defaultTheme = void 0 } = $$props;
      let { startOfWeekIndex = 0 } = $$props;
      let { store = datepickerStore.get({
        selected,
        start,
        end,
        shouldEnlargeDay: true,
        startOfWeekIndex
      }) } = $$props;
      $$unsubscribe_store = subscribe(store, (value2) => $store = value2);
      setContext(storeContextKey, store);
      setContext(keyControlsContextKey, derived(store, ($s) => $s.activeView));
      if ($$props.selected === void 0 && $$bindings.selected && selected !== void 0)
        $$bindings.selected(selected);
      if ($$props.start === void 0 && $$bindings.start && start !== void 0)
        $$bindings.start(start);
      if ($$props.end === void 0 && $$bindings.end && end !== void 0)
        $$bindings.end(end);
      if ($$props.format === void 0 && $$bindings.format && format !== void 0)
        $$bindings.format(format);
      if ($$props.formatted === void 0 && $$bindings.formatted && formatted !== void 0)
        $$bindings.formatted(formatted);
      if ($$props.theme === void 0 && $$bindings.theme && theme2 !== void 0)
        $$bindings.theme(theme2);
      if ($$props.defaultTheme === void 0 && $$bindings.defaultTheme && defaultTheme !== void 0)
        $$bindings.defaultTheme(defaultTheme);
      if ($$props.startOfWeekIndex === void 0 && $$bindings.startOfWeekIndex && startOfWeekIndex !== void 0)
        $$bindings.startOfWeekIndex(startOfWeekIndex);
      if ($$props.store === void 0 && $$bindings.store && store !== void 0)
        $$bindings.store(store);
      $$result.css.add(css);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        selected = $store.selected;
        formatted = (0, import_dayjs.default)(selected).format(format);
        $$rendered = `${validate_component(Theme, "Theme").$$render($$result, { defaultTheme, theme: theme2 }, {}, {
          default: ({ style }) => {
            return `${validate_component(Popover, "Popover").$$render(
              $$result,
              { style, isOpen: $store.open },
              {
                isOpen: ($$value) => {
                  $store.open = $$value;
                  $$settled = false;
                }
              },
              {
                contents: ({ key: key2, send, receive }) => {
                  return `${validate_component(Calendar, "Calendar").$$render($$result, {}, {}, {})}
		`;
                },
                default: ({ key: key2, send, receive }) => {
                  return `${slots.default ? slots.default({ key: key2, send, receive, formatted }) : `
			<div class="button-container svelte-18igz6t"><button class="svelte-18igz6t"></button>
				<span class="button-text svelte-18igz6t">${escape(formatted)}</span></div>
		`}`;
                }
              }
            )}`;
          }
        })}`;
      } while (!$$settled);
      $$unsubscribe_store();
      return $$rendered;
    });
  }
});
var import_classnames3;
var Modal;
var init_Modal = __esm({
  ".svelte-kit/output/server/chunks/Modal.js"() {
    init_index2();
    import_classnames3 = __toESM(require_classnames(), 1);
    init_CloseButton();
    Modal = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$restProps = compute_rest_props($$props, [
        "open",
        "title",
        "size",
        "placement",
        "autoclose",
        "permanent",
        "backdropClasses",
        "defaultClass",
        "outsideclose"
      ]);
      let $$slots = compute_slots(slots);
      let { open: open2 = false } = $$props;
      let { title = "" } = $$props;
      let { size: size2 = "md" } = $$props;
      let { placement = "center" } = $$props;
      let { autoclose = false } = $$props;
      let { permanent = false } = $$props;
      let { backdropClasses = "bg-gray-900 bg-opacity-50 dark:bg-opacity-80" } = $$props;
      let { defaultClass = "relative flex flex-col mx-auto" } = $$props;
      let { outsideclose = false } = $$props;
      const dispatch = createEventDispatcher();
      const getPlacementClasses = () => {
        switch (placement) {
          case "top-left":
            return ["justify-start", "items-start"];
          case "top-center":
            return ["justify-center", "items-start"];
          case "top-right":
            return ["justify-end", "items-start"];
          case "center-left":
            return ["justify-start", "items-center"];
          case "center":
            return ["justify-center", "items-center"];
          case "center-right":
            return ["justify-end", "items-center"];
          case "bottom-left":
            return ["justify-start", "items-end"];
          case "bottom-center":
            return ["justify-center", "items-end"];
          case "bottom-right":
            return ["justify-end", "items-end"];
          default:
            return ["justify-center", "items-center"];
        }
      };
      const sizes = {
        xs: "max-w-md",
        sm: "max-w-lg",
        md: "max-w-2xl",
        lg: "max-w-4xl",
        xl: "max-w-7xl"
      };
      let frameClass;
      if ($$props.open === void 0 && $$bindings.open && open2 !== void 0)
        $$bindings.open(open2);
      if ($$props.title === void 0 && $$bindings.title && title !== void 0)
        $$bindings.title(title);
      if ($$props.size === void 0 && $$bindings.size && size2 !== void 0)
        $$bindings.size(size2);
      if ($$props.placement === void 0 && $$bindings.placement && placement !== void 0)
        $$bindings.placement(placement);
      if ($$props.autoclose === void 0 && $$bindings.autoclose && autoclose !== void 0)
        $$bindings.autoclose(autoclose);
      if ($$props.permanent === void 0 && $$bindings.permanent && permanent !== void 0)
        $$bindings.permanent(permanent);
      if ($$props.backdropClasses === void 0 && $$bindings.backdropClasses && backdropClasses !== void 0)
        $$bindings.backdropClasses(backdropClasses);
      if ($$props.defaultClass === void 0 && $$bindings.defaultClass && defaultClass !== void 0)
        $$bindings.defaultClass(defaultClass);
      if ($$props.outsideclose === void 0 && $$bindings.outsideclose && outsideclose !== void 0)
        $$bindings.outsideclose(outsideclose);
      {
        dispatch(open2 ? "open" : "hide");
      }
      frameClass = (0, import_classnames3.default)(defaultClass, "w-full", $$props.class);
      return `${open2 ? `
  <div${add_attribute("class", (0, import_classnames3.default)("fixed inset-0 z-40", backdropClasses), 0)}></div>
  
  <div${add_attribute("class", (0, import_classnames3.default)("fixed top-0 left-0 right-0 h-modal md:inset-0 md:h-full z-50 w-full p-4 flex", ...getPlacementClasses()), 0)} tabindex="-1" aria-modal="true" role="dialog"><div class="${"flex relative " + escape(sizes[size2], true) + " w-full max-h-full"}">
      ${validate_component(Frame, "Frame").$$render($$result, Object.assign({}, { rounded: true }, { shadow: true }, $$restProps, { class: frameClass }), {}, {
        default: () => {
          return `
        ${$$slots.header || title ? `${validate_component(Frame, "Frame").$$render(
            $$result,
            {
              color: $$restProps.color,
              class: "flex justify-between items-center p-4 rounded-t border-b"
            },
            {},
            {
              default: () => {
                return `${slots.header ? slots.header({}) : `
              <h3 class="${"text-xl font-semibold " + escape($$restProps.color ? "" : "text-gray-900 dark:text-white", true) + " p-0"}">${escape(title)}</h3>
            `}
            ${!permanent ? `${validate_component(CloseButton, "CloseButton").$$render(
                  $$result,
                  {
                    name: "Close modal",
                    color: $$restProps.color
                  },
                  {},
                  {}
                )}` : ``}`;
              }
            }
          )}` : `${!permanent ? `${validate_component(CloseButton, "CloseButton").$$render(
            $$result,
            {
              name: "Close modal",
              class: "absolute top-3 right-2.5",
              color: $$restProps.color
            },
            {},
            {}
          )}` : ``}`}
        
        <div class="p-6 space-y-6 flex-1 overflow-y-auto overscroll-contain" role="document">${slots.default ? slots.default({}) : ``}</div>
        
        ${$$slots.footer ? `${validate_component(Frame, "Frame").$$render(
            $$result,
            {
              color: $$restProps.color,
              class: "flex items-center p-6 space-x-2 rounded-b border-t"
            },
            {},
            {
              default: () => {
                return `${slots.footer ? slots.footer({}) : ``}`;
              }
            }
          )}` : ``}`;
        }
      })}</div></div>` : ``}

`;
    });
  }
});
var import_classnames4;
var Table;
var TableBody;
var TableBodyCell;
var TableBodyRow;
var TableHead;
var TableHeadCell;
var init_TableHeadCell = __esm({
  ".svelte-kit/output/server/chunks/TableHeadCell.js"() {
    init_index2();
    import_classnames4 = __toESM(require_classnames(), 1);
    Table = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$restProps = compute_rest_props($$props, ["divClass", "striped", "hoverable", "noborder", "shadow", "color", "customeColor"]);
      let { divClass = "relative overflow-x-auto" } = $$props;
      let { striped = false } = $$props;
      let { hoverable = false } = $$props;
      let { noborder = false } = $$props;
      let { shadow = false } = $$props;
      let { color = "default" } = $$props;
      let { customeColor = "" } = $$props;
      const colors = {
        default: "text-gray-500 dark:text-gray-400",
        blue: "text-blue-100 dark:text-blue-100",
        green: "text-green-100 dark:text-green-100",
        red: "text-red-100 dark:text-red-100",
        yellow: "text-yellow-100 dark:text-yellow-100",
        purple: "text-purple-100 dark:text-purple-100",
        indigo: "text-indigo-100 dark:text-indigo-100",
        pink: "text-pink-100 dark:text-pink-100",
        custom: customeColor
      };
      if ($$props.divClass === void 0 && $$bindings.divClass && divClass !== void 0)
        $$bindings.divClass(divClass);
      if ($$props.striped === void 0 && $$bindings.striped && striped !== void 0)
        $$bindings.striped(striped);
      if ($$props.hoverable === void 0 && $$bindings.hoverable && hoverable !== void 0)
        $$bindings.hoverable(hoverable);
      if ($$props.noborder === void 0 && $$bindings.noborder && noborder !== void 0)
        $$bindings.noborder(noborder);
      if ($$props.shadow === void 0 && $$bindings.shadow && shadow !== void 0)
        $$bindings.shadow(shadow);
      if ($$props.color === void 0 && $$bindings.color && color !== void 0)
        $$bindings.color(color);
      if ($$props.customeColor === void 0 && $$bindings.customeColor && customeColor !== void 0)
        $$bindings.customeColor(customeColor);
      {
        setContext("striped", striped);
      }
      {
        setContext("hoverable", hoverable);
      }
      {
        setContext("noborder", noborder);
      }
      {
        setContext("color", color);
      }
      return `<div${add_attribute("class", (0, import_classnames4.default)(divClass, shadow && "shadow-md sm:rounded-lg"), 0)}><table${spread(
        [
          escape_object($$restProps),
          {
            class: escape_attribute_value((0, import_classnames4.default)("w-full text-left text-sm", colors[color], $$props.class))
          }
        ],
        {}
      )}>${slots.default ? slots.default({}) : ``}</table></div>

`;
    });
    TableBody = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { tableBodyClass = void 0 } = $$props;
      if ($$props.tableBodyClass === void 0 && $$bindings.tableBodyClass && tableBodyClass !== void 0)
        $$bindings.tableBodyClass(tableBodyClass);
      return `<tbody${add_attribute("class", tableBodyClass, 0)}>${slots.default ? slots.default({}) : ``}</tbody>

`;
    });
    TableBodyCell = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$restProps = compute_rest_props($$props, ["tdClass"]);
      let { tdClass = "px-6 py-4 whitespace-nowrap font-medium " } = $$props;
      let color = "default";
      color = getContext("color");
      let tdClassfinal;
      if ($$props.tdClass === void 0 && $$bindings.tdClass && tdClass !== void 0)
        $$bindings.tdClass(tdClass);
      tdClassfinal = (0, import_classnames4.default)(
        tdClass,
        color === "default" ? "text-gray-900 dark:text-white" : "text-blue-50 whitespace-nowrap dark:text-blue-100",
        $$props.class
      );
      return `${((tag) => {
        return tag ? `<${$$props.onclick ? "button" : "td"}${spread(
          [
            escape_object($$restProps),
            {
              class: escape_attribute_value(tdClassfinal)
            },
            {
              role: escape_attribute_value($$props.onclick ? "button" : void 0)
            }
          ],
          {}
        )}>${is_void(tag) ? "" : `${slots.default ? slots.default({}) : ``}`}${is_void(tag) ? "" : `</${tag}>`}` : "";
      })($$props.onclick ? "button" : "td")}

`;
    });
    TableBodyRow = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$restProps = compute_rest_props($$props, ["color"]);
      let { color = getContext("color") } = $$props;
      const colors = {
        default: "bg-white dark:bg-gray-800 dark:border-gray-700",
        blue: "bg-blue-500 border-blue-400",
        green: "bg-green-500 border-green-400",
        red: "bg-red-500 border-red-400",
        yellow: "bg-yellow-500 border-yellow-400",
        purple: "bg-purple-500 border-purple-400",
        custom: ""
      };
      const hoverColors = {
        default: "hover:bg-gray-50 dark:hover:bg-gray-600",
        blue: "hover:bg-blue-400",
        green: "hover:bg-green-400",
        red: "hover:bg-red-400",
        yellow: "hover:bg-yellow-400",
        purple: "hover:bg-purple-400",
        custom: ""
      };
      const stripColors = {
        default: "odd:bg-white even:bg-gray-50 odd:dark:bg-gray-800 even:dark:bg-gray-700",
        blue: "odd:bg-blue-800 even:bg-blue-700 odd:dark:bg-blue-800 even:dark:bg-blue-700",
        green: "odd:bg-green-800 even:bg-green-700 odd:dark:bg-green-800 even:dark:bg-green-700",
        red: "odd:bg-red-800 even:bg-red-700 odd:dark:bg-red-800 even:dark:bg-red-700",
        yellow: "odd:bg-yellow-800 even:bg-yellow-700 odd:dark:bg-yellow-800 even:dark:bg-yellow-700",
        purple: "odd:bg-purple-800 even:bg-purple-700 odd:dark:bg-purple-800 even:dark:bg-purple-700",
        custom: ""
      };
      let trClass;
      if ($$props.color === void 0 && $$bindings.color && color !== void 0)
        $$bindings.color(color);
      trClass = (0, import_classnames4.default)(!getContext("noborder") && "border-b last:border-b-0", colors[color], getContext("hoverable") && hoverColors[color], getContext("striped") && stripColors[color], $$props.class);
      return `<tr${spread([escape_object($$restProps), { class: escape_attribute_value(trClass) }], {})}>${slots.default ? slots.default({}) : ``}</tr>

`;
    });
    TableHead = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let theadClassfinal;
      let $$restProps = compute_rest_props($$props, ["theadClass", "defaultRow"]);
      let { theadClass = "text-xs uppercase" } = $$props;
      let { defaultRow = true } = $$props;
      let color;
      color = getContext("color");
      let noborder = getContext("noborder");
      let striped = getContext("striped");
      let defaultBgColor = noborder || striped ? "" : "bg-gray-50 dark:bg-gray-700";
      const bgColors = {
        default: defaultBgColor,
        blue: "bg-blue-600",
        green: "bg-green-600",
        red: "bg-red-600",
        yellow: "bg-yellow-600",
        purple: "bg-purple-600",
        custom: ""
      };
      let textColor = color === "default" ? "text-gray-700 dark:text-gray-400" : color === "custom" ? "" : "text-white  dark:text-white";
      let borderColors = striped ? "" : color === "default" ? "border-gray-700" : color === "custom" ? "" : `border-${color}-400`;
      if ($$props.theadClass === void 0 && $$bindings.theadClass && theadClass !== void 0)
        $$bindings.theadClass(theadClass);
      if ($$props.defaultRow === void 0 && $$bindings.defaultRow && defaultRow !== void 0)
        $$bindings.defaultRow(defaultRow);
      theadClassfinal = (0, import_classnames4.default)(theadClass, textColor, striped && borderColors, bgColors[color], $$props.class);
      return `<thead${spread(
        [
          escape_object($$restProps),
          {
            class: escape_attribute_value(theadClassfinal)
          }
        ],
        {}
      )}>${defaultRow ? `<tr>${slots.default ? slots.default({}) : ``}</tr>` : `${slots.default ? slots.default({}) : ``}`}</thead>

`;
    });
    TableHeadCell = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$restProps = compute_rest_props($$props, ["padding"]);
      let { padding = "px-6 py-3" } = $$props;
      if ($$props.padding === void 0 && $$bindings.padding && padding !== void 0)
        $$bindings.padding(padding);
      return `<th${spread(
        [
          escape_object($$restProps),
          {
            class: escape_attribute_value((0, import_classnames4.default)(padding, $$props.class))
          }
        ],
        {}
      )}>${slots.default ? slots.default({}) : ``}</th>

`;
    });
  }
});
var import_classnames5;
var TableSearch;
var init_TableSearch = __esm({
  ".svelte-kit/output/server/chunks/TableSearch.js"() {
    init_index2();
    import_classnames5 = __toESM(require_classnames(), 1);
    TableSearch = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$restProps = compute_rest_props($$props, [
        "divClass",
        "inputValue",
        "striped",
        "hoverable",
        "placeholder",
        "customColor",
        "color"
      ]);
      let { divClass = "relative overflow-x-auto shadow-md sm:rounded-lg" } = $$props;
      let { inputValue = "" } = $$props;
      let { striped = false } = $$props;
      let { hoverable = false } = $$props;
      let { placeholder = "Search" } = $$props;
      let { customColor = "" } = $$props;
      let { color = "default" } = $$props;
      const colors = {
        default: "text-gray-500 dark:text-gray-400",
        blue: "text-blue-100 dark:text-blue-100",
        green: "text-green-100 dark:text-green-100",
        red: "text-red-100 dark:text-red-100",
        yellow: "text-yellow-100 dark:text-yellow-100",
        purple: "text-purple-100 dark:text-purple-100",
        custom: customColor
      };
      if ($$props.divClass === void 0 && $$bindings.divClass && divClass !== void 0)
        $$bindings.divClass(divClass);
      if ($$props.inputValue === void 0 && $$bindings.inputValue && inputValue !== void 0)
        $$bindings.inputValue(inputValue);
      if ($$props.striped === void 0 && $$bindings.striped && striped !== void 0)
        $$bindings.striped(striped);
      if ($$props.hoverable === void 0 && $$bindings.hoverable && hoverable !== void 0)
        $$bindings.hoverable(hoverable);
      if ($$props.placeholder === void 0 && $$bindings.placeholder && placeholder !== void 0)
        $$bindings.placeholder(placeholder);
      if ($$props.customColor === void 0 && $$bindings.customColor && customColor !== void 0)
        $$bindings.customColor(customColor);
      if ($$props.color === void 0 && $$bindings.color && color !== void 0)
        $$bindings.color(color);
      {
        setContext("striped", striped);
      }
      {
        setContext("hoverable", hoverable);
      }
      {
        setContext("color", color);
      }
      return `<div${add_attribute("class", divClass, 0)}><div class="p-4"><label for="table-search" class="sr-only">Search</label>
    <div class="relative mt-1"><div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none"><svg class="w-5 h-5 text-gray-500 dark:text-gray-400" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd"></path></svg></div>
      <input type="text" id="table-search" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-80 pl-10 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"${add_attribute("placeholder", placeholder, 0)}${add_attribute("value", inputValue, 0)}></div></div>
  <table${spread(
        [
          escape_object($$restProps),
          {
            class: escape_attribute_value((0, import_classnames5.default)("w-full text-left text-sm", colors[color], $$props.class))
          }
        ],
        {}
      )}>${slots.default ? slots.default({}) : ``}</table></div>

`;
    });
  }
});
var page_svelte_exports = {};
__export(page_svelte_exports, {
  default: () => Page
});
var import_dayjs2;
var import_just_throttle2;
var import_classnames6;
var theme;
var Page;
var init_page_svelte = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/courses/(course)/_slug_/assignments/_page.svelte.js"() {
    init_index2();
    init_devalue();
    init_Scrollable_svelte_svelte_type_style_lang();
    import_dayjs2 = __toESM(require_dayjs_min(), 1);
    import_just_throttle2 = __toESM(require_just_throttle(), 1);
    import_classnames6 = __toESM(require_classnames(), 1);
    init_Modal();
    init_TableHeadCell();
    init_TableSearch();
    init_stores();
    theme = {
      calendar: {
        width: "400px",
        maxWidth: "75vw",
        legend: {
          height: "45px"
        },
        shadow: "0px 10px 26px rgba(0, 0, 0, 0.1)",
        colors: {
          text: {
            primary: "#eee",
            highlight: "#fff"
          },
          background: {
            primary: "rgb(28,35,45)",
            highlight: "#435bad",
            hover: "#242f49"
          },
          border: "#222"
        },
        font: {
          regular: "1em",
          large: "15em"
        },
        grid: {
          disabledOpacity: ".5",
          outsiderOpacity: ".7"
        }
      }
    };
    Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let filteredItems;
      let $$unsubscribe_page;
      $$unsubscribe_page = subscribe(page, (value2) => value2);
      let { data } = $$props;
      let { show_create_box } = $$props;
      let { dueDate } = $$props;
      let { availablefromDate } = $$props;
      let { availableuntilDate } = $$props;
      let modules = data.modules;
      let assignments;
      let storeDueDate;
      let searchTerm = "";
      let deleteModel = false;
      if ($$props.data === void 0 && $$bindings.data && data !== void 0)
        $$bindings.data(data);
      if ($$props.show_create_box === void 0 && $$bindings.show_create_box && show_create_box !== void 0)
        $$bindings.show_create_box(show_create_box);
      if ($$props.dueDate === void 0 && $$bindings.dueDate && dueDate !== void 0)
        $$bindings.dueDate(dueDate);
      if ($$props.availablefromDate === void 0 && $$bindings.availablefromDate && availablefromDate !== void 0)
        $$bindings.availablefromDate(availablefromDate);
      if ($$props.availableuntilDate === void 0 && $$bindings.availableuntilDate && availableuntilDate !== void 0)
        $$bindings.availableuntilDate(availableuntilDate);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        assignments = data.assignments.assignmentData;
        filteredItems = assignments.filter((assignments2) => assignments2.title.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1);
        $$rendered = `<div class="w-full"><section class="p-1"><div class="container"><h4 class="text-xl font-bold text-white -mx-auto my-5">Assignments</h4>
			<button class="relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-blue-500 to-blue-300 group-hover:from-blue-300 group-hover:to-blue-500 hover:text-white dark:text-white focus:ring-4 focus:outline-none focus:ring-blue-200 dark:focus:ring-blue-800"><span class="relative px-5 py-2.5 transition-all|local ease-in duration-75 bg-white dark:bg-gray-600 rounded-md group-hover:bg-opacity-0">Create
				</span></button>

			<div class="py-4"><div class="relative overflow-x-auto shadow-md sm:rounded-lg w-full">${validate_component(TableSearch, "TableSearch").$$render(
          $$result,
          {
            placeholder: "Search by title...",
            hoverable: true,
            inputValue: searchTerm
          },
          {
            inputValue: ($$value) => {
              searchTerm = $$value;
              $$settled = false;
            }
          },
          {
            default: () => {
              return `${validate_component(Table, "Table").$$render($$result, { shadow: true, hoverable: true }, {}, {
                default: () => {
                  return `${validate_component(TableHead, "TableHead").$$render($$result, {}, {}, {
                    default: () => {
                      return `${validate_component(TableHeadCell, "TableHeadCell").$$render($$result, {}, {}, {
                        default: () => {
                          return `Title`;
                        }
                      })}
					${validate_component(TableHeadCell, "TableHeadCell").$$render($$result, {}, {}, {
                        default: () => {
                          return `Category`;
                        }
                      })}
					${validate_component(TableHeadCell, "TableHeadCell").$$render($$result, {}, {}, {
                        default: () => {
                          return `Due`;
                        }
                      })}
					${validate_component(TableHeadCell, "TableHeadCell").$$render($$result, {}, {}, {
                        default: () => {
                          return `Points`;
                        }
                      })}
					${validate_component(TableHeadCell, "TableHeadCell").$$render($$result, {}, {}, {
                        default: () => {
                          return `<span class="sr-only ">Edit</span>`;
                        }
                      })}`;
                    }
                  })}
				${validate_component(TableBody, "TableBody").$$render($$result, { class: "divide-y" }, {}, {
                    default: () => {
                      return `${each(filteredItems, ({ assignment_id, title, category, due, points }, i2) => {
                        return `${validate_component(TableBodyRow, "TableBodyRow").$$render($$result, { class: "cursor-pointer" }, {}, {
                          default: () => {
                            return `${validate_component(TableBodyCell, "TableBodyCell").$$render($$result, {}, {}, {
                              default: () => {
                                return `${escape(title ? title : "No title")}`;
                              }
                            })}
							${validate_component(TableBodyCell, "TableBodyCell").$$render($$result, {}, {}, {
                              default: () => {
                                return `${escape(category ? category : "No category")}`;
                              }
                            })}
							${validate_component(TableBodyCell, "TableBodyCell").$$render($$result, {}, {}, {
                              default: () => {
                                return `${escape(due ? due.substring(0, 10) : "No date")}`;
                              }
                            })}
							${validate_component(TableBodyCell, "TableBodyCell").$$render($$result, {}, {}, {
                              default: () => {
                                return `${escape(points ? points : "No Points")}`;
                              }
                            })}

							${validate_component(TableBodyCell, "TableBodyCell").$$render(
                              $$result,
                              {
                                tdClass: "py-4 whitespace-nowrap font-medium"
                              },
                              {},
                              {
                                default: () => {
                                  return `<a class="font-medium text-blue-600 hover:underline dark:text-blue-500">Edit
								</a>
								<a class="font-medium text-blue-600 hover:underline dark:text-red-500 ">Delete
								</a>
							`;
                                }
                              }
                            )}
						`;
                          }
                        })}`;
                      })}`;
                    }
                  })}`;
                }
              })}`;
            }
          }
        )}

				
				${assignments?.length === 0 ? `<div class="flex p-4 mb-6 mt-4 ml-6 text-sm text-blue-800 border border-blue-300 rounded-lg bg-blue-50 dark:bg-gray-800 dark:text-blue-400 dark:border-blue-800" role="alert"><svg aria-hidden="true" class="flex-shrink-0 inline w-5 h-5 mr-3" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1
								 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path></svg>
						<span class="sr-only">Info</span>
						<div><span class="font-medium">No assignments found...</span></div></div>` : ``}</div></div></div></section></div>

${show_create_box ? `
	<div class="z-1000 fixed top-1/2 left-1/2"><div class="relative p-4 w-full max-w-2xl h-full md:h-auto">
			<div class="relative p-4 bg-white rounded-lg shadow dark:bg-gray-700 sm:p-5">
				<div class="flex justify-between items-center pb-4 mb-4 rounded-t border-b sm:mb-5 dark:border-gray-600"><h3 class="text-lg font-semibold text-gray-900 dark:text-white">Add Assignment</h3>
					<button type="button" class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-600 dark:hover:text-white" data-modal-toggle="defaultModal"><svg aria-hidden="true" class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0
								 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
						<span class="sr-only">Close modal</span></button></div>
				
				<form method="POST" action="?/createAssignment"><div class="grid gap-4 mb-4 sm:grid-cols-2"><div><label for="name" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Assignment Name</label>
							<input type="text" name="name" id="name" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" placeholder="Assignment Name" required></div>

						<div class="sm:col-span-2"><label for="description" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Description</label>
							<textarea name="description" id="description" rows="4" class="block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" placeholder="Summarize assignment description" required></textarea></div>

						<div><label for="points" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Points</label>
							<input type="text" name="points" id="points" value="0" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" placeholder="" required=""></div>

						<div><label for="category" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Category</label>
							<select name="category" id="category" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" required><option selected="" value="Select category">Select category</option><option value="Assignment">Assignment</option><option value="Quiz">Quiz</option><option value="Project">Project</option></select></div>

						<div><label for="displayas" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Display Grade As</label>
							<select name="displayas" id="displayas" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"><option value="Points">Points</option><option value="Percentage">Percentage</option></select></div>

						<div><label for="submissiontype" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Submission Type</label>
							<select name="submissiontype" id="submissiontype" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"><option value="Points">Online</option><option value="Percentage">Physical</option></select></div>

						<div><label for="modules" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Module</label>
							<select name="modules" id="modules" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"><option value="">No module</option>${modules !== void 0 ? `${each(modules, ({ module_title, id }, i2) => {
          return `<option${add_attribute("value", id, 0)}>${escape(module_title)}</option>`;
        })}` : ``}</select></div>

						<div><label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white w-full">Due</label>
							${validate_component(Datepicker, "Datepicker").$$render(
          $$result,
          { theme, class: "w-full", storeDueDate },
          {
            storeDueDate: ($$value) => {
              storeDueDate = $$value;
              $$settled = false;
            }
          },
          {}
        )}</div>

						

						</div>
					<button type="submit" class="relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-blue-500 to-blue-300 group-hover:from-blue-300 group-hover:to-blue-500 hover:text-white dark:text-white focus:ring-4 focus:outline-none focus:ring-blue-200 dark:focus:ring-blue-800"><span class="relative px-5 py-2.5 transition-all|local ease-in duration-75 bg-white dark:bg-gray-600 rounded-md group-hover:bg-opacity-0">Create
						</span></button></form></div></div></div>` : ``}


${validate_component(Modal, "Modal").$$render(
          $$result,
          {
            title: "Remove assignment",
            open: deleteModel
          },
          {
            open: ($$value) => {
              deleteModel = $$value;
              $$settled = false;
            }
          },
          {
            default: () => {
              return `<p class="mb-4 text-gray-500 dark:text-gray-300">Are you sure you want to delete this item?</p>
	<div class="flex justify-center items-center space-x-4"><button data-modal-toggle="deleteModal" type="button" class="py-2 px-3 text-sm font-medium text-gray-500 bg-white rounded-lg border border-gray-200 hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-primary-300 hover:text-gray-900 focus:z-10 dark:bg-gray-700 dark:text-gray-300 dark:border-gray-500 dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-gray-600">No, cancel
		</button>
		<button type="submit" class="py-2 px-3 text-sm font-medium text-center text-white bg-red-600 rounded-lg hover:bg-red-700 focus:ring-4 focus:outline-none focus:ring-red-300 dark:bg-red-500 dark:hover:bg-red-600 dark:focus:ring-red-900">Yes, I&#39;m sure
		</button></div>`;
            }
          }
        )}`;
      } while (!$$settled);
      $$unsubscribe_page();
      return $$rendered;
    });
  }
});
var layout_svelte_exports4 = {};
__export(layout_svelte_exports4, {
  default: () => Layout4
});
var CourseNav;
var Layout4;
var init_layout_svelte4 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/courses/(course)/_layout.svelte.js"() {
    init_index2();
    init_stores();
    init_Settings();
    init_page_svelte();
    CourseNav = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $page, $$unsubscribe_page;
      $$unsubscribe_page = subscribe(page, (value2) => $page = value2);
      const ssr7 = false;
      let route = "/d/courses/" + $page.params.slug + "/";
      if ($$props.ssr === void 0 && $$bindings.ssr && ssr7 !== void 0)
        $$bindings.ssr(ssr7);
      $$unsubscribe_page();
      return `<section class="sticky inset-y-0 z-1 flex-shrink-0 mr-5 bg-gray-600 border-r dark:border-primary-darker dark:bg-darker lg:static focus:outline-none"><div class="flex flex-col h-screen">
    <div class="flex-1 pl-1.5 pr-1 mr-0.5 py-6 overflow-y-hidden font-semibold text-white ">
      <a${add_attribute("href", route, 0)}><div class="space-y-8 py-4 hover:bg-gray-800 rounded-xl"><p class="px-4">Home</p></div></a>
      <a${add_attribute("href", route + "assignments", 0)}><div class="space-y-8 py-4 hover:bg-gray-800 rounded-xl"><p class="px-4">Assignments</p></div></a>
      <a${add_attribute("href", route + "modules", 0)}><div class="space-y-8 py-4 hover:bg-gray-800 rounded-xl"><p class="px-4">Modules</p></div></a>
      <a${add_attribute("href", route + "grades", 0)}><div class="space-y-8 py-4 hover:bg-gray-800 rounded-xl"><p class="px-4">Grades</p></div></a>
      <a${add_attribute("href", route + "people", 0)}><div class="space-y-8 py-4 hover:bg-gray-800 rounded-xl"><p class="px-4">People</p></div></a>
      <a${add_attribute("href", route + "settings", 0)}><div class="space-y-8 py-4 hover:bg-gray-800 rounded-xl"><p class="px-4">Settings</p></div></a></div></div></section>`;
    });
    Layout4 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $page, $$unsubscribe_page;
      $$unsubscribe_page = subscribe(page, (value2) => $page = value2);
      let model;
      let courses = $page.data.courses.data;
      let course = courses.filter((course2) => course2.id === parseInt($page.data.slug))[0];
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        $$rendered = `<body class="bg-gray-600 antialiased bg-body text-body font-body"><div${add_attribute("class", Page ? "" : "filter blur-[1px]", 0)}>${validate_component(Navbar, "Navbar").$$render($$result, {}, {}, {})}
		<div class="mx-auto lg:ml-20"><section><div class="pt-5 pb-6 px-8 bg-gray-700"><div class="flex flex-wrap items-center justify-between -mx-2"><div class="w-full lg:w-auto px-2 mb-6 lg:mb-0"><h4 id="title" class="text-xl font-bold text-white tracking-wide leading-7 mb-1">${escape(course.course_title)}</h4></div>
						<div class="w-full lg:w-auto px-2"><div class="sm:flex items-center"><div class="w-full sm:w-auto mb-6 sm:mb-0 sm:mr-4"><div class="flex flex-wrap items-center -mb-2"><a class="inline-flex items-center justify-center w-12 h-12 mb-2 mr-4 p-1 text-gray-300 bg-gray-500 hover:bg-gray-400 hover:bg-opacity-40 transition duration-150 rounded-full"${add_attribute("href", "#", 0)}><svg fill="none" height="16" viewBox="0 0 20 16" width="20" xmlns="http://www.w3.org/2000/svg"><path d="M17 0H3C2.20435 0 1.44129 0.316071 0.87868 0.87868C0.316071 1.44129 0 2.20435 0 3V13C0 13.7956 0.316071 14.5587 0.87868 15.1213C1.44129 15.6839 2.20435 16 3 16H17C17.7956 16 18.5587 15.6839 19.1213 15.1213C19.6839 14.5587 20 13.7956 20 13V3C20 2.20435 19.6839 1.44129 19.1213 0.87868C18.5587 0.316071 17.7956 0 17 0ZM3 2H17C17.2652 2 17.5196 2.10536 17.7071 2.29289C17.8946 2.48043 18 2.73478 18 3L10 7.88L2 3C2 2.73478 2.10536 2.48043 2.29289 2.29289C2.48043 2.10536 2.73478 2 3 2ZM18 13C18 13.2652 17.8946 13.5196 17.7071 13.7071C17.5196 13.8946 17.2652 14 17 14H3C2.73478 14 2.48043 13.8946 2.29289 13.7071C2.10536 13.5196 2 13.2652 2 13V5.28L9.48 9.85C9.63202 9.93777 9.80446 9.98397 9.98 9.98397C10.1555 9.98397 10.328 9.93777 10.48 9.85L18 5.28V13Z" fill="currentColor"></path></svg></a>
										<a class="inline-flex items-center justify-center w-12 h-12 mb-2 mr-4 p-1 text-gray-300 bg-gray-500 hover:bg-gray-400 hover:bg-opacity-40 transition duration-150 rounded-full"${add_attribute("href", "#", 0)}><svg fill="none" height="20" viewBox="0 0 16 20" width="16" xmlns="http://www.w3.org/2000/svg"><path d="M14 11.18V8C13.9986 6.58312 13.4958 5.21247 12.5806 4.13077C11.6655 3.04908 10.3971 2.32615 9 2.09V1C9 0.734784 8.89464 0.48043 8.70711 0.292893C8.51957 0.105357 8.26522 0 8 0C7.73478 0 7.48043 0.105357 7.29289 0.292893C7.10536 0.48043 7 0.734784 7 1V2.09C5.60294 2.32615 4.33452 3.04908 3.41939 4.13077C2.50425 5.21247 2.00144 6.58312 2 8V11.18C1.41645 11.3863 0.910998 11.7681 0.552938 12.2729C0.194879 12.7778 0.00173951 13.3811 0 14V16C0 16.2652 0.105357 16.5196 0.292893 16.7071C0.48043 16.8946 0.734784 17 1 17H4.14C4.37028 17.8474 4.873 18.5954 5.5706 19.1287C6.26819 19.6621 7.1219 19.951 8 19.951C8.8781 19.951 9.73181 19.6621 10.4294 19.1287C11.127 18.5954 11.6297 17.8474 11.86 17H15C15.2652 17 15.5196 16.8946 15.7071 16.7071C15.8946 16.5196 16 16.2652 16 16V14C15.9983 13.3811 15.8051 12.7778 15.4471 12.2729C15.089 11.7681 14.5835 11.3863 14 11.18ZM4 8C4 6.93913 4.42143 5.92172 5.17157 5.17157C5.92172 4.42143 6.93913 4 8 4C9.06087 4 10.0783 4.42143 10.8284 5.17157C11.5786 5.92172 12 6.93913 12 8V11H4V8ZM8 18C7.65097 17.9979 7.30857 17.9045 7.00683 17.7291C6.70509 17.5536 6.45451 17.3023 6.28 17H9.72C9.54549 17.3023 9.29491 17.5536 8.99317 17.7291C8.69143 17.9045 8.34903 17.9979 8 18ZM14 15H2V14C2 13.7348 2.10536 13.4804 2.29289 13.2929C2.48043 13.1054 2.73478 13 3 13H13C13.2652 13 13.5196 13.1054 13.7071 13.2929C13.8946 13.4804 14 13.7348 14 14V15Z" fill="currentColor"></path></svg></a>
										<a class="inline-flex items-center justify-center w-12 h-12 mb-2 p-1 text-gray-300 bg-gray-500 hover:bg-gray-400 hover:bg-opacity-40 transition duration-150 rounded-full"${add_attribute("href", "#", 0)}><svg fill="none" height="21" viewBox="0 0 21 21" width="21" xmlns="http://www.w3.org/2000/svg"><path d="M20.71 19.29L17 15.61C18.4401 13.8144 19.1375 11.5353 18.9488 9.24133C18.7601 6.94733 17.6997 4.81281 15.9855 3.27667C14.2714 1.74053 12.0338 0.919537 9.73295 0.982497C7.43207 1.04546 5.24275 1.98759 3.61517 3.61517C1.98759 5.24275 1.04546 7.43207 0.982497 9.73295C0.919537 12.0338 1.74053 14.2714 3.27667 15.9855C4.81281 17.6997 6.94733 18.7601 9.24133 18.9488C11.5353 19.1375 13.8144 18.4401 15.61 17L19.29 20.68C19.383 20.7738 19.4936 20.8482 19.6154 20.8989C19.7373 20.9497 19.868 20.9758 20 20.9758C20.132 20.9758 20.2627 20.9497 20.3846 20.8989C20.5065 20.8482 20.6171 20.7738 20.71 20.68C20.8903 20.4936 20.991 20.2444 20.991 19.985C20.991 19.7257 20.8903 19.4765 20.71 19.29ZM10 17C8.61556 17 7.26218 16.5895 6.11103 15.8203C4.95989 15.0511 4.06268 13.9579 3.53287 12.6788C3.00306 11.3997 2.86443 9.99226 3.13453 8.63439C3.40463 7.27653 4.07131 6.02925 5.05028 5.05028C6.02925 4.07131 7.27653 3.40463 8.63439 3.13453C9.99226 2.86443 11.3997 3.00306 12.6788 3.53287C13.9579 4.06268 15.0511 4.95989 15.8203 6.11103C16.5895 7.26218 17 8.61556 17 10C17 11.8565 16.2625 13.637 14.9498 14.9498C13.637 16.2625 11.8565 17 10 17Z" fill="currentColor"></path></svg></a></div></div>
								${validate_component(Settings, "Settings").$$render(
          $$result,
          { this: model },
          {
            this: ($$value) => {
              model = $$value;
              $$settled = false;
            }
          },
          {}
        )}</div></div></div></div></section>
			<div class="flex flex-row "><aside class="h-screen sticky top-0">${validate_component(CourseNav, "CourseNav").$$render($$result, {}, {}, {})}</aside>


					${slots.default ? slots.default({}) : ``}</div></div></div></body>`;
      } while (!$$settled);
      $$unsubscribe_page();
      return $$rendered;
    });
  }
});
var __exports5 = {};
__export(__exports5, {
  component: () => component5,
  fonts: () => fonts5,
  imports: () => imports5,
  index: () => index5,
  stylesheets: () => stylesheets5,
  universal: () => layout_ts_exports3,
  universal_id: () => universal_id3
});
var index5;
var component5;
var universal_id3;
var imports5;
var stylesheets5;
var fonts5;
var init__5 = __esm({
  ".svelte-kit/output/server/nodes/4.js"() {
    init_layout_ts3();
    index5 = 4;
    component5 = async () => (await Promise.resolve().then(() => (init_layout_svelte4(), layout_svelte_exports4))).default;
    universal_id3 = "src/routes/d/(d)/courses/(course)/+layout.ts";
    imports5 = ["_app/immutable/nodes/4.33263222.js", "_app/immutable/chunks/index.7ee2e23d.js", "_app/immutable/chunks/stores.2de0b66f.js", "_app/immutable/chunks/singletons.21d018a5.js", "_app/immutable/chunks/paths.1c0372a3.js", "_app/immutable/chunks/Settings.e5d87b42.js", "_app/immutable/chunks/navigation.0d698c81.js", "_app/immutable/nodes/12.5b1572f1.js", "_app/immutable/chunks/forms.b3e5ddf7.js", "_app/immutable/chunks/parse.bee59afc.js", "_app/immutable/chunks/Scrollable.svelte_svelte_type_style_lang.48f5de07.js", "_app/immutable/chunks/dayjs.min.9ad1b313.js", "_app/immutable/chunks/_commonjsHelpers.725317a4.js", "_app/immutable/chunks/index.24430090.js", "_app/immutable/chunks/dragMe.3d5f1e0c.js", "_app/immutable/chunks/Indicator.svelte_svelte_type_style_lang.880982d3.js", "_app/immutable/chunks/Modal.087a6368.js", "_app/immutable/chunks/CloseButton.ed454e30.js", "_app/immutable/chunks/TableHeadCell.24b1fb8e.js", "_app/immutable/chunks/TableSearch.e66e4c61.js", "_app/immutable/chunks/notifications.93f6c838.js"];
    stylesheets5 = ["_app/immutable/assets/4.b94ba9d1.css", "_app/immutable/assets/Scrollable.b43def7c.css", "_app/immutable/assets/Indicator.1d121e74.css"];
    fonts5 = [];
  }
});
var layout_ts_exports4 = {};
__export(layout_ts_exports4, {
  load: () => load6,
  ssr: () => ssr2
});
var ssr2;
var load6;
var init_layout_ts4 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/courses/(course)/_slug_/assignments/_layout.ts.js"() {
    init_chunks();
    ssr2 = false;
    load6 = async ({ fetch: fetch2, data, request, url, parent, params }) => {
      const parentData = await parent();
      const session = parentData.session;
      if (!session) {
        throw redirect(303, "/");
      }
      const response = await fetch2(`/api/assignments/?course=${params.slug}`);
      return {
        assignments: {
          assignmentData: await response.json(),
          session
        }
      };
    };
  }
});
var layout_server_ts_exports3 = {};
__export(layout_server_ts_exports3, {
  load: () => load7
});
var load7;
var init_layout_server_ts3 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/courses/(course)/_slug_/assignments/_layout.server.ts.js"() {
    load7 = async ({ locals: { getSession } }) => {
      return {
        session: await getSession()
      };
    };
  }
});
var __exports6 = {};
__export(__exports6, {
  component: () => component6,
  fonts: () => fonts6,
  imports: () => imports6,
  index: () => index6,
  server: () => layout_server_ts_exports3,
  server_id: () => server_id3,
  stylesheets: () => stylesheets6,
  universal: () => layout_ts_exports4,
  universal_id: () => universal_id4
});
var index6;
var component6;
var universal_id4;
var server_id3;
var imports6;
var stylesheets6;
var fonts6;
var init__6 = __esm({
  ".svelte-kit/output/server/nodes/5.js"() {
    init_layout_ts4();
    init_layout_server_ts3();
    index6 = 5;
    component6 = async () => (await Promise.resolve().then(() => (init_layout_svelte3(), layout_svelte_exports3))).default;
    universal_id4 = "src/routes/d/(d)/courses/(course)/[slug]/assignments/+layout.ts";
    server_id3 = "src/routes/d/(d)/courses/(course)/[slug]/assignments/+layout.server.ts";
    imports6 = ["_app/immutable/nodes/5.f7831c99.js", "_app/immutable/chunks/index.ade5cbd2.js", "_app/immutable/chunks/control.f5b05b5f.js", "_app/immutable/chunks/layout.72d3c2fa.js", "_app/immutable/chunks/index.7ee2e23d.js"];
    stylesheets6 = [];
    fonts6 = [];
  }
});
var layout_ts_exports5 = {};
__export(layout_ts_exports5, {
  load: () => load8,
  prerender: () => prerender2,
  ssr: () => ssr3
});
var ssr3;
var prerender2;
var load8;
var init_layout_ts5 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/courses/(course)/_slug_/modules/_layout.ts.js"() {
    init_chunks();
    ssr3 = false;
    prerender2 = true;
    load8 = async ({ fetch: fetch2, data, request, url, parent, params }) => {
      const parentData = await parent();
      const session = parentData.session;
      if (!session) {
        throw redirect(303, "/");
      }
      const modules = await fetch2(`/api/modules/?course=${params.slug}`);
      const assignments = await fetch2(`/api/assignments/?course=${params.slug}`);
      return {
        modules: await modules.json(),
        assignments: await assignments.json(),
        session
      };
    };
  }
});
var __exports7 = {};
__export(__exports7, {
  component: () => component7,
  fonts: () => fonts7,
  imports: () => imports7,
  index: () => index7,
  stylesheets: () => stylesheets7,
  universal: () => layout_ts_exports5,
  universal_id: () => universal_id5
});
var index7;
var component7;
var universal_id5;
var imports7;
var stylesheets7;
var fonts7;
var init__7 = __esm({
  ".svelte-kit/output/server/nodes/6.js"() {
    init_layout_ts5();
    index7 = 6;
    component7 = async () => (await Promise.resolve().then(() => (init_layout_svelte3(), layout_svelte_exports3))).default;
    universal_id5 = "src/routes/d/(d)/courses/(course)/[slug]/modules/+layout.ts";
    imports7 = ["_app/immutable/nodes/6.bcac3683.js", "_app/immutable/chunks/index.ade5cbd2.js", "_app/immutable/chunks/control.f5b05b5f.js", "_app/immutable/chunks/layout.72d3c2fa.js", "_app/immutable/chunks/index.7ee2e23d.js"];
    stylesheets7 = [];
    fonts7 = [];
  }
});
var layout_ts_exports6 = {};
__export(layout_ts_exports6, {
  load: () => load9,
  ssr: () => ssr4
});
var ssr4;
var load9;
var init_layout_ts6 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/courses/(course)/_slug_/people/_layout.ts.js"() {
    init_chunks();
    ssr4 = false;
    load9 = async ({ fetch: fetch2, data, request, url, parent, params }) => {
      const parentData = await parent();
      const session = parentData.session;
      if (!session) {
        throw redirect(303, "/");
      }
      const people = await fetch2(`/api/people/?course=${params.slug}`);
      return {
        people: await people.json(),
        session
      };
    };
  }
});
var __exports8 = {};
__export(__exports8, {
  component: () => component8,
  fonts: () => fonts8,
  imports: () => imports8,
  index: () => index8,
  stylesheets: () => stylesheets8,
  universal: () => layout_ts_exports6,
  universal_id: () => universal_id6
});
var index8;
var component8;
var universal_id6;
var imports8;
var stylesheets8;
var fonts8;
var init__8 = __esm({
  ".svelte-kit/output/server/nodes/7.js"() {
    init_layout_ts6();
    index8 = 7;
    component8 = async () => (await Promise.resolve().then(() => (init_layout_svelte3(), layout_svelte_exports3))).default;
    universal_id6 = "src/routes/d/(d)/courses/(course)/[slug]/people/+layout.ts";
    imports8 = ["_app/immutable/nodes/7.20f6a795.js", "_app/immutable/chunks/index.ade5cbd2.js", "_app/immutable/chunks/control.f5b05b5f.js", "_app/immutable/chunks/layout.72d3c2fa.js", "_app/immutable/chunks/index.7ee2e23d.js"];
    stylesheets8 = [];
    fonts8 = [];
  }
});
var page_server_ts_exports = {};
__export(page_server_ts_exports, {
  actions: () => actions,
  prerender: () => prerender3
});
var prerender3;
var actions;
var init_page_server_ts = __esm({
  ".svelte-kit/output/server/entries/pages/_page.server.ts.js"() {
    init_chunks();
    prerender3 = false;
    actions = {
      signin: async ({ request, url, locals: { supabase } }) => {
        {
          const formData = await request.formData();
          const captchaToken = formData.get("cf-turnstile-response");
          const email = formData.get("email");
          const password = formData.get("password");
          await supabase.auth.signInWithPassword({
            email,
            password,
            options: { captchaToken }
          });
        }
        throw redirect(303, "/");
      },
      updateProfile: async ({ request, url, locals: { supabase } }) => {
        const formData = await request.formData();
        const { data } = await supabase.auth.refreshSession();
        const { session, user } = data;
        const fullName = formData.get("name");
        const website = formData.get("website");
        const updates = {
          id: user.id,
          full_name: fullName,
          website,
          updated_at: /* @__PURE__ */ new Date()
        };
        await supabase.from("users").upsert(updates);
        throw redirect(303, "/");
      }
    };
  }
});
var require_build = __commonJS({
  "node_modules/react-image-file-resizer/build/index.js"(exports, module) {
    (() => {
      "use strict";
      var e2 = { d: (t3, a3) => {
        for (var r3 in a3)
          e2.o(a3, r3) && !e2.o(t3, r3) && Object.defineProperty(t3, r3, { enumerable: true, get: a3[r3] });
      }, o: (e3, t3) => Object.prototype.hasOwnProperty.call(e3, t3), r: (e3) => {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e3, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e3, "__esModule", { value: true });
      } }, t2 = {};
      function a2(e3, t3) {
        for (var a3 = 0; a3 < t3.length; a3++) {
          var r3 = t3[a3];
          r3.enumerable = r3.enumerable || false, r3.configurable = true, "value" in r3 && (r3.writable = true), Object.defineProperty(e3, r3.key, r3);
        }
      }
      e2.r(t2), e2.d(t2, { default: () => n2 });
      var r2 = function() {
        function e3() {
          !function(e4, t4) {
            if (!(e4 instanceof t4))
              throw new TypeError("Cannot call a class as a function");
          }(this, e3);
        }
        var t3, r3;
        return t3 = e3, r3 = [{ key: "changeHeightWidth", value: function(e4, t4, a3, r4, n3, i2) {
          return a3 > r4 && (e4 = Math.round(e4 * r4 / a3), a3 = r4), e4 > t4 && (a3 = Math.round(a3 * t4 / e4), e4 = t4), n3 && a3 < n3 && (e4 = Math.round(e4 * n3 / a3), a3 = n3), i2 && e4 < i2 && (a3 = Math.round(a3 * i2 / e4), e4 = i2), { height: e4, width: a3 };
        } }, { key: "resizeAndRotateImage", value: function(e4, t4, a3, r4, n3) {
          var i2 = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "jpeg", o2 = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : 100, l2 = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : 0, h2 = o2 / 100, g2 = document.createElement("canvas"), u2 = e4.width, d2 = e4.height, c2 = this.changeHeightWidth(d2, a3, u2, t4, r4, n3);
          !l2 || 90 !== l2 && 270 !== l2 ? (g2.width = c2.width, g2.height = c2.height) : (g2.width = c2.height, g2.height = c2.width), u2 = c2.width, d2 = c2.height;
          var s3 = g2.getContext("2d");
          return s3.fillStyle = "rgba(0, 0, 0, 0)", s3.fillRect(0, 0, u2, d2), s3.imageSmoothingEnabled && s3.imageSmoothingQuality && (s3.imageSmoothingQuality = "high"), l2 && (s3.rotate(l2 * Math.PI / 180), 90 === l2 ? s3.translate(0, -g2.width) : 180 === l2 ? s3.translate(-g2.width, -g2.height) : 270 === l2 ? s3.translate(-g2.height, 0) : 0 !== l2 && 360 !== l2 || s3.translate(0, 0)), s3.drawImage(e4, 0, 0, u2, d2), g2.toDataURL("image/".concat(i2), h2);
        } }, { key: "b64toByteArrays", value: function(e4, t4) {
          t4 = t4 || "image/jpeg";
          for (var a3 = atob(e4.toString().replace(/^data:image\/(png|jpeg|jpg|webp);base64,/, "")), r4 = [], n3 = 0; n3 < a3.length; n3 += 512) {
            for (var i2 = a3.slice(n3, n3 + 512), o2 = new Array(i2.length), l2 = 0; l2 < i2.length; l2++)
              o2[l2] = i2.charCodeAt(l2);
            var h2 = new Uint8Array(o2);
            r4.push(h2);
          }
          return r4;
        } }, { key: "b64toBlob", value: function(e4, t4) {
          var a3 = this.b64toByteArrays(e4, t4);
          return new Blob(a3, { type: t4, lastModified: /* @__PURE__ */ new Date() });
        } }, { key: "b64toFile", value: function(e4, t4, a3) {
          var r4 = this.b64toByteArrays(e4, a3);
          return new File(r4, t4, { type: a3, lastModified: /* @__PURE__ */ new Date() });
        } }, { key: "createResizedImage", value: function(t4, a3, r4, n3, i2, o2, l2) {
          var h2 = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : "base64", g2 = arguments.length > 8 && void 0 !== arguments[8] ? arguments[8] : null, u2 = arguments.length > 9 && void 0 !== arguments[9] ? arguments[9] : null, d2 = new FileReader();
          if (!t4)
            throw Error("File Not Found!");
          if (t4.type && !t4.type.includes("image"))
            throw Error("File Is NOT Image!");
          d2.readAsDataURL(t4), d2.onload = function() {
            var c2 = new Image();
            c2.src = d2.result, c2.onload = function() {
              var d3 = e3.resizeAndRotateImage(c2, a3, r4, g2, u2, n3, i2, o2), s3 = "image/".concat(n3);
              switch (h2) {
                case "blob":
                  var f2 = e3.b64toBlob(d3, s3);
                  l2(f2);
                  break;
                case "base64":
                  l2(d3);
                  break;
                case "file":
                  var b2 = t4.name.toString().replace(/(png|jpeg|jpg|webp)$/i, "").concat(n3.toString()), v2 = e3.b64toFile(d3, b2, s3);
                  l2(v2);
                  break;
                default:
                  l2(d3);
              }
            };
          }, d2.onerror = function(e4) {
            throw Error(e4);
          };
        } }], null, r3 && a2(t3, r3), e3;
      }();
      const n2 = { imageFileResizer: function(e3, t3, a3, n3, i2, o2, l2, h2, g2, u2) {
        return r2.createResizedImage(e3, t3, a3, n3, i2, o2, l2, h2, g2, u2);
      } };
      module.exports = t2;
    })();
  }
});
var import_react_image_file_resizer;
var size;
var Avatar;
var init_Avatar = __esm({
  ".svelte-kit/output/server/chunks/Avatar.js"() {
    init_index2();
    import_react_image_file_resizer = __toESM(require_build(), 1);
    init_stores();
    size = 5;
    Avatar = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $page, $$unsubscribe_page;
      $$unsubscribe_page = subscribe(page, (value2) => $page = value2);
      let { url } = $$props;
      $page.data.session?.user;
      if ($$props.url === void 0 && $$bindings.url && url !== void 0)
        $$bindings.url(url);
      $$unsubscribe_page();
      return `<div class="flex flex-wrap items-start -mx-4 pb-8 mb-8 border-b border-gray-400 border-opacity-20"><div class="w-full sm:w-1/3 px-4 mb-6 sm:mb-0"><span class="block text-sm font-medium text-gray-100 py-3">Profile Picture</span>
    ${url ? `<img${add_attribute("src", url, 0)}${add_attribute("alt", url ? "Avatar" : "No image", 0)} class="avatar image" style="${"height: " + escape(size, true) + "em; width: " + escape(size, true) + "em; background: transparent;"}">` : `<div class="avatar no-image" style="${"height: " + escape(size, true) + "em; width: " + escape(size, true) + "em;"}"></div>`}</div>
  <div class="w-full sm:w-2/3 px-4"><div class="flex flex-wrap sm:flex-nowrap max-w-xl"><div class="flex-shrink-0 w-20 h-20 mb-4 mr-4 rounded-full"></div>

      <div for="single"><div class="w-full py-8 px-4 text-center border-dashed border border-gray-400 hover:border-white focus:border-blue-500 rounded-lg"><div class="relative group h-14 w-14 mx-auto mb-4"><input class="absolute top-0 left-0 h-40 w-40 opacity-0" type="file" id="single" accept="image/*" ${""}>
            <div class="flex items-center justify-center h-14 w-14 bg-blue-500 group-hover:bg-blue-600 rounded-full"><svg width="20" height="40" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M6.71 5.71002L9 3.41002V13C9 13.2652 9.10536 13.5196 9.29289 13.7071C9.48043 13.8947 9.73478 14 10 14C10.2652 14 10.5196 13.8947 10.7071 13.7071C10.8946 13.5196 11 13.2652 11 13V3.41002L13.29 5.71002C13.383 5.80375 13.4936 5.87814 13.6154 5.92891C13.7373 5.97968 13.868 6.00582 14 6.00582C14.132 6.00582 14.2627 5.97968 14.3846 5.92891C14.5064 5.87814 14.617 5.80375 14.71 5.71002C14.8037 5.61706 14.8781 5.50645 14.9289 5.3846C14.9797 5.26274 15.0058 5.13203 15.0058 5.00002C15.0058 4.86801 14.9797 4.7373 14.9289 4.61544C14.8781 4.49358 14.8037 4.38298 14.71 4.29002L10.71 0.290018C10.6149 0.198978 10.5028 0.127613 10.38 0.0800184C10.1365 -0.0199996 9.86346 -0.0199996 9.62 0.0800184C9.49725 0.127613 9.3851 0.198978 9.29 0.290018L5.29 4.29002C5.19676 4.38326 5.1228 4.49395 5.07234 4.61577C5.02188 4.73759 4.99591 4.86816 4.99591 5.00002C4.99591 5.13188 5.02188 5.26245 5.07234 5.38427C5.1228 5.50609 5.19676 5.61678 5.29 5.71002C5.38324 5.80326 5.49393 5.87722 5.61575 5.92768C5.73757 5.97814 5.86814 6.00411 6 6.00411C6.13186 6.00411 6.26243 5.97814 6.38425 5.92768C6.50607 5.87722 6.61676 5.80326 6.71 5.71002ZM19 10C18.7348 10 18.4804 10.1054 18.2929 10.2929C18.1054 10.4804 18 10.7348 18 11V17C18 17.2652 17.8946 17.5196 17.7071 17.7071C17.5196 17.8947 17.2652 18 17 18H3C2.73478 18 2.48043 17.8947 2.29289 17.7071C2.10536 17.5196 2 17.2652 2 17V11C2 10.7348 1.89464 10.4804 1.70711 10.2929C1.51957 10.1054 1.26522 10 1 10C0.734784 10 0.48043 10.1054 0.292893 10.2929C0.105357 10.4804 0 10.7348 0 11V17C0 17.7957 0.316071 18.5587 0.87868 19.1213C1.44129 19.6839 2.20435 20 3 20H17C17.7956 20 18.5587 19.6839 19.1213 19.1213C19.6839 18.5587 20 17.7957 20 17V11C20 10.7348 19.8946 10.4804 19.7071 10.2929C19.5196 10.1054 19.2652 10 19 10Z" fill="#E8EDFF"></path></svg></div></div>
        <p class="font-semibold leading-normal mb-1"><span class="text-blue-500">Click to upload a file</span>
          <span class="text-gray-300">or drag and drop</span>
          ${escape("")}</p></div></div></div></div></div>`;
    });
  }
});
var e;
var t;
var n;
var r;
var i;
var o;
var l;
var s2;
var a;
var c;
var d;
var g;
var p;
var u;
var h;
var f;
var m;
var b;
var S;
var k;
var y;
var B;
var $;
var x;
var I;
var R2;
var z;
var W;
var j;
var E;
var T;
var v;
var M;
var w;
var C;
var P;
var L;
var O;
var A;
var D;
var H;
var N;
var V;
var G;
var F;
var J;
var U;
var Z;
var X;
var Y;
var q;
var _;
var init_dist3 = __esm({
  "node_modules/@stitches/core/dist/index.mjs"() {
    t = "colors";
    n = "sizes";
    r = "space";
    i = { gap: r, gridGap: r, columnGap: r, gridColumnGap: r, rowGap: r, gridRowGap: r, inset: r, insetBlock: r, insetBlockEnd: r, insetBlockStart: r, insetInline: r, insetInlineEnd: r, insetInlineStart: r, margin: r, marginTop: r, marginRight: r, marginBottom: r, marginLeft: r, marginBlock: r, marginBlockEnd: r, marginBlockStart: r, marginInline: r, marginInlineEnd: r, marginInlineStart: r, padding: r, paddingTop: r, paddingRight: r, paddingBottom: r, paddingLeft: r, paddingBlock: r, paddingBlockEnd: r, paddingBlockStart: r, paddingInline: r, paddingInlineEnd: r, paddingInlineStart: r, top: r, right: r, bottom: r, left: r, scrollMargin: r, scrollMarginTop: r, scrollMarginRight: r, scrollMarginBottom: r, scrollMarginLeft: r, scrollMarginX: r, scrollMarginY: r, scrollMarginBlock: r, scrollMarginBlockEnd: r, scrollMarginBlockStart: r, scrollMarginInline: r, scrollMarginInlineEnd: r, scrollMarginInlineStart: r, scrollPadding: r, scrollPaddingTop: r, scrollPaddingRight: r, scrollPaddingBottom: r, scrollPaddingLeft: r, scrollPaddingX: r, scrollPaddingY: r, scrollPaddingBlock: r, scrollPaddingBlockEnd: r, scrollPaddingBlockStart: r, scrollPaddingInline: r, scrollPaddingInlineEnd: r, scrollPaddingInlineStart: r, fontSize: "fontSizes", background: t, backgroundColor: t, backgroundImage: t, borderImage: t, border: t, borderBlock: t, borderBlockEnd: t, borderBlockStart: t, borderBottom: t, borderBottomColor: t, borderColor: t, borderInline: t, borderInlineEnd: t, borderInlineStart: t, borderLeft: t, borderLeftColor: t, borderRight: t, borderRightColor: t, borderTop: t, borderTopColor: t, caretColor: t, color: t, columnRuleColor: t, fill: t, outline: t, outlineColor: t, stroke: t, textDecorationColor: t, fontFamily: "fonts", fontWeight: "fontWeights", lineHeight: "lineHeights", letterSpacing: "letterSpacings", blockSize: n, minBlockSize: n, maxBlockSize: n, inlineSize: n, minInlineSize: n, maxInlineSize: n, width: n, minWidth: n, maxWidth: n, height: n, minHeight: n, maxHeight: n, flexBasis: n, gridTemplateColumns: n, gridTemplateRows: n, borderWidth: "borderWidths", borderTopWidth: "borderWidths", borderRightWidth: "borderWidths", borderBottomWidth: "borderWidths", borderLeftWidth: "borderWidths", borderStyle: "borderStyles", borderTopStyle: "borderStyles", borderRightStyle: "borderStyles", borderBottomStyle: "borderStyles", borderLeftStyle: "borderStyles", borderRadius: "radii", borderTopLeftRadius: "radii", borderTopRightRadius: "radii", borderBottomRightRadius: "radii", borderBottomLeftRadius: "radii", boxShadow: "shadows", textShadow: "shadows", transition: "transitions", zIndex: "zIndices" };
    o = (e2, t2) => "function" == typeof t2 ? { "()": Function.prototype.toString.call(t2) } : t2;
    l = () => {
      const e2 = /* @__PURE__ */ Object.create(null);
      return (t2, n2, ...r2) => {
        const i2 = ((e3) => JSON.stringify(e3, o))(t2);
        return i2 in e2 ? e2[i2] : e2[i2] = n2(t2, ...r2);
      };
    };
    s2 = Symbol.for("sxs.internal");
    a = (e2, t2) => Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t2));
    c = (e2) => {
      for (const t2 in e2)
        return true;
      return false;
    };
    ({ hasOwnProperty: d } = Object.prototype);
    g = (e2) => e2.includes("-") ? e2 : e2.replace(/[A-Z]/g, (e3) => "-" + e3.toLowerCase());
    p = /\s+(?![^()]*\))/;
    u = (e2) => (t2) => e2(..."string" == typeof t2 ? String(t2).split(p) : [t2]);
    h = { appearance: (e2) => ({ WebkitAppearance: e2, appearance: e2 }), backfaceVisibility: (e2) => ({ WebkitBackfaceVisibility: e2, backfaceVisibility: e2 }), backdropFilter: (e2) => ({ WebkitBackdropFilter: e2, backdropFilter: e2 }), backgroundClip: (e2) => ({ WebkitBackgroundClip: e2, backgroundClip: e2 }), boxDecorationBreak: (e2) => ({ WebkitBoxDecorationBreak: e2, boxDecorationBreak: e2 }), clipPath: (e2) => ({ WebkitClipPath: e2, clipPath: e2 }), content: (e2) => ({ content: e2.includes('"') || e2.includes("'") || /^([A-Za-z]+\([^]*|[^]*-quote|inherit|initial|none|normal|revert|unset)$/.test(e2) ? e2 : `"${e2}"` }), hyphens: (e2) => ({ WebkitHyphens: e2, hyphens: e2 }), maskImage: (e2) => ({ WebkitMaskImage: e2, maskImage: e2 }), maskSize: (e2) => ({ WebkitMaskSize: e2, maskSize: e2 }), tabSize: (e2) => ({ MozTabSize: e2, tabSize: e2 }), textSizeAdjust: (e2) => ({ WebkitTextSizeAdjust: e2, textSizeAdjust: e2 }), userSelect: (e2) => ({ WebkitUserSelect: e2, userSelect: e2 }), marginBlock: u((e2, t2) => ({ marginBlockStart: e2, marginBlockEnd: t2 || e2 })), marginInline: u((e2, t2) => ({ marginInlineStart: e2, marginInlineEnd: t2 || e2 })), maxSize: u((e2, t2) => ({ maxBlockSize: e2, maxInlineSize: t2 || e2 })), minSize: u((e2, t2) => ({ minBlockSize: e2, minInlineSize: t2 || e2 })), paddingBlock: u((e2, t2) => ({ paddingBlockStart: e2, paddingBlockEnd: t2 || e2 })), paddingInline: u((e2, t2) => ({ paddingInlineStart: e2, paddingInlineEnd: t2 || e2 })) };
    f = /([\d.]+)([^]*)/;
    m = (e2, t2) => e2.length ? e2.reduce((e3, n2) => (e3.push(...t2.map((e4) => e4.includes("&") ? e4.replace(/&/g, /[ +>|~]/.test(n2) && /&.*&/.test(e4) ? `:is(${n2})` : n2) : n2 + " " + e4)), e3), []) : t2;
    b = (e2, t2) => e2 in S && "string" == typeof t2 ? t2.replace(/^((?:[^]*[^\w-])?)(fit-content|stretch)((?:[^\w-][^]*)?)$/, (t3, n2, r2, i2) => n2 + ("stretch" === r2 ? `-moz-available${i2};${g(e2)}:${n2}-webkit-fill-available` : `-moz-fit-content${i2};${g(e2)}:${n2}fit-content`) + i2) : String(t2);
    S = { blockSize: 1, height: 1, inlineSize: 1, maxBlockSize: 1, maxHeight: 1, maxInlineSize: 1, maxWidth: 1, minBlockSize: 1, minHeight: 1, minInlineSize: 1, minWidth: 1, width: 1 };
    k = (e2) => e2 ? e2 + "-" : "";
    y = (e2, t2, n2) => e2.replace(/([+-])?((?:\d+(?:\.\d*)?|\.\d+)(?:[Ee][+-]?\d+)?)?(\$|--)([$\w-]+)/g, (e3, r2, i2, o2, l2) => "$" == o2 == !!i2 ? e3 : (r2 || "--" == o2 ? "calc(" : "") + "var(--" + ("$" === o2 ? k(t2) + (l2.includes("$") ? "" : k(n2)) + l2.replace(/\$/g, "-") : l2) + ")" + (r2 || "--" == o2 ? "*" + (r2 || "") + (i2 || "1") + ")" : ""));
    B = /\s*,\s*(?![^()]*\))/;
    $ = Object.prototype.toString;
    x = (e2, t2, n2, r2, i2) => {
      let o2, l2, s3;
      const a2 = (e3, t3, n3) => {
        let c2, d2;
        const p2 = (e4) => {
          for (c2 in e4) {
            const x2 = 64 === c2.charCodeAt(0), z2 = x2 && Array.isArray(e4[c2]) ? e4[c2] : [e4[c2]];
            for (d2 of z2) {
              const e5 = /[A-Z]/.test(S2 = c2) ? S2 : S2.replace(/-[^]/g, (e6) => e6[1].toUpperCase()), z3 = "object" == typeof d2 && d2 && d2.toString === $ && (!r2.utils[e5] || !t3.length);
              if (e5 in r2.utils && !z3) {
                const t4 = r2.utils[e5];
                if (t4 !== l2) {
                  l2 = t4, p2(t4(d2)), l2 = null;
                  continue;
                }
              } else if (e5 in h) {
                const t4 = h[e5];
                if (t4 !== s3) {
                  s3 = t4, p2(t4(d2)), s3 = null;
                  continue;
                }
              }
              if (x2 && (u2 = c2.slice(1) in r2.media ? "@media " + r2.media[c2.slice(1)] : c2, c2 = u2.replace(/\(\s*([\w-]+)\s*(=|<|<=|>|>=)\s*([\w-]+)\s*(?:(<|<=|>|>=)\s*([\w-]+)\s*)?\)/g, (e6, t4, n4, r3, i3, o3) => {
                const l3 = f.test(t4), s4 = 0.0625 * (l3 ? -1 : 1), [a3, c3] = l3 ? [r3, t4] : [t4, r3];
                return "(" + ("=" === n4[0] ? "" : ">" === n4[0] === l3 ? "max-" : "min-") + a3 + ":" + ("=" !== n4[0] && 1 === n4.length ? c3.replace(f, (e7, t5, r4) => Number(t5) + s4 * (">" === n4 ? 1 : -1) + r4) : c3) + (i3 ? ") and (" + (">" === i3[0] ? "min-" : "max-") + a3 + ":" + (1 === i3.length ? o3.replace(f, (e7, t5, n5) => Number(t5) + s4 * (">" === i3 ? -1 : 1) + n5) : o3) : "") + ")";
              })), z3) {
                const e6 = x2 ? n3.concat(c2) : [...n3], r3 = x2 ? [...t3] : m(t3, c2.split(B));
                void 0 !== o2 && i2(I(...o2)), o2 = void 0, a2(d2, r3, e6);
              } else
                void 0 === o2 && (o2 = [[], t3, n3]), c2 = x2 || 36 !== c2.charCodeAt(0) ? c2 : `--${k(r2.prefix)}${c2.slice(1).replace(/\$/g, "-")}`, d2 = z3 ? d2 : "number" == typeof d2 ? d2 && e5 in R2 ? String(d2) + "px" : String(d2) : y(b(e5, null == d2 ? "" : d2), r2.prefix, r2.themeMap[e5]), o2[0].push(`${x2 ? `${c2} ` : `${g(c2)}:`}${d2}`);
            }
          }
          var u2, S2;
        };
        p2(e3), void 0 !== o2 && i2(I(...o2)), o2 = void 0;
      };
      a2(e2, t2, n2);
    };
    I = (e2, t2, n2) => `${n2.map((e3) => `${e3}{`).join("")}${t2.length ? `${t2.join(",")}{` : ""}${e2.join(";")}${t2.length ? "}" : ""}${Array(n2.length ? n2.length + 1 : 0).join("}")}`;
    R2 = { animationDelay: 1, animationDuration: 1, backgroundSize: 1, blockSize: 1, border: 1, borderBlock: 1, borderBlockEnd: 1, borderBlockEndWidth: 1, borderBlockStart: 1, borderBlockStartWidth: 1, borderBlockWidth: 1, borderBottom: 1, borderBottomLeftRadius: 1, borderBottomRightRadius: 1, borderBottomWidth: 1, borderEndEndRadius: 1, borderEndStartRadius: 1, borderInlineEnd: 1, borderInlineEndWidth: 1, borderInlineStart: 1, borderInlineStartWidth: 1, borderInlineWidth: 1, borderLeft: 1, borderLeftWidth: 1, borderRadius: 1, borderRight: 1, borderRightWidth: 1, borderSpacing: 1, borderStartEndRadius: 1, borderStartStartRadius: 1, borderTop: 1, borderTopLeftRadius: 1, borderTopRightRadius: 1, borderTopWidth: 1, borderWidth: 1, bottom: 1, columnGap: 1, columnRule: 1, columnRuleWidth: 1, columnWidth: 1, containIntrinsicSize: 1, flexBasis: 1, fontSize: 1, gap: 1, gridAutoColumns: 1, gridAutoRows: 1, gridTemplateColumns: 1, gridTemplateRows: 1, height: 1, inlineSize: 1, inset: 1, insetBlock: 1, insetBlockEnd: 1, insetBlockStart: 1, insetInline: 1, insetInlineEnd: 1, insetInlineStart: 1, left: 1, letterSpacing: 1, margin: 1, marginBlock: 1, marginBlockEnd: 1, marginBlockStart: 1, marginBottom: 1, marginInline: 1, marginInlineEnd: 1, marginInlineStart: 1, marginLeft: 1, marginRight: 1, marginTop: 1, maxBlockSize: 1, maxHeight: 1, maxInlineSize: 1, maxWidth: 1, minBlockSize: 1, minHeight: 1, minInlineSize: 1, minWidth: 1, offsetDistance: 1, offsetRotate: 1, outline: 1, outlineOffset: 1, outlineWidth: 1, overflowClipMargin: 1, padding: 1, paddingBlock: 1, paddingBlockEnd: 1, paddingBlockStart: 1, paddingBottom: 1, paddingInline: 1, paddingInlineEnd: 1, paddingInlineStart: 1, paddingLeft: 1, paddingRight: 1, paddingTop: 1, perspective: 1, right: 1, rowGap: 1, scrollMargin: 1, scrollMarginBlock: 1, scrollMarginBlockEnd: 1, scrollMarginBlockStart: 1, scrollMarginBottom: 1, scrollMarginInline: 1, scrollMarginInlineEnd: 1, scrollMarginInlineStart: 1, scrollMarginLeft: 1, scrollMarginRight: 1, scrollMarginTop: 1, scrollPadding: 1, scrollPaddingBlock: 1, scrollPaddingBlockEnd: 1, scrollPaddingBlockStart: 1, scrollPaddingBottom: 1, scrollPaddingInline: 1, scrollPaddingInlineEnd: 1, scrollPaddingInlineStart: 1, scrollPaddingLeft: 1, scrollPaddingRight: 1, scrollPaddingTop: 1, shapeMargin: 1, textDecoration: 1, textDecorationThickness: 1, textIndent: 1, textUnderlineOffset: 1, top: 1, transitionDelay: 1, transitionDuration: 1, verticalAlign: 1, width: 1, wordSpacing: 1 };
    z = (e2) => String.fromCharCode(e2 + (e2 > 25 ? 39 : 97));
    W = (e2) => ((e3) => {
      let t2, n2 = "";
      for (t2 = Math.abs(e3); t2 > 52; t2 = t2 / 52 | 0)
        n2 = z(t2 % 52) + n2;
      return z(t2 % 52) + n2;
    })(((e3, t2) => {
      let n2 = t2.length;
      for (; n2; )
        e3 = 33 * e3 ^ t2.charCodeAt(--n2);
      return e3;
    })(5381, JSON.stringify(e2)) >>> 0);
    j = ["themed", "global", "styled", "onevar", "resonevar", "allvar", "inline"];
    E = (e2) => {
      if (e2.href && !e2.href.startsWith(location.origin))
        return false;
      try {
        return !!e2.cssRules;
      } catch (e3) {
        return false;
      }
    };
    T = (e2) => {
      let t2;
      const n2 = () => {
        const { cssRules: e3 } = t2.sheet;
        return [].map.call(e3, (n3, r3) => {
          const { cssText: i2 } = n3;
          let o2 = "";
          if (i2.startsWith("--sxs"))
            return "";
          if (e3[r3 - 1] && (o2 = e3[r3 - 1].cssText).startsWith("--sxs")) {
            if (!n3.cssRules.length)
              return "";
            for (const e4 in t2.rules)
              if (t2.rules[e4].group === n3)
                return `--sxs{--sxs:${[...t2.rules[e4].cache].join(" ")}}${i2}`;
            return n3.cssRules.length ? `${o2}${i2}` : "";
          }
          return i2;
        }).join("");
      }, r2 = () => {
        if (t2) {
          const { rules: e3, sheet: n3 } = t2;
          if (!n3.deleteRule) {
            for (; 3 === Object(Object(n3.cssRules)[0]).type; )
              n3.cssRules.splice(0, 1);
            n3.cssRules = [];
          }
          for (const t3 in e3)
            delete e3[t3];
        }
        const i2 = Object(e2).styleSheets || [];
        for (const e3 of i2)
          if (E(e3)) {
            for (let i3 = 0, o3 = e3.cssRules; o3[i3]; ++i3) {
              const l3 = Object(o3[i3]);
              if (1 !== l3.type)
                continue;
              const s3 = Object(o3[i3 + 1]);
              if (4 !== s3.type)
                continue;
              ++i3;
              const { cssText: a2 } = l3;
              if (!a2.startsWith("--sxs"))
                continue;
              const c2 = a2.slice(14, -3).trim().split(/\s+/), d2 = j[c2[0]];
              d2 && (t2 || (t2 = { sheet: e3, reset: r2, rules: {}, toString: n2 }), t2.rules[d2] = { group: s3, index: i3, cache: new Set(c2) });
            }
            if (t2)
              break;
          }
        if (!t2) {
          const i3 = (e3, t3) => ({ type: t3, cssRules: [], insertRule(e4, t4) {
            this.cssRules.splice(t4, 0, i3(e4, { import: 3, undefined: 1 }[(e4.toLowerCase().match(/^@([a-z]+)/) || [])[1]] || 4));
          }, get cssText() {
            return "@media{}" === e3 ? `@media{${[].map.call(this.cssRules, (e4) => e4.cssText).join("")}}` : e3;
          } });
          t2 = { sheet: e2 ? (e2.head || e2).appendChild(document.createElement("style")).sheet : i3("", "text/css"), rules: {}, reset: r2, toString: n2 };
        }
        const { sheet: o2, rules: l2 } = t2;
        for (let e3 = j.length - 1; e3 >= 0; --e3) {
          const t3 = j[e3];
          if (!l2[t3]) {
            const n3 = j[e3 + 1], r3 = l2[n3] ? l2[n3].index : o2.cssRules.length;
            o2.insertRule("@media{}", r3), o2.insertRule(`--sxs{--sxs:${e3}}`, r3), l2[t3] = { group: o2.cssRules[r3 + 1], index: r3, cache: /* @__PURE__ */ new Set([e3]) };
          }
          v(l2[t3]);
        }
      };
      return r2(), t2;
    };
    v = (e2) => {
      const t2 = e2.group;
      let n2 = t2.cssRules.length;
      e2.apply = (e3) => {
        try {
          t2.insertRule(e3, n2), ++n2;
        } catch (e4) {
        }
      };
    };
    M = Symbol();
    w = l();
    C = (e2, t2) => w(e2, () => (...n2) => {
      let r2 = { type: null, composers: /* @__PURE__ */ new Set() };
      for (const t3 of n2)
        if (null != t3)
          if (t3[s2]) {
            null == r2.type && (r2.type = t3[s2].type);
            for (const e3 of t3[s2].composers)
              r2.composers.add(e3);
          } else
            t3.constructor !== Object || t3.$$typeof ? null == r2.type && (r2.type = t3) : r2.composers.add(P(t3, e2));
      return null == r2.type && (r2.type = "span"), r2.composers.size || r2.composers.add(["PJLV", {}, [], [], {}, []]), L(e2, r2, t2);
    });
    P = ({ variants: e2, compoundVariants: t2, defaultVariants: n2, ...r2 }, i2) => {
      const o2 = `${k(i2.prefix)}c-${W(r2)}`, l2 = [], s3 = [], a2 = /* @__PURE__ */ Object.create(null), g2 = [];
      for (const e3 in n2)
        a2[e3] = String(n2[e3]);
      if ("object" == typeof e2 && e2)
        for (const t3 in e2) {
          p2 = a2, u2 = t3, d.call(p2, u2) || (a2[t3] = "undefined");
          const n3 = e2[t3];
          for (const e3 in n3) {
            const r3 = { [t3]: String(e3) };
            "undefined" === String(e3) && g2.push(t3);
            const i3 = n3[e3], o3 = [r3, i3, !c(i3)];
            l2.push(o3);
          }
        }
      var p2, u2;
      if ("object" == typeof t2 && t2)
        for (const e3 of t2) {
          let { css: t3, ...n3 } = e3;
          t3 = "object" == typeof t3 && t3 || {};
          for (const e4 in n3)
            n3[e4] = String(n3[e4]);
          const r3 = [n3, t3, !c(t3)];
          s3.push(r3);
        }
      return [o2, r2, l2, s3, a2, g2];
    };
    L = (e2, t2, n2) => {
      const [r2, i2, o2, l2] = O(t2.composers), c2 = "function" == typeof t2.type || t2.type.$$typeof ? ((e3) => {
        function t3() {
          for (let n3 = 0; n3 < t3[M].length; n3++) {
            const [r3, i3] = t3[M][n3];
            e3.rules[r3].apply(i3);
          }
          return t3[M] = [], null;
        }
        return t3[M] = [], t3.rules = {}, j.forEach((e4) => t3.rules[e4] = { apply: (n3) => t3[M].push([e4, n3]) }), t3;
      })(n2) : null, d2 = (c2 || n2).rules, g2 = `.${r2}${i2.length > 1 ? `:where(.${i2.slice(1).join(".")})` : ""}`, p2 = (s3) => {
        s3 = "object" == typeof s3 && s3 || D;
        const { css: a2, ...p3 } = s3, u2 = {};
        for (const e3 in o2)
          if (delete p3[e3], e3 in s3) {
            let t3 = s3[e3];
            "object" == typeof t3 && t3 ? u2[e3] = { "@initial": o2[e3], ...t3 } : (t3 = String(t3), u2[e3] = "undefined" !== t3 || l2.has(e3) ? t3 : o2[e3]);
          } else
            u2[e3] = o2[e3];
        const h2 = /* @__PURE__ */ new Set([...i2]);
        for (const [r3, i3, o3, l3] of t2.composers) {
          n2.rules.styled.cache.has(r3) || (n2.rules.styled.cache.add(r3), x(i3, [`.${r3}`], [], e2, (e3) => {
            d2.styled.apply(e3);
          }));
          const t3 = A(o3, u2, e2.media), s4 = A(l3, u2, e2.media, true);
          for (const i4 of t3)
            if (void 0 !== i4)
              for (const [t4, o4, l4] of i4) {
                const i5 = `${r3}-${W(o4)}-${t4}`;
                h2.add(i5);
                const s5 = (l4 ? n2.rules.resonevar : n2.rules.onevar).cache, a3 = l4 ? d2.resonevar : d2.onevar;
                s5.has(i5) || (s5.add(i5), x(o4, [`.${i5}`], [], e2, (e3) => {
                  a3.apply(e3);
                }));
              }
          for (const t4 of s4)
            if (void 0 !== t4)
              for (const [i4, o4] of t4) {
                const t5 = `${r3}-${W(o4)}-${i4}`;
                h2.add(t5), n2.rules.allvar.cache.has(t5) || (n2.rules.allvar.cache.add(t5), x(o4, [`.${t5}`], [], e2, (e3) => {
                  d2.allvar.apply(e3);
                }));
              }
        }
        if ("object" == typeof a2 && a2) {
          const t3 = `${r2}-i${W(a2)}-css`;
          h2.add(t3), n2.rules.inline.cache.has(t3) || (n2.rules.inline.cache.add(t3), x(a2, [`.${t3}`], [], e2, (e3) => {
            d2.inline.apply(e3);
          }));
        }
        for (const e3 of String(s3.className || "").trim().split(/\s+/))
          e3 && h2.add(e3);
        const f2 = p3.className = [...h2].join(" ");
        return { type: t2.type, className: f2, selector: g2, props: p3, toString: () => f2, deferredInjector: c2 };
      };
      return a(p2, { className: r2, selector: g2, [s2]: t2, toString: () => (n2.rules.styled.cache.has(r2) || p2(), r2) });
    };
    O = (e2) => {
      let t2 = "";
      const n2 = [], r2 = {}, i2 = [];
      for (const [o2, , , , l2, s3] of e2) {
        "" === t2 && (t2 = o2), n2.push(o2), i2.push(...s3);
        for (const e3 in l2) {
          const t3 = l2[e3];
          (void 0 === r2[e3] || "undefined" !== t3 || s3.includes(t3)) && (r2[e3] = t3);
        }
      }
      return [t2, n2, r2, new Set(i2)];
    };
    A = (e2, t2, n2, r2) => {
      const i2 = [];
      e:
        for (let [o2, l2, s3] of e2) {
          if (s3)
            continue;
          let e3, a2 = 0, c2 = false;
          for (e3 in o2) {
            const r3 = o2[e3];
            let i3 = t2[e3];
            if (i3 !== r3) {
              if ("object" != typeof i3 || !i3)
                continue e;
              {
                let e4, t3, o3 = 0;
                for (const l3 in i3) {
                  if (r3 === String(i3[l3])) {
                    if ("@initial" !== l3) {
                      const e5 = l3.slice(1);
                      (t3 = t3 || []).push(e5 in n2 ? n2[e5] : l3.replace(/^@media ?/, "")), c2 = true;
                    }
                    a2 += o3, e4 = true;
                  }
                  ++o3;
                }
                if (t3 && t3.length && (l2 = { ["@media " + t3.join(", ")]: l2 }), !e4)
                  continue e;
              }
            }
          }
          (i2[a2] = i2[a2] || []).push([r2 ? "cv" : `${e3}-${o2[e3]}`, l2, c2]);
        }
      return i2;
    };
    D = {};
    H = l();
    N = (e2, t2) => H(e2, () => (...n2) => {
      const r2 = () => {
        for (let r3 of n2) {
          r3 = "object" == typeof r3 && r3 || {};
          let n3 = W(r3);
          if (!t2.rules.global.cache.has(n3)) {
            if (t2.rules.global.cache.add(n3), "@import" in r3) {
              let e3 = [].indexOf.call(t2.sheet.cssRules, t2.rules.themed.group) - 1;
              for (let n4 of [].concat(r3["@import"]))
                n4 = n4.includes('"') || n4.includes("'") ? n4 : `"${n4}"`, t2.sheet.insertRule(`@import ${n4};`, e3++);
              delete r3["@import"];
            }
            x(r3, [], [], e2, (e3) => {
              t2.rules.global.apply(e3);
            });
          }
        }
        return "";
      };
      return a(r2, { toString: r2 });
    });
    V = l();
    G = (e2, t2) => V(e2, () => (n2) => {
      const r2 = `${k(e2.prefix)}k-${W(n2)}`, i2 = () => {
        if (!t2.rules.global.cache.has(r2)) {
          t2.rules.global.cache.add(r2);
          const i3 = [];
          x(n2, [], [], e2, (e3) => i3.push(e3));
          const o2 = `@keyframes ${r2}{${i3.join("")}}`;
          t2.rules.global.apply(o2);
        }
        return r2;
      };
      return a(i2, { get name() {
        return i2();
      }, toString: i2 });
    });
    F = class {
      constructor(e2, t2, n2, r2) {
        this.token = null == e2 ? "" : String(e2), this.value = null == t2 ? "" : String(t2), this.scale = null == n2 ? "" : String(n2), this.prefix = null == r2 ? "" : String(r2);
      }
      get computedValue() {
        return "var(" + this.variable + ")";
      }
      get variable() {
        return "--" + k(this.prefix) + k(this.scale) + this.token;
      }
      toString() {
        return this.computedValue;
      }
    };
    J = l();
    U = (e2, t2) => J(e2, () => (n2, r2) => {
      r2 = "object" == typeof n2 && n2 || Object(r2);
      const i2 = `.${n2 = (n2 = "string" == typeof n2 ? n2 : "") || `${k(e2.prefix)}t-${W(r2)}`}`, o2 = {}, l2 = [];
      for (const t3 in r2) {
        o2[t3] = {};
        for (const n3 in r2[t3]) {
          const i3 = `--${k(e2.prefix)}${t3}-${n3}`, s4 = y(String(r2[t3][n3]), e2.prefix, t3);
          o2[t3][n3] = new F(n3, s4, t3, e2.prefix), l2.push(`${i3}:${s4}`);
        }
      }
      const s3 = () => {
        if (l2.length && !t2.rules.themed.cache.has(n2)) {
          t2.rules.themed.cache.add(n2);
          const i3 = `${r2 === e2.theme ? ":root," : ""}.${n2}{${l2.join(";")}}`;
          t2.rules.themed.apply(i3);
        }
        return n2;
      };
      return { ...o2, get className() {
        return s3();
      }, selector: i2, toString: s3 };
    });
    Z = l();
    X = (e2) => {
      let t2 = false;
      const n2 = Z(e2, (e3) => {
        t2 = true;
        const n3 = "prefix" in (e3 = "object" == typeof e3 && e3 || {}) ? String(e3.prefix) : "", r2 = "object" == typeof e3.media && e3.media || {}, o2 = "object" == typeof e3.root ? e3.root || null : globalThis.document || null, l2 = "object" == typeof e3.theme && e3.theme || {}, s3 = { prefix: n3, media: r2, theme: l2, themeMap: "object" == typeof e3.themeMap && e3.themeMap || { ...i }, utils: "object" == typeof e3.utils && e3.utils || {} }, a2 = T(o2), c2 = { css: C(s3, a2), globalCss: N(s3, a2), keyframes: G(s3, a2), createTheme: U(s3, a2), reset() {
          a2.reset(), c2.theme.toString();
        }, theme: {}, sheet: a2, config: s3, prefix: n3, getCssText: a2.toString, toString: a2.toString };
        return String(c2.theme = c2.createTheme(l2)), c2;
      });
      return t2 || n2.reset(), n2;
    };
    Y = () => e || (e = X());
    q = (...e2) => Y().createTheme(...e2);
    _ = (...e2) => Y().css(...e2);
  }
});
function generateClassNames(classNameKey, defaultStyles, appearance) {
  var _a, _b;
  const classNames8 = [];
  const className = CLASS_NAMES[classNameKey];
  classNames8.push(
    (appearance == null ? void 0 : appearance.prependedClassName) ? (appearance == null ? void 0 : appearance.prependedClassName) + "_" + className : PREPENDED_CLASS_NAMES + "_" + className
  );
  if ((_a = appearance == null ? void 0 : appearance.className) == null ? void 0 : _a[classNameKey]) {
    classNames8.push((_b = appearance == null ? void 0 : appearance.className) == null ? void 0 : _b[classNameKey]);
  }
  if ((appearance == null ? void 0 : appearance.extend) === void 0 || (appearance == null ? void 0 : appearance.extend) === true) {
    classNames8.push(defaultStyles);
  }
  return classNames8;
}
function value(src, next) {
  let k2;
  if (src && next && typeof src === "object" && typeof next === "object") {
    if (Array.isArray(next)) {
      for (k2 = 0; k2 < next.length; k2++) {
        src[k2] = value(src[k2], next[k2]);
      }
    } else {
      for (k2 in next) {
        src[k2] = value(src[k2], next[k2]);
      }
    }
    return src;
  }
  return next;
}
function merge(target, ...args) {
  let len = args.length;
  for (let i2 = 0; i2 < len; i2++) {
    target = value(target, args[i2]);
  }
  return target;
}
function template(string, data) {
  return string.replace(
    /{{(\w+)}}/g,
    (placeholderWithDelimiters, placeholderWithoutDelimiters) => data.hasOwnProperty(placeholderWithoutDelimiters) ? data[placeholderWithoutDelimiters] : placeholderWithDelimiters
  );
}
var VIEWS;
var PREPENDED_CLASS_NAMES;
var CLASS_NAMES;
var en_default;
var init_dist4 = __esm({
  "node_modules/@supabase/auth-ui-shared/dist/index.mjs"() {
    VIEWS = {
      SIGN_IN: "sign_in",
      SIGN_UP: "sign_up",
      FORGOTTEN_PASSWORD: "forgotten_password",
      MAGIC_LINK: "magic_link",
      UPDATE_PASSWORD: "update_password",
      VERIFY_OTP: "verify_otp"
    };
    PREPENDED_CLASS_NAMES = "supabase-auth-ui";
    CLASS_NAMES = {
      ROOT: "root",
      SIGN_IN: VIEWS.SIGN_IN,
      SIGN_UP: VIEWS.SIGN_UP,
      FORGOTTEN_PASSWORD: VIEWS.FORGOTTEN_PASSWORD,
      MAGIC_LINK: VIEWS.MAGIC_LINK,
      UPDATE_PASSWORD: VIEWS.UPDATE_PASSWORD,
      anchor: "ui-anchor",
      button: "ui-button",
      container: "ui-container",
      divider: "ui-divider",
      input: "ui-input",
      label: "ui-label",
      loader: "ui-loader",
      message: "ui-message"
    };
    en_default = {
      sign_up: {
        email_label: "Email address",
        password_label: "Create a Password",
        email_input_placeholder: "Your email address",
        password_input_placeholder: "Your password",
        button_label: "Sign up",
        loading_button_label: "Signing up ...",
        social_provider_text: "Sign in with {{provider}}",
        link_text: "Don't have an account? Sign up",
        confirmation_text: "Check your email for the confirmation link"
      },
      sign_in: {
        email_label: "Email address",
        password_label: "Your Password",
        email_input_placeholder: "Your email address",
        password_input_placeholder: "Your password",
        button_label: "Sign in",
        loading_button_label: "Signing in ...",
        social_provider_text: "Sign in with {{provider}}",
        link_text: "Already have an account? Sign in"
      },
      magic_link: {
        email_input_label: "Email address",
        email_input_placeholder: "Your email address",
        button_label: "Send Magic Link",
        loading_button_label: "Sending Magic Link ...",
        link_text: "Send a magic link email",
        confirmation_text: "Check your email for the magic link"
      },
      forgotten_password: {
        email_label: "Email address",
        password_label: "Your Password",
        email_input_placeholder: "Your email address",
        button_label: "Send reset password instructions",
        loading_button_label: "Sending reset instructions ...",
        link_text: "Forgot your password?",
        confirmation_text: "Check your email for the password reset link"
      },
      update_password: {
        password_label: "New password",
        password_input_placeholder: "Your new password",
        button_label: "Update password",
        loading_button_label: "Updating password ...",
        confirmation_text: "Your password has been updated"
      },
      verify_otp: {
        email_input_label: "Email address",
        email_input_placeholder: "Your email address",
        phone_input_label: "Phone number",
        phone_input_placeholder: "Your phone number",
        token_input_label: "Token",
        token_input_placeholder: "Your Otp token",
        button_label: "Verify token",
        loading_button_label: "Signing in ..."
      }
    };
  }
});
var page_svelte_exports2 = {};
__export(page_svelte_exports2, {
  default: () => Page2
});
function capitalize(word) {
  return word[0].toUpperCase() + word.slice(1).toLowerCase();
}
var Account;
var Anchor;
var css$72;
var Button;
var Container;
var Input;
var Label;
var css$62;
var EmailAuth;
var css$52;
var ForgottenPassword;
var css$42;
var MagicLink;
var css$32;
var Icons;
var Divider;
var SocialAuth;
var css$22;
var UpdatePassword;
var css$12;
var VerifyOtp;
var Auth;
var ThemeSupa;
var css2;
var Auth_1;
var Page2;
var init_page_svelte2 = __esm({
  ".svelte-kit/output/server/entries/pages/_page.svelte.js"() {
    init_index2();
    init_Avatar();
    init_chunks();
    init_dist3();
    init_dist4();
    Account = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { session } = $$props;
      let first_name = null;
      let website = null;
      let avatarUrl = null;
      if ($$props.session === void 0 && $$bindings.session && session !== void 0)
        $$bindings.session(session);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        $$rendered = `<form method="POST" action="?/updateProfile">${validate_component(Avatar, "Avatar").$$render(
          $$result,
          { size: 10, url: avatarUrl },
          {
            url: ($$value) => {
              avatarUrl = $$value;
              $$settled = false;
            }
          },
          {}
        )}
    <div><label for="email">Email</label>
        <input name="email" id="email" type="text"${add_attribute("value", session.user.email, 0)} disabled></div>
    <div><label for="name">Full Name</label>
        <input name="name" id="name" type="text"${add_attribute("value", first_name, 0)}></div>
    <div><label for="website">Website</label>
        <input name="website" id="website" type="text"${add_attribute("value", website, 0)}></div>
    <div><input type="submit" class="button block primary"${add_attribute("value", "Update", 0)} ${""}></div></form>
<div><button class="button block">Dashboard </button></div>`;
      } while (!$$settled);
      return $$rendered;
    });
    Anchor = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let classNames8;
      let $$restProps = compute_rest_props($$props, ["href", "appearance"]);
      const anchorHTMLAttributes = _({
        fontFamily: "$bodyFontFamily",
        fontSize: "$baseBodySize",
        marginBottom: "$anchorBottomMargin",
        color: "$anchorTextColor",
        display: "block",
        textAlign: "center",
        textDecoration: "underline",
        "&:hover": { color: "$anchorTextHoverColor" }
      });
      let { href } = $$props;
      let { appearance = {} } = $$props;
      if ($$props.href === void 0 && $$bindings.href && href !== void 0)
        $$bindings.href(href);
      if ($$props.appearance === void 0 && $$bindings.appearance && appearance !== void 0)
        $$bindings.appearance(appearance);
      classNames8 = generateClassNames("anchor", anchorHTMLAttributes(), appearance);
      return `<a${spread(
        [
          { href: escape_attribute_value(href) },
          escape_object($$restProps),
          {
            style: escape_attribute_value(appearance?.style?.anchor)
          },
          {
            class: escape_attribute_value(classNames8.join(" "))
          }
        ],
        {}
      )}>${slots.default ? slots.default({}) : ``}</a>`;
    });
    css$72 = {
      code: "button.svelte-ll2s9h{display:flex;align-items:center;justify-content:center;gap:8px;border-radius:var(--radii-borderRadiusButton);font-size:var(--fontSizes-baseButtonSize);padding:var(--space-buttonPadding);cursor:pointer;border-width:var(--borderWidths-buttonBorderWidth);border-style:solid;width:100%;transition-property:background-color;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:100ms}button.default.svelte-ll2s9h{background-color:var(--colors-defaultButtonBackground);color:var(--colors-defaultButtonText);border-color:var(--colors-defaultButtonBorder)}button.default.svelte-ll2s9h:hover{background-color:var(--colors-defaultButtonBackgroundHover)}button.primary.svelte-ll2s9h{background-color:var(--colors-brand);color:var(--colors-brandButtonText);border-color:var(--colors-brandAccent)}button.primary.svelte-ll2s9h:hover{background-color:var(--colors-brandAccent)}",
      map: null
    };
    Button = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let classNames8;
      let $$restProps = compute_rest_props($$props, ["color", "appearance", "loading"]);
      let { color = "default" } = $$props;
      let { appearance = {} } = $$props;
      let { loading = false } = $$props;
      if ($$props.color === void 0 && $$bindings.color && color !== void 0)
        $$bindings.color(color);
      if ($$props.appearance === void 0 && $$bindings.appearance && appearance !== void 0)
        $$bindings.appearance(appearance);
      if ($$props.loading === void 0 && $$bindings.loading && loading !== void 0)
        $$bindings.loading(loading);
      $$result.css.add(css$72);
      classNames8 = generateClassNames("button", color, appearance);
      return `<button${spread(
        [
          escape_object($$restProps),
          { disabled: loading || null },
          {
            style: escape_attribute_value(appearance?.style?.button)
          },
          {
            class: escape_attribute_value(classNames8.join(" "))
          }
        ],
        { classes: "svelte-ll2s9h" }
      )}>${slots.default ? slots.default({}) : ``}
</button>`;
    });
    Container = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let classNames8;
      let $$restProps = compute_rest_props($$props, ["direction", "gap", "appearance"]);
      const containerDefaultStyles = _({
        display: "flex",
        gap: "4px",
        variants: {
          direction: {
            horizontal: {
              display: "grid",
              gridTemplateColumns: "repeat(auto-fit, minmax(48px, 1fr))"
            },
            vertical: { flexDirection: "column", margin: "8px 0" }
          },
          gap: {
            small: { gap: "4px" },
            medium: { gap: "8px" },
            large: { gap: "16px" }
          }
        }
      });
      let { direction = "horizontal" } = $$props;
      let { gap = "small" } = $$props;
      let { appearance = {} } = $$props;
      if ($$props.direction === void 0 && $$bindings.direction && direction !== void 0)
        $$bindings.direction(direction);
      if ($$props.gap === void 0 && $$bindings.gap && gap !== void 0)
        $$bindings.gap(gap);
      if ($$props.appearance === void 0 && $$bindings.appearance && appearance !== void 0)
        $$bindings.appearance(appearance);
      classNames8 = generateClassNames("container", containerDefaultStyles({ direction, gap }), appearance);
      return `<div${spread(
        [
          escape_object($$restProps),
          {
            style: escape_attribute_value(appearance?.style?.container)
          },
          {
            class: escape_attribute_value(classNames8.join(" "))
          }
        ],
        {}
      )}>${slots.default ? slots.default({}) : ``}</div>`;
    });
    Input = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let classNames8;
      let $$restProps = compute_rest_props($$props, ["value", "appearance"]);
      const inputDefaultStyles = _({
        fontFamily: "$inputFontFamily",
        background: "$inputBackground",
        borderRadius: "$inputBorderRadius",
        padding: "$inputPadding",
        cursor: "text",
        borderWidth: "$inputBorderWidth",
        borderColor: "$inputBorder",
        borderStyle: "solid",
        fontSize: "$baseInputSize",
        width: "100%",
        color: "$inputText",
        boxSizing: "border-box",
        "&:hover": {
          borderColor: "$inputBorderHover",
          outline: "none"
        },
        "&:focus": {
          borderColor: "$inputBorderFocus",
          outline: "none"
        },
        "&::placeholder": {
          color: "$inputPlaceholder",
          letterSpacing: "initial"
        },
        transitionPproperty: "background-color, border",
        transitionTimingFunction: "cubic-bezier(0.4, 0, 0.2, 1)",
        transitionDuration: "100ms",
        variants: {
          type: {
            default: { letterSpacing: "0px" },
            password: { letterSpacing: "6px" }
          }
        }
      });
      let { value: value2 = void 0 } = $$props;
      let { appearance = {} } = $$props;
      if ($$props.value === void 0 && $$bindings.value && value2 !== void 0)
        $$bindings.value(value2);
      if ($$props.appearance === void 0 && $$bindings.appearance && appearance !== void 0)
        $$bindings.appearance(appearance);
      classNames8 = generateClassNames("input", inputDefaultStyles({ type: "default" }), appearance);
      return `<input${spread(
        [
          escape_object($$restProps),
          {
            style: escape_attribute_value(appearance?.style?.input)
          },
          {
            class: escape_attribute_value(classNames8.join(" "))
          }
        ],
        {}
      )}${add_attribute("value", value2, 0)}>`;
    });
    Label = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let classNames8;
      let $$restProps = compute_rest_props($$props, ["appearance"]);
      const labelDefaultStyles = _({
        fontFamily: "$labelFontFamily",
        fontSize: "$baseLabelSize",
        marginBottom: "$labelBottomMargin",
        color: "$inputLabelText",
        display: "block"
      });
      let { appearance = {} } = $$props;
      if ($$props.appearance === void 0 && $$bindings.appearance && appearance !== void 0)
        $$bindings.appearance(appearance);
      classNames8 = generateClassNames("label", labelDefaultStyles(), appearance);
      return `<label${spread(
        [
          escape_object($$restProps),
          {
            style: escape_attribute_value(appearance?.style?.label)
          },
          {
            class: escape_attribute_value(classNames8.join(" "))
          }
        ],
        {}
      )}>${slots.default ? slots.default({}) : ``}</label>`;
    });
    css$62 = {
      code: "form.svelte-nm5p4o{width:100%}",
      map: null
    };
    EmailAuth = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { authView = "sign_in" } = $$props;
      let { email = "" } = $$props;
      let { password = "" } = $$props;
      let { supabaseClient } = $$props;
      let { redirectTo = void 0 } = $$props;
      let { additionalData = void 0 } = $$props;
      let { showLinks = false } = $$props;
      let { magicLink = true } = $$props;
      let { i18n } = $$props;
      let { appearance } = $$props;
      let { captchaToken } = $$props;
      let loading = false;
      let lngKey = authView === "sign_in" ? "sign_in" : "sign_up";
      if ($$props.authView === void 0 && $$bindings.authView && authView !== void 0)
        $$bindings.authView(authView);
      if ($$props.email === void 0 && $$bindings.email && email !== void 0)
        $$bindings.email(email);
      if ($$props.password === void 0 && $$bindings.password && password !== void 0)
        $$bindings.password(password);
      if ($$props.supabaseClient === void 0 && $$bindings.supabaseClient && supabaseClient !== void 0)
        $$bindings.supabaseClient(supabaseClient);
      if ($$props.redirectTo === void 0 && $$bindings.redirectTo && redirectTo !== void 0)
        $$bindings.redirectTo(redirectTo);
      if ($$props.additionalData === void 0 && $$bindings.additionalData && additionalData !== void 0)
        $$bindings.additionalData(additionalData);
      if ($$props.showLinks === void 0 && $$bindings.showLinks && showLinks !== void 0)
        $$bindings.showLinks(showLinks);
      if ($$props.magicLink === void 0 && $$bindings.magicLink && magicLink !== void 0)
        $$bindings.magicLink(magicLink);
      if ($$props.i18n === void 0 && $$bindings.i18n && i18n !== void 0)
        $$bindings.i18n(i18n);
      if ($$props.appearance === void 0 && $$bindings.appearance && appearance !== void 0)
        $$bindings.appearance(appearance);
      if ($$props.captchaToken === void 0 && $$bindings.captchaToken && captchaToken !== void 0)
        $$bindings.captchaToken(captchaToken);
      $$result.css.add(css$62);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        $$rendered = `<form method="post" class="svelte-nm5p4o">${validate_component(Container, "Container").$$render(
          $$result,
          {
            direction: "vertical",
            gap: "large",
            appearance
          },
          {},
          {
            default: () => {
              return `${validate_component(Container, "Container").$$render(
                $$result,
                {
                  direction: "vertical",
                  gap: "large",
                  appearance
                },
                {},
                {
                  default: () => {
                    return `<div>${validate_component(Label, "Label").$$render($$result, { for: "email", appearance }, {}, {
                      default: () => {
                        return `${escape(i18n?.[lngKey]?.email_label)}`;
                      }
                    })}
				${validate_component(Input, "Input").$$render(
                      $$result,
                      {
                        id: "email",
                        type: "email",
                        name: "email",
                        autofocus: true,
                        placeholder: i18n?.[lngKey]?.email_input_placeholder,
                        autocomplete: "email",
                        appearance,
                        value: email
                      },
                      {
                        value: ($$value) => {
                          email = $$value;
                          $$settled = false;
                        }
                      },
                      {}
                    )}</div>
			<div>${validate_component(Label, "Label").$$render($$result, { for: "password", appearance }, {}, {
                      default: () => {
                        return `${escape(i18n?.[lngKey]?.password_label)}`;
                      }
                    })}
				${validate_component(Input, "Input").$$render(
                      $$result,
                      {
                        id: "password",
                        type: "password",
                        name: "password",
                        placeholder: i18n?.[lngKey]?.password_input_placeholder,
                        autocomplete: authView === VIEWS.SIGN_IN ? "current-password" : "new-password",
                        appearance,
                        value: password
                      },
                      {
                        value: ($$value) => {
                          password = $$value;
                          $$settled = false;
                        }
                      },
                      {}
                    )}</div>
			${slots.default ? slots.default({}) : ``}`;
                  }
                }
              )}
		${validate_component(Button, "Button").$$render(
                $$result,
                {
                  type: "submit",
                  color: "primary",
                  loading,
                  appearance
                },
                {},
                {
                  default: () => {
                    return `${escape(i18n?.[lngKey]?.button_label)}`;
                  }
                }
              )}

		${showLinks ? `${validate_component(Container, "Container").$$render(
                $$result,
                {
                  direction: "vertical",
                  gap: "small",
                  appearance
                },
                {},
                {
                  default: () => {
                    return `${authView === VIEWS.SIGN_IN && magicLink ? `${validate_component(Anchor, "Anchor").$$render($$result, { href: "#auth-magic-link", appearance }, {}, {
                      default: () => {
                        return `${escape(i18n?.magic_link?.link_text)}`;
                      }
                    })}` : ``}
				${authView === VIEWS.SIGN_IN ? `${validate_component(Anchor, "Anchor").$$render(
                      $$result,
                      {
                        href: "#auth-forgot-password",
                        appearance
                      },
                      {},
                      {
                        default: () => {
                          return `${escape(i18n?.forgotten_password?.link_text)}`;
                        }
                      }
                    )}
					${validate_component(Anchor, "Anchor").$$render($$result, { href: "#auth-sign-up", appearance }, {}, {
                      default: () => {
                        return `${escape(i18n?.sign_up?.link_text)}`;
                      }
                    })}` : `${validate_component(Anchor, "Anchor").$$render($$result, { href: "#auth-sign-in", appearance }, {}, {
                      default: () => {
                        return `${escape(i18n?.sign_in?.link_text)}`;
                      }
                    })}`}`;
                  }
                }
              )}` : ``}`;
            }
          }
        )}

	${``}
	${``}
</form>`;
      } while (!$$settled);
      return $$rendered;
    });
    css$52 = {
      code: "form.svelte-nm5p4o{width:100%}",
      map: null
    };
    ForgottenPassword = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { i18n } = $$props;
      let { supabaseClient } = $$props;
      let { authView } = $$props;
      let { redirectTo = void 0 } = $$props;
      let { email = "" } = $$props;
      let { showLinks = false } = $$props;
      let { appearance } = $$props;
      let loading = false;
      if ($$props.i18n === void 0 && $$bindings.i18n && i18n !== void 0)
        $$bindings.i18n(i18n);
      if ($$props.supabaseClient === void 0 && $$bindings.supabaseClient && supabaseClient !== void 0)
        $$bindings.supabaseClient(supabaseClient);
      if ($$props.authView === void 0 && $$bindings.authView && authView !== void 0)
        $$bindings.authView(authView);
      if ($$props.redirectTo === void 0 && $$bindings.redirectTo && redirectTo !== void 0)
        $$bindings.redirectTo(redirectTo);
      if ($$props.email === void 0 && $$bindings.email && email !== void 0)
        $$bindings.email(email);
      if ($$props.showLinks === void 0 && $$bindings.showLinks && showLinks !== void 0)
        $$bindings.showLinks(showLinks);
      if ($$props.appearance === void 0 && $$bindings.appearance && appearance !== void 0)
        $$bindings.appearance(appearance);
      $$result.css.add(css$52);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        $$rendered = `<form id="auth-forgot-password" method="post" class="svelte-nm5p4o">${validate_component(Container, "Container").$$render(
          $$result,
          {
            direction: "vertical",
            gap: "large",
            appearance
          },
          {},
          {
            default: () => {
              return `${validate_component(Container, "Container").$$render(
                $$result,
                {
                  direction: "vertical",
                  gap: "large",
                  appearance
                },
                {},
                {
                  default: () => {
                    return `<div>${validate_component(Label, "Label").$$render($$result, { for: "email", appearance }, {}, {
                      default: () => {
                        return `${escape(i18n?.forgotten_password?.email_label)}`;
                      }
                    })}
				${validate_component(Input, "Input").$$render(
                      $$result,
                      {
                        id: "email",
                        type: "email",
                        name: "email",
                        autofocus: true,
                        placeholder: i18n?.forgotten_password?.email_input_placeholder,
                        autocomplete: "email",
                        appearance,
                        value: email
                      },
                      {
                        value: ($$value) => {
                          email = $$value;
                          $$settled = false;
                        }
                      },
                      {}
                    )}</div>
			${validate_component(Button, "Button").$$render(
                      $$result,
                      {
                        type: "submit",
                        color: "primary",
                        loading,
                        appearance
                      },
                      {},
                      {
                        default: () => {
                          return `${escape(i18n?.forgotten_password?.button_label)}`;
                        }
                      }
                    )}`;
                  }
                }
              )}

		${showLinks ? `${validate_component(Anchor, "Anchor").$$render($$result, { href: "#auth-magic-link", appearance }, {}, {
                default: () => {
                  return `${escape(i18n?.sign_in?.link_text)}`;
                }
              })}` : ``}
		${``}
		${``}`;
            }
          }
        )}
</form>`;
      } while (!$$settled);
      return $$rendered;
    });
    css$42 = {
      code: "form.svelte-nm5p4o{width:100%}",
      map: null
    };
    MagicLink = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { i18n } = $$props;
      let { supabaseClient } = $$props;
      let { authView } = $$props;
      let { redirectTo = void 0 } = $$props;
      let { appearance } = $$props;
      let { showLinks = false } = $$props;
      let { email = "" } = $$props;
      let loading = false;
      if ($$props.i18n === void 0 && $$bindings.i18n && i18n !== void 0)
        $$bindings.i18n(i18n);
      if ($$props.supabaseClient === void 0 && $$bindings.supabaseClient && supabaseClient !== void 0)
        $$bindings.supabaseClient(supabaseClient);
      if ($$props.authView === void 0 && $$bindings.authView && authView !== void 0)
        $$bindings.authView(authView);
      if ($$props.redirectTo === void 0 && $$bindings.redirectTo && redirectTo !== void 0)
        $$bindings.redirectTo(redirectTo);
      if ($$props.appearance === void 0 && $$bindings.appearance && appearance !== void 0)
        $$bindings.appearance(appearance);
      if ($$props.showLinks === void 0 && $$bindings.showLinks && showLinks !== void 0)
        $$bindings.showLinks(showLinks);
      if ($$props.email === void 0 && $$bindings.email && email !== void 0)
        $$bindings.email(email);
      $$result.css.add(css$42);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        $$rendered = `<form id="auth-magic-link" method="post" class="svelte-nm5p4o">${validate_component(Container, "Container").$$render(
          $$result,
          {
            direction: "vertical",
            gap: "large",
            appearance
          },
          {},
          {
            default: () => {
              return `${validate_component(Container, "Container").$$render(
                $$result,
                {
                  direction: "vertical",
                  gap: "large",
                  appearance
                },
                {},
                {
                  default: () => {
                    return `<div>${validate_component(Label, "Label").$$render($$result, { for: "email", appearance }, {}, {
                      default: () => {
                        return `${escape(i18n?.magic_link?.email_input_label)}`;
                      }
                    })}
				${validate_component(Input, "Input").$$render(
                      $$result,
                      {
                        id: "email",
                        type: "email",
                        name: "email",
                        autofocus: true,
                        placeholder: i18n?.magic_link?.email_input_placeholder,
                        autocomplete: "email",
                        appearance,
                        value: email
                      },
                      {
                        value: ($$value) => {
                          email = $$value;
                          $$settled = false;
                        }
                      },
                      {}
                    )}</div>
			${validate_component(Button, "Button").$$render(
                      $$result,
                      {
                        type: "submit",
                        color: "primary",
                        loading,
                        appearance
                      },
                      {},
                      {
                        default: () => {
                          return `${escape(i18n?.magic_link?.button_label)}`;
                        }
                      }
                    )}`;
                  }
                }
              )}

		${showLinks ? `${validate_component(Anchor, "Anchor").$$render($$result, { href: "#auth-sign-in", appearance }, {}, {
                default: () => {
                  return `${escape(i18n?.sign_in?.link_text)}`;
                }
              })}` : ``}
		${``}
		${``}`;
            }
          }
        )}
</form>`;
      } while (!$$settled);
      return $$rendered;
    });
    css$32 = {
      code: "svg.svelte-10a6av0{height:21px;width:21px}",
      map: null
    };
    Icons = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { provider } = $$props;
      if ($$props.provider === void 0 && $$bindings.provider && provider !== void 0)
        $$bindings.provider(provider);
      $$result.css.add(css$32);
      return `${provider === "google" ? `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" width="21px" height="21px" class="svelte-10a6av0"><path fill="#FFC107" d="M43.611,20.083H42V20H24v8h11.303c-1.649,4.657-6.08,8-11.303,8c-6.627,0-12-5.373-12-12c0-6.627,5.373-12,12-12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657C34.046,6.053,29.268,4,24,4C12.955,4,4,12.955,4,24c0,11.045,8.955,20,20,20c11.045,0,20-8.955,20-20C44,22.659,43.862,21.35,43.611,20.083z"></path><path fill="#FF3D00" d="M6.306,14.691l6.571,4.819C14.655,15.108,18.961,12,24,12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657C34.046,6.053,29.268,4,24,4C16.318,4,9.656,8.337,6.306,14.691z"></path><path fill="#4CAF50" d="M24,44c5.166,0,9.86-1.977,13.409-5.192l-6.19-5.238C29.211,35.091,26.715,36,24,36c-5.202,0-9.619-3.317-11.283-7.946l-6.522,5.025C9.505,39.556,16.227,44,24,44z"></path><path fill="#1976D2" d="M43.611,20.083H42V20H24v8h11.303c-0.792,2.237-2.231,4.166-4.087,5.571c0.001-0.001,0.002-0.001,0.003-0.002l6.19,5.238C36.971,39.205,44,34,44,24C44,22.659,43.862,21.35,43.611,20.083z"></path></svg>` : `${provider === "facebook" ? `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" width="21px" height="21px" class="svelte-10a6av0"><path fill="#039be5" d="M24 5A19 19 0 1 0 24 43A19 19 0 1 0 24 5Z"></path><path fill="#fff" d="M26.572,29.036h4.917l0.772-4.995h-5.69v-2.73c0-2.075,0.678-3.915,2.619-3.915h3.119v-4.359c-0.548-0.074-1.707-0.236-3.897-0.236c-4.573,0-7.254,2.415-7.254,7.917v3.323h-4.701v4.995h4.701v13.729C22.089,42.905,23.032,43,24,43c0.875,0,1.729-0.08,2.572-0.194V29.036z"></path></svg>` : `${provider === "twitter" ? `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" width="21px" height="21px" class="svelte-10a6av0"><path fill="#03A9F4" d="M42,12.429c-1.323,0.586-2.746,0.977-4.247,1.162c1.526-0.906,2.7-2.351,3.251-4.058c-1.428,0.837-3.01,1.452-4.693,1.776C34.967,9.884,33.05,9,30.926,9c-4.08,0-7.387,3.278-7.387,7.32c0,0.572,0.067,1.129,0.193,1.67c-6.138-0.308-11.582-3.226-15.224-7.654c-0.64,1.082-1,2.349-1,3.686c0,2.541,1.301,4.778,3.285,6.096c-1.211-0.037-2.351-0.374-3.349-0.914c0,0.022,0,0.055,0,0.086c0,3.551,2.547,6.508,5.923,7.181c-0.617,0.169-1.269,0.263-1.941,0.263c-0.477,0-0.942-0.054-1.392-0.135c0.94,2.902,3.667,5.023,6.898,5.086c-2.528,1.96-5.712,3.134-9.174,3.134c-0.598,0-1.183-0.034-1.761-0.104C9.268,36.786,13.152,38,17.321,38c13.585,0,21.017-11.156,21.017-20.834c0-0.317-0.01-0.633-0.025-0.945C39.763,15.197,41.013,13.905,42,12.429"></path></svg>` : `${provider === "apple" ? `<svg fill="gray" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="21px" height="21px" class="svelte-10a6av0">${escape(" ")}<path d="M 15.904297 1.078125 C 15.843359 1.06875 15.774219 1.0746094 15.699219 1.0996094 C 14.699219 1.2996094 13.600391 1.8996094 12.900391 2.5996094 C 12.300391 3.1996094 11.800781 4.1996094 11.800781 5.0996094 C 11.800781 5.2996094 11.999219 5.5 12.199219 5.5 C 13.299219 5.4 14.399609 4.7996094 15.099609 4.0996094 C 15.699609 3.2996094 16.199219 2.4 16.199219 1.5 C 16.199219 1.275 16.087109 1.10625 15.904297 1.078125 z M 16.199219 5.4003906 C 14.399219 5.4003906 13.600391 6.5 12.400391 6.5 C 11.100391 6.5 9.9003906 5.5 8.4003906 5.5 C 6.3003906 5.5 3.0996094 7.4996094 3.0996094 12.099609 C 2.9996094 16.299609 6.8 21 9 21 C 10.3 21 10.600391 20.199219 12.400391 20.199219 C 14.200391 20.199219 14.600391 21 15.900391 21 C 17.400391 21 18.500391 19.399609 19.400391 18.099609 C 19.800391 17.399609 20.100391 17.000391 20.400391 16.400391 C 20.600391 16.000391 20.4 15.600391 20 15.400391 C 17.4 14.100391 16.900781 9.9003906 19.800781 8.4003906 C 20.300781 8.1003906 20.4 7.4992188 20 7.1992188 C 18.9 6.1992187 17.299219 5.4003906 16.199219 5.4003906 z"></path></svg>` : `${provider === "github" ? `<svg fill="gray" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30 30" width="21px" height="21px" class="svelte-10a6av0">${escape(" ")}<path d="M15,3C8.373,3,3,8.373,3,15c0,5.623,3.872,10.328,9.092,11.63C12.036,26.468,12,26.28,12,26.047v-2.051 c-0.487,0-1.303,0-1.508,0c-0.821,0-1.551-0.353-1.905-1.009c-0.393-0.729-0.461-1.844-1.435-2.526 c-0.289-0.227-0.069-0.486,0.264-0.451c0.615,0.174,1.125,0.596,1.605,1.222c0.478,0.627,0.703,0.769,1.596,0.769 c0.433,0,1.081-0.025,1.691-0.121c0.328-0.833,0.895-1.6,1.588-1.962c-3.996-0.411-5.903-2.399-5.903-5.098 c0-1.162,0.495-2.286,1.336-3.233C9.053,10.647,8.706,8.73,9.435,8c1.798,0,2.885,1.166,3.146,1.481C13.477,9.174,14.461,9,15.495,9 c1.036,0,2.024,0.174,2.922,0.483C18.675,9.17,19.763,8,21.565,8c0.732,0.731,0.381,2.656,0.102,3.594 c0.836,0.945,1.328,2.066,1.328,3.226c0,2.697-1.904,4.684-5.894,5.097C18.199,20.49,19,22.1,19,23.313v2.734 c0,0.104-0.023,0.179-0.035,0.268C23.641,24.676,27,20.236,27,15C27,8.373,21.627,3,15,3z"></path></svg>` : `${provider === "gitlab" ? `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" width="21px" height="21px" class="svelte-10a6av0"><path fill="#e53935" d="M24 43L16 20 32 20z"></path><path fill="#ff7043" d="M24 43L42 20 32 20z"></path><path fill="#e53935" d="M37 5L42 20 32 20z"></path><path fill="#ffa726" d="M24 43L42 20 45 28z"></path><path fill="#ff7043" d="M24 43L6 20 16 20z"></path><path fill="#e53935" d="M11 5L6 20 16 20z"></path><path fill="#ffa726" d="M24 43L6 20 3 28z"></path></svg>` : `${provider === "bitbucket" ? `<svg xmlns="http://www.w3.org/2000/svg" width="21px" height="21px" viewBox="0 0 62.42 62.42" class="svelte-10a6av0"><defs><linearGradient id="New_Gradient_Swatch_1" x1="64.01" y1="30.27" x2="32.99" y2="54.48" gradientUnits="userSpaceOnUse"><stop offset="0.18" stop-color="#0052cc"></stop><stop offset="1" stop-color="#2684ff"></stop></linearGradient></defs><title>Bitbucket-blue</title><g id="Layer_2" data-name="Layer 2"><g id="Blue" transform="translate(0 -3.13)"><path d="M2,6.26A2,2,0,0,0,0,8.58L8.49,60.12a2.72,2.72,0,0,0,2.66,2.27H51.88a2,2,0,0,0,2-1.68L62.37,8.59a2,2,0,0,0-2-2.32ZM37.75,43.51h-13L21.23,25.12H40.9Z" fill="#2684ff"></path><path d="M59.67,25.12H40.9L37.75,43.51h-13L9.4,61.73a2.71,2.71,0,0,0,1.75.66H51.89a2,2,0,0,0,2-1.68Z" fill="url(#New_Gradient_Swatch_1)"></path></g></g></svg>` : `${provider === "discord" ? `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" width="21px" height="21px" class="svelte-10a6av0"><path fill="#536dfe" d="M39.248,10.177c-2.804-1.287-5.812-2.235-8.956-2.778c-0.057-0.01-0.114,0.016-0.144,0.068	c-0.387,0.688-0.815,1.585-1.115,2.291c-3.382-0.506-6.747-0.506-10.059,0c-0.3-0.721-0.744-1.603-1.133-2.291	c-0.03-0.051-0.087-0.077-0.144-0.068c-3.143,0.541-6.15,1.489-8.956,2.778c-0.024,0.01-0.045,0.028-0.059,0.051	c-5.704,8.522-7.267,16.835-6.5,25.044c0.003,0.04,0.026,0.079,0.057,0.103c3.763,2.764,7.409,4.442,10.987,5.554	c0.057,0.017,0.118-0.003,0.154-0.051c0.846-1.156,1.601-2.374,2.248-3.656c0.038-0.075,0.002-0.164-0.076-0.194	c-1.197-0.454-2.336-1.007-3.432-1.636c-0.087-0.051-0.094-0.175-0.014-0.234c0.231-0.173,0.461-0.353,0.682-0.534	c0.04-0.033,0.095-0.04,0.142-0.019c7.201,3.288,14.997,3.288,22.113,0c0.047-0.023,0.102-0.016,0.144,0.017	c0.22,0.182,0.451,0.363,0.683,0.536c0.08,0.059,0.075,0.183-0.012,0.234c-1.096,0.641-2.236,1.182-3.434,1.634	c-0.078,0.03-0.113,0.12-0.075,0.196c0.661,1.28,1.415,2.498,2.246,3.654c0.035,0.049,0.097,0.07,0.154,0.052	c3.595-1.112,7.241-2.79,11.004-5.554c0.033-0.024,0.054-0.061,0.057-0.101c0.917-9.491-1.537-17.735-6.505-25.044	C39.293,10.205,39.272,10.187,39.248,10.177z M16.703,30.273c-2.168,0-3.954-1.99-3.954-4.435s1.752-4.435,3.954-4.435	c2.22,0,3.989,2.008,3.954,4.435C20.658,28.282,18.906,30.273,16.703,30.273z M31.324,30.273c-2.168,0-3.954-1.99-3.954-4.435	s1.752-4.435,3.954-4.435c2.22,0,3.989,2.008,3.954,4.435C35.278,28.282,33.544,30.273,31.324,30.273z"></path></svg>` : `${provider === "azure" ? `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" width="21px" height="21px" class="svelte-10a6av0"><linearGradient id="k8yl7~hDat~FaoWq8WjN6a" x1="-1254.397" x2="-1261.911" y1="877.268" y2="899.466" gradientTransform="translate(1981.75 -1362.063) scale(1.5625)" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#114a8b"></stop><stop offset="1" stop-color="#0669bc"></stop></linearGradient><path fill="url(#k8yl7~hDat~FaoWq8WjN6a)" d="M17.634,6h11.305L17.203,40.773c-0.247,0.733-0.934,1.226-1.708,1.226H6.697 c-0.994,0-1.8-0.806-1.8-1.8c0-0.196,0.032-0.39,0.094-0.576L15.926,7.227C16.173,6.494,16.86,6,17.634,6L17.634,6z"></path><path fill="#0078d4" d="M34.062,29.324H16.135c-0.458-0.001-0.83,0.371-0.831,0.829c0,0.231,0.095,0.451,0.264,0.608 l11.52,10.752C27.423,41.826,27.865,42,28.324,42h10.151L34.062,29.324z"></path><linearGradient id="k8yl7~hDat~FaoWq8WjN6b" x1="-1252.05" x2="-1253.788" y1="887.612" y2="888.2" gradientTransform="translate(1981.75 -1362.063) scale(1.5625)" gradientUnits="userSpaceOnUse"><stop offset="0" stop-opacity=".3"></stop><stop offset=".071" stop-opacity=".2"></stop><stop offset=".321" stop-opacity=".1"></stop><stop offset=".623" stop-opacity=".05"></stop><stop offset="1" stop-opacity="0"></stop></linearGradient><path fill="url(#k8yl7~hDat~FaoWq8WjN6b)" d="M17.634,6c-0.783-0.003-1.476,0.504-1.712,1.25L5.005,39.595 c-0.335,0.934,0.151,1.964,1.085,2.299C6.286,41.964,6.493,42,6.702,42h9.026c0.684-0.122,1.25-0.603,1.481-1.259l2.177-6.416 l7.776,7.253c0.326,0.27,0.735,0.419,1.158,0.422h10.114l-4.436-12.676l-12.931,0.003L28.98,6H17.634z"></path><linearGradient id="k8yl7~hDat~FaoWq8WjN6c" x1="-1252.952" x2="-1244.704" y1="876.6" y2="898.575" gradientTransform="translate(1981.75 -1362.063) scale(1.5625)" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#3ccbf4"></stop><stop offset="1" stop-color="#2892df"></stop></linearGradient><path fill="url(#k8yl7~hDat~FaoWq8WjN6c)" d="M32.074,7.225C31.827,6.493,31.141,6,30.368,6h-12.6c0.772,0,1.459,0.493,1.705,1.224 l10.935,32.399c0.318,0.942-0.188,1.963-1.13,2.281C29.093,41.968,28.899,42,28.703,42h12.6c0.994,0,1.8-0.806,1.8-1.801 c0-0.196-0.032-0.39-0.095-0.575L32.074,7.225z"></path></svg>` : `${provider === "keycloak" ? `<svg width="21px" height="21px" viewBox="0 0 512 512" fill="none" xmlns="http://www.w3.org/2000/svg" class="svelte-10a6av0"><path d="M472.136 163.959H408.584C407.401 163.959 406.218 163.327 405.666 162.3L354.651 73.6591C354.02 72.632 352.916 72 351.654 72H143.492C142.309 72 141.126 72.632 140.574 73.6591L87.5084 165.618L36.414 254.259C35.862 255.286 35.862 256.55 36.414 257.656L87.5084 346.297L140.495 438.335C141.047 439.362 142.23 440.073 143.413 439.994H351.654C352.837 439.994 354.02 439.362 354.651 438.335L405.745 349.694C406.297 348.667 407.48 347.956 408.663 348.035H472.215C474.344 348.035 476 346.297 476 344.243V167.83C475.921 165.697 474.186 163.959 472.136 163.959ZM228.728 349.694L212.721 377.345C212.485 377.74 212.091 378.135 211.696 378.372C211.223 378.609 210.75 378.767 210.198 378.767H178.422C177.318 378.767 176.293 378.214 175.82 377.187L128.431 294.787L123.779 286.65L106.748 257.498C106.511 257.103 106.353 256.629 106.432 256.076C106.432 255.602 106.59 255.049 106.827 254.654L123.937 224.949L175.899 134.886C176.451 133.938 177.476 133.306 178.501 133.306H210.198C210.75 133.306 211.302 133.464 211.854 133.701C212.248 133.938 212.643 134.254 212.879 134.728L228.886 162.537C229.359 163.485 229.28 164.67 228.728 165.539L177.397 254.654C177.16 255.049 177.081 255.523 177.081 255.918C177.081 256.392 177.239 256.787 177.397 257.182L228.728 346.218C229.438 347.403 229.359 348.667 228.728 349.694V349.694ZM388.083 257.498L371.051 286.65L366.399 294.787L319.011 377.187C318.459 378.135 317.512 378.767 316.409 378.767H284.632C284.08 378.767 283.607 378.609 283.134 378.372C282.74 378.135 282.346 377.819 282.109 377.345L266.103 349.694C265.393 348.667 265.393 347.403 266.024 346.376L317.355 257.34C317.591 256.945 317.67 256.471 317.67 256.076C317.67 255.602 317.513 255.207 317.355 254.812L266.024 165.697C265.472 164.749 265.393 163.643 265.866 162.695L281.873 134.886C282.109 134.491 282.503 134.096 282.898 133.859C283.371 133.543 283.923 133.464 284.553 133.464H316.409C317.512 133.464 318.538 134.017 319.011 135.044L370.972 225.107L388.083 254.812C388.319 255.286 388.477 255.76 388.477 256.234C388.477 256.55 388.319 257.024 388.083 257.498V257.498Z" fill="#008AAA"></path></svg>` : `${provider === "linkedin" ? `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" width="21px" height="21px" class="svelte-10a6av0"><path fill="#0288D1" d="M42,37c0,2.762-2.238,5-5,5H11c-2.761,0-5-2.238-5-5V11c0-2.762,2.239-5,5-5h26c2.762,0,5,2.238,5,5V37z"></path><path fill="#FFF" d="M12 19H17V36H12zM14.485 17h-.028C12.965 17 12 15.888 12 14.499 12 13.08 12.995 12 14.514 12c1.521 0 2.458 1.08 2.486 2.499C17 15.887 16.035 17 14.485 17zM36 36h-5v-9.099c0-2.198-1.225-3.698-3.192-3.698-1.501 0-2.313 1.012-2.707 1.99C24.957 25.543 25 26.511 25 27v9h-5V19h5v2.616C25.721 20.5 26.85 19 29.738 19c3.578 0 6.261 2.25 6.261 7.274L36 36 36 36z"></path></svg>` : `${provider === "notion" ? `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" width="21px" height="21px" fill-rule="evenodd" clip-rule="evenodd" class="svelte-10a6av0"><path fill="#fff" fill-rule="evenodd" d="M11.553,11.099c1.232,1.001,1.694,0.925,4.008,0.77 l21.812-1.31c0.463,0,0.078-0.461-0.076-0.538l-3.622-2.619c-0.694-0.539-1.619-1.156-3.391-1.002l-21.12,1.54 c-0.77,0.076-0.924,0.461-0.617,0.77L11.553,11.099z" clip-rule="evenodd"></path><path fill="#fff" fill-rule="evenodd" d="M12.862,16.182v22.95c0,1.233,0.616,1.695,2.004,1.619 l23.971-1.387c1.388-0.076,1.543-0.925,1.543-1.927V14.641c0-1-0.385-1.54-1.234-1.463l-25.05,1.463 C13.171,14.718,12.862,15.181,12.862,16.182L12.862,16.182z" clip-rule="evenodd"></path><path fill="#424242" fill-rule="evenodd" d="M11.553,11.099c1.232,1.001,1.694,0.925,4.008,0.77 l21.812-1.31c0.463,0,0.078-0.461-0.076-0.538l-3.622-2.619c-0.694-0.539-1.619-1.156-3.391-1.002l-21.12,1.54 c-0.77,0.076-0.924,0.461-0.617,0.77L11.553,11.099z M12.862,16.182v22.95c0,1.233,0.616,1.695,2.004,1.619l23.971-1.387 c1.388-0.076,1.543-0.925,1.543-1.927V14.641c0-1-0.385-1.54-1.234-1.463l-25.05,1.463C13.171,14.718,12.862,15.181,12.862,16.182 L12.862,16.182z M36.526,17.413c0.154,0.694,0,1.387-0.695,1.465l-1.155,0.23v16.943c-1.003,0.539-1.928,0.847-2.698,0.847 c-1.234,0-1.543-0.385-2.467-1.54l-7.555-11.86v11.475l2.391,0.539c0,0,0,1.386-1.929,1.386l-5.317,0.308 c-0.154-0.308,0-1.078,0.539-1.232l1.388-0.385V20.418l-1.927-0.154c-0.155-0.694,0.23-1.694,1.31-1.772l5.704-0.385l7.862,12.015 V19.493l-2.005-0.23c-0.154-0.848,0.462-1.464,1.233-1.54L36.526,17.413z M7.389,5.862l21.968-1.618 c2.698-0.231,3.392-0.076,5.087,1.155l7.013,4.929C42.614,11.176,43,11.407,43,12.33v27.032c0,1.694-0.617,2.696-2.775,2.849 l-25.512,1.541c-1.62,0.077-2.391-0.154-3.239-1.232l-5.164-6.7C5.385,34.587,5,33.664,5,32.585V8.556 C5,7.171,5.617,6.015,7.389,5.862z" clip-rule="evenodd"></path></svg>` : `${provider === "slack" ? `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" width="21px" height="21px" class="svelte-10a6av0"><path fill="#33d375" d="M33,8c0-2.209-1.791-4-4-4s-4,1.791-4,4c0,1.254,0,9.741,0,11c0,2.209,1.791,4,4,4s4-1.791,4-4	C33,17.741,33,9.254,33,8z"></path><path fill="#33d375" d="M43,19c0,2.209-1.791,4-4,4c-1.195,0-4,0-4,0s0-2.986,0-4c0-2.209,1.791-4,4-4S43,16.791,43,19z"></path><path fill="#40c4ff" d="M8,14c-2.209,0-4,1.791-4,4s1.791,4,4,4c1.254,0,9.741,0,11,0c2.209,0,4-1.791,4-4s-1.791-4-4-4	C17.741,14,9.254,14,8,14z"></path><path fill="#40c4ff" d="M19,4c2.209,0,4,1.791,4,4c0,1.195,0,4,0,4s-2.986,0-4,0c-2.209,0-4-1.791-4-4S16.791,4,19,4z"></path><path fill="#e91e63" d="M14,39.006C14,41.212,15.791,43,18,43s4-1.788,4-3.994c0-1.252,0-9.727,0-10.984	c0-2.206-1.791-3.994-4-3.994s-4,1.788-4,3.994C14,29.279,14,37.754,14,39.006z"></path><path fill="#e91e63" d="M4,28.022c0-2.206,1.791-3.994,4-3.994c1.195,0,4,0,4,0s0,2.981,0,3.994c0,2.206-1.791,3.994-4,3.994	S4,30.228,4,28.022z"></path><path fill="#ffc107" d="M39,33c2.209,0,4-1.791,4-4s-1.791-4-4-4c-1.254,0-9.741,0-11,0c-2.209,0-4,1.791-4,4s1.791,4,4,4	C29.258,33,37.746,33,39,33z"></path><path fill="#ffc107" d="M28,43c-2.209,0-4-1.791-4-4c0-1.195,0-4,0-4s2.986,0,4,0c2.209,0,4,1.791,4,4S30.209,43,28,43z"></path></svg>` : `${provider === "spotify" ? `<svg width="21px" height="21px" viewBox="0 0 512 512" fill="none" xmlns="http://www.w3.org/2000/svg" class="svelte-10a6av0"><path d="M255.498 31.0034C131.513 31.0034 31 131.515 31 255.502C31 379.492 131.513 480 255.498 480C379.497 480 480 379.495 480 255.502C480 131.522 379.497 31.0135 255.495 31.0135L255.498 31V31.0034ZM358.453 354.798C354.432 361.391 345.801 363.486 339.204 359.435C286.496 327.237 220.139 319.947 141.993 337.801C134.463 339.516 126.957 334.798 125.24 327.264C123.516 319.731 128.217 312.225 135.767 310.511C221.284 290.972 294.639 299.384 353.816 335.549C360.413 339.596 362.504 348.2 358.453 354.798ZM385.932 293.67C380.864 301.903 370.088 304.503 361.858 299.438C301.512 262.345 209.528 251.602 138.151 273.272C128.893 276.067 119.118 270.851 116.309 261.61C113.521 252.353 118.74 242.597 127.981 239.782C209.512 215.044 310.87 227.026 380.17 269.612C388.4 274.68 391 285.456 385.935 293.676V293.673L385.932 293.67ZM388.293 230.016C315.935 187.039 196.56 183.089 127.479 204.055C116.387 207.42 104.654 201.159 101.293 190.063C97.9326 178.964 104.189 167.241 115.289 163.87C194.59 139.796 326.418 144.446 409.723 193.902C419.722 199.826 422.995 212.71 417.068 222.675C411.168 232.653 398.247 235.943 388.303 230.016H388.293V230.016Z" fill="#1ED760"></path></svg>` : `${provider === "twitch" ? `<svg width="21px" height="21px" viewBox="0 0 512 512" fill="none" xmlns="http://www.w3.org/2000/svg" class="svelte-10a6av0"><path d="M416 240L352 304H288L232 360V304H160V64H416V240Z" fill="white"></path><path d="M144 32L64 112V400H160V480L240 400H304L448 256V32H144ZM416 240L352 304H288L232 360V304H160V64H416V240Z" fill="#9146FF"></path><path d="M368 120H336V216H368V120Z" fill="#9146FF"></path><path d="M280 120H248V216H280V120Z" fill="#9146FF"></path></svg>` : `${provider === "workos" ? `<svg width="21px" height="21px" viewBox="0 0 512 512" fill="none" xmlns="http://www.w3.org/2000/svg" class="svelte-10a6av0"><path d="M33 256.043C33 264.556 35.3159 273.069 39.4845 280.202L117.993 415.493C126.098 429.298 138.373 440.572 153.657 445.634C183.764 455.528 214.797 442.873 229.618 417.333L248.609 384.661L173.806 256.043L252.777 119.831L271.768 87.1591C277.557 77.2654 284.968 69.4424 294 63H285.894H172.185C150.878 63 131.193 74.2742 120.54 92.6812L39.7161 231.884C35.3159 239.016 33 247.53 33 256.043Z" fill="#6363F1"></path><path d="M480 256.058C480 247.539 477.684 239.021 473.516 231.883L393.849 94.6596C379.028 69.3331 347.995 56.4396 317.888 66.34C302.603 71.4053 290.329 82.6871 282.224 96.5015L264.391 127.354L339.194 256.058L260.223 392.131L241.232 424.825C235.443 434.495 228.032 442.553 219 449H227.106H340.815C362.122 449 381.807 437.718 392.46 419.299L473.284 280.003C477.684 272.866 480 264.577 480 256.058Z" fill="#6363F1"></path></svg>` : ``}`}`}`}`}`}`}`}`}`}`}`}`}`}`}`}`;
    });
    Divider = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$restProps = compute_rest_props($$props, ["appearance"]);
      const dividerDefaultStyles = _({
        background: "$dividerBackground",
        display: "block",
        margin: "16px 0",
        height: "1px",
        width: "100%"
      });
      let { appearance = {} } = $$props;
      const classNames8 = generateClassNames("divider", dividerDefaultStyles(), appearance);
      if ($$props.appearance === void 0 && $$bindings.appearance && appearance !== void 0)
        $$bindings.appearance(appearance);
      return `<div${spread(
        [
          escape_object($$restProps),
          {
            style: escape_attribute_value(appearance?.style?.divider)
          },
          {
            class: escape_attribute_value(classNames8.join(" "))
          }
        ],
        {}
      )}>${slots.default ? slots.default({}) : ``}</div>`;
    });
    SocialAuth = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let verticalSocialLayout;
      let { supabaseClient } = $$props;
      let { socialLayout } = $$props;
      let { redirectTo = void 0 } = $$props;
      let { onlyThirdPartyProviders } = $$props;
      let { i18n } = $$props;
      let { providers = [] } = $$props;
      let { providerScopes } = $$props;
      let { queryParams } = $$props;
      let { appearance } = $$props;
      let loading = false;
      let iconTitle = (provider) => template(i18n["sign_in"]?.social_provider_text, { provider: capitalize(provider) });
      if ($$props.supabaseClient === void 0 && $$bindings.supabaseClient && supabaseClient !== void 0)
        $$bindings.supabaseClient(supabaseClient);
      if ($$props.socialLayout === void 0 && $$bindings.socialLayout && socialLayout !== void 0)
        $$bindings.socialLayout(socialLayout);
      if ($$props.redirectTo === void 0 && $$bindings.redirectTo && redirectTo !== void 0)
        $$bindings.redirectTo(redirectTo);
      if ($$props.onlyThirdPartyProviders === void 0 && $$bindings.onlyThirdPartyProviders && onlyThirdPartyProviders !== void 0)
        $$bindings.onlyThirdPartyProviders(onlyThirdPartyProviders);
      if ($$props.i18n === void 0 && $$bindings.i18n && i18n !== void 0)
        $$bindings.i18n(i18n);
      if ($$props.providers === void 0 && $$bindings.providers && providers !== void 0)
        $$bindings.providers(providers);
      if ($$props.providerScopes === void 0 && $$bindings.providerScopes && providerScopes !== void 0)
        $$bindings.providerScopes(providerScopes);
      if ($$props.queryParams === void 0 && $$bindings.queryParams && queryParams !== void 0)
        $$bindings.queryParams(queryParams);
      if ($$props.appearance === void 0 && $$bindings.appearance && appearance !== void 0)
        $$bindings.appearance(appearance);
      verticalSocialLayout = socialLayout === "vertical" ? true : false;
      return `${providers.length ? `${validate_component(Container, "Container").$$render(
        $$result,
        {
          direction: "vertical",
          gap: "large",
          appearance
        },
        {},
        {
          default: () => {
            return `${validate_component(Container, "Container").$$render(
              $$result,
              {
                direction: verticalSocialLayout ? "vertical" : "horizontal",
                gap: verticalSocialLayout ? "small" : "medium",
                appearance
              },
              {},
              {
                default: () => {
                  return `${each(providers, (provider) => {
                    return `${validate_component(Button, "Button").$$render(
                      $$result,
                      {
                        "aria-label": iconTitle(provider),
                        type: "submit",
                        color: "default",
                        loading,
                        appearance
                      },
                      {},
                      {
                        default: () => {
                          return `${validate_component(Icons, "Icons").$$render($$result, { provider }, {}, {})}
					${verticalSocialLayout ? `${escape(iconTitle(provider))}` : ``}
				`;
                        }
                      }
                    )}`;
                  })}`;
                }
              }
            )}`;
          }
        }
      )}
	${!onlyThirdPartyProviders ? `${validate_component(Divider, "Divider").$$render($$result, { appearance }, {}, {})}` : ``}` : ``}`;
    });
    css$22 = {
      code: "form.svelte-nm5p4o{width:100%}",
      map: null
    };
    UpdatePassword = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { i18n } = $$props;
      let { supabaseClient } = $$props;
      let { authView } = $$props;
      let { appearance } = $$props;
      let { showLinks = false } = $$props;
      let password = "";
      let loading = false;
      if ($$props.i18n === void 0 && $$bindings.i18n && i18n !== void 0)
        $$bindings.i18n(i18n);
      if ($$props.supabaseClient === void 0 && $$bindings.supabaseClient && supabaseClient !== void 0)
        $$bindings.supabaseClient(supabaseClient);
      if ($$props.authView === void 0 && $$bindings.authView && authView !== void 0)
        $$bindings.authView(authView);
      if ($$props.appearance === void 0 && $$bindings.appearance && appearance !== void 0)
        $$bindings.appearance(appearance);
      if ($$props.showLinks === void 0 && $$bindings.showLinks && showLinks !== void 0)
        $$bindings.showLinks(showLinks);
      $$result.css.add(css$22);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        $$rendered = `<form id="auth-update-password" method="post" class="svelte-nm5p4o">${validate_component(Container, "Container").$$render(
          $$result,
          {
            direction: "vertical",
            gap: "large",
            appearance
          },
          {},
          {
            default: () => {
              return `${validate_component(Container, "Container").$$render(
                $$result,
                {
                  direction: "vertical",
                  gap: "large",
                  appearance
                },
                {},
                {
                  default: () => {
                    return `<div>${validate_component(Label, "Label").$$render($$result, { for: "password", appearance }, {}, {
                      default: () => {
                        return `${escape(i18n?.update_password?.password_label)}`;
                      }
                    })}
				${validate_component(Input, "Input").$$render(
                      $$result,
                      {
                        id: "password",
                        type: "password",
                        name: "password",
                        autofocus: true,
                        placeholder: i18n?.update_password?.password_label,
                        autocomplete: "password",
                        appearance,
                        value: password
                      },
                      {
                        value: ($$value) => {
                          password = $$value;
                          $$settled = false;
                        }
                      },
                      {}
                    )}</div>
			${validate_component(Button, "Button").$$render(
                      $$result,
                      {
                        type: "submit",
                        color: "primary",
                        loading,
                        appearance
                      },
                      {},
                      {
                        default: () => {
                          return `${escape(i18n?.update_password?.button_label)}`;
                        }
                      }
                    )}`;
                  }
                }
              )}

		${showLinks ? `${validate_component(Anchor, "Anchor").$$render($$result, { href: "#auth-magic-link", appearance }, {}, {
                default: () => {
                  return `${escape(i18n?.sign_in?.link_text)}`;
                }
              })}` : ``}
		${``}
		${``}`;
            }
          }
        )}
</form>`;
      } while (!$$settled);
      return $$rendered;
    });
    css$12 = {
      code: "form.svelte-nm5p4o{width:100%}",
      map: null
    };
    VerifyOtp = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { i18n } = $$props;
      let { supabaseClient } = $$props;
      let { authView } = $$props;
      let { otpType = "email" } = $$props;
      let { appearance } = $$props;
      let { showLinks = false } = $$props;
      let { email = "" } = $$props;
      let { phone = "" } = $$props;
      let { token = "" } = $$props;
      let loading = false;
      if ($$props.i18n === void 0 && $$bindings.i18n && i18n !== void 0)
        $$bindings.i18n(i18n);
      if ($$props.supabaseClient === void 0 && $$bindings.supabaseClient && supabaseClient !== void 0)
        $$bindings.supabaseClient(supabaseClient);
      if ($$props.authView === void 0 && $$bindings.authView && authView !== void 0)
        $$bindings.authView(authView);
      if ($$props.otpType === void 0 && $$bindings.otpType && otpType !== void 0)
        $$bindings.otpType(otpType);
      if ($$props.appearance === void 0 && $$bindings.appearance && appearance !== void 0)
        $$bindings.appearance(appearance);
      if ($$props.showLinks === void 0 && $$bindings.showLinks && showLinks !== void 0)
        $$bindings.showLinks(showLinks);
      if ($$props.email === void 0 && $$bindings.email && email !== void 0)
        $$bindings.email(email);
      if ($$props.phone === void 0 && $$bindings.phone && phone !== void 0)
        $$bindings.phone(phone);
      if ($$props.token === void 0 && $$bindings.token && token !== void 0)
        $$bindings.token(token);
      $$result.css.add(css$12);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        $$rendered = `<form id="auth-magic-link" method="post" class="svelte-nm5p4o">${validate_component(Container, "Container").$$render(
          $$result,
          {
            direction: "vertical",
            gap: "large",
            appearance
          },
          {},
          {
            default: () => {
              return `${["sms", "phone_change"].includes(otpType) ? `<div>${validate_component(Label, "Label").$$render($$result, { for: "phone", appearance }, {}, {
                default: () => {
                  return `${escape(i18n?.verify_otp?.phone_input_label)}`;
                }
              })}
				${validate_component(Input, "Input").$$render(
                $$result,
                {
                  id: "phone",
                  type: "text",
                  name: "phone",
                  autofocus: true,
                  placeholder: i18n?.verify_otp?.phone_input_placeholder,
                  autocomplete: "phone",
                  appearance,
                  value: phone
                },
                {
                  value: ($$value) => {
                    phone = $$value;
                    $$settled = false;
                  }
                },
                {}
              )}</div>` : `<div>${validate_component(Label, "Label").$$render($$result, { for: "email", appearance }, {}, {
                default: () => {
                  return `${escape(i18n?.verify_otp?.email_input_label)}`;
                }
              })}
				${validate_component(Input, "Input").$$render(
                $$result,
                {
                  id: "email",
                  type: "email",
                  name: "email",
                  autofocus: true,
                  placeholder: i18n?.verify_otp?.email_input_placeholder,
                  autocomplete: "email",
                  appearance,
                  value: email
                },
                {
                  value: ($$value) => {
                    email = $$value;
                    $$settled = false;
                  }
                },
                {}
              )}</div>`}
		<div>${validate_component(Label, "Label").$$render($$result, { for: "token", appearance }, {}, {
                default: () => {
                  return `${escape(i18n?.verify_otp?.token_input_label)}`;
                }
              })}
			${validate_component(Input, "Input").$$render(
                $$result,
                {
                  id: "token",
                  type: "text",
                  name: "token",
                  placeholder: i18n?.verify_otp?.token_input_placeholder,
                  autocomplete: "token",
                  appearance,
                  value: token
                },
                {
                  value: ($$value) => {
                    token = $$value;
                    $$settled = false;
                  }
                },
                {}
              )}</div>
		${validate_component(Button, "Button").$$render(
                $$result,
                {
                  type: "submit",
                  color: "primary",
                  loading,
                  appearance
                },
                {},
                {
                  default: () => {
                    return `${escape(i18n?.verify_otp?.button_label)}`;
                  }
                }
              )}

		${showLinks ? `${validate_component(Anchor, "Anchor").$$render($$result, { href: "#auth-sign-in", appearance }, {}, {
                default: () => {
                  return `${escape(i18n?.sign_in?.link_text)}`;
                }
              })}` : ``}
		${``}
		${``}`;
            }
          }
        )}
</form>`;
      } while (!$$settled);
      return $$rendered;
    });
    Auth = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let i18n;
      let themeVariables;
      let SignView;
      let { supabaseClient } = $$props;
      let { socialLayout = "vertical" } = $$props;
      let { providers = [] } = $$props;
      let { providerScopes = void 0 } = $$props;
      let { queryParams = void 0 } = $$props;
      let { view = "sign_in" } = $$props;
      let { redirectTo = void 0 } = $$props;
      let { onlyThirdPartyProviders = false } = $$props;
      let { magicLink = false } = $$props;
      let { showLinks = true } = $$props;
      let { appearance = {} } = $$props;
      let { theme: theme2 = "default" } = $$props;
      let { localization = {} } = $$props;
      let { otpType = "email" } = $$props;
      let { additionalData } = $$props;
      let { captchaToken } = $$props;
      if ($$props.supabaseClient === void 0 && $$bindings.supabaseClient && supabaseClient !== void 0)
        $$bindings.supabaseClient(supabaseClient);
      if ($$props.socialLayout === void 0 && $$bindings.socialLayout && socialLayout !== void 0)
        $$bindings.socialLayout(socialLayout);
      if ($$props.providers === void 0 && $$bindings.providers && providers !== void 0)
        $$bindings.providers(providers);
      if ($$props.providerScopes === void 0 && $$bindings.providerScopes && providerScopes !== void 0)
        $$bindings.providerScopes(providerScopes);
      if ($$props.queryParams === void 0 && $$bindings.queryParams && queryParams !== void 0)
        $$bindings.queryParams(queryParams);
      if ($$props.view === void 0 && $$bindings.view && view !== void 0)
        $$bindings.view(view);
      if ($$props.redirectTo === void 0 && $$bindings.redirectTo && redirectTo !== void 0)
        $$bindings.redirectTo(redirectTo);
      if ($$props.onlyThirdPartyProviders === void 0 && $$bindings.onlyThirdPartyProviders && onlyThirdPartyProviders !== void 0)
        $$bindings.onlyThirdPartyProviders(onlyThirdPartyProviders);
      if ($$props.magicLink === void 0 && $$bindings.magicLink && magicLink !== void 0)
        $$bindings.magicLink(magicLink);
      if ($$props.showLinks === void 0 && $$bindings.showLinks && showLinks !== void 0)
        $$bindings.showLinks(showLinks);
      if ($$props.appearance === void 0 && $$bindings.appearance && appearance !== void 0)
        $$bindings.appearance(appearance);
      if ($$props.theme === void 0 && $$bindings.theme && theme2 !== void 0)
        $$bindings.theme(theme2);
      if ($$props.localization === void 0 && $$bindings.localization && localization !== void 0)
        $$bindings.localization(localization);
      if ($$props.otpType === void 0 && $$bindings.otpType && otpType !== void 0)
        $$bindings.otpType(otpType);
      if ($$props.additionalData === void 0 && $$bindings.additionalData && additionalData !== void 0)
        $$bindings.additionalData(additionalData);
      if ($$props.captchaToken === void 0 && $$bindings.captchaToken && captchaToken !== void 0)
        $$bindings.captchaToken(captchaToken);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        i18n = merge(en_default, localization.variables ?? {});
        {
          X({
            theme: merge(appearance?.theme?.default ?? {}, appearance?.variables?.default ?? {})
          });
        }
        themeVariables = q(merge(
          appearance?.theme?.[theme2],
          appearance?.variables?.[theme2] ?? {}
        ));
        SignView = view === "sign_in" || view === "sign_up" || view === "magic_link";
        $$rendered = `<div${add_attribute("class", theme2 !== "default" ? themeVariables : "", 0)}>${SignView ? `${validate_component(SocialAuth, "SocialAuth").$$render(
          $$result,
          {
            appearance,
            supabaseClient,
            providers,
            providerScopes,
            queryParams,
            socialLayout,
            redirectTo,
            onlyThirdPartyProviders,
            i18n
          },
          {},
          {}
        )}` : ``}
	${view === VIEWS.SIGN_IN ? `${!onlyThirdPartyProviders ? `${validate_component(EmailAuth, "EmailAuth").$$render(
          $$result,
          {
            appearance,
            supabaseClient,
            redirectTo,
            magicLink,
            showLinks,
            i18n,
            additionalData,
            captchaToken,
            authView: view
          },
          {
            authView: ($$value) => {
              view = $$value;
              $$settled = false;
            }
          },
          {}
        )}` : ``}` : ``}
	${view === VIEWS.SIGN_UP ? `${!onlyThirdPartyProviders ? `${validate_component(EmailAuth, "EmailAuth").$$render(
          $$result,
          {
            appearance,
            supabaseClient,
            redirectTo,
            magicLink,
            showLinks,
            additionalData,
            captchaToken,
            i18n,
            authView: view
          },
          {
            authView: ($$value) => {
              view = $$value;
              $$settled = false;
            }
          },
          {
            default: () => {
              return `${slots.default ? slots.default({}) : ``}`;
            }
          }
        )}` : ``}` : ``}
	${view === VIEWS.FORGOTTEN_PASSWORD ? `${validate_component(ForgottenPassword, "ForgottenPassword").$$render(
          $$result,
          {
            i18n,
            supabaseClient,
            showLinks,
            appearance,
            authView: view
          },
          {
            authView: ($$value) => {
              view = $$value;
              $$settled = false;
            }
          },
          {}
        )}` : ``}
	${view === VIEWS.MAGIC_LINK ? `${validate_component(MagicLink, "MagicLink").$$render(
          $$result,
          {
            i18n,
            supabaseClient,
            appearance,
            redirectTo,
            showLinks,
            authView: view
          },
          {
            authView: ($$value) => {
              view = $$value;
              $$settled = false;
            }
          },
          {}
        )}` : ``}
	${view === VIEWS.UPDATE_PASSWORD ? `${validate_component(UpdatePassword, "UpdatePassword").$$render(
          $$result,
          {
            i18n,
            supabaseClient,
            appearance,
            showLinks,
            authView: view
          },
          {
            authView: ($$value) => {
              view = $$value;
              $$settled = false;
            }
          },
          {}
        )}` : ``}
	${view === VIEWS.VERIFY_OTP ? `${validate_component(VerifyOtp, "VerifyOtp").$$render(
          $$result,
          {
            i18n,
            supabaseClient,
            appearance,
            showLinks,
            otpType,
            authView: view
          },
          {
            authView: ($$value) => {
              view = $$value;
              $$settled = false;
            }
          },
          {}
        )}` : ``}</div>`;
      } while (!$$settled);
      return $$rendered;
    });
    ThemeSupa = {
      default: {
        colors: {
          brand: "hsl(153 60.0% 53.0%)",
          brandAccent: "hsl(154 54.8% 45.1%)",
          brandButtonText: "white",
          defaultButtonBackground: "white",
          defaultButtonBackgroundHover: "#eaeaea",
          defaultButtonBorder: "lightgray",
          defaultButtonText: "gray",
          dividerBackground: "#eaeaea",
          inputBackground: "transparent",
          inputBorder: "lightgray",
          inputBorderHover: "gray",
          inputBorderFocus: "gray",
          inputText: "black",
          inputLabelText: "gray",
          inputPlaceholder: "darkgray",
          messageText: "gray",
          messageTextDanger: "red",
          anchorTextColor: "gray",
          anchorTextHoverColor: "darkgray"
        },
        space: {
          spaceSmall: "4px",
          spaceMedium: "8px",
          spaceLarge: "16px",
          labelBottomMargin: "8px",
          anchorBottomMargin: "4px",
          emailInputSpacing: "4px",
          socialAuthSpacing: "4px",
          buttonPadding: "10px 15px",
          inputPadding: "10px 15px"
        },
        fontSizes: {
          baseBodySize: "13px",
          baseInputSize: "14px",
          baseLabelSize: "14px",
          baseButtonSize: "14px"
        },
        fonts: {
          bodyFontFamily: `ui-sans-serif, sans-serif`,
          buttonFontFamily: `ui-sans-serif, sans-serif`,
          inputFontFamily: `ui-sans-serif, sans-serif`,
          labelFontFamily: `ui-sans-serif, sans-serif`
        },
        borderWidths: {
          buttonBorderWidth: "1px",
          inputBorderWidth: "1px"
        },
        radii: {
          borderRadiusButton: "4px",
          buttonBorderRadius: "4px",
          inputBorderRadius: "4px"
        }
      },
      dark: {
        colors: {
          brandButtonText: "white",
          defaultButtonBackground: "#2e2e2e",
          defaultButtonBackgroundHover: "#3e3e3e",
          defaultButtonBorder: "#3e3e3e",
          defaultButtonText: "white",
          dividerBackground: "#2e2e2e",
          inputBackground: "#1e1e1e",
          inputBorder: "#3e3e3e",
          inputBorderHover: "gray",
          inputBorderFocus: "gray",
          inputText: "white",
          inputPlaceholder: "darkgray"
        }
      }
    };
    css2 = {
      code: ".auth-box-shadow.svelte-127x9ga{min-width:364px;box-shadow:-2px 1px 69px 5px rgb(57, 67, 93);border-radius:1rem}",
      map: null
    };
    Auth_1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      const socialAlignments = ["horizontal", "vertical"];
      const views = [
        { id: "sign_in", title: "Sign In" },
        { id: "sign_up", title: "Sign Up" },
        { id: "magic_link", title: "Magic Link" },
        {
          id: "forgotten_password",
          title: "Forgotten Password"
        },
        {
          id: "update_password",
          title: "Update Password"
        },
        { id: "verify_otp", title: "Verify Otp" }
      ];
      let socialLayout = socialAlignments[0];
      let view = views[0];
      let { data } = $$props;
      let { supabase, session, user } = data;
      let token;
      if ($$props.data === void 0 && $$bindings.data && data !== void 0)
        $$bindings.data(data);
      $$result.css.add(css2);
      ({ supabase, session, user } = data);
      return `<body class="antialiased bg-body text-body font-body bg-gray-600 h-screen"><div class=""><div class="dark:bg-scale-200 bg-scale-100 relative py-2 pb-16"><div class="sm:py-18 gap container relative mx-auto grid px-6 py-16 md:gap-16 md:py-24 lg:gap-16 lg:px-16 lg:py-24 xl:px-20"><div class="relative col-span-12 mb-16 md:col-span-7 md:mb-0 lg:col-span-6"><div class="relative lg:mx-auto lg:max-w-md bg-gray-600"><div class="${escape(null_to_empty("auth-box-shadow"), true) + " svelte-127x9ga"}"><div class="border-scale-400 bg-scale-300 relative rounded-xl px-8 py-12 drop-shadow-sm"><div class="mb-6 flex flex-col gap-6"><div class="flex items-center gap-3"><h1 class="text-scale-1200 text-2xl text-white">CSBOX</h1></div></div>
                            ${validate_component(Auth, "Auth").$$render(
        $$result,
        {
          supabaseClient: supabase,
          theme: "dark",
          view: view.id,
          appearance: {
            theme: ThemeSupa,
            style: {
              button: `border-radius: ${"10px"}; border-color: rgba(0,0,0,0);`
            },
            variables: {
              default: {
                colors: {
                  brand: "rgb(85,186,226)",
                  brandAccent: `white`
                },
                radii: {
                  borderRadiusButton: "10px",
                  buttonBorderRadius: "10px",
                  inputBorderRadius: "10px"
                }
              }
            }
          },
          providers: ["google", "github", "apple", "azure"],
          queryParams: {
            access_type: "offline",
            prompt: "consent",
            hd: "domain.com"
          },
          captchaToken: token,
          socialLayout
        },
        {},
        {}
      )}
                            <div class="flex justify-center text-center">
                                ${``}</div></div></div></div></div></div></div></div>
</body>`;
    });
    Page2 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { data } = $$props;
      let { supabase } = data;
      if ($$props.data === void 0 && $$bindings.data && data !== void 0)
        $$bindings.data(data);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        ({ supabase } = data);
        $$rendered = `${!data.session ? `${validate_component(Auth_1, "Auth").$$render(
          $$result,
          { data },
          {
            data: ($$value) => {
              data = $$value;
              $$settled = false;
            }
          },
          {}
        )}` : `<h1>Welcome ${escape(data.session.user.email)}</h1>
	<p>Edit account</p>

	${validate_component(Account, "Account").$$render($$result, { session: data.session, supabase }, {}, {})}

	<div><button class="button block">Sign Out </button></div>`}`;
      } while (!$$settled);
      return $$rendered;
    });
  }
});
var __exports9 = {};
__export(__exports9, {
  component: () => component9,
  fonts: () => fonts9,
  imports: () => imports9,
  index: () => index9,
  server: () => page_server_ts_exports,
  server_id: () => server_id4,
  stylesheets: () => stylesheets9
});
var index9;
var component9;
var server_id4;
var imports9;
var stylesheets9;
var fonts9;
var init__9 = __esm({
  ".svelte-kit/output/server/nodes/8.js"() {
    init_page_server_ts();
    index9 = 8;
    component9 = async () => (await Promise.resolve().then(() => (init_page_svelte2(), page_svelte_exports2))).default;
    server_id4 = "src/routes/+page.server.ts";
    imports9 = ["_app/immutable/nodes/8.d99f1bf2.js", "_app/immutable/chunks/index.7ee2e23d.js", "_app/immutable/chunks/paths.1c0372a3.js", "_app/immutable/chunks/Avatar.fd902668.js", "_app/immutable/chunks/imageStorage.281a7663.js", "_app/immutable/chunks/_commonjsHelpers.725317a4.js", "_app/immutable/chunks/stores.2de0b66f.js", "_app/immutable/chunks/singletons.21d018a5.js", "_app/immutable/chunks/navigation.0d698c81.js", "_app/immutable/chunks/stores.ec6fd508.js", "_app/immutable/chunks/index.ade5cbd2.js", "_app/immutable/chunks/control.f5b05b5f.js"];
    stylesheets9 = ["_app/immutable/assets/8.b1766634.css"];
    fonts9 = [];
  }
});
var page_server_ts_exports2 = {};
__export(page_server_ts_exports2, {
  prerender: () => prerender4
});
var prerender4;
var init_page_server_ts2 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/_page.server.ts.js"() {
    prerender4 = false;
  }
});
var page_svelte_exports3 = {};
__export(page_svelte_exports3, {
  default: () => Page3,
  load: () => load10
});
async function load10({ stuff }) {
  return { props: stuff };
}
var Charts;
var Page3;
var init_page_svelte3 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/_page.svelte.js"() {
    init_index2();
    init_stores();
    init_Settings();
    init_chunks();
    Charts = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return `${``}`;
    });
    Page3 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$unsubscribe_fetchedCourses;
      let $page, $$unsubscribe_page;
      $$unsubscribe_page = subscribe(page, (value2) => $page = value2);
      let user = $page.data.user.data;
      let updated2;
      updated2 = $page.data.user.updated_at;
      user.avatar_url + "?t=" + updated2;
      let model;
      let { fetchedCourses } = $$props;
      $$unsubscribe_fetchedCourses = subscribe(fetchedCourses, (value2) => value2);
      if ($$props.fetchedCourses === void 0 && $$bindings.fetchedCourses && fetchedCourses !== void 0)
        $$bindings.fetchedCourses(fetchedCourses);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        $$rendered = `<body class="bg-gray-600 antialiased bg-body text-body font-body"><div>${validate_component(Navbar, "Navbar").$$render($$result, {}, {}, {})}
		<div class="mx-auto lg:ml-20"><section><div class="pt-5 pb-6 px-8 bg-gray-700"><div class="flex flex-wrap items-center justify-between -mx-2"><div class="w-full lg:w-auto px-2 mb-6 lg:mb-0"><h4 class="text-2xl font-bold text-white tracking-wide leading-7 mb-1">Dashboard</h4></div>
						<div class="w-full lg:w-auto px-2"><div class="sm:flex items-center"><div class="w-full sm:w-auto mb-6 sm:mb-0 sm:mr-4"><div class="flex flex-wrap items-center -mb-2"><a class="inline-flex items-center justify-center w-12 h-12 mb-2 mr-4 p-1 text-gray-300 bg-gray-500 hover:bg-gray-400 hover:bg-opacity-40 transition duration-150 rounded-full"${add_attribute("href", "#", 0)}><svg fill="none" height="16" viewBox="0 0 20 16" width="20" xmlns="http://www.w3.org/2000/svg"><path d="M17 0H3C2.20435 0 1.44129 0.316071 0.87868 0.87868C0.316071 1.44129 0 2.20435 0 3V13C0 13.7956 0.316071 14.5587 0.87868 15.1213C1.44129 15.6839 2.20435 16 3 16H17C17.7956 16 18.5587 15.6839 19.1213 15.1213C19.6839 14.5587 20 13.7956 20 13V3C20 2.20435 19.6839 1.44129 19.1213 0.87868C18.5587 0.316071 17.7956 0 17 0ZM3 2H17C17.2652 2 17.5196 2.10536 17.7071 2.29289C17.8946 2.48043 18 2.73478 18 3L10 7.88L2 3C2 2.73478 2.10536 2.48043 2.29289 2.29289C2.48043 2.10536 2.73478 2 3 2ZM18 13C18 13.2652 17.8946 13.5196 17.7071 13.7071C17.5196 13.8946 17.2652 14 17 14H3C2.73478 14 2.48043 13.8946 2.29289 13.7071C2.10536 13.5196 2 13.2652 2 13V5.28L9.48 9.85C9.63202 9.93777 9.80446 9.98397 9.98 9.98397C10.1555 9.98397 10.328 9.93777 10.48 9.85L18 5.28V13Z" fill="currentColor"></path></svg></a>
										<a class="inline-flex items-center justify-center w-12 h-12 mb-2 mr-4 p-1 text-gray-300 bg-gray-500 hover:bg-gray-400 hover:bg-opacity-40 transition duration-150 rounded-full"${add_attribute("href", "#", 0)}><svg fill="none" height="20" viewBox="0 0 16 20" width="16" xmlns="http://www.w3.org/2000/svg"><path d="M14 11.18V8C13.9986 6.58312 13.4958 5.21247 12.5806 4.13077C11.6655 3.04908 10.3971 2.32615 9 2.09V1C9 0.734784 8.89464 0.48043 8.70711 0.292893C8.51957 0.105357 8.26522 0 8 0C7.73478 0 7.48043 0.105357 7.29289 0.292893C7.10536 0.48043 7 0.734784 7 1V2.09C5.60294 2.32615 4.33452 3.04908 3.41939 4.13077C2.50425 5.21247 2.00144 6.58312 2 8V11.18C1.41645 11.3863 0.910998 11.7681 0.552938 12.2729C0.194879 12.7778 0.00173951 13.3811 0 14V16C0 16.2652 0.105357 16.5196 0.292893 16.7071C0.48043 16.8946 0.734784 17 1 17H4.14C4.37028 17.8474 4.873 18.5954 5.5706 19.1287C6.26819 19.6621 7.1219 19.951 8 19.951C8.8781 19.951 9.73181 19.6621 10.4294 19.1287C11.127 18.5954 11.6297 17.8474 11.86 17H15C15.2652 17 15.5196 16.8946 15.7071 16.7071C15.8946 16.5196 16 16.2652 16 16V14C15.9983 13.3811 15.8051 12.7778 15.4471 12.2729C15.089 11.7681 14.5835 11.3863 14 11.18ZM4 8C4 6.93913 4.42143 5.92172 5.17157 5.17157C5.92172 4.42143 6.93913 4 8 4C9.06087 4 10.0783 4.42143 10.8284 5.17157C11.5786 5.92172 12 6.93913 12 8V11H4V8ZM8 18C7.65097 17.9979 7.30857 17.9045 7.00683 17.7291C6.70509 17.5536 6.45451 17.3023 6.28 17H9.72C9.54549 17.3023 9.29491 17.5536 8.99317 17.7291C8.69143 17.9045 8.34903 17.9979 8 18ZM14 15H2V14C2 13.7348 2.10536 13.4804 2.29289 13.2929C2.48043 13.1054 2.73478 13 3 13H13C13.2652 13 13.5196 13.1054 13.7071 13.2929C13.8946 13.4804 14 13.7348 14 14V15Z" fill="currentColor"></path></svg></a>
										<a class="inline-flex items-center justify-center w-12 h-12 mb-2 p-1 text-gray-300 bg-gray-500 hover:bg-gray-400 hover:bg-opacity-40 transition duration-150 rounded-full"${add_attribute("href", "#", 0)}><svg fill="none" height="21" viewBox="0 0 21 21" width="21" xmlns="http://www.w3.org/2000/svg"><path d="M20.71 19.29L17 15.61C18.4401 13.8144 19.1375 11.5353 18.9488 9.24133C18.7601 6.94733 17.6997 4.81281 15.9855 3.27667C14.2714 1.74053 12.0338 0.919537 9.73295 0.982497C7.43207 1.04546 5.24275 1.98759 3.61517 3.61517C1.98759 5.24275 1.04546 7.43207 0.982497 9.73295C0.919537 12.0338 1.74053 14.2714 3.27667 15.9855C4.81281 17.6997 6.94733 18.7601 9.24133 18.9488C11.5353 19.1375 13.8144 18.4401 15.61 17L19.29 20.68C19.383 20.7738 19.4936 20.8482 19.6154 20.8989C19.7373 20.9497 19.868 20.9758 20 20.9758C20.132 20.9758 20.2627 20.9497 20.3846 20.8989C20.5065 20.8482 20.6171 20.7738 20.71 20.68C20.8903 20.4936 20.991 20.2444 20.991 19.985C20.991 19.7257 20.8903 19.4765 20.71 19.29ZM10 17C8.61556 17 7.26218 16.5895 6.11103 15.8203C4.95989 15.0511 4.06268 13.9579 3.53287 12.6788C3.00306 11.3997 2.86443 9.99226 3.13453 8.63439C3.40463 7.27653 4.07131 6.02925 5.05028 5.05028C6.02925 4.07131 7.27653 3.40463 8.63439 3.13453C9.99226 2.86443 11.3997 3.00306 12.6788 3.53287C13.9579 4.06268 15.0511 4.95989 15.8203 6.11103C16.5895 7.26218 17 8.61556 17 10C17 11.8565 16.2625 13.637 14.9498 14.9498C13.637 16.2625 11.8565 17 10 17Z" fill="currentColor"></path></svg></a></div></div>
								${validate_component(Settings, "Settings").$$render(
          $$result,
          { this: model },
          {
            this: ($$value) => {
              model = $$value;
              $$settled = false;
            }
          },
          {}
        )}</div></div></div></div></section>

			<section class="py-3 h-screen"><div class="container px-4 mx-auto"><div class="mb-6"><div class="flex flex-wrap -mx-3 -mb-6"><div class="w-full md:w-1/2 lg:w-1/4 px-3 mb-6"><div class="max-w-sm mx-auto py-8 px-6 bg-gray-500 rounded-xl drop-shadow-xl"><div class="max-w-xs mx-auto text-center"><div class="flex mx-auto w-12 h-12 mb-4 items-center justify-center bg-blue-500 bg-opacity-20 text-blue-500 rounded-xl"><svg fill="none" height="22" viewBox="0 0 22 22" width="22" xmlns="http://www.w3.org/2000/svg"><path d="M21 16H1C0.734784 16 0.48043 16.1054 0.292893 16.2929C0.105357 16.4804 0 16.7348 0 17C0 17.2652 0.105357 17.5196 0.292893 17.7071C0.48043 17.8946 0.734784 18 1 18H21C21.2652 18 21.5196 17.8946 21.7071 17.7071C21.8946 17.5196 22 17.2652 22 17C22 16.7348 21.8946 16.4804 21.7071 16.2929C21.5196 16.1054 21.2652 16 21 16ZM21 20H1C0.734784 20 0.48043 20.1054 0.292893 20.2929C0.105357 20.4804 0 20.7348 0 21C0 21.2652 0.105357 21.5196 0.292893 21.7071C0.48043 21.8946 0.734784 22 1 22H21C21.2652 22 21.5196 21.8946 21.7071 21.7071C21.8946 21.5196 22 21.2652 22 21C22 20.7348 21.8946 20.4804 21.7071 20.2929C21.5196 20.1054 21.2652 20 21 20ZM5 6C4.80222 6 4.60888 6.05865 4.44443 6.16853C4.27998 6.27841 4.15181 6.43459 4.07612 6.61732C4.00043 6.80004 3.98063 7.00111 4.01921 7.19509C4.0578 7.38907 4.15304 7.56725 4.29289 7.70711C4.43275 7.84696 4.61093 7.9422 4.80491 7.98079C4.99889 8.01937 5.19996 7.99957 5.38268 7.92388C5.56541 7.84819 5.72159 7.72002 5.83147 7.55557C5.94135 7.39112 6 7.19778 6 7C6 6.73478 5.89464 6.48043 5.70711 6.29289C5.51957 6.10536 5.26522 6 5 6ZM19 0H3C2.20435 0 1.44129 0.31607 0.87868 0.87868C0.31607 1.44129 0 2.20435 0 3V11C0 11.7956 0.31607 12.5587 0.87868 13.1213C1.44129 13.6839 2.20435 14 3 14H19C19.7956 14 20.5587 13.6839 21.1213 13.1213C21.6839 12.5587 22 11.7956 22 11V3C22 2.20435 21.6839 1.44129 21.1213 0.87868C20.5587 0.31607 19.7956 0 19 0ZM20 11C20 11.2652 19.8946 11.5196 19.7071 11.7071C19.5196 11.8946 19.2652 12 19 12H3C2.73478 12 2.48043 11.8946 2.29289 11.7071C2.10536 11.5196 2 11.2652 2 11V3C2 2.73478 2.10536 2.48043 2.29289 2.29289C2.48043 2.10536 2.73478 2 3 2H19C19.2652 2 19.5196 2.10536 19.7071 2.29289C19.8946 2.48043 20 2.73478 20 3V11ZM11 4C10.4067 4 9.82664 4.17595 9.33329 4.50559C8.83994 4.83524 8.45542 5.30377 8.22836 5.85195C8.0013 6.40013 7.94189 7.00333 8.05764 7.58527C8.1734 8.16721 8.45912 8.70176 8.87868 9.12132C9.29824 9.54088 9.83279 9.8266 10.4147 9.94236C10.9967 10.0581 11.5999 9.9987 12.1481 9.77164C12.6962 9.54458 13.1648 9.16006 13.4944 8.66671C13.8241 8.17336 14 7.59334 14 7C14 6.20435 13.6839 5.44129 13.1213 4.87868C12.5587 4.31607 11.7956 4 11 4ZM11 8C10.8022 8 10.6089 7.94135 10.4444 7.83147C10.28 7.72159 10.1518 7.56541 10.0761 7.38268C10.0004 7.19996 9.98063 6.99889 10.0192 6.80491C10.0578 6.61093 10.153 6.43275 10.2929 6.29289C10.4327 6.15304 10.6109 6.0578 10.8049 6.01921C10.9989 5.98063 11.2 6.00043 11.3827 6.07612C11.5654 6.15181 11.7216 6.27998 11.8315 6.44443C11.9414 6.60888 12 6.80222 12 7C12 7.26522 11.8946 7.51957 11.7071 7.70711C11.5196 7.89464 11.2652 8 11 8ZM17 6C16.8022 6 16.6089 6.05865 16.4444 6.16853C16.28 6.27841 16.1518 6.43459 16.0761 6.61732C16.0004 6.80004 15.9806 7.00111 16.0192 7.19509C16.0578 7.38907 16.153 7.56725 16.2929 7.70711C16.4327 7.84696 16.6109 7.9422 16.8049 7.98079C16.9989 8.01937 17.2 7.99957 17.3827 7.92388C17.5654 7.84819 17.7216 7.72002 17.8315 7.55557C17.9414 7.39112 18 7.19778 18 7C18 6.73478 17.8946 6.48043 17.7071 6.29289C17.5196 6.10536 17.2652 6 17 6Z" fill="#194BFB"></path></svg></div>
										<span class="text-xs text-gray-300 font-semibold">Missing Assignments</span>
										<h4 class="text-2xl leading-8 text-gray-100 font-semibold mb-4">5</h4>
										<div class="flex flex-wrap items-center justify-center -m-1"><div class="w-auto p-1"><span class="inline-block py-1 px-2 text-xs text-green-500 font-medium bg-teal-900 rounded-full">1,0%</span></div>
											<div class="w-auto p-1"><span class="text-xs text-gray-300 font-medium">Since last month</span></div></div></div></div></div>
							<div class="w-full md:w-1/2 lg:w-1/4 px-3 mb-6"><div class="max-w-sm mx-auto py-8 px-6 bg-gray-500 rounded-xl drop-shadow-xl"><div class="max-w-xs mx-auto text-center"><div class="flex mx-auto w-12 h-12 mb-4 items-center justify-center bg-blue-500 bg-opacity-20 text-blue-500 rounded-xl"><svg fill="none" height="18" viewBox="0 0 22 18" width="22" xmlns="http://www.w3.org/2000/svg"><path d="M11.3 9.22C11.8336 8.75813 12.2616 8.18688 12.5549 7.54502C12.8482 6.90316 13 6.20571 13 5.5C13 4.17392 12.4732 2.90215 11.5355 1.96447C10.5979 1.02678 9.32608 0.5 8 0.5C6.67392 0.5 5.40215 1.02678 4.46447 1.96447C3.52678 2.90215 3 4.17392 3 5.5C2.99999 6.20571 3.1518 6.90316 3.44513 7.54502C3.73845 8.18688 4.16642 8.75813 4.7 9.22C3.30014 9.85388 2.11247 10.8775 1.27898 12.1685C0.445495 13.4596 0.00147185 14.9633 0 16.5C0 16.7652 0.105357 17.0196 0.292893 17.2071C0.48043 17.3946 0.734784 17.5 1 17.5C1.26522 17.5 1.51957 17.3946 1.70711 17.2071C1.89464 17.0196 2 16.7652 2 16.5C2 14.9087 2.63214 13.3826 3.75736 12.2574C4.88258 11.1321 6.4087 10.5 8 10.5C9.5913 10.5 11.1174 11.1321 12.2426 12.2574C13.3679 13.3826 14 14.9087 14 16.5C14 16.7652 14.1054 17.0196 14.2929 17.2071C14.4804 17.3946 14.7348 17.5 15 17.5C15.2652 17.5 15.5196 17.3946 15.7071 17.2071C15.8946 17.0196 16 16.7652 16 16.5C15.9985 14.9633 15.5545 13.4596 14.721 12.1685C13.8875 10.8775 12.6999 9.85388 11.3 9.22ZM8 8.5C7.40666 8.5 6.82664 8.32405 6.33329 7.99441C5.83994 7.66476 5.45542 7.19623 5.22836 6.64805C5.0013 6.09987 4.94189 5.49667 5.05764 4.91473C5.1734 4.33279 5.45912 3.79824 5.87868 3.37868C6.29824 2.95912 6.83279 2.6734 7.41473 2.55764C7.99667 2.44189 8.59987 2.5013 9.14805 2.72836C9.69623 2.95542 10.1648 3.33994 10.4944 3.83329C10.8241 4.32664 11 4.90666 11 5.5C11 6.29565 10.6839 7.05871 10.1213 7.62132C9.55871 8.18393 8.79565 8.5 8 8.5ZM17.74 8.82C18.38 8.09933 18.798 7.20905 18.9438 6.25634C19.0896 5.30362 18.9569 4.32907 18.5618 3.45C18.1666 2.57093 17.5258 1.8248 16.7165 1.30142C15.9071 0.77805 14.9638 0.499742 14 0.5C13.7348 0.5 13.4804 0.605357 13.2929 0.792893C13.1054 0.98043 13 1.23478 13 1.5C13 1.76522 13.1054 2.01957 13.2929 2.20711C13.4804 2.39464 13.7348 2.5 14 2.5C14.7956 2.5 15.5587 2.81607 16.1213 3.37868C16.6839 3.94129 17 4.70435 17 5.5C16.9986 6.02524 16.8593 6.5409 16.5961 6.99542C16.3328 7.44994 15.9549 7.82738 15.5 8.09C15.3517 8.17552 15.2279 8.29766 15.1404 8.44474C15.0528 8.59182 15.0045 8.7589 15 8.93C14.9958 9.09976 15.0349 9.2678 15.1137 9.41826C15.1924 9.56872 15.3081 9.69665 15.45 9.79L15.84 10.05L15.97 10.12C17.1754 10.6917 18.1923 11.596 18.901 12.7263C19.6096 13.8566 19.9805 15.1659 19.97 16.5C19.97 16.7652 20.0754 17.0196 20.2629 17.2071C20.4504 17.3946 20.7048 17.5 20.97 17.5C21.2352 17.5 21.4896 17.3946 21.6771 17.2071C21.8646 17.0196 21.97 16.7652 21.97 16.5C21.9782 14.9654 21.5938 13.4543 20.8535 12.1101C20.1131 10.7659 19.0413 9.63331 17.74 8.82Z" fill="#194BFB"></path></svg></div>
										<span class="text-xs text-gray-300 font-semibold">Students </span>
										<h4 class="text-2xl leading-8 text-gray-100 font-semibold mb-4">1.6K</h4>
										<div class="flex flex-wrap items-center justify-center -m-1"><div class="w-auto p-1"><span class="inline-block py-1 px-2 text-xs text-green-500 font-medium bg-teal-900 rounded-full">1,0%</span></div>
											<div class="w-auto p-1"><span class="text-xs text-gray-300 font-medium">Since last month</span></div></div></div></div></div>
							<div class="w-full md:w-1/2 lg:w-1/4 px-3 mb-6"><div class="max-w-sm mx-auto py-8 px-6 bg-gray-500 rounded-xl drop-shadow-xl"><div class="max-w-xs mx-auto text-center"><div class="flex mx-auto w-12 h-12 mb-4 items-center justify-center bg-blue-500 bg-opacity-20 text-blue-500 rounded-xl"><svg fill="none" height="20" viewBox="0 0 16 20" width="16" xmlns="http://www.w3.org/2000/svg"><path d="M13 2H11.82C11.6137 1.41645 11.2319 0.910998 10.7271 0.552938C10.2222 0.194879 9.61894 0.00173951 9 0H7C6.38106 0.00173951 5.7778 0.194879 5.27293 0.552938C4.76807 0.910998 4.38631 1.41645 4.18 2H3C2.20435 2 1.44129 2.31607 0.87868 2.87868C0.316071 3.44129 0 4.20435 0 5V17C0 17.7956 0.316071 18.5587 0.87868 19.1213C1.44129 19.6839 2.20435 20 3 20H13C13.7956 20 14.5587 19.6839 15.1213 19.1213C15.6839 18.5587 16 17.7956 16 17V5C16 4.20435 15.6839 3.44129 15.1213 2.87868C14.5587 2.31607 13.7956 2 13 2ZM6 3C6 2.73478 6.10536 2.48043 6.29289 2.29289C6.48043 2.10536 6.73478 2 7 2H9C9.26522 2 9.51957 2.10536 9.70711 2.29289C9.89464 2.48043 10 2.73478 10 3V4H6V3ZM14 17C14 17.2652 13.8946 17.5196 13.7071 17.7071C13.5196 17.8946 13.2652 18 13 18H3C2.73478 18 2.48043 17.8946 2.29289 17.7071C2.10536 17.5196 2 17.2652 2 17V5C2 4.73478 2.10536 4.48043 2.29289 4.29289C2.48043 4.10536 2.73478 4 3 4H4V5C4 5.26522 4.10536 5.51957 4.29289 5.70711C4.48043 5.89464 4.73478 6 5 6H11C11.2652 6 11.5196 5.89464 11.7071 5.70711C11.8946 5.51957 12 5.26522 12 5V4H13C13.2652 4 13.5196 4.10536 13.7071 4.29289C13.8946 4.48043 14 4.73478 14 5V17Z" fill="#194BFB"></path></svg></div>
										<span class="text-xs text-gray-300 font-semibold">Average Grade</span>
										<h4 class="text-2xl leading-8 text-gray-100 font-semibold mb-4">91.5%</h4>
										<div class="flex flex-wrap items-center justify-center -m-1"><div class="w-auto p-1"><span class="inline-block py-1 px-2 text-xs text-green-500 font-medium bg-teal-900 rounded-full">1,0%</span></div>
											<div class="w-auto p-1"><span class="text-xs text-gray-300 font-medium">Since last week</span></div></div></div></div></div>
							<div class="w-full md:w-1/2 lg:w-1/4 px-3 mb-6"><div class="max-w-sm mx-auto py-8 px-6 bg-gray-500 rounded-xl drop-shadow-xl"><div class="max-w-xs mx-auto text-center"><div class="flex mx-auto w-12 h-12 mb-4 items-center justify-center bg-blue-500 bg-opacity-20 text-blue-500 rounded-xl"><svg fill="none" height="22" viewBox="0 0 22 22" width="22" xmlns="http://www.w3.org/2000/svg"><path d="M19 0H3C2.20435 0 1.44129 0.31607 0.87868 0.87868C0.31607 1.44129 0 2.20435 0 3V19C0 19.7956 0.31607 20.5587 0.87868 21.1213C1.44129 21.6839 2.20435 22 3 22H19C19.7956 22 20.5587 21.6839 21.1213 21.1213C21.6839 20.5587 22 19.7956 22 19V3C22 2.20435 21.6839 1.44129 21.1213 0.87868C20.5587 0.31607 19.7956 0 19 0ZM7 20H3C2.73478 20 2.48043 19.8946 2.29289 19.7071C2.10536 19.5196 2 19.2652 2 19V17.82C2.32067 17.9364 2.65886 17.9973 3 18H7V20ZM7 16H3C2.73478 16 2.48043 15.8946 2.29289 15.7071C2.10536 15.5196 2 15.2652 2 15V13.82C2.32067 13.9364 2.65886 13.9973 3 14H7V16ZM7 12H3C2.73478 12 2.48043 11.8946 2.29289 11.7071C2.10536 11.5196 2 11.2652 2 11V3C2 2.73478 2.10536 2.48043 2.29289 2.29289C2.48043 2.10536 2.73478 2 3 2H7V12ZM13 20H9V14H13V20ZM13 12H9V2H13V12ZM20 19C20 19.2652 19.8946 19.5196 19.7071 19.7071C19.5196 19.8946 19.2652 20 19 20H15V18H19C19.3411 17.9973 19.6793 17.9364 20 17.82V19ZM20 15C20 15.2652 19.8946 15.5196 19.7071 15.7071C19.5196 15.8946 19.2652 16 19 16H15V14H19C19.3411 13.9973 19.6793 13.9364 20 13.82V15ZM20 11C20 11.2652 19.8946 11.5196 19.7071 11.7071C19.5196 11.8946 19.2652 12 19 12H15V2H19C19.2652 2 19.5196 2.10536 19.7071 2.29289C19.8946 2.48043 20 2.73478 20 3V11ZM17 6C16.8022 6 16.6089 6.05865 16.4444 6.16853C16.28 6.27841 16.1518 6.43459 16.0761 6.61732C16.0004 6.80004 15.9806 7.00111 16.0192 7.19509C16.0578 7.38907 16.153 7.56725 16.2929 7.70711C16.4327 7.84696 16.6109 7.9422 16.8049 7.98079C16.9989 8.01937 17.2 7.99957 17.3827 7.92388C17.5654 7.84819 17.7216 7.72002 17.8315 7.55557C17.9414 7.39112 18 7.19778 18 7C18 6.73478 17.8946 6.48043 17.7071 6.29289C17.5196 6.10536 17.2652 6 17 6ZM5 8C5.19778 8 5.39112 7.94135 5.55557 7.83147C5.72002 7.72159 5.84819 7.56541 5.92388 7.38268C5.99957 7.19996 6.01937 6.99889 5.98079 6.80491C5.9422 6.61093 5.84696 6.43275 5.70711 6.29289C5.56725 6.15304 5.38907 6.0578 5.19509 6.01921C5.00111 5.98063 4.80004 6.00043 4.61732 6.07612C4.43459 6.15181 4.27841 6.27998 4.16853 6.44443C4.05865 6.60888 4 6.80222 4 7C4 7.26522 4.10536 7.51957 4.29289 7.70711C4.48043 7.89464 4.73478 8 5 8Z" fill="#194BFB"></path></svg></div>
										<span class="text-xs text-gray-300 font-semibold">Assignments Graded</span>
										<h4 class="text-2xl leading-8 text-gray-100 font-semibold mb-4">52</h4>
										<div class="flex flex-wrap items-center justify-center -m-1"><div class="w-auto p-1"><span class="inline-block py-1 px-2 text-xs text-green-500 font-medium bg-teal-900 rounded-full">1,0%</span></div>
											<div class="w-auto p-1"><span class="text-xs text-gray-300 font-medium">Since last month</span></div></div></div></div></div></div></div>

					
					<div class="mb-6"><div class="flex flex-wrap -mx-3"><div class="w-full lg:w-2/3 px-3 mb-6 lg:mb-0"><div class="p-6 bg-gray-500 rounded-xl drop-shadow-xl"><div class="flex flex-wrap -mx-4 -mb-4 justify-between items-center"><div class="w-auto px-4 mb-4"><h4 class="text-gray-100 font-bold tracking-wide">Grade Overview</h4></div>
										<div class="w-auto px-4 mb-4"><div class="flex items-center"><div class="mr-4"><span class="inline-block w-2 h-2 mr-1 bg-blue-500 rounded-full"></span>
													<span class="text-xs text-gray-300">Bottom 25%</span></div>
												<div class="mr-6"><span class="inline-block w-2 h-2 mr-1 bg-purple-500 rounded-full"></span>
													<span class="text-xs text-gray-300">Top 25%</span></div>
												<div class="relative inline-block bg-gray-600 rounded-xl"><select class="relative py-3 pl-2 pr-6 cursor-pointer bg-transparent text-xs text-gray-300 font-semibold appearance-none outline-none" id="" name="" style="z-index: 1;"><option value="">Last 7 days</option><option value="">Last Month</option></select>
													<span class="absolute top-1/2 right-0 mr-2 transform -translate-y-1/2" style="z-index: 0;"></span></div></div></div></div>
									<div class="chart mt-8 mb-3 overflow-x-hidden overflow-y-hidden block" data-type="columns-thin" data-variant="two" style="min-height: 200px;">${validate_component(Charts, "Chart").$$render($$result, {}, {}, {})}</div></div></div>
							<div class="w-full lg:w-1/3 px-3"><div class="p-6 bg-gray-500 rounded-xl drop-shadow-xl"><h4 class="text-gray-100 font-bold tracking-wide mb-8">Average grade by category
									</h4>
									<div class="chart mb-10" data-type="donut" style="min-height: 180px;"></div>
									<div class="flex flex-wrap px-4 items-center justify-between"><div class="text-center"><span class="inline-block w-2 h-2 mb-2 bg-blue-500 rounded-full"></span>
											<h6 class="text-xs text-gray-300 font-semibold">Assignments</h6>
											<h5 class="text-2xl text-gray-100 font-semibold">65%</h5></div>
										<div class="text-center"><span class="inline-block w-2 h-2 mb-2 bg-purple-500 rounded-full"></span>
											<h6 class="text-xs text-gray-300 font-semibold">Assessments</h6>
											<h5 class="text-2xl text-gray-100 font-semibold">20%</h5></div>
										<div class="text-center"><span class="inline-block w-2 h-2 mb-2 bg-yellow-500 rounded-full"></span>
											<h6 class="text-xs text-gray-300 font-semibold">Quizzes</h6>
											<h5 class="text-2xl text-gray-100 font-semibold">15%</h5></div></div></div></div></div></div>

					<div class="flex flex-wrap -mx-3"><div class="w-full lg:w-1/3 px-3 mb-6 lg:mb-0"><div class="h-full py-6 px-4 sm:px-6 bg-gray-500 rounded-xl drop-shadow-xl"><h4 class="text-lg text-gray-100 font-semibold mb-6">Notifications</h4>
								<a class="flex p-4 items-center justify-between hover:bg-gray-600 rounded-xl transition duration-150"${add_attribute("href", "#", 0)}><div class="flex items-center pr-2"><div class="flex w-10 h-10 mr-3 items-center justify-center bg-gray-400 bg-opacity-20 text-blue-500 rounded-xl"><img alt="" src=""></div>
										<div><h5 class="text-sm text-gray-100 leading-5 font-medium mb-1">Student</h5>
											<p class="text-xs text-gray-300 font-semibold">Received about 7 hours</p></div></div>
									<svg fill="none" height="18" viewBox="0 0 4 18" width="4" xmlns="http://www.w3.org/2000/svg"><path d="M2 4C2.39556 4 2.78224 3.8827 3.11114 3.66294C3.44004 3.44318 3.69639 3.13082 3.84776 2.76537C3.99914 2.39992 4.03874 1.99778 3.96157 1.60982C3.8844 1.22186 3.69392 0.865492 3.41421 0.585787C3.13451 0.306082 2.77814 0.115601 2.39018 0.0384303C2.00222 -0.0387401 1.60009 0.000866562 1.23463 0.152242C0.869182 0.303617 0.556825 0.559962 0.337062 0.88886C0.117299 1.21776 1.07779e-06 1.60444 1.07779e-06 2C1.07779e-06 2.53043 0.210715 3.03914 0.585788 3.41421C0.960861 3.78929 1.46957 4 2 4ZM2 14C1.60444 14 1.21776 14.1173 0.888861 14.3371C0.559963 14.5568 0.303617 14.8692 0.152242 15.2346C0.000866562 15.6001 -0.0387401 16.0022 0.0384303 16.3902C0.115601 16.7781 0.306083 17.1345 0.585788 17.4142C0.865493 17.6939 1.22186 17.8844 1.60982 17.9616C1.99778 18.0387 2.39992 17.9991 2.76537 17.8478C3.13082 17.6964 3.44318 17.44 3.66294 17.1111C3.8827 16.7822 4 16.3956 4 16C4 15.4696 3.78929 14.9609 3.41421 14.5858C3.03914 14.2107 2.53043 14 2 14ZM2 7C1.60444 7 1.21776 7.1173 0.888861 7.33706C0.559963 7.55682 0.303617 7.86918 0.152242 8.23463C0.000866562 8.60009 -0.0387401 9.00222 0.0384303 9.39018C0.115601 9.77814 0.306083 10.1345 0.585788 10.4142C0.865493 10.6939 1.22186 10.8844 1.60982 10.9616C1.99778 11.0387 2.39992 10.9991 2.76537 10.8478C3.13082 10.6964 3.44318 10.44 3.66294 10.1111C3.8827 9.78224 4 9.39556 4 9C4 8.46957 3.78929 7.96086 3.41421 7.58579C3.03914 7.21071 2.53043 7 2 7Z" fill="#3D485B"></path></svg></a>
								<a class="flex p-4 items-center justify-between hover:bg-gray-600 rounded-xl transition duration-150"${add_attribute("href", "#", 0)}><div class="flex items-center pr-2"><div class="flex w-10 h-10 mr-3 items-center justify-center bg-gray-400 bg-opacity-20 text-blue-500 rounded-xl"><img alt="" src=""></div>
										<div><h5 class="text-sm text-gray-100 leading-5 font-medium mb-1">Student</h5>
											<p class="text-xs text-gray-300 font-semibold">Received about 7 hours</p></div></div>
									<svg fill="none" height="18" viewBox="0 0 4 18" width="4" xmlns="http://www.w3.org/2000/svg"><path d="M2 4C2.39556 4 2.78224 3.8827 3.11114 3.66294C3.44004 3.44318 3.69639 3.13082 3.84776 2.76537C3.99914 2.39992 4.03874 1.99778 3.96157 1.60982C3.8844 1.22186 3.69392 0.865492 3.41421 0.585787C3.13451 0.306082 2.77814 0.115601 2.39018 0.0384303C2.00222 -0.0387401 1.60009 0.000866562 1.23463 0.152242C0.869182 0.303617 0.556825 0.559962 0.337062 0.88886C0.117299 1.21776 1.07779e-06 1.60444 1.07779e-06 2C1.07779e-06 2.53043 0.210715 3.03914 0.585788 3.41421C0.960861 3.78929 1.46957 4 2 4ZM2 14C1.60444 14 1.21776 14.1173 0.888861 14.3371C0.559963 14.5568 0.303617 14.8692 0.152242 15.2346C0.000866562 15.6001 -0.0387401 16.0022 0.0384303 16.3902C0.115601 16.7781 0.306083 17.1345 0.585788 17.4142C0.865493 17.6939 1.22186 17.8844 1.60982 17.9616C1.99778 18.0387 2.39992 17.9991 2.76537 17.8478C3.13082 17.6964 3.44318 17.44 3.66294 17.1111C3.8827 16.7822 4 16.3956 4 16C4 15.4696 3.78929 14.9609 3.41421 14.5858C3.03914 14.2107 2.53043 14 2 14ZM2 7C1.60444 7 1.21776 7.1173 0.888861 7.33706C0.559963 7.55682 0.303617 7.86918 0.152242 8.23463C0.000866562 8.60009 -0.0387401 9.00222 0.0384303 9.39018C0.115601 9.77814 0.306083 10.1345 0.585788 10.4142C0.865493 10.6939 1.22186 10.8844 1.60982 10.9616C1.99778 11.0387 2.39992 10.9991 2.76537 10.8478C3.13082 10.6964 3.44318 10.44 3.66294 10.1111C3.8827 9.78224 4 9.39556 4 9C4 8.46957 3.78929 7.96086 3.41421 7.58579C3.03914 7.21071 2.53043 7 2 7Z" fill="#3D485B"></path></svg></a>
								<a class="flex p-4 items-center justify-between hover:bg-gray-600 rounded-xl transition duration-150"${add_attribute("href", "#", 0)}><div class="flex items-center pr-2"><div class="flex w-10 h-10 mr-3 items-center justify-center bg-gray-400 bg-opacity-20 text-blue-500 rounded-xl"><img alt="" src=""></div>
										<div><h5 class="text-sm text-gray-100 leading-5 font-medium mb-1">Student</h5>
											<p class="text-xs text-gray-300 font-semibold">Received about 7 hours</p></div></div>
									<svg fill="none" height="18" viewBox="0 0 4 18" width="4" xmlns="http://www.w3.org/2000/svg"><path d="M2 4C2.39556 4 2.78224 3.8827 3.11114 3.66294C3.44004 3.44318 3.69639 3.13082 3.84776 2.76537C3.99914 2.39992 4.03874 1.99778 3.96157 1.60982C3.8844 1.22186 3.69392 0.865492 3.41421 0.585787C3.13451 0.306082 2.77814 0.115601 2.39018 0.0384303C2.00222 -0.0387401 1.60009 0.000866562 1.23463 0.152242C0.869182 0.303617 0.556825 0.559962 0.337062 0.88886C0.117299 1.21776 1.07779e-06 1.60444 1.07779e-06 2C1.07779e-06 2.53043 0.210715 3.03914 0.585788 3.41421C0.960861 3.78929 1.46957 4 2 4ZM2 14C1.60444 14 1.21776 14.1173 0.888861 14.3371C0.559963 14.5568 0.303617 14.8692 0.152242 15.2346C0.000866562 15.6001 -0.0387401 16.0022 0.0384303 16.3902C0.115601 16.7781 0.306083 17.1345 0.585788 17.4142C0.865493 17.6939 1.22186 17.8844 1.60982 17.9616C1.99778 18.0387 2.39992 17.9991 2.76537 17.8478C3.13082 17.6964 3.44318 17.44 3.66294 17.1111C3.8827 16.7822 4 16.3956 4 16C4 15.4696 3.78929 14.9609 3.41421 14.5858C3.03914 14.2107 2.53043 14 2 14ZM2 7C1.60444 7 1.21776 7.1173 0.888861 7.33706C0.559963 7.55682 0.303617 7.86918 0.152242 8.23463C0.000866562 8.60009 -0.0387401 9.00222 0.0384303 9.39018C0.115601 9.77814 0.306083 10.1345 0.585788 10.4142C0.865493 10.6939 1.22186 10.8844 1.60982 10.9616C1.99778 11.0387 2.39992 10.9991 2.76537 10.8478C3.13082 10.6964 3.44318 10.44 3.66294 10.1111C3.8827 9.78224 4 9.39556 4 9C4 8.46957 3.78929 7.96086 3.41421 7.58579C3.03914 7.21071 2.53043 7 2 7Z" fill="#3D485B"></path></svg></a>
								<a class="flex p-4 items-center justify-between hover:bg-gray-600 rounded-xl transition duration-150"${add_attribute("href", "#", 0)}><div class="flex items-center pr-2"><div class="flex w-10 h-10 mr-3 items-center justify-center bg-gray-400 bg-opacity-20 text-blue-500 rounded-xl"><img alt="" src=""></div>
										<div><h5 class="text-sm text-gray-100 leading-5 font-medium mb-1">Student</h5>
											<p class="text-xs text-gray-300 font-semibold">Received about 7 hours</p></div></div>
									<svg fill="none" height="18" viewBox="0 0 4 18" width="4" xmlns="http://www.w3.org/2000/svg"><path d="M2 4C2.39556 4 2.78224 3.8827 3.11114 3.66294C3.44004 3.44318 3.69639 3.13082 3.84776 2.76537C3.99914 2.39992 4.03874 1.99778 3.96157 1.60982C3.8844 1.22186 3.69392 0.865492 3.41421 0.585787C3.13451 0.306082 2.77814 0.115601 2.39018 0.0384303C2.00222 -0.0387401 1.60009 0.000866562 1.23463 0.152242C0.869182 0.303617 0.556825 0.559962 0.337062 0.88886C0.117299 1.21776 1.07779e-06 1.60444 1.07779e-06 2C1.07779e-06 2.53043 0.210715 3.03914 0.585788 3.41421C0.960861 3.78929 1.46957 4 2 4ZM2 14C1.60444 14 1.21776 14.1173 0.888861 14.3371C0.559963 14.5568 0.303617 14.8692 0.152242 15.2346C0.000866562 15.6001 -0.0387401 16.0022 0.0384303 16.3902C0.115601 16.7781 0.306083 17.1345 0.585788 17.4142C0.865493 17.6939 1.22186 17.8844 1.60982 17.9616C1.99778 18.0387 2.39992 17.9991 2.76537 17.8478C3.13082 17.6964 3.44318 17.44 3.66294 17.1111C3.8827 16.7822 4 16.3956 4 16C4 15.4696 3.78929 14.9609 3.41421 14.5858C3.03914 14.2107 2.53043 14 2 14ZM2 7C1.60444 7 1.21776 7.1173 0.888861 7.33706C0.559963 7.55682 0.303617 7.86918 0.152242 8.23463C0.000866562 8.60009 -0.0387401 9.00222 0.0384303 9.39018C0.115601 9.77814 0.306083 10.1345 0.585788 10.4142C0.865493 10.6939 1.22186 10.8844 1.60982 10.9616C1.99778 11.0387 2.39992 10.9991 2.76537 10.8478C3.13082 10.6964 3.44318 10.44 3.66294 10.1111C3.8827 9.78224 4 9.39556 4 9C4 8.46957 3.78929 7.96086 3.41421 7.58579C3.03914 7.21071 2.53043 7 2 7Z" fill="#3D485B"></path></svg></a>
								<a class="flex p-4 items-center justify-between hover:bg-gray-600 rounded-xl transition duration-150"${add_attribute("href", "#", 0)}><div class="flex items-center pr-2"><div class="flex w-10 h-10 mr-3 items-center justify-center bg-gray-400 bg-opacity-20 text-blue-500 rounded-xl"><img alt="" src=""></div>
										<div><h5 class="text-sm text-gray-100 leading-5 font-medium mb-1">Student</h5>
											<p class="text-xs text-gray-300 font-semibold">Received about 7 hours</p></div></div>
									<svg fill="none" height="18" viewBox="0 0 4 18" width="4" xmlns="http://www.w3.org/2000/svg"><path d="M2 4C2.39556 4 2.78224 3.8827 3.11114 3.66294C3.44004 3.44318 3.69639 3.13082 3.84776 2.76537C3.99914 2.39992 4.03874 1.99778 3.96157 1.60982C3.8844 1.22186 3.69392 0.865492 3.41421 0.585787C3.13451 0.306082 2.77814 0.115601 2.39018 0.0384303C2.00222 -0.0387401 1.60009 0.000866562 1.23463 0.152242C0.869182 0.303617 0.556825 0.559962 0.337062 0.88886C0.117299 1.21776 1.07779e-06 1.60444 1.07779e-06 2C1.07779e-06 2.53043 0.210715 3.03914 0.585788 3.41421C0.960861 3.78929 1.46957 4 2 4ZM2 14C1.60444 14 1.21776 14.1173 0.888861 14.3371C0.559963 14.5568 0.303617 14.8692 0.152242 15.2346C0.000866562 15.6001 -0.0387401 16.0022 0.0384303 16.3902C0.115601 16.7781 0.306083 17.1345 0.585788 17.4142C0.865493 17.6939 1.22186 17.8844 1.60982 17.9616C1.99778 18.0387 2.39992 17.9991 2.76537 17.8478C3.13082 17.6964 3.44318 17.44 3.66294 17.1111C3.8827 16.7822 4 16.3956 4 16C4 15.4696 3.78929 14.9609 3.41421 14.5858C3.03914 14.2107 2.53043 14 2 14ZM2 7C1.60444 7 1.21776 7.1173 0.888861 7.33706C0.559963 7.55682 0.303617 7.86918 0.152242 8.23463C0.000866562 8.60009 -0.0387401 9.00222 0.0384303 9.39018C0.115601 9.77814 0.306083 10.1345 0.585788 10.4142C0.865493 10.6939 1.22186 10.8844 1.60982 10.9616C1.99778 11.0387 2.39992 10.9991 2.76537 10.8478C3.13082 10.6964 3.44318 10.44 3.66294 10.1111C3.8827 9.78224 4 9.39556 4 9C4 8.46957 3.78929 7.96086 3.41421 7.58579C3.03914 7.21071 2.53043 7 2 7Z" fill="#3D485B"></path></svg></a>
								<a class="flex p-4 items-center justify-between hover:bg-gray-600 rounded-xl transition duration-150"${add_attribute("href", "#", 0)}><div class="flex items-center pr-2"><div class="flex w-10 h-10 mr-3 items-center justify-center bg-gray-400 bg-opacity-20 text-blue-500 rounded-xl"><img alt="" src=""></div>
										<div><h5 class="text-sm text-gray-100 leading-5 font-medium mb-1">Student</h5>
											<p class="text-xs text-gray-300 font-semibold">Received about 7 hours</p></div></div>
									<svg fill="none" height="18" viewBox="0 0 4 18" width="4" xmlns="http://www.w3.org/2000/svg"><path d="M2 4C2.39556 4 2.78224 3.8827 3.11114 3.66294C3.44004 3.44318 3.69639 3.13082 3.84776 2.76537C3.99914 2.39992 4.03874 1.99778 3.96157 1.60982C3.8844 1.22186 3.69392 0.865492 3.41421 0.585787C3.13451 0.306082 2.77814 0.115601 2.39018 0.0384303C2.00222 -0.0387401 1.60009 0.000866562 1.23463 0.152242C0.869182 0.303617 0.556825 0.559962 0.337062 0.88886C0.117299 1.21776 1.07779e-06 1.60444 1.07779e-06 2C1.07779e-06 2.53043 0.210715 3.03914 0.585788 3.41421C0.960861 3.78929 1.46957 4 2 4ZM2 14C1.60444 14 1.21776 14.1173 0.888861 14.3371C0.559963 14.5568 0.303617 14.8692 0.152242 15.2346C0.000866562 15.6001 -0.0387401 16.0022 0.0384303 16.3902C0.115601 16.7781 0.306083 17.1345 0.585788 17.4142C0.865493 17.6939 1.22186 17.8844 1.60982 17.9616C1.99778 18.0387 2.39992 17.9991 2.76537 17.8478C3.13082 17.6964 3.44318 17.44 3.66294 17.1111C3.8827 16.7822 4 16.3956 4 16C4 15.4696 3.78929 14.9609 3.41421 14.5858C3.03914 14.2107 2.53043 14 2 14ZM2 7C1.60444 7 1.21776 7.1173 0.888861 7.33706C0.559963 7.55682 0.303617 7.86918 0.152242 8.23463C0.000866562 8.60009 -0.0387401 9.00222 0.0384303 9.39018C0.115601 9.77814 0.306083 10.1345 0.585788 10.4142C0.865493 10.6939 1.22186 10.8844 1.60982 10.9616C1.99778 11.0387 2.39992 10.9991 2.76537 10.8478C3.13082 10.6964 3.44318 10.44 3.66294 10.1111C3.8827 9.78224 4 9.39556 4 9C4 8.46957 3.78929 7.96086 3.41421 7.58579C3.03914 7.21071 2.53043 7 2 7Z" fill="#3D485B"></path></svg></a></div></div>
						<div class="w-full lg:w-2/3 px-3"><div class="h-full p-6 bg-gray-500 rounded-xl"><h4 class="text-lg text-gray-100 font-semibold mb-6">Latest Submissions</h4>
								<div class="w-full mt-6 pb-4 overflow-x-auto"><table class="w-full min-w-max"><thead><tr class="text-left"><th class="p-0"><div class="py-3 px-6 rounded-l-xl bg-gray-600"><span class="text-xs text-gray-300 font-semibold">CLASS</span></div></th>
												<th class="p-0"><div class="py-3 px-6 bg-gray-600"><span class="text-xs text-gray-300 font-semibold">STUDENT</span></div></th>
												<th class="p-0"><div class="py-3 px-6 bg-gray-600"><button class="inline-flex items-center text-xs text-gray-300 font-semibold"><span class="mr-2">DATE</span>
															<svg fill="none" height="14" viewBox="0 0 10 14" width="10" xmlns="http://www.w3.org/2000/svg"><path d="M7.8598 8.52669L4.9998 11.3934L2.1398 8.52669C2.01426 8.40115 1.844 8.33063 1.66646 8.33063C1.48893 8.33063 1.31867 8.40115 1.19313 8.52669C1.0676 8.65222 0.99707 8.82249 0.99707 9.00002C0.99707 9.17756 1.0676 9.34782 1.19313 9.47335L4.52646 12.8067C4.58844 12.8692 4.66217 12.9188 4.74341 12.9526C4.82465 12.9865 4.91179 13.0039 4.9998 13.0039C5.08781 13.0039 5.17494 12.9865 5.25618 12.9526C5.33742 12.9188 5.41116 12.8692 5.47313 12.8067L8.80646 9.47335C8.86862 9.41119 8.91793 9.3374 8.95157 9.25619C8.98521 9.17497 9.00252 9.08793 9.00252 9.00002C9.00252 8.91211 8.98521 8.82507 8.95157 8.74385C8.91793 8.66264 8.86862 8.58885 8.80646 8.52669C8.7443 8.46453 8.67051 8.41522 8.5893 8.38158C8.50808 8.34794 8.42104 8.33063 8.33313 8.33063C8.24522 8.33063 8.15818 8.34794 8.07696 8.38158C7.99575 8.41522 7.92196 8.46453 7.8598 8.52669ZM2.1398 5.47335L4.9998 2.60669L7.8598 5.47335C7.92177 5.53584 7.99551 5.58544 8.07675 5.61928C8.15799 5.65313 8.24512 5.67055 8.33313 5.67055C8.42114 5.67055 8.50828 5.65313 8.58952 5.61928C8.67075 5.58544 8.74449 5.53584 8.80646 5.47335C8.86895 5.41138 8.91855 5.33764 8.95239 5.2564C8.98624 5.17517 9.00366 5.08803 9.00366 5.00002C9.00366 4.91201 8.98624 4.82488 8.95239 4.74364C8.91855 4.6624 8.86895 4.58866 8.80646 4.52669L5.47313 1.19335C5.41116 1.13087 5.33742 1.08127 5.25618 1.04743C5.17494 1.01358 5.08781 0.996155 4.9998 0.996155C4.91179 0.996155 4.82465 1.01358 4.74341 1.04743C4.66217 1.08127 4.58844 1.13087 4.52646 1.19335L1.19313 4.52669C1.0676 4.65222 0.99707 4.82249 0.99707 5.00002C0.99707 5.17756 1.0676 5.34782 1.19313 5.47335C1.31867 5.59889 1.48893 5.66941 1.66646 5.66941C1.844 5.66941 2.01426 5.59889 2.1398 5.47335Z" fill="currentColor"></path></svg></button></div></th>
												<th class="p-0"><div class="py-3 px-5 rounded-r-xl bg-gray-600"><span class="text-xs text-gray-300 font-semibold">STATUS</span></div></th></tr></thead>
										<tbody><tr><td class="p-0"><div class="h-16 p-6"><h5 class="text-sm font-medium text-gray-100">CS101</h5></div></td>
												<td class="p-0"><div class="h-16 p-6"><div class="flex h-full items-center"><img alt="" class="w-8 h-8 mr-3 rounded-full object-cover" src="">
															<span class="text-sm font-medium text-gray-100">John Doe</span></div></div></td>
												<td class="p-0"><div class="h-16 p-6"><span class="text-sm text-gray-100 font-medium">July 06, 2022</span></div></td>
												<td class="p-0"><div class="h-16 p-6"><div class="flex h-full items-center"><span class="inline-block w-2 h-2 mr-1 bg-yellow-500 rounded-full"></span>
															<span class="text-sm font-medium text-gray-100">Awaiting Grade</span></div></div></td></tr>
											<tr><td class="p-0"><div class="h-16 p-6 rounded-l-xl bg-gray-600"><h5 class="text-sm font-medium text-gray-100">CS101</h5></div></td>
												<td class="p-0"><div class="h-16 p-6 bg-gray-600"><div class="flex h-full items-center"><img alt="" class="w-8 h-8 mr-3 rounded-full object-cover" src="">
															<span class="text-sm font-medium text-gray-100">John Doe</span></div></div></td>
												<td class="p-0"><div class="h-16 p-6 bg-gray-600"><h5 class="text-sm font-medium text-gray-100">July 06, 2022</h5></div></td>
												<td class="p-0"><div class="flex h-16 p-6 items-center rounded-r-xl bg-gray-600"><span class="inline-block w-2 h-2 mr-1 bg-green-500 rounded-full"></span>
														<span class="text-sm font-medium text-gray-100">Graded</span></div></td></tr>
											<tr><td class="p-0"><div class="h-16 p-6"><h5 class="text-sm font-medium text-gray-100">CS101</h5></div></td>
												<td class="p-0"><div class="h-16 p-6"><div class="flex h-full items-center"><img alt="" class="w-8 h-8 mr-3 rounded-full object-cover" src="">
															<span class="text-sm font-medium text-gray-100">John Doe</span></div></div></td>
												<td class="p-0"><div class="h-16 p-6"><span class="text-sm text-gray-100 font-medium">July 06, 2022</span></div></td>
												<td class="p-0"><div class="h-16 p-6"><div class="flex h-full items-center"><span class="inline-block w-2 h-2 mr-1 bg-yellow-500 rounded-full"></span>
															<span class="text-sm font-medium text-gray-100">Awaiting Grade</span></div></div></td></tr>
											<tr><td class="p-0"><div class="h-16 p-6 rounded-l-xl bg-gray-600"><h5 class="text-sm font-medium text-gray-100">CS101</h5></div></td>
												<td class="p-0"><div class="h-16 p-6 bg-gray-600"><div class="flex h-full items-center"><img alt="" class="w-8 h-8 mr-3 rounded-full object-cover" src="">
															<span class="text-sm font-medium text-gray-100">John Doe</span></div></div></td>
												<td class="p-0"><div class="h-16 p-6 bg-gray-600"><h5 class="text-sm font-medium text-gray-100">July 06, 2022</h5></div></td>
												<td class="p-0"><div class="flex h-16 p-6 items-center rounded-r-xl bg-gray-600"><span class="inline-block w-2 h-2 mr-1 bg-red-500 rounded-full"></span>
														<span class="text-sm font-medium text-gray-100">Late</span></div></td></tr>
											<tr><td class="p-0"><div class="h-16 p-6"><h5 class="text-sm font-medium text-gray-100">CS101</h5></div></td>
												<td class="p-0"><div class="h-16 p-6"><div class="flex h-full items-center"><img alt="" class="w-8 h-8 mr-3 rounded-full object-cover" src="">
															<span class="text-sm font-medium text-gray-100">John Doe</span></div></div></td>
												<td class="p-0"><div class="h-16 p-6"><span class="text-sm text-gray-100 font-medium">July 06, 2022</span></div></td>
												<td class="p-0"><div class="h-16 p-6"><div class="flex h-full items-center"><span class="inline-block w-2 h-2 mr-1 bg-yellow-500 rounded-full"></span>
															<span class="text-sm font-medium text-gray-100">Awaiting Grade</span></div></div></td></tr>
											<tr><td class="p-0"><div class="h-16 p-6 rounded-l-xl bg-gray-600"><h5 class="text-sm font-medium text-gray-100">CS101</h5></div></td>
												<td class="p-0"><div class="h-16 p-6 bg-gray-600"><div class="flex h-full items-center"><img alt="" class="w-8 h-8 mr-3 rounded-full object-cover" src="">
															<span class="text-sm font-medium text-gray-100">John Doe</span></div></div></td>
												<td class="p-0"><div class="h-16 p-6 bg-gray-600"><h5 class="text-sm font-medium text-gray-100">July 06, 2022</h5></div></td>
												<td class="p-0"><div class="flex h-16 p-6 items-center rounded-r-xl bg-gray-600"><span class="inline-block w-2 h-2 mr-1 bg-red-500 rounded-full"></span>
														<span class="text-sm font-medium text-gray-100">Late</span></div></td></tr></tbody></table></div></div></div></div></div></section></div></div></body>`;
      } while (!$$settled);
      $$unsubscribe_fetchedCourses();
      $$unsubscribe_page();
      return $$rendered;
    });
  }
});
var __exports10 = {};
__export(__exports10, {
  component: () => component10,
  fonts: () => fonts10,
  imports: () => imports10,
  index: () => index10,
  server: () => page_server_ts_exports2,
  server_id: () => server_id5,
  stylesheets: () => stylesheets10
});
var index10;
var component10;
var server_id5;
var imports10;
var stylesheets10;
var fonts10;
var init__10 = __esm({
  ".svelte-kit/output/server/nodes/9.js"() {
    init_page_server_ts2();
    index10 = 9;
    component10 = async () => (await Promise.resolve().then(() => (init_page_svelte3(), page_svelte_exports3))).default;
    server_id5 = "src/routes/d/(d)/+page.server.ts";
    imports10 = ["_app/immutable/nodes/9.76ad9726.js", "_app/immutable/chunks/index.7ee2e23d.js", "_app/immutable/chunks/stores.2de0b66f.js", "_app/immutable/chunks/singletons.21d018a5.js", "_app/immutable/chunks/paths.1c0372a3.js", "_app/immutable/chunks/preload-helper.41c905a7.js", "_app/immutable/chunks/Settings.e5d87b42.js", "_app/immutable/chunks/navigation.0d698c81.js", "_app/immutable/chunks/index.ade5cbd2.js", "_app/immutable/chunks/control.f5b05b5f.js"];
    stylesheets10 = [];
    fonts10 = [];
  }
});
var page_server_ts_exports3 = {};
__export(page_server_ts_exports3, {
  actions: () => actions2,
  prerender: () => prerender5
});
var prerender5;
var actions2;
var init_page_server_ts3 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/courses/_page.server.ts.js"() {
    prerender5 = false;
    actions2 = {
      joinCourse: async ({ request, url, locals: { supabase } }) => {
        const formData = await request.formData();
        const { data } = await supabase.auth.refreshSession();
        const user = data.user;
        const code = formData.get("code");
        if (user != null) {
          const { error: error2, data: data2, status } = await supabase.rpc(
            "enroll_user",
            { _user_id: user.id, code }
          );
          return { error: error2, data: data2 };
        }
      }
    };
  }
});
var page_svelte_exports4 = {};
__export(page_svelte_exports4, {
  default: () => Page4
});
var import_classnames7;
var browser;
var Courses;
var Page4;
var init_page_svelte4 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/courses/_page.svelte.js"() {
    init_index2();
    init_Settings();
    init_devalue();
    import_classnames7 = __toESM(require_classnames(), 1);
    init_Modal();
    init_prod_ssr();
    init_stores();
    browser = BROWSER;
    Courses = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$unsubscribe_page;
      $$unsubscribe_page = subscribe(page, (value2) => value2);
      let { courses } = $$props;
      let { hoverID } = $$props;
      if ($$props.courses === void 0 && $$bindings.courses && courses !== void 0)
        $$bindings.courses(courses);
      if ($$props.hoverID === void 0 && $$bindings.hoverID && hoverID !== void 0)
        $$bindings.hoverID(hoverID);
      $$unsubscribe_page();
      return `<div class="container m-6"><div class="flex flex-wrap -mx-12 -mb-2">
    ${courses ? `${each(courses, ({ id, inserted_at, course_image_url, course_title, course_prefix, course_number, course_term, hidden }, i2) => {
        return `${!hidden ? `<div class="relative mb-8 mx-4 cursor-pointer"><div class="min-w-xs max-w-xs"><div class="relative group"><a><div class="absolute group-hover:scale-105 -inset-0.5 bg-gradient-to-r from-gray-400 to-gray-400 rounded-lg blur opacity-0 group-hover:opacity-30 transition duration-1500 group-hover:duration-200"></div>
                  <div><div class="relative p-6 bg-gray-700 rounded-xl group-hover:scale-105 transition|local duration-1500"><img${add_attribute(
          "src",
          course_image_url === null ? "https://dummyimage.com/150x150/000/fff" : course_image_url + "?t=" + inserted_at,
          0
        )} class="relative inline-flex items-center justify-center w-20 h-20 mb-6 rounded-lg drop-shadow-2xl bg-gray-600" alt="Course Image">
                      <a><div class="inline-block absolute top-1 right-0 m-5 text-gray-300 hover:text-gray-200"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12 13C12.5523 13 13 12.5523 13 12C13 11.4477 12.5523 11 12 11C11.4477 11 11 11.4477 11 12C11 12.5523 11.4477 13 12 13Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path><path d="M12 20C12.5523 20 13 19.5523 13 19C13 18.4477 12.5523 18 12 18C11.4477 18 11 18.4477 11 19C11 19.5523 11.4477 20 12 20Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path><path d="M12 6C12.5523 6 13 5.55228 13 5C13 4.44772 12.5523 4 12 4C11.4477 4 11 4.44772 11 5C11 5.55228 11.4477 6 12 6Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg>
                        </div></a>
                      <h4 class="text-xl text-white font-bold mb-3">${escape(course_title === "" ? "Course Name" : course_title)}</h4>
                      <h4 class="text-xl text-white font-bold mb-1">${escape(course_prefix === "" ? "Empty" : course_prefix)}
                        ${escape(course_number)}</h4>
                      <h4 class="text-gray-300 mb-1">${escape(course_term)}</h4>
                    </div></div>
                </a></div>
            </div></div>
          ${hoverID === i2 && open && browser ? `<div id="edit" class="relative z-10"><div class="absolute block rounded-md bg-gray-500 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none"><div class="text-sm text-gray-900 dark:text-white"><div class="p-2 truncate font-bold hover:underline hover:bg-gray-700 w-24 cursor-pointer">Edit
                  </div>
                  <div class="p-2 truncate font-bold hover:underline hover:bg-gray-700 hover:text-red-400 cursor-pointer">Delete
                  </div></div>
                <div class="inline-block absolute top-0 right-0 m-2 text-gray-300 hover:text-gray-100 hover:scale-110 cursor-pointer"><svg aria-hidden="true" class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
                </div></div>
            </div>` : ``}` : ``}`;
      })}` : ``}

    
    ${courses.length === 0 ? `<div class="flex p-4 ml-6 mb-6 mt-6 text-sm text-blue-800 border border-blue-300 rounded-lg bg-blue-50 dark:bg-gray-800 dark:text-blue-400 dark:border-blue-800" role="alert"><svg aria-hidden="true" class="flex-shrink-0 inline w-5 h-5 mr-3" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path></svg>
        <span class="sr-only">Info</span>
        <div><span class="font-medium">Not enrolled in any courses...</span></div></div>` : ``}</div></div>`;
    });
    Page4 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let defaultModel = false;
      let model;
      let { data } = $$props;
      let courses;
      let hoverID;
      let { show_create_box } = $$props;
      if ($$props.data === void 0 && $$bindings.data && data !== void 0)
        $$bindings.data(data);
      if ($$props.show_create_box === void 0 && $$bindings.show_create_box && show_create_box !== void 0)
        $$bindings.show_create_box(show_create_box);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        courses = data.courses.data;
        $$rendered = `<body class="bg-gray-600 antialiased bg-body text-body font-body">${validate_component(Navbar, "Navbar").$$render($$result, {}, {}, {})}
	<div class="mx-auto lg:ml-20"><section><div class="pt-5 pb-6 px-8 bg-gray-700"><div class="flex flex-wrap items-center justify-between -mx-2"><div class="w-full lg:w-auto px-2 mb-6 lg:mb-0"><h4 class="text-2xl font-bold text-white tracking-wide leading-7 mb-1">Courses</h4></div>
					<div class="w-full lg:w-auto px-2"><div class="sm:flex items-center"><div class="w-full sm:w-auto mb-6 sm:mb-0 sm:mr-4"><div class="flex flex-wrap items-center -mb-2"><a class="inline-flex items-center justify-center w-12 h-12 mb-2 mr-4 p-1 text-gray-300 bg-gray-500 hover:bg-gray-400 hover:bg-opacity-40 transition|local duration-150 rounded-full"${add_attribute("href", "#", 0)}><svg fill="none" height="16" viewBox="0 0 20 16" width="20" xmlns="http://www.w3.org/2000/svg"><path d="M17 0H3C2.20435 0 1.44129 0.316071 0.87868 0.87868C0.316071 1.44129 0 2.20435 0 3V13C0 13.7956 0.316071 14.5587 0.87868 15.1213C1.44129 15.6839 2.20435 16 3 16H17C17.7956 16 18.5587 15.6839 19.1213 15.1213C19.6839 14.5587 20 13.7956 20 13V3C20 2.20435 19.6839 1.44129 19.1213 0.87868C18.5587 0.316071 17.7956 0 17 0ZM3 2H17C17.2652 2 17.5196 2.10536 17.7071 2.29289C17.8946 2.48043 18 2.73478 18 3L10 7.88L2 3C2 2.73478 2.10536 2.48043 2.29289 2.29289C2.48043 2.10536 2.73478 2 3 2ZM18 13C18 13.2652 17.8946 13.5196 17.7071 13.7071C17.5196 13.8946 17.2652 14 17 14H3C2.73478 14 2.48043 13.8946 2.29289 13.7071C2.10536 13.5196 2 13.2652 2 13V5.28L9.48 9.85C9.63202 9.93777 9.80446 9.98397 9.98 9.98397C10.1555 9.98397 10.328 9.93777 10.48 9.85L18 5.28V13Z" fill="currentColor"></path></svg></a>
									<a class="inline-flex items-center justify-center w-12 h-12 mb-2 mr-4 p-1 text-gray-300 bg-gray-500 hover:bg-gray-400 hover:bg-opacity-40 transition|local duration-150 rounded-full"${add_attribute("href", "#", 0)}><svg fill="none" height="20" viewBox="0 0 16 20" width="16" xmlns="http://www.w3.org/2000/svg"><path d="M14 11.18V8C13.9986 6.58312 13.4958 5.21247 12.5806 4.13077C11.6655 3.04908 10.3971 2.32615 9 2.09V1C9 0.734784 8.89464 0.48043 8.70711 0.292893C8.51957 0.105357 8.26522 0 8 0C7.73478 0 7.48043 0.105357 7.29289 0.292893C7.10536 0.48043 7 0.734784 7 1V2.09C5.60294 2.32615 4.33452 3.04908 3.41939 4.13077C2.50425 5.21247 2.00144 6.58312 2 8V11.18C1.41645 11.3863 0.910998 11.7681 0.552938 12.2729C0.194879 12.7778 0.00173951 13.3811 0 14V16C0 16.2652 0.105357 16.5196 0.292893 16.7071C0.48043 16.8946 0.734784 17 1 17H4.14C4.37028 17.8474 4.873 18.5954 5.5706 19.1287C6.26819 19.6621 7.1219 19.951 8 19.951C8.8781 19.951 9.73181 19.6621 10.4294 19.1287C11.127 18.5954 11.6297 17.8474 11.86 17H15C15.2652 17 15.5196 16.8946 15.7071 16.7071C15.8946 16.5196 16 16.2652 16 16V14C15.9983 13.3811 15.8051 12.7778 15.4471 12.2729C15.089 11.7681 14.5835 11.3863 14 11.18ZM4 8C4 6.93913 4.42143 5.92172 5.17157 5.17157C5.92172 4.42143 6.93913 4 8 4C9.06087 4 10.0783 4.42143 10.8284 5.17157C11.5786 5.92172 12 6.93913 12 8V11H4V8ZM8 18C7.65097 17.9979 7.30857 17.9045 7.00683 17.7291C6.70509 17.5536 6.45451 17.3023 6.28 17H9.72C9.54549 17.3023 9.29491 17.5536 8.99317 17.7291C8.69143 17.9045 8.34903 17.9979 8 18ZM14 15H2V14C2 13.7348 2.10536 13.4804 2.29289 13.2929C2.48043 13.1054 2.73478 13 3 13H13C13.2652 13 13.5196 13.1054 13.7071 13.2929C13.8946 13.4804 14 13.7348 14 14V15Z" fill="currentColor"></path></svg></a>
									<a class="inline-flex items-center justify-center w-12 h-12 mb-2 p-1 text-gray-300 bg-gray-500 hover:bg-gray-400 hover:bg-opacity-40 transition|local duration-150 rounded-full"${add_attribute("href", "#", 0)}><svg fill="none" height="21" viewBox="0 0 21 21" width="21" xmlns="http://www.w3.org/2000/svg"><path d="M20.71 19.29L17 15.61C18.4401 13.8144 19.1375 11.5353 18.9488 9.24133C18.7601 6.94733 17.6997 4.81281 15.9855 3.27667C14.2714 1.74053 12.0338 0.919537 9.73295 0.982497C7.43207 1.04546 5.24275 1.98759 3.61517 3.61517C1.98759 5.24275 1.04546 7.43207 0.982497 9.73295C0.919537 12.0338 1.74053 14.2714 3.27667 15.9855C4.81281 17.6997 6.94733 18.7601 9.24133 18.9488C11.5353 19.1375 13.8144 18.4401 15.61 17L19.29 20.68C19.383 20.7738 19.4936 20.8482 19.6154 20.8989C19.7373 20.9497 19.868 20.9758 20 20.9758C20.132 20.9758 20.2627 20.9497 20.3846 20.8989C20.5065 20.8482 20.6171 20.7738 20.71 20.68C20.8903 20.4936 20.991 20.2444 20.991 19.985C20.991 19.7257 20.8903 19.4765 20.71 19.29ZM10 17C8.61556 17 7.26218 16.5895 6.11103 15.8203C4.95989 15.0511 4.06268 13.9579 3.53287 12.6788C3.00306 11.3997 2.86443 9.99226 3.13453 8.63439C3.40463 7.27653 4.07131 6.02925 5.05028 5.05028C6.02925 4.07131 7.27653 3.40463 8.63439 3.13453C9.99226 2.86443 11.3997 3.00306 12.6788 3.53287C13.9579 4.06268 15.0511 4.95989 15.8203 6.11103C16.5895 7.26218 17 8.61556 17 10C17 11.8565 16.2625 13.637 14.9498 14.9498C13.637 16.2625 11.8565 17 10 17Z" fill="currentColor"></path></svg></a></div></div>
							${validate_component(Settings, "Settings").$$render(
          $$result,
          { this: model },
          {
            this: ($$value) => {
              model = $$value;
              $$settled = false;
            }
          },
          {}
        )}</div></div></div></div></section>

		
		<section class="flex flex-col p-8 h-screen"><div>
					<button class="relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-blue-500 to-blue-300 group-hover:from-blue-300 group-hover:to-blue-500 hover:text-white dark:text-white focus:ring-4 focus:outline-none focus:ring-blue-200 dark:focus:ring-blue-800"><span class="relative px-5 py-2.5 transition-all|local ease-in duration-75 bg-white dark:bg-gray-600 rounded-md group-hover:bg-opacity-0">Join
						</span></button>

				
				${validate_component(Modal, "Modal").$$render(
          $$result,
          { title: "Join Course", open: defaultModel },
          {
            open: ($$value) => {
              defaultModel = $$value;
              $$settled = false;
            }
          },
          {
            default: () => {
              return `<form method="POST" action="?/joinCourse" class="flex flex-col items-center justify-center h-full"><div class="mb-6 p-2"><input type="text" name="code" id="code" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-100 dark:border-gray-500 dark:placeholder-gray-400 dark:focus:ring-primary-500 dark:focus:border-primary-500" placeholder="Code" required></div>
						${``}
									<div class="flex items-center justify-between"><button class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 mx-4 rounded focus:outline-none focus:shadow-outline" type="submit">Join
										</button></div></form>`;
            }
          }
        )}

				<a href="/d/courses/create"><button class="relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-blue-300 to-blue-500 group-hover:from-blue-300 group-hover:to-blue-500 hover:text-white dark:text-white focus:ring-4 focus:outline-none focus:ring-blue-200 dark:focus:ring-blue-800"><span class="relative px-5 py-2.5 transition-all|local ease-in duration-75 bg-white dark:bg-gray-600 rounded-md group-hover:bg-opacity-0">Create
						</span></button></a></div>
			${validate_component(Courses, "Courses").$$render(
          $$result,
          { courses, hoverID },
          {
            courses: ($$value) => {
              courses = $$value;
              $$settled = false;
            },
            hoverID: ($$value) => {
              hoverID = $$value;
              $$settled = false;
            }
          },
          {}
        )}</section></div></body>`;
      } while (!$$settled);
      return $$rendered;
    });
  }
});
var __exports11 = {};
__export(__exports11, {
  component: () => component11,
  fonts: () => fonts11,
  imports: () => imports11,
  index: () => index11,
  server: () => page_server_ts_exports3,
  server_id: () => server_id6,
  stylesheets: () => stylesheets11
});
var index11;
var component11;
var server_id6;
var imports11;
var stylesheets11;
var fonts11;
var init__11 = __esm({
  ".svelte-kit/output/server/nodes/10.js"() {
    init_page_server_ts3();
    index11 = 10;
    component11 = async () => (await Promise.resolve().then(() => (init_page_svelte4(), page_svelte_exports4))).default;
    server_id6 = "src/routes/d/(d)/courses/+page.server.ts";
    imports11 = ["_app/immutable/nodes/10.35abc96f.js", "_app/immutable/chunks/index.7ee2e23d.js", "_app/immutable/chunks/Settings.e5d87b42.js", "_app/immutable/chunks/stores.2de0b66f.js", "_app/immutable/chunks/singletons.21d018a5.js", "_app/immutable/chunks/paths.1c0372a3.js", "_app/immutable/chunks/navigation.0d698c81.js", "_app/immutable/chunks/forms.b3e5ddf7.js", "_app/immutable/chunks/parse.bee59afc.js", "_app/immutable/chunks/Indicator.svelte_svelte_type_style_lang.880982d3.js", "_app/immutable/chunks/_commonjsHelpers.725317a4.js", "_app/immutable/chunks/Modal.087a6368.js", "_app/immutable/chunks/CloseButton.ed454e30.js", "_app/immutable/chunks/index.24430090.js", "_app/immutable/chunks/notifications.93f6c838.js"];
    stylesheets11 = ["_app/immutable/assets/Indicator.1d121e74.css"];
    fonts11 = [];
  }
});
var page_server_ts_exports4 = {};
__export(page_server_ts_exports4, {
  ssr: () => ssr5
});
var ssr5;
var init_page_server_ts4 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/courses/(course)/_slug_/_page.server.ts.js"() {
    ssr5 = false;
  }
});
var require_quill = __commonJS({
  "node_modules/quill/dist/quill.js"(exports, module) {
    (function webpackUniversalModuleDefinition(root, factory) {
      if (typeof exports === "object" && typeof module === "object")
        module.exports = factory();
      else if (typeof define === "function" && define.amd)
        define([], factory);
      else if (typeof exports === "object")
        exports["Quill"] = factory();
      else
        root["Quill"] = factory();
    })(typeof self !== "undefined" ? self : exports, function() {
      return function(modules) {
        var installedModules = {};
        function __webpack_require__(moduleId) {
          if (installedModules[moduleId]) {
            return installedModules[moduleId].exports;
          }
          var module2 = installedModules[moduleId] = {
            i: moduleId,
            l: false,
            exports: {}
          };
          modules[moduleId].call(module2.exports, module2, module2.exports, __webpack_require__);
          module2.l = true;
          return module2.exports;
        }
        __webpack_require__.m = modules;
        __webpack_require__.c = installedModules;
        __webpack_require__.d = function(exports2, name, getter) {
          if (!__webpack_require__.o(exports2, name)) {
            Object.defineProperty(exports2, name, {
              configurable: false,
              enumerable: true,
              get: getter
            });
          }
        };
        __webpack_require__.n = function(module2) {
          var getter = module2 && module2.__esModule ? function getDefault() {
            return module2["default"];
          } : function getModuleExports() {
            return module2;
          };
          __webpack_require__.d(getter, "a", getter);
          return getter;
        };
        __webpack_require__.o = function(object, property) {
          return Object.prototype.hasOwnProperty.call(object, property);
        };
        __webpack_require__.p = "";
        return __webpack_require__(__webpack_require__.s = 109);
      }([
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", { value: true });
          var container_1 = __webpack_require__(17);
          var format_1 = __webpack_require__(18);
          var leaf_1 = __webpack_require__(19);
          var scroll_1 = __webpack_require__(45);
          var inline_1 = __webpack_require__(46);
          var block_1 = __webpack_require__(47);
          var embed_1 = __webpack_require__(48);
          var text_1 = __webpack_require__(49);
          var attributor_1 = __webpack_require__(12);
          var class_1 = __webpack_require__(32);
          var style_1 = __webpack_require__(33);
          var store_1 = __webpack_require__(31);
          var Registry = __webpack_require__(1);
          var Parchment = {
            Scope: Registry.Scope,
            create: Registry.create,
            find: Registry.find,
            query: Registry.query,
            register: Registry.register,
            Container: container_1.default,
            Format: format_1.default,
            Leaf: leaf_1.default,
            Embed: embed_1.default,
            Scroll: scroll_1.default,
            Block: block_1.default,
            Inline: inline_1.default,
            Text: text_1.default,
            Attributor: {
              Attribute: attributor_1.default,
              Class: class_1.default,
              Style: style_1.default,
              Store: store_1.default
            }
          };
          exports2.default = Parchment;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
              d2.__proto__ = b2;
            } || function(d2, b2) {
              for (var p2 in b2)
                if (b2.hasOwnProperty(p2))
                  d2[p2] = b2[p2];
            };
            return function(d2, b2) {
              extendStatics(d2, b2);
              function __() {
                this.constructor = d2;
              }
              d2.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());
            };
          }();
          Object.defineProperty(exports2, "__esModule", { value: true });
          var ParchmentError = function(_super) {
            __extends(ParchmentError2, _super);
            function ParchmentError2(message) {
              var _this = this;
              message = "[Parchment] " + message;
              _this = _super.call(this, message) || this;
              _this.message = message;
              _this.name = _this.constructor.name;
              return _this;
            }
            return ParchmentError2;
          }(Error);
          exports2.ParchmentError = ParchmentError;
          var attributes = {};
          var classes = {};
          var tags = {};
          var types2 = {};
          exports2.DATA_KEY = "__blot";
          var Scope;
          (function(Scope2) {
            Scope2[Scope2["TYPE"] = 3] = "TYPE";
            Scope2[Scope2["LEVEL"] = 12] = "LEVEL";
            Scope2[Scope2["ATTRIBUTE"] = 13] = "ATTRIBUTE";
            Scope2[Scope2["BLOT"] = 14] = "BLOT";
            Scope2[Scope2["INLINE"] = 7] = "INLINE";
            Scope2[Scope2["BLOCK"] = 11] = "BLOCK";
            Scope2[Scope2["BLOCK_BLOT"] = 10] = "BLOCK_BLOT";
            Scope2[Scope2["INLINE_BLOT"] = 6] = "INLINE_BLOT";
            Scope2[Scope2["BLOCK_ATTRIBUTE"] = 9] = "BLOCK_ATTRIBUTE";
            Scope2[Scope2["INLINE_ATTRIBUTE"] = 5] = "INLINE_ATTRIBUTE";
            Scope2[Scope2["ANY"] = 15] = "ANY";
          })(Scope = exports2.Scope || (exports2.Scope = {}));
          function create(input, value2) {
            var match = query(input);
            if (match == null) {
              throw new ParchmentError("Unable to create " + input + " blot");
            }
            var BlotClass = match;
            var node = input instanceof Node || input["nodeType"] === Node.TEXT_NODE ? input : BlotClass.create(value2);
            return new BlotClass(node, value2);
          }
          exports2.create = create;
          function find(node, bubble) {
            if (bubble === void 0) {
              bubble = false;
            }
            if (node == null)
              return null;
            if (node[exports2.DATA_KEY] != null)
              return node[exports2.DATA_KEY].blot;
            if (bubble)
              return find(node.parentNode, bubble);
            return null;
          }
          exports2.find = find;
          function query(query2, scope) {
            if (scope === void 0) {
              scope = Scope.ANY;
            }
            var match;
            if (typeof query2 === "string") {
              match = types2[query2] || attributes[query2];
            } else if (query2 instanceof Text || query2["nodeType"] === Node.TEXT_NODE) {
              match = types2["text"];
            } else if (typeof query2 === "number") {
              if (query2 & Scope.LEVEL & Scope.BLOCK) {
                match = types2["block"];
              } else if (query2 & Scope.LEVEL & Scope.INLINE) {
                match = types2["inline"];
              }
            } else if (query2 instanceof HTMLElement) {
              var names = (query2.getAttribute("class") || "").split(/\s+/);
              for (var i2 in names) {
                match = classes[names[i2]];
                if (match)
                  break;
              }
              match = match || tags[query2.tagName];
            }
            if (match == null)
              return null;
            if (scope & Scope.LEVEL & match.scope && scope & Scope.TYPE & match.scope)
              return match;
            return null;
          }
          exports2.query = query;
          function register() {
            var Definitions = [];
            for (var _i = 0; _i < arguments.length; _i++) {
              Definitions[_i] = arguments[_i];
            }
            if (Definitions.length > 1) {
              return Definitions.map(function(d2) {
                return register(d2);
              });
            }
            var Definition = Definitions[0];
            if (typeof Definition.blotName !== "string" && typeof Definition.attrName !== "string") {
              throw new ParchmentError("Invalid definition");
            } else if (Definition.blotName === "abstract") {
              throw new ParchmentError("Cannot register abstract class");
            }
            types2[Definition.blotName || Definition.attrName] = Definition;
            if (typeof Definition.keyName === "string") {
              attributes[Definition.keyName] = Definition;
            } else {
              if (Definition.className != null) {
                classes[Definition.className] = Definition;
              }
              if (Definition.tagName != null) {
                if (Array.isArray(Definition.tagName)) {
                  Definition.tagName = Definition.tagName.map(function(tagName) {
                    return tagName.toUpperCase();
                  });
                } else {
                  Definition.tagName = Definition.tagName.toUpperCase();
                }
                var tagNames = Array.isArray(Definition.tagName) ? Definition.tagName : [Definition.tagName];
                tagNames.forEach(function(tag) {
                  if (tags[tag] == null || Definition.className == null) {
                    tags[tag] = Definition;
                  }
                });
              }
            }
            return Definition;
          }
          exports2.register = register;
        },
        function(module2, exports2, __webpack_require__) {
          var diff = __webpack_require__(51);
          var equal = __webpack_require__(11);
          var extend = __webpack_require__(3);
          var op = __webpack_require__(20);
          var NULL_CHARACTER = String.fromCharCode(0);
          var Delta = function(ops) {
            if (Array.isArray(ops)) {
              this.ops = ops;
            } else if (ops != null && Array.isArray(ops.ops)) {
              this.ops = ops.ops;
            } else {
              this.ops = [];
            }
          };
          Delta.prototype.insert = function(text2, attributes) {
            var newOp = {};
            if (text2.length === 0)
              return this;
            newOp.insert = text2;
            if (attributes != null && typeof attributes === "object" && Object.keys(attributes).length > 0) {
              newOp.attributes = attributes;
            }
            return this.push(newOp);
          };
          Delta.prototype["delete"] = function(length) {
            if (length <= 0)
              return this;
            return this.push({ "delete": length });
          };
          Delta.prototype.retain = function(length, attributes) {
            if (length <= 0)
              return this;
            var newOp = { retain: length };
            if (attributes != null && typeof attributes === "object" && Object.keys(attributes).length > 0) {
              newOp.attributes = attributes;
            }
            return this.push(newOp);
          };
          Delta.prototype.push = function(newOp) {
            var index28 = this.ops.length;
            var lastOp = this.ops[index28 - 1];
            newOp = extend(true, {}, newOp);
            if (typeof lastOp === "object") {
              if (typeof newOp["delete"] === "number" && typeof lastOp["delete"] === "number") {
                this.ops[index28 - 1] = { "delete": lastOp["delete"] + newOp["delete"] };
                return this;
              }
              if (typeof lastOp["delete"] === "number" && newOp.insert != null) {
                index28 -= 1;
                lastOp = this.ops[index28 - 1];
                if (typeof lastOp !== "object") {
                  this.ops.unshift(newOp);
                  return this;
                }
              }
              if (equal(newOp.attributes, lastOp.attributes)) {
                if (typeof newOp.insert === "string" && typeof lastOp.insert === "string") {
                  this.ops[index28 - 1] = { insert: lastOp.insert + newOp.insert };
                  if (typeof newOp.attributes === "object")
                    this.ops[index28 - 1].attributes = newOp.attributes;
                  return this;
                } else if (typeof newOp.retain === "number" && typeof lastOp.retain === "number") {
                  this.ops[index28 - 1] = { retain: lastOp.retain + newOp.retain };
                  if (typeof newOp.attributes === "object")
                    this.ops[index28 - 1].attributes = newOp.attributes;
                  return this;
                }
              }
            }
            if (index28 === this.ops.length) {
              this.ops.push(newOp);
            } else {
              this.ops.splice(index28, 0, newOp);
            }
            return this;
          };
          Delta.prototype.chop = function() {
            var lastOp = this.ops[this.ops.length - 1];
            if (lastOp && lastOp.retain && !lastOp.attributes) {
              this.ops.pop();
            }
            return this;
          };
          Delta.prototype.filter = function(predicate) {
            return this.ops.filter(predicate);
          };
          Delta.prototype.forEach = function(predicate) {
            this.ops.forEach(predicate);
          };
          Delta.prototype.map = function(predicate) {
            return this.ops.map(predicate);
          };
          Delta.prototype.partition = function(predicate) {
            var passed = [], failed = [];
            this.forEach(function(op2) {
              var target = predicate(op2) ? passed : failed;
              target.push(op2);
            });
            return [passed, failed];
          };
          Delta.prototype.reduce = function(predicate, initial2) {
            return this.ops.reduce(predicate, initial2);
          };
          Delta.prototype.changeLength = function() {
            return this.reduce(function(length, elem) {
              if (elem.insert) {
                return length + op.length(elem);
              } else if (elem.delete) {
                return length - elem.delete;
              }
              return length;
            }, 0);
          };
          Delta.prototype.length = function() {
            return this.reduce(function(length, elem) {
              return length + op.length(elem);
            }, 0);
          };
          Delta.prototype.slice = function(start, end) {
            start = start || 0;
            if (typeof end !== "number")
              end = Infinity;
            var ops = [];
            var iter = op.iterator(this.ops);
            var index28 = 0;
            while (index28 < end && iter.hasNext()) {
              var nextOp;
              if (index28 < start) {
                nextOp = iter.next(start - index28);
              } else {
                nextOp = iter.next(end - index28);
                ops.push(nextOp);
              }
              index28 += op.length(nextOp);
            }
            return new Delta(ops);
          };
          Delta.prototype.compose = function(other) {
            var thisIter = op.iterator(this.ops);
            var otherIter = op.iterator(other.ops);
            var ops = [];
            var firstOther = otherIter.peek();
            if (firstOther != null && typeof firstOther.retain === "number" && firstOther.attributes == null) {
              var firstLeft = firstOther.retain;
              while (thisIter.peekType() === "insert" && thisIter.peekLength() <= firstLeft) {
                firstLeft -= thisIter.peekLength();
                ops.push(thisIter.next());
              }
              if (firstOther.retain - firstLeft > 0) {
                otherIter.next(firstOther.retain - firstLeft);
              }
            }
            var delta = new Delta(ops);
            while (thisIter.hasNext() || otherIter.hasNext()) {
              if (otherIter.peekType() === "insert") {
                delta.push(otherIter.next());
              } else if (thisIter.peekType() === "delete") {
                delta.push(thisIter.next());
              } else {
                var length = Math.min(thisIter.peekLength(), otherIter.peekLength());
                var thisOp = thisIter.next(length);
                var otherOp = otherIter.next(length);
                if (typeof otherOp.retain === "number") {
                  var newOp = {};
                  if (typeof thisOp.retain === "number") {
                    newOp.retain = length;
                  } else {
                    newOp.insert = thisOp.insert;
                  }
                  var attributes = op.attributes.compose(thisOp.attributes, otherOp.attributes, typeof thisOp.retain === "number");
                  if (attributes)
                    newOp.attributes = attributes;
                  delta.push(newOp);
                  if (!otherIter.hasNext() && equal(delta.ops[delta.ops.length - 1], newOp)) {
                    var rest = new Delta(thisIter.rest());
                    return delta.concat(rest).chop();
                  }
                } else if (typeof otherOp["delete"] === "number" && typeof thisOp.retain === "number") {
                  delta.push(otherOp);
                }
              }
            }
            return delta.chop();
          };
          Delta.prototype.concat = function(other) {
            var delta = new Delta(this.ops.slice());
            if (other.ops.length > 0) {
              delta.push(other.ops[0]);
              delta.ops = delta.ops.concat(other.ops.slice(1));
            }
            return delta;
          };
          Delta.prototype.diff = function(other, index28) {
            if (this.ops === other.ops) {
              return new Delta();
            }
            var strings = [this, other].map(function(delta2) {
              return delta2.map(function(op2) {
                if (op2.insert != null) {
                  return typeof op2.insert === "string" ? op2.insert : NULL_CHARACTER;
                }
                var prep = delta2 === other ? "on" : "with";
                throw new Error("diff() called " + prep + " non-document");
              }).join("");
            });
            var delta = new Delta();
            var diffResult = diff(strings[0], strings[1], index28);
            var thisIter = op.iterator(this.ops);
            var otherIter = op.iterator(other.ops);
            diffResult.forEach(function(component28) {
              var length = component28[1].length;
              while (length > 0) {
                var opLength = 0;
                switch (component28[0]) {
                  case diff.INSERT:
                    opLength = Math.min(otherIter.peekLength(), length);
                    delta.push(otherIter.next(opLength));
                    break;
                  case diff.DELETE:
                    opLength = Math.min(length, thisIter.peekLength());
                    thisIter.next(opLength);
                    delta["delete"](opLength);
                    break;
                  case diff.EQUAL:
                    opLength = Math.min(thisIter.peekLength(), otherIter.peekLength(), length);
                    var thisOp = thisIter.next(opLength);
                    var otherOp = otherIter.next(opLength);
                    if (equal(thisOp.insert, otherOp.insert)) {
                      delta.retain(opLength, op.attributes.diff(thisOp.attributes, otherOp.attributes));
                    } else {
                      delta.push(otherOp)["delete"](opLength);
                    }
                    break;
                }
                length -= opLength;
              }
            });
            return delta.chop();
          };
          Delta.prototype.eachLine = function(predicate, newline) {
            newline = newline || "\n";
            var iter = op.iterator(this.ops);
            var line = new Delta();
            var i2 = 0;
            while (iter.hasNext()) {
              if (iter.peekType() !== "insert")
                return;
              var thisOp = iter.peek();
              var start = op.length(thisOp) - iter.peekLength();
              var index28 = typeof thisOp.insert === "string" ? thisOp.insert.indexOf(newline, start) - start : -1;
              if (index28 < 0) {
                line.push(iter.next());
              } else if (index28 > 0) {
                line.push(iter.next(index28));
              } else {
                if (predicate(line, iter.next(1).attributes || {}, i2) === false) {
                  return;
                }
                i2 += 1;
                line = new Delta();
              }
            }
            if (line.length() > 0) {
              predicate(line, {}, i2);
            }
          };
          Delta.prototype.transform = function(other, priority) {
            priority = !!priority;
            if (typeof other === "number") {
              return this.transformPosition(other, priority);
            }
            var thisIter = op.iterator(this.ops);
            var otherIter = op.iterator(other.ops);
            var delta = new Delta();
            while (thisIter.hasNext() || otherIter.hasNext()) {
              if (thisIter.peekType() === "insert" && (priority || otherIter.peekType() !== "insert")) {
                delta.retain(op.length(thisIter.next()));
              } else if (otherIter.peekType() === "insert") {
                delta.push(otherIter.next());
              } else {
                var length = Math.min(thisIter.peekLength(), otherIter.peekLength());
                var thisOp = thisIter.next(length);
                var otherOp = otherIter.next(length);
                if (thisOp["delete"]) {
                  continue;
                } else if (otherOp["delete"]) {
                  delta.push(otherOp);
                } else {
                  delta.retain(length, op.attributes.transform(thisOp.attributes, otherOp.attributes, priority));
                }
              }
            }
            return delta.chop();
          };
          Delta.prototype.transformPosition = function(index28, priority) {
            priority = !!priority;
            var thisIter = op.iterator(this.ops);
            var offset = 0;
            while (thisIter.hasNext() && offset <= index28) {
              var length = thisIter.peekLength();
              var nextType = thisIter.peekType();
              thisIter.next();
              if (nextType === "delete") {
                index28 -= Math.min(length, index28 - offset);
                continue;
              } else if (nextType === "insert" && (offset < index28 || !priority)) {
                index28 += length;
              }
              offset += length;
            }
            return index28;
          };
          module2.exports = Delta;
        },
        function(module2, exports2) {
          "use strict";
          var hasOwn = Object.prototype.hasOwnProperty;
          var toStr = Object.prototype.toString;
          var defineProperty = Object.defineProperty;
          var gOPD = Object.getOwnPropertyDescriptor;
          var isArray = function isArray2(arr) {
            if (typeof Array.isArray === "function") {
              return Array.isArray(arr);
            }
            return toStr.call(arr) === "[object Array]";
          };
          var isPlainObject = function isPlainObject2(obj) {
            if (!obj || toStr.call(obj) !== "[object Object]") {
              return false;
            }
            var hasOwnConstructor = hasOwn.call(obj, "constructor");
            var hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, "isPrototypeOf");
            if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {
              return false;
            }
            var key2;
            for (key2 in obj) {
            }
            return typeof key2 === "undefined" || hasOwn.call(obj, key2);
          };
          var setProperty = function setProperty2(target, options2) {
            if (defineProperty && options2.name === "__proto__") {
              defineProperty(target, options2.name, {
                enumerable: true,
                configurable: true,
                value: options2.newValue,
                writable: true
              });
            } else {
              target[options2.name] = options2.newValue;
            }
          };
          var getProperty = function getProperty2(obj, name) {
            if (name === "__proto__") {
              if (!hasOwn.call(obj, name)) {
                return void 0;
              } else if (gOPD) {
                return gOPD(obj, name).value;
              }
            }
            return obj[name];
          };
          module2.exports = function extend() {
            var options2, name, src, copy, copyIsArray, clone;
            var target = arguments[0];
            var i2 = 1;
            var length = arguments.length;
            var deep = false;
            if (typeof target === "boolean") {
              deep = target;
              target = arguments[1] || {};
              i2 = 2;
            }
            if (target == null || typeof target !== "object" && typeof target !== "function") {
              target = {};
            }
            for (; i2 < length; ++i2) {
              options2 = arguments[i2];
              if (options2 != null) {
                for (name in options2) {
                  src = getProperty(target, name);
                  copy = getProperty(options2, name);
                  if (target !== copy) {
                    if (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {
                      if (copyIsArray) {
                        copyIsArray = false;
                        clone = src && isArray(src) ? src : [];
                      } else {
                        clone = src && isPlainObject(src) ? src : {};
                      }
                      setProperty(target, { name, newValue: extend(deep, clone, copy) });
                    } else if (typeof copy !== "undefined") {
                      setProperty(target, { name, newValue: copy });
                    }
                  }
                }
              }
            }
            return target;
          };
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          exports2.default = exports2.BlockEmbed = exports2.bubbleFormats = void 0;
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          var _get = function get3(object, property, receiver) {
            if (object === null)
              object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get3(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _extend = __webpack_require__(3);
          var _extend2 = _interopRequireDefault(_extend);
          var _quillDelta = __webpack_require__(2);
          var _quillDelta2 = _interopRequireDefault(_quillDelta);
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _break = __webpack_require__(16);
          var _break2 = _interopRequireDefault(_break);
          var _inline = __webpack_require__(6);
          var _inline2 = _interopRequireDefault(_inline);
          var _text = __webpack_require__(7);
          var _text2 = _interopRequireDefault(_text);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var NEWLINE_LENGTH = 1;
          var BlockEmbed = function(_Parchment$Embed) {
            _inherits(BlockEmbed2, _Parchment$Embed);
            function BlockEmbed2() {
              _classCallCheck(this, BlockEmbed2);
              return _possibleConstructorReturn(this, (BlockEmbed2.__proto__ || Object.getPrototypeOf(BlockEmbed2)).apply(this, arguments));
            }
            _createClass(BlockEmbed2, [{
              key: "attach",
              value: function attach() {
                _get(BlockEmbed2.prototype.__proto__ || Object.getPrototypeOf(BlockEmbed2.prototype), "attach", this).call(this);
                this.attributes = new _parchment2.default.Attributor.Store(this.domNode);
              }
            }, {
              key: "delta",
              value: function delta() {
                return new _quillDelta2.default().insert(this.value(), (0, _extend2.default)(this.formats(), this.attributes.values()));
              }
            }, {
              key: "format",
              value: function format(name, value2) {
                var attribute = _parchment2.default.query(name, _parchment2.default.Scope.BLOCK_ATTRIBUTE);
                if (attribute != null) {
                  this.attributes.attribute(attribute, value2);
                }
              }
            }, {
              key: "formatAt",
              value: function formatAt(index28, length, name, value2) {
                this.format(name, value2);
              }
            }, {
              key: "insertAt",
              value: function insertAt(index28, value2, def) {
                if (typeof value2 === "string" && value2.endsWith("\n")) {
                  var block = _parchment2.default.create(Block.blotName);
                  this.parent.insertBefore(block, index28 === 0 ? this : this.next);
                  block.insertAt(0, value2.slice(0, -1));
                } else {
                  _get(BlockEmbed2.prototype.__proto__ || Object.getPrototypeOf(BlockEmbed2.prototype), "insertAt", this).call(this, index28, value2, def);
                }
              }
            }]);
            return BlockEmbed2;
          }(_parchment2.default.Embed);
          BlockEmbed.scope = _parchment2.default.Scope.BLOCK_BLOT;
          var Block = function(_Parchment$Block) {
            _inherits(Block2, _Parchment$Block);
            function Block2(domNode) {
              _classCallCheck(this, Block2);
              var _this2 = _possibleConstructorReturn(this, (Block2.__proto__ || Object.getPrototypeOf(Block2)).call(this, domNode));
              _this2.cache = {};
              return _this2;
            }
            _createClass(Block2, [{
              key: "delta",
              value: function delta() {
                if (this.cache.delta == null) {
                  this.cache.delta = this.descendants(_parchment2.default.Leaf).reduce(function(delta2, leaf) {
                    if (leaf.length() === 0) {
                      return delta2;
                    } else {
                      return delta2.insert(leaf.value(), bubbleFormats(leaf));
                    }
                  }, new _quillDelta2.default()).insert("\n", bubbleFormats(this));
                }
                return this.cache.delta;
              }
            }, {
              key: "deleteAt",
              value: function deleteAt(index28, length) {
                _get(Block2.prototype.__proto__ || Object.getPrototypeOf(Block2.prototype), "deleteAt", this).call(this, index28, length);
                this.cache = {};
              }
            }, {
              key: "formatAt",
              value: function formatAt(index28, length, name, value2) {
                if (length <= 0)
                  return;
                if (_parchment2.default.query(name, _parchment2.default.Scope.BLOCK)) {
                  if (index28 + length === this.length()) {
                    this.format(name, value2);
                  }
                } else {
                  _get(Block2.prototype.__proto__ || Object.getPrototypeOf(Block2.prototype), "formatAt", this).call(this, index28, Math.min(length, this.length() - index28 - 1), name, value2);
                }
                this.cache = {};
              }
            }, {
              key: "insertAt",
              value: function insertAt(index28, value2, def) {
                if (def != null)
                  return _get(Block2.prototype.__proto__ || Object.getPrototypeOf(Block2.prototype), "insertAt", this).call(this, index28, value2, def);
                if (value2.length === 0)
                  return;
                var lines = value2.split("\n");
                var text2 = lines.shift();
                if (text2.length > 0) {
                  if (index28 < this.length() - 1 || this.children.tail == null) {
                    _get(Block2.prototype.__proto__ || Object.getPrototypeOf(Block2.prototype), "insertAt", this).call(this, Math.min(index28, this.length() - 1), text2);
                  } else {
                    this.children.tail.insertAt(this.children.tail.length(), text2);
                  }
                  this.cache = {};
                }
                var block = this;
                lines.reduce(function(index29, line) {
                  block = block.split(index29, true);
                  block.insertAt(0, line);
                  return line.length;
                }, index28 + text2.length);
              }
            }, {
              key: "insertBefore",
              value: function insertBefore(blot, ref) {
                var head = this.children.head;
                _get(Block2.prototype.__proto__ || Object.getPrototypeOf(Block2.prototype), "insertBefore", this).call(this, blot, ref);
                if (head instanceof _break2.default) {
                  head.remove();
                }
                this.cache = {};
              }
            }, {
              key: "length",
              value: function length() {
                if (this.cache.length == null) {
                  this.cache.length = _get(Block2.prototype.__proto__ || Object.getPrototypeOf(Block2.prototype), "length", this).call(this) + NEWLINE_LENGTH;
                }
                return this.cache.length;
              }
            }, {
              key: "moveChildren",
              value: function moveChildren(target, ref) {
                _get(Block2.prototype.__proto__ || Object.getPrototypeOf(Block2.prototype), "moveChildren", this).call(this, target, ref);
                this.cache = {};
              }
            }, {
              key: "optimize",
              value: function optimize(context) {
                _get(Block2.prototype.__proto__ || Object.getPrototypeOf(Block2.prototype), "optimize", this).call(this, context);
                this.cache = {};
              }
            }, {
              key: "path",
              value: function path(index28) {
                return _get(Block2.prototype.__proto__ || Object.getPrototypeOf(Block2.prototype), "path", this).call(this, index28, true);
              }
            }, {
              key: "removeChild",
              value: function removeChild(child) {
                _get(Block2.prototype.__proto__ || Object.getPrototypeOf(Block2.prototype), "removeChild", this).call(this, child);
                this.cache = {};
              }
            }, {
              key: "split",
              value: function split(index28) {
                var force = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
                if (force && (index28 === 0 || index28 >= this.length() - NEWLINE_LENGTH)) {
                  var clone = this.clone();
                  if (index28 === 0) {
                    this.parent.insertBefore(clone, this);
                    return this;
                  } else {
                    this.parent.insertBefore(clone, this.next);
                    return clone;
                  }
                } else {
                  var next = _get(Block2.prototype.__proto__ || Object.getPrototypeOf(Block2.prototype), "split", this).call(this, index28, force);
                  this.cache = {};
                  return next;
                }
              }
            }]);
            return Block2;
          }(_parchment2.default.Block);
          Block.blotName = "block";
          Block.tagName = "P";
          Block.defaultChild = "break";
          Block.allowedChildren = [_inline2.default, _parchment2.default.Embed, _text2.default];
          function bubbleFormats(blot) {
            var formats = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
            if (blot == null)
              return formats;
            if (typeof blot.formats === "function") {
              formats = (0, _extend2.default)(formats, blot.formats());
            }
            if (blot.parent == null || blot.parent.blotName == "scroll" || blot.parent.statics.scope !== blot.statics.scope) {
              return formats;
            }
            return bubbleFormats(blot.parent, formats);
          }
          exports2.bubbleFormats = bubbleFormats;
          exports2.BlockEmbed = BlockEmbed;
          exports2.default = Block;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          exports2.default = exports2.overload = exports2.expandConfig = void 0;
          var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
            return typeof obj;
          } : function(obj) {
            return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
          };
          var _slicedToArray = function() {
            function sliceIterator(arr, i2) {
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = void 0;
              try {
                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                  _arr.push(_s.value);
                  if (i2 && _arr.length === i2)
                    break;
                }
              } catch (err) {
                _d = true;
                _e = err;
              } finally {
                try {
                  if (!_n && _i["return"])
                    _i["return"]();
                } finally {
                  if (_d)
                    throw _e;
                }
              }
              return _arr;
            }
            return function(arr, i2) {
              if (Array.isArray(arr)) {
                return arr;
              } else if (Symbol.iterator in Object(arr)) {
                return sliceIterator(arr, i2);
              } else {
                throw new TypeError("Invalid attempt to destructure non-iterable instance");
              }
            };
          }();
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          __webpack_require__(50);
          var _quillDelta = __webpack_require__(2);
          var _quillDelta2 = _interopRequireDefault(_quillDelta);
          var _editor = __webpack_require__(14);
          var _editor2 = _interopRequireDefault(_editor);
          var _emitter3 = __webpack_require__(8);
          var _emitter4 = _interopRequireDefault(_emitter3);
          var _module = __webpack_require__(9);
          var _module2 = _interopRequireDefault(_module);
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _selection = __webpack_require__(15);
          var _selection2 = _interopRequireDefault(_selection);
          var _extend = __webpack_require__(3);
          var _extend2 = _interopRequireDefault(_extend);
          var _logger = __webpack_require__(10);
          var _logger2 = _interopRequireDefault(_logger);
          var _theme = __webpack_require__(34);
          var _theme2 = _interopRequireDefault(_theme);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _defineProperty(obj, key2, value2) {
            if (key2 in obj) {
              Object.defineProperty(obj, key2, { value: value2, enumerable: true, configurable: true, writable: true });
            } else {
              obj[key2] = value2;
            }
            return obj;
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          var debug = (0, _logger2.default)("quill");
          var Quill = function() {
            _createClass(Quill2, null, [{
              key: "debug",
              value: function debug2(limit) {
                if (limit === true) {
                  limit = "log";
                }
                _logger2.default.level(limit);
              }
            }, {
              key: "find",
              value: function find(node) {
                return node.__quill || _parchment2.default.find(node);
              }
            }, {
              key: "import",
              value: function _import(name) {
                if (this.imports[name] == null) {
                  debug.error("Cannot import " + name + ". Are you sure it was registered?");
                }
                return this.imports[name];
              }
            }, {
              key: "register",
              value: function register(path, target) {
                var _this = this;
                var overwrite = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
                if (typeof path !== "string") {
                  var name = path.attrName || path.blotName;
                  if (typeof name === "string") {
                    this.register("formats/" + name, path, target);
                  } else {
                    Object.keys(path).forEach(function(key2) {
                      _this.register(key2, path[key2], target);
                    });
                  }
                } else {
                  if (this.imports[path] != null && !overwrite) {
                    debug.warn("Overwriting " + path + " with", target);
                  }
                  this.imports[path] = target;
                  if ((path.startsWith("blots/") || path.startsWith("formats/")) && target.blotName !== "abstract") {
                    _parchment2.default.register(target);
                  } else if (path.startsWith("modules") && typeof target.register === "function") {
                    target.register();
                  }
                }
              }
            }]);
            function Quill2(container) {
              var _this2 = this;
              var options2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
              _classCallCheck(this, Quill2);
              this.options = expandConfig(container, options2);
              this.container = this.options.container;
              if (this.container == null) {
                return debug.error("Invalid Quill container", container);
              }
              if (this.options.debug) {
                Quill2.debug(this.options.debug);
              }
              var html = this.container.innerHTML.trim();
              this.container.classList.add("ql-container");
              this.container.innerHTML = "";
              this.container.__quill = this;
              this.root = this.addContainer("ql-editor");
              this.root.classList.add("ql-blank");
              this.root.setAttribute("data-gramm", false);
              this.scrollingContainer = this.options.scrollingContainer || this.root;
              this.emitter = new _emitter4.default();
              this.scroll = _parchment2.default.create(this.root, {
                emitter: this.emitter,
                whitelist: this.options.formats
              });
              this.editor = new _editor2.default(this.scroll);
              this.selection = new _selection2.default(this.scroll, this.emitter);
              this.theme = new this.options.theme(this, this.options);
              this.keyboard = this.theme.addModule("keyboard");
              this.clipboard = this.theme.addModule("clipboard");
              this.history = this.theme.addModule("history");
              this.theme.init();
              this.emitter.on(_emitter4.default.events.EDITOR_CHANGE, function(type) {
                if (type === _emitter4.default.events.TEXT_CHANGE) {
                  _this2.root.classList.toggle("ql-blank", _this2.editor.isBlank());
                }
              });
              this.emitter.on(_emitter4.default.events.SCROLL_UPDATE, function(source, mutations) {
                var range = _this2.selection.lastRange;
                var index28 = range && range.length === 0 ? range.index : void 0;
                modify.call(_this2, function() {
                  return _this2.editor.update(null, mutations, index28);
                }, source);
              });
              var contents = this.clipboard.convert(`<div class='ql-editor' style="white-space: normal;">` + html + "<p><br></p></div>");
              this.setContents(contents);
              this.history.clear();
              if (this.options.placeholder) {
                this.root.setAttribute("data-placeholder", this.options.placeholder);
              }
              if (this.options.readOnly) {
                this.disable();
              }
            }
            _createClass(Quill2, [{
              key: "addContainer",
              value: function addContainer(container) {
                var refNode = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
                if (typeof container === "string") {
                  var className = container;
                  container = document.createElement("div");
                  container.classList.add(className);
                }
                this.container.insertBefore(container, refNode);
                return container;
              }
            }, {
              key: "blur",
              value: function blur() {
                this.selection.setRange(null);
              }
            }, {
              key: "deleteText",
              value: function deleteText(index28, length, source) {
                var _this3 = this;
                var _overload = overload(index28, length, source);
                var _overload2 = _slicedToArray(_overload, 4);
                index28 = _overload2[0];
                length = _overload2[1];
                source = _overload2[3];
                return modify.call(this, function() {
                  return _this3.editor.deleteText(index28, length);
                }, source, index28, -1 * length);
              }
            }, {
              key: "disable",
              value: function disable() {
                this.enable(false);
              }
            }, {
              key: "enable",
              value: function enable() {
                var enabled = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
                this.scroll.enable(enabled);
                this.container.classList.toggle("ql-disabled", !enabled);
              }
            }, {
              key: "focus",
              value: function focus() {
                var scrollTop = this.scrollingContainer.scrollTop;
                this.selection.focus();
                this.scrollingContainer.scrollTop = scrollTop;
                this.scrollIntoView();
              }
            }, {
              key: "format",
              value: function format(name, value2) {
                var _this4 = this;
                var source = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : _emitter4.default.sources.API;
                return modify.call(this, function() {
                  var range = _this4.getSelection(true);
                  var change = new _quillDelta2.default();
                  if (range == null) {
                    return change;
                  } else if (_parchment2.default.query(name, _parchment2.default.Scope.BLOCK)) {
                    change = _this4.editor.formatLine(range.index, range.length, _defineProperty({}, name, value2));
                  } else if (range.length === 0) {
                    _this4.selection.format(name, value2);
                    return change;
                  } else {
                    change = _this4.editor.formatText(range.index, range.length, _defineProperty({}, name, value2));
                  }
                  _this4.setSelection(range, _emitter4.default.sources.SILENT);
                  return change;
                }, source);
              }
            }, {
              key: "formatLine",
              value: function formatLine(index28, length, name, value2, source) {
                var _this5 = this;
                var formats = void 0;
                var _overload3 = overload(index28, length, name, value2, source);
                var _overload4 = _slicedToArray(_overload3, 4);
                index28 = _overload4[0];
                length = _overload4[1];
                formats = _overload4[2];
                source = _overload4[3];
                return modify.call(this, function() {
                  return _this5.editor.formatLine(index28, length, formats);
                }, source, index28, 0);
              }
            }, {
              key: "formatText",
              value: function formatText(index28, length, name, value2, source) {
                var _this6 = this;
                var formats = void 0;
                var _overload5 = overload(index28, length, name, value2, source);
                var _overload6 = _slicedToArray(_overload5, 4);
                index28 = _overload6[0];
                length = _overload6[1];
                formats = _overload6[2];
                source = _overload6[3];
                return modify.call(this, function() {
                  return _this6.editor.formatText(index28, length, formats);
                }, source, index28, 0);
              }
            }, {
              key: "getBounds",
              value: function getBounds(index28) {
                var length = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
                var bounds = void 0;
                if (typeof index28 === "number") {
                  bounds = this.selection.getBounds(index28, length);
                } else {
                  bounds = this.selection.getBounds(index28.index, index28.length);
                }
                var containerBounds = this.container.getBoundingClientRect();
                return {
                  bottom: bounds.bottom - containerBounds.top,
                  height: bounds.height,
                  left: bounds.left - containerBounds.left,
                  right: bounds.right - containerBounds.left,
                  top: bounds.top - containerBounds.top,
                  width: bounds.width
                };
              }
            }, {
              key: "getContents",
              value: function getContents() {
                var index28 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
                var length = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.getLength() - index28;
                var _overload7 = overload(index28, length);
                var _overload8 = _slicedToArray(_overload7, 2);
                index28 = _overload8[0];
                length = _overload8[1];
                return this.editor.getContents(index28, length);
              }
            }, {
              key: "getFormat",
              value: function getFormat() {
                var index28 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.getSelection(true);
                var length = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
                if (typeof index28 === "number") {
                  return this.editor.getFormat(index28, length);
                } else {
                  return this.editor.getFormat(index28.index, index28.length);
                }
              }
            }, {
              key: "getIndex",
              value: function getIndex(blot) {
                return blot.offset(this.scroll);
              }
            }, {
              key: "getLength",
              value: function getLength() {
                return this.scroll.length();
              }
            }, {
              key: "getLeaf",
              value: function getLeaf(index28) {
                return this.scroll.leaf(index28);
              }
            }, {
              key: "getLine",
              value: function getLine(index28) {
                return this.scroll.line(index28);
              }
            }, {
              key: "getLines",
              value: function getLines() {
                var index28 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
                var length = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Number.MAX_VALUE;
                if (typeof index28 !== "number") {
                  return this.scroll.lines(index28.index, index28.length);
                } else {
                  return this.scroll.lines(index28, length);
                }
              }
            }, {
              key: "getModule",
              value: function getModule(name) {
                return this.theme.modules[name];
              }
            }, {
              key: "getSelection",
              value: function getSelection() {
                var focus = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
                if (focus)
                  this.focus();
                this.update();
                return this.selection.getRange()[0];
              }
            }, {
              key: "getText",
              value: function getText() {
                var index28 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
                var length = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.getLength() - index28;
                var _overload9 = overload(index28, length);
                var _overload10 = _slicedToArray(_overload9, 2);
                index28 = _overload10[0];
                length = _overload10[1];
                return this.editor.getText(index28, length);
              }
            }, {
              key: "hasFocus",
              value: function hasFocus() {
                return this.selection.hasFocus();
              }
            }, {
              key: "insertEmbed",
              value: function insertEmbed(index28, embed, value2) {
                var _this7 = this;
                var source = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : Quill2.sources.API;
                return modify.call(this, function() {
                  return _this7.editor.insertEmbed(index28, embed, value2);
                }, source, index28);
              }
            }, {
              key: "insertText",
              value: function insertText(index28, text2, name, value2, source) {
                var _this8 = this;
                var formats = void 0;
                var _overload11 = overload(index28, 0, name, value2, source);
                var _overload12 = _slicedToArray(_overload11, 4);
                index28 = _overload12[0];
                formats = _overload12[2];
                source = _overload12[3];
                return modify.call(this, function() {
                  return _this8.editor.insertText(index28, text2, formats);
                }, source, index28, text2.length);
              }
            }, {
              key: "isEnabled",
              value: function isEnabled() {
                return !this.container.classList.contains("ql-disabled");
              }
            }, {
              key: "off",
              value: function off() {
                return this.emitter.off.apply(this.emitter, arguments);
              }
            }, {
              key: "on",
              value: function on() {
                return this.emitter.on.apply(this.emitter, arguments);
              }
            }, {
              key: "once",
              value: function once2() {
                return this.emitter.once.apply(this.emitter, arguments);
              }
            }, {
              key: "pasteHTML",
              value: function pasteHTML(index28, html, source) {
                this.clipboard.dangerouslyPasteHTML(index28, html, source);
              }
            }, {
              key: "removeFormat",
              value: function removeFormat(index28, length, source) {
                var _this9 = this;
                var _overload13 = overload(index28, length, source);
                var _overload14 = _slicedToArray(_overload13, 4);
                index28 = _overload14[0];
                length = _overload14[1];
                source = _overload14[3];
                return modify.call(this, function() {
                  return _this9.editor.removeFormat(index28, length);
                }, source, index28);
              }
            }, {
              key: "scrollIntoView",
              value: function scrollIntoView() {
                this.selection.scrollIntoView(this.scrollingContainer);
              }
            }, {
              key: "setContents",
              value: function setContents(delta) {
                var _this10 = this;
                var source = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : _emitter4.default.sources.API;
                return modify.call(this, function() {
                  delta = new _quillDelta2.default(delta);
                  var length = _this10.getLength();
                  var deleted = _this10.editor.deleteText(0, length);
                  var applied = _this10.editor.applyDelta(delta);
                  var lastOp = applied.ops[applied.ops.length - 1];
                  if (lastOp != null && typeof lastOp.insert === "string" && lastOp.insert[lastOp.insert.length - 1] === "\n") {
                    _this10.editor.deleteText(_this10.getLength() - 1, 1);
                    applied.delete(1);
                  }
                  var ret = deleted.compose(applied);
                  return ret;
                }, source);
              }
            }, {
              key: "setSelection",
              value: function setSelection(index28, length, source) {
                if (index28 == null) {
                  this.selection.setRange(null, length || Quill2.sources.API);
                } else {
                  var _overload15 = overload(index28, length, source);
                  var _overload16 = _slicedToArray(_overload15, 4);
                  index28 = _overload16[0];
                  length = _overload16[1];
                  source = _overload16[3];
                  this.selection.setRange(new _selection.Range(index28, length), source);
                  if (source !== _emitter4.default.sources.SILENT) {
                    this.selection.scrollIntoView(this.scrollingContainer);
                  }
                }
              }
            }, {
              key: "setText",
              value: function setText(text2) {
                var source = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : _emitter4.default.sources.API;
                var delta = new _quillDelta2.default().insert(text2);
                return this.setContents(delta, source);
              }
            }, {
              key: "update",
              value: function update2() {
                var source = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _emitter4.default.sources.USER;
                var change = this.scroll.update(source);
                this.selection.update(source);
                return change;
              }
            }, {
              key: "updateContents",
              value: function updateContents(delta) {
                var _this11 = this;
                var source = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : _emitter4.default.sources.API;
                return modify.call(this, function() {
                  delta = new _quillDelta2.default(delta);
                  return _this11.editor.applyDelta(delta, source);
                }, source, true);
              }
            }]);
            return Quill2;
          }();
          Quill.DEFAULTS = {
            bounds: null,
            formats: null,
            modules: {},
            placeholder: "",
            readOnly: false,
            scrollingContainer: null,
            strict: true,
            theme: "default"
          };
          Quill.events = _emitter4.default.events;
          Quill.sources = _emitter4.default.sources;
          Quill.version = false ? "dev" : "1.3.7";
          Quill.imports = {
            "delta": _quillDelta2.default,
            "parchment": _parchment2.default,
            "core/module": _module2.default,
            "core/theme": _theme2.default
          };
          function expandConfig(container, userConfig) {
            userConfig = (0, _extend2.default)(true, {
              container,
              modules: {
                clipboard: true,
                keyboard: true,
                history: true
              }
            }, userConfig);
            if (!userConfig.theme || userConfig.theme === Quill.DEFAULTS.theme) {
              userConfig.theme = _theme2.default;
            } else {
              userConfig.theme = Quill.import("themes/" + userConfig.theme);
              if (userConfig.theme == null) {
                throw new Error("Invalid theme " + userConfig.theme + ". Did you register it?");
              }
            }
            var themeConfig = (0, _extend2.default)(true, {}, userConfig.theme.DEFAULTS);
            [themeConfig, userConfig].forEach(function(config) {
              config.modules = config.modules || {};
              Object.keys(config.modules).forEach(function(module3) {
                if (config.modules[module3] === true) {
                  config.modules[module3] = {};
                }
              });
            });
            var moduleNames = Object.keys(themeConfig.modules).concat(Object.keys(userConfig.modules));
            var moduleConfig = moduleNames.reduce(function(config, name) {
              var moduleClass = Quill.import("modules/" + name);
              if (moduleClass == null) {
                debug.error("Cannot load " + name + " module. Are you sure you registered it?");
              } else {
                config[name] = moduleClass.DEFAULTS || {};
              }
              return config;
            }, {});
            if (userConfig.modules != null && userConfig.modules.toolbar && userConfig.modules.toolbar.constructor !== Object) {
              userConfig.modules.toolbar = {
                container: userConfig.modules.toolbar
              };
            }
            userConfig = (0, _extend2.default)(true, {}, Quill.DEFAULTS, { modules: moduleConfig }, themeConfig, userConfig);
            ["bounds", "container", "scrollingContainer"].forEach(function(key2) {
              if (typeof userConfig[key2] === "string") {
                userConfig[key2] = document.querySelector(userConfig[key2]);
              }
            });
            userConfig.modules = Object.keys(userConfig.modules).reduce(function(config, name) {
              if (userConfig.modules[name]) {
                config[name] = userConfig.modules[name];
              }
              return config;
            }, {});
            return userConfig;
          }
          function modify(modifier, source, index28, shift) {
            if (this.options.strict && !this.isEnabled() && source === _emitter4.default.sources.USER) {
              return new _quillDelta2.default();
            }
            var range = index28 == null ? null : this.getSelection();
            var oldDelta = this.editor.delta;
            var change = modifier();
            if (range != null) {
              if (index28 === true)
                index28 = range.index;
              if (shift == null) {
                range = shiftRange(range, change, source);
              } else if (shift !== 0) {
                range = shiftRange(range, index28, shift, source);
              }
              this.setSelection(range, _emitter4.default.sources.SILENT);
            }
            if (change.length() > 0) {
              var _emitter;
              var args = [_emitter4.default.events.TEXT_CHANGE, change, oldDelta, source];
              (_emitter = this.emitter).emit.apply(_emitter, [_emitter4.default.events.EDITOR_CHANGE].concat(args));
              if (source !== _emitter4.default.sources.SILENT) {
                var _emitter2;
                (_emitter2 = this.emitter).emit.apply(_emitter2, args);
              }
            }
            return change;
          }
          function overload(index28, length, name, value2, source) {
            var formats = {};
            if (typeof index28.index === "number" && typeof index28.length === "number") {
              if (typeof length !== "number") {
                source = value2, value2 = name, name = length, length = index28.length, index28 = index28.index;
              } else {
                length = index28.length, index28 = index28.index;
              }
            } else if (typeof length !== "number") {
              source = value2, value2 = name, name = length, length = 0;
            }
            if ((typeof name === "undefined" ? "undefined" : _typeof(name)) === "object") {
              formats = name;
              source = value2;
            } else if (typeof name === "string") {
              if (value2 != null) {
                formats[name] = value2;
              } else {
                source = name;
              }
            }
            source = source || _emitter4.default.sources.API;
            return [index28, length, formats, source];
          }
          function shiftRange(range, index28, length, source) {
            if (range == null)
              return null;
            var start = void 0, end = void 0;
            if (index28 instanceof _quillDelta2.default) {
              var _map = [range.index, range.index + range.length].map(function(pos) {
                return index28.transformPosition(pos, source !== _emitter4.default.sources.USER);
              });
              var _map2 = _slicedToArray(_map, 2);
              start = _map2[0];
              end = _map2[1];
            } else {
              var _map3 = [range.index, range.index + range.length].map(function(pos) {
                if (pos < index28 || pos === index28 && source === _emitter4.default.sources.USER)
                  return pos;
                if (length >= 0) {
                  return pos + length;
                } else {
                  return Math.max(index28, pos + length);
                }
              });
              var _map4 = _slicedToArray(_map3, 2);
              start = _map4[0];
              end = _map4[1];
            }
            return new _selection.Range(start, end - start);
          }
          exports2.expandConfig = expandConfig;
          exports2.overload = overload;
          exports2.default = Quill;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          var _get = function get3(object, property, receiver) {
            if (object === null)
              object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get3(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _text = __webpack_require__(7);
          var _text2 = _interopRequireDefault(_text);
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var Inline = function(_Parchment$Inline) {
            _inherits(Inline2, _Parchment$Inline);
            function Inline2() {
              _classCallCheck(this, Inline2);
              return _possibleConstructorReturn(this, (Inline2.__proto__ || Object.getPrototypeOf(Inline2)).apply(this, arguments));
            }
            _createClass(Inline2, [{
              key: "formatAt",
              value: function formatAt(index28, length, name, value2) {
                if (Inline2.compare(this.statics.blotName, name) < 0 && _parchment2.default.query(name, _parchment2.default.Scope.BLOT)) {
                  var blot = this.isolate(index28, length);
                  if (value2) {
                    blot.wrap(name, value2);
                  }
                } else {
                  _get(Inline2.prototype.__proto__ || Object.getPrototypeOf(Inline2.prototype), "formatAt", this).call(this, index28, length, name, value2);
                }
              }
            }, {
              key: "optimize",
              value: function optimize(context) {
                _get(Inline2.prototype.__proto__ || Object.getPrototypeOf(Inline2.prototype), "optimize", this).call(this, context);
                if (this.parent instanceof Inline2 && Inline2.compare(this.statics.blotName, this.parent.statics.blotName) > 0) {
                  var parent = this.parent.isolate(this.offset(), this.length());
                  this.moveChildren(parent);
                  parent.wrap(this);
                }
              }
            }], [{
              key: "compare",
              value: function compare(self2, other) {
                var selfIndex = Inline2.order.indexOf(self2);
                var otherIndex = Inline2.order.indexOf(other);
                if (selfIndex >= 0 || otherIndex >= 0) {
                  return selfIndex - otherIndex;
                } else if (self2 === other) {
                  return 0;
                } else if (self2 < other) {
                  return -1;
                } else {
                  return 1;
                }
              }
            }]);
            return Inline2;
          }(_parchment2.default.Inline);
          Inline.allowedChildren = [Inline, _parchment2.default.Embed, _text2.default];
          Inline.order = [
            "cursor",
            "inline",
            "underline",
            "strike",
            "italic",
            "bold",
            "script",
            "link",
            "code"
          ];
          exports2.default = Inline;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var TextBlot = function(_Parchment$Text) {
            _inherits(TextBlot2, _Parchment$Text);
            function TextBlot2() {
              _classCallCheck(this, TextBlot2);
              return _possibleConstructorReturn(this, (TextBlot2.__proto__ || Object.getPrototypeOf(TextBlot2)).apply(this, arguments));
            }
            return TextBlot2;
          }(_parchment2.default.Text);
          exports2.default = TextBlot;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          var _get = function get3(object, property, receiver) {
            if (object === null)
              object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get3(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _eventemitter = __webpack_require__(54);
          var _eventemitter2 = _interopRequireDefault(_eventemitter);
          var _logger = __webpack_require__(10);
          var _logger2 = _interopRequireDefault(_logger);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var debug = (0, _logger2.default)("quill:events");
          var EVENTS = ["selectionchange", "mousedown", "mouseup", "click"];
          EVENTS.forEach(function(eventName) {
            document.addEventListener(eventName, function() {
              for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
              }
              [].slice.call(document.querySelectorAll(".ql-container")).forEach(function(node) {
                if (node.__quill && node.__quill.emitter) {
                  var _node$__quill$emitter;
                  (_node$__quill$emitter = node.__quill.emitter).handleDOM.apply(_node$__quill$emitter, args);
                }
              });
            });
          });
          var Emitter = function(_EventEmitter) {
            _inherits(Emitter2, _EventEmitter);
            function Emitter2() {
              _classCallCheck(this, Emitter2);
              var _this = _possibleConstructorReturn(this, (Emitter2.__proto__ || Object.getPrototypeOf(Emitter2)).call(this));
              _this.listeners = {};
              _this.on("error", debug.error);
              return _this;
            }
            _createClass(Emitter2, [{
              key: "emit",
              value: function emit() {
                debug.log.apply(debug, arguments);
                _get(Emitter2.prototype.__proto__ || Object.getPrototypeOf(Emitter2.prototype), "emit", this).apply(this, arguments);
              }
            }, {
              key: "handleDOM",
              value: function handleDOM(event) {
                for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                  args[_key2 - 1] = arguments[_key2];
                }
                (this.listeners[event.type] || []).forEach(function(_ref) {
                  var node = _ref.node, handler = _ref.handler;
                  if (event.target === node || node.contains(event.target)) {
                    handler.apply(void 0, [event].concat(args));
                  }
                });
              }
            }, {
              key: "listenDOM",
              value: function listenDOM(eventName, node, handler) {
                if (!this.listeners[eventName]) {
                  this.listeners[eventName] = [];
                }
                this.listeners[eventName].push({ node, handler });
              }
            }]);
            return Emitter2;
          }(_eventemitter2.default);
          Emitter.events = {
            EDITOR_CHANGE: "editor-change",
            SCROLL_BEFORE_UPDATE: "scroll-before-update",
            SCROLL_OPTIMIZE: "scroll-optimize",
            SCROLL_UPDATE: "scroll-update",
            SELECTION_CHANGE: "selection-change",
            TEXT_CHANGE: "text-change"
          };
          Emitter.sources = {
            API: "api",
            SILENT: "silent",
            USER: "user"
          };
          exports2.default = Emitter;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          var Module = function Module2(quill) {
            var options2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
            _classCallCheck(this, Module2);
            this.quill = quill;
            this.options = options2;
          };
          Module.DEFAULTS = {};
          exports2.default = Module;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          var levels = ["error", "warn", "log", "info"];
          var level = "warn";
          function debug(method) {
            if (levels.indexOf(method) <= levels.indexOf(level)) {
              var _console;
              for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                args[_key - 1] = arguments[_key];
              }
              (_console = console)[method].apply(_console, args);
            }
          }
          function namespace(ns) {
            return levels.reduce(function(logger, method) {
              logger[method] = debug.bind(console, method, ns);
              return logger;
            }, {});
          }
          debug.level = namespace.level = function(newLevel) {
            level = newLevel;
          };
          exports2.default = namespace;
        },
        function(module2, exports2, __webpack_require__) {
          var pSlice = Array.prototype.slice;
          var objectKeys = __webpack_require__(52);
          var isArguments = __webpack_require__(53);
          var deepEqual = module2.exports = function(actual, expected, opts) {
            if (!opts)
              opts = {};
            if (actual === expected) {
              return true;
            } else if (actual instanceof Date && expected instanceof Date) {
              return actual.getTime() === expected.getTime();
            } else if (!actual || !expected || typeof actual != "object" && typeof expected != "object") {
              return opts.strict ? actual === expected : actual == expected;
            } else {
              return objEquiv(actual, expected, opts);
            }
          };
          function isUndefinedOrNull(value2) {
            return value2 === null || value2 === void 0;
          }
          function isBuffer(x2) {
            if (!x2 || typeof x2 !== "object" || typeof x2.length !== "number")
              return false;
            if (typeof x2.copy !== "function" || typeof x2.slice !== "function") {
              return false;
            }
            if (x2.length > 0 && typeof x2[0] !== "number")
              return false;
            return true;
          }
          function objEquiv(a2, b2, opts) {
            var i2, key2;
            if (isUndefinedOrNull(a2) || isUndefinedOrNull(b2))
              return false;
            if (a2.prototype !== b2.prototype)
              return false;
            if (isArguments(a2)) {
              if (!isArguments(b2)) {
                return false;
              }
              a2 = pSlice.call(a2);
              b2 = pSlice.call(b2);
              return deepEqual(a2, b2, opts);
            }
            if (isBuffer(a2)) {
              if (!isBuffer(b2)) {
                return false;
              }
              if (a2.length !== b2.length)
                return false;
              for (i2 = 0; i2 < a2.length; i2++) {
                if (a2[i2] !== b2[i2])
                  return false;
              }
              return true;
            }
            try {
              var ka = objectKeys(a2), kb = objectKeys(b2);
            } catch (e2) {
              return false;
            }
            if (ka.length != kb.length)
              return false;
            ka.sort();
            kb.sort();
            for (i2 = ka.length - 1; i2 >= 0; i2--) {
              if (ka[i2] != kb[i2])
                return false;
            }
            for (i2 = ka.length - 1; i2 >= 0; i2--) {
              key2 = ka[i2];
              if (!deepEqual(a2[key2], b2[key2], opts))
                return false;
            }
            return typeof a2 === typeof b2;
          }
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", { value: true });
          var Registry = __webpack_require__(1);
          var Attributor = function() {
            function Attributor2(attrName, keyName, options2) {
              if (options2 === void 0) {
                options2 = {};
              }
              this.attrName = attrName;
              this.keyName = keyName;
              var attributeBit = Registry.Scope.TYPE & Registry.Scope.ATTRIBUTE;
              if (options2.scope != null) {
                this.scope = options2.scope & Registry.Scope.LEVEL | attributeBit;
              } else {
                this.scope = Registry.Scope.ATTRIBUTE;
              }
              if (options2.whitelist != null)
                this.whitelist = options2.whitelist;
            }
            Attributor2.keys = function(node) {
              return [].map.call(node.attributes, function(item) {
                return item.name;
              });
            };
            Attributor2.prototype.add = function(node, value2) {
              if (!this.canAdd(node, value2))
                return false;
              node.setAttribute(this.keyName, value2);
              return true;
            };
            Attributor2.prototype.canAdd = function(node, value2) {
              var match = Registry.query(node, Registry.Scope.BLOT & (this.scope | Registry.Scope.TYPE));
              if (match == null)
                return false;
              if (this.whitelist == null)
                return true;
              if (typeof value2 === "string") {
                return this.whitelist.indexOf(value2.replace(/["']/g, "")) > -1;
              } else {
                return this.whitelist.indexOf(value2) > -1;
              }
            };
            Attributor2.prototype.remove = function(node) {
              node.removeAttribute(this.keyName);
            };
            Attributor2.prototype.value = function(node) {
              var value2 = node.getAttribute(this.keyName);
              if (this.canAdd(node, value2) && value2) {
                return value2;
              }
              return "";
            };
            return Attributor2;
          }();
          exports2.default = Attributor;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          exports2.default = exports2.Code = void 0;
          var _slicedToArray = function() {
            function sliceIterator(arr, i2) {
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = void 0;
              try {
                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                  _arr.push(_s.value);
                  if (i2 && _arr.length === i2)
                    break;
                }
              } catch (err) {
                _d = true;
                _e = err;
              } finally {
                try {
                  if (!_n && _i["return"])
                    _i["return"]();
                } finally {
                  if (_d)
                    throw _e;
                }
              }
              return _arr;
            }
            return function(arr, i2) {
              if (Array.isArray(arr)) {
                return arr;
              } else if (Symbol.iterator in Object(arr)) {
                return sliceIterator(arr, i2);
              } else {
                throw new TypeError("Invalid attempt to destructure non-iterable instance");
              }
            };
          }();
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          var _get = function get3(object, property, receiver) {
            if (object === null)
              object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get3(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _quillDelta = __webpack_require__(2);
          var _quillDelta2 = _interopRequireDefault(_quillDelta);
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _block = __webpack_require__(4);
          var _block2 = _interopRequireDefault(_block);
          var _inline = __webpack_require__(6);
          var _inline2 = _interopRequireDefault(_inline);
          var _text = __webpack_require__(7);
          var _text2 = _interopRequireDefault(_text);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var Code = function(_Inline) {
            _inherits(Code2, _Inline);
            function Code2() {
              _classCallCheck(this, Code2);
              return _possibleConstructorReturn(this, (Code2.__proto__ || Object.getPrototypeOf(Code2)).apply(this, arguments));
            }
            return Code2;
          }(_inline2.default);
          Code.blotName = "code";
          Code.tagName = "CODE";
          var CodeBlock = function(_Block) {
            _inherits(CodeBlock2, _Block);
            function CodeBlock2() {
              _classCallCheck(this, CodeBlock2);
              return _possibleConstructorReturn(this, (CodeBlock2.__proto__ || Object.getPrototypeOf(CodeBlock2)).apply(this, arguments));
            }
            _createClass(CodeBlock2, [{
              key: "delta",
              value: function delta() {
                var _this3 = this;
                var text2 = this.domNode.textContent;
                if (text2.endsWith("\n")) {
                  text2 = text2.slice(0, -1);
                }
                return text2.split("\n").reduce(function(delta2, frag) {
                  return delta2.insert(frag).insert("\n", _this3.formats());
                }, new _quillDelta2.default());
              }
            }, {
              key: "format",
              value: function format(name, value2) {
                if (name === this.statics.blotName && value2)
                  return;
                var _descendant = this.descendant(_text2.default, this.length() - 1), _descendant2 = _slicedToArray(_descendant, 1), text2 = _descendant2[0];
                if (text2 != null) {
                  text2.deleteAt(text2.length() - 1, 1);
                }
                _get(CodeBlock2.prototype.__proto__ || Object.getPrototypeOf(CodeBlock2.prototype), "format", this).call(this, name, value2);
              }
            }, {
              key: "formatAt",
              value: function formatAt(index28, length, name, value2) {
                if (length === 0)
                  return;
                if (_parchment2.default.query(name, _parchment2.default.Scope.BLOCK) == null || name === this.statics.blotName && value2 === this.statics.formats(this.domNode)) {
                  return;
                }
                var nextNewline = this.newlineIndex(index28);
                if (nextNewline < 0 || nextNewline >= index28 + length)
                  return;
                var prevNewline = this.newlineIndex(index28, true) + 1;
                var isolateLength = nextNewline - prevNewline + 1;
                var blot = this.isolate(prevNewline, isolateLength);
                var next = blot.next;
                blot.format(name, value2);
                if (next instanceof CodeBlock2) {
                  next.formatAt(0, index28 - prevNewline + length - isolateLength, name, value2);
                }
              }
            }, {
              key: "insertAt",
              value: function insertAt(index28, value2, def) {
                if (def != null)
                  return;
                var _descendant3 = this.descendant(_text2.default, index28), _descendant4 = _slicedToArray(_descendant3, 2), text2 = _descendant4[0], offset = _descendant4[1];
                text2.insertAt(offset, value2);
              }
            }, {
              key: "length",
              value: function length() {
                var length2 = this.domNode.textContent.length;
                if (!this.domNode.textContent.endsWith("\n")) {
                  return length2 + 1;
                }
                return length2;
              }
            }, {
              key: "newlineIndex",
              value: function newlineIndex(searchIndex) {
                var reverse = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
                if (!reverse) {
                  var offset = this.domNode.textContent.slice(searchIndex).indexOf("\n");
                  return offset > -1 ? searchIndex + offset : -1;
                } else {
                  return this.domNode.textContent.slice(0, searchIndex).lastIndexOf("\n");
                }
              }
            }, {
              key: "optimize",
              value: function optimize(context) {
                if (!this.domNode.textContent.endsWith("\n")) {
                  this.appendChild(_parchment2.default.create("text", "\n"));
                }
                _get(CodeBlock2.prototype.__proto__ || Object.getPrototypeOf(CodeBlock2.prototype), "optimize", this).call(this, context);
                var next = this.next;
                if (next != null && next.prev === this && next.statics.blotName === this.statics.blotName && this.statics.formats(this.domNode) === next.statics.formats(next.domNode)) {
                  next.optimize(context);
                  next.moveChildren(this);
                  next.remove();
                }
              }
            }, {
              key: "replace",
              value: function replace(target) {
                _get(CodeBlock2.prototype.__proto__ || Object.getPrototypeOf(CodeBlock2.prototype), "replace", this).call(this, target);
                [].slice.call(this.domNode.querySelectorAll("*")).forEach(function(node) {
                  var blot = _parchment2.default.find(node);
                  if (blot == null) {
                    node.parentNode.removeChild(node);
                  } else if (blot instanceof _parchment2.default.Embed) {
                    blot.remove();
                  } else {
                    blot.unwrap();
                  }
                });
              }
            }], [{
              key: "create",
              value: function create(value2) {
                var domNode = _get(CodeBlock2.__proto__ || Object.getPrototypeOf(CodeBlock2), "create", this).call(this, value2);
                domNode.setAttribute("spellcheck", false);
                return domNode;
              }
            }, {
              key: "formats",
              value: function formats() {
                return true;
              }
            }]);
            return CodeBlock2;
          }(_block2.default);
          CodeBlock.blotName = "code-block";
          CodeBlock.tagName = "PRE";
          CodeBlock.TAB = "  ";
          exports2.Code = Code;
          exports2.default = CodeBlock;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
            return typeof obj;
          } : function(obj) {
            return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
          };
          var _slicedToArray = function() {
            function sliceIterator(arr, i2) {
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = void 0;
              try {
                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                  _arr.push(_s.value);
                  if (i2 && _arr.length === i2)
                    break;
                }
              } catch (err) {
                _d = true;
                _e = err;
              } finally {
                try {
                  if (!_n && _i["return"])
                    _i["return"]();
                } finally {
                  if (_d)
                    throw _e;
                }
              }
              return _arr;
            }
            return function(arr, i2) {
              if (Array.isArray(arr)) {
                return arr;
              } else if (Symbol.iterator in Object(arr)) {
                return sliceIterator(arr, i2);
              } else {
                throw new TypeError("Invalid attempt to destructure non-iterable instance");
              }
            };
          }();
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          var _quillDelta = __webpack_require__(2);
          var _quillDelta2 = _interopRequireDefault(_quillDelta);
          var _op = __webpack_require__(20);
          var _op2 = _interopRequireDefault(_op);
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _code = __webpack_require__(13);
          var _code2 = _interopRequireDefault(_code);
          var _cursor = __webpack_require__(24);
          var _cursor2 = _interopRequireDefault(_cursor);
          var _block = __webpack_require__(4);
          var _block2 = _interopRequireDefault(_block);
          var _break = __webpack_require__(16);
          var _break2 = _interopRequireDefault(_break);
          var _clone = __webpack_require__(21);
          var _clone2 = _interopRequireDefault(_clone);
          var _deepEqual = __webpack_require__(11);
          var _deepEqual2 = _interopRequireDefault(_deepEqual);
          var _extend = __webpack_require__(3);
          var _extend2 = _interopRequireDefault(_extend);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _defineProperty(obj, key2, value2) {
            if (key2 in obj) {
              Object.defineProperty(obj, key2, { value: value2, enumerable: true, configurable: true, writable: true });
            } else {
              obj[key2] = value2;
            }
            return obj;
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          var ASCII = /^[ -~]*$/;
          var Editor = function() {
            function Editor2(scroll) {
              _classCallCheck(this, Editor2);
              this.scroll = scroll;
              this.delta = this.getDelta();
            }
            _createClass(Editor2, [{
              key: "applyDelta",
              value: function applyDelta(delta) {
                var _this = this;
                var consumeNextNewline = false;
                this.scroll.update();
                var scrollLength = this.scroll.length();
                this.scroll.batchStart();
                delta = normalizeDelta(delta);
                delta.reduce(function(index28, op) {
                  var length = op.retain || op.delete || op.insert.length || 1;
                  var attributes = op.attributes || {};
                  if (op.insert != null) {
                    if (typeof op.insert === "string") {
                      var text2 = op.insert;
                      if (text2.endsWith("\n") && consumeNextNewline) {
                        consumeNextNewline = false;
                        text2 = text2.slice(0, -1);
                      }
                      if (index28 >= scrollLength && !text2.endsWith("\n")) {
                        consumeNextNewline = true;
                      }
                      _this.scroll.insertAt(index28, text2);
                      var _scroll$line = _this.scroll.line(index28), _scroll$line2 = _slicedToArray(_scroll$line, 2), line = _scroll$line2[0], offset = _scroll$line2[1];
                      var formats = (0, _extend2.default)({}, (0, _block.bubbleFormats)(line));
                      if (line instanceof _block2.default) {
                        var _line$descendant = line.descendant(_parchment2.default.Leaf, offset), _line$descendant2 = _slicedToArray(_line$descendant, 1), leaf = _line$descendant2[0];
                        formats = (0, _extend2.default)(formats, (0, _block.bubbleFormats)(leaf));
                      }
                      attributes = _op2.default.attributes.diff(formats, attributes) || {};
                    } else if (_typeof(op.insert) === "object") {
                      var key2 = Object.keys(op.insert)[0];
                      if (key2 == null)
                        return index28;
                      _this.scroll.insertAt(index28, key2, op.insert[key2]);
                    }
                    scrollLength += length;
                  }
                  Object.keys(attributes).forEach(function(name) {
                    _this.scroll.formatAt(index28, length, name, attributes[name]);
                  });
                  return index28 + length;
                }, 0);
                delta.reduce(function(index28, op) {
                  if (typeof op.delete === "number") {
                    _this.scroll.deleteAt(index28, op.delete);
                    return index28;
                  }
                  return index28 + (op.retain || op.insert.length || 1);
                }, 0);
                this.scroll.batchEnd();
                return this.update(delta);
              }
            }, {
              key: "deleteText",
              value: function deleteText(index28, length) {
                this.scroll.deleteAt(index28, length);
                return this.update(new _quillDelta2.default().retain(index28).delete(length));
              }
            }, {
              key: "formatLine",
              value: function formatLine(index28, length) {
                var _this2 = this;
                var formats = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
                this.scroll.update();
                Object.keys(formats).forEach(function(format) {
                  if (_this2.scroll.whitelist != null && !_this2.scroll.whitelist[format])
                    return;
                  var lines = _this2.scroll.lines(index28, Math.max(length, 1));
                  var lengthRemaining = length;
                  lines.forEach(function(line) {
                    var lineLength = line.length();
                    if (!(line instanceof _code2.default)) {
                      line.format(format, formats[format]);
                    } else {
                      var codeIndex = index28 - line.offset(_this2.scroll);
                      var codeLength = line.newlineIndex(codeIndex + lengthRemaining) - codeIndex + 1;
                      line.formatAt(codeIndex, codeLength, format, formats[format]);
                    }
                    lengthRemaining -= lineLength;
                  });
                });
                this.scroll.optimize();
                return this.update(new _quillDelta2.default().retain(index28).retain(length, (0, _clone2.default)(formats)));
              }
            }, {
              key: "formatText",
              value: function formatText(index28, length) {
                var _this3 = this;
                var formats = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
                Object.keys(formats).forEach(function(format) {
                  _this3.scroll.formatAt(index28, length, format, formats[format]);
                });
                return this.update(new _quillDelta2.default().retain(index28).retain(length, (0, _clone2.default)(formats)));
              }
            }, {
              key: "getContents",
              value: function getContents(index28, length) {
                return this.delta.slice(index28, index28 + length);
              }
            }, {
              key: "getDelta",
              value: function getDelta() {
                return this.scroll.lines().reduce(function(delta, line) {
                  return delta.concat(line.delta());
                }, new _quillDelta2.default());
              }
            }, {
              key: "getFormat",
              value: function getFormat(index28) {
                var length = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
                var lines = [], leaves = [];
                if (length === 0) {
                  this.scroll.path(index28).forEach(function(path) {
                    var _path = _slicedToArray(path, 1), blot = _path[0];
                    if (blot instanceof _block2.default) {
                      lines.push(blot);
                    } else if (blot instanceof _parchment2.default.Leaf) {
                      leaves.push(blot);
                    }
                  });
                } else {
                  lines = this.scroll.lines(index28, length);
                  leaves = this.scroll.descendants(_parchment2.default.Leaf, index28, length);
                }
                var formatsArr = [lines, leaves].map(function(blots) {
                  if (blots.length === 0)
                    return {};
                  var formats = (0, _block.bubbleFormats)(blots.shift());
                  while (Object.keys(formats).length > 0) {
                    var blot = blots.shift();
                    if (blot == null)
                      return formats;
                    formats = combineFormats((0, _block.bubbleFormats)(blot), formats);
                  }
                  return formats;
                });
                return _extend2.default.apply(_extend2.default, formatsArr);
              }
            }, {
              key: "getText",
              value: function getText(index28, length) {
                return this.getContents(index28, length).filter(function(op) {
                  return typeof op.insert === "string";
                }).map(function(op) {
                  return op.insert;
                }).join("");
              }
            }, {
              key: "insertEmbed",
              value: function insertEmbed(index28, embed, value2) {
                this.scroll.insertAt(index28, embed, value2);
                return this.update(new _quillDelta2.default().retain(index28).insert(_defineProperty({}, embed, value2)));
              }
            }, {
              key: "insertText",
              value: function insertText(index28, text2) {
                var _this4 = this;
                var formats = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
                text2 = text2.replace(/\r\n/g, "\n").replace(/\r/g, "\n");
                this.scroll.insertAt(index28, text2);
                Object.keys(formats).forEach(function(format) {
                  _this4.scroll.formatAt(index28, text2.length, format, formats[format]);
                });
                return this.update(new _quillDelta2.default().retain(index28).insert(text2, (0, _clone2.default)(formats)));
              }
            }, {
              key: "isBlank",
              value: function isBlank() {
                if (this.scroll.children.length == 0)
                  return true;
                if (this.scroll.children.length > 1)
                  return false;
                var block = this.scroll.children.head;
                if (block.statics.blotName !== _block2.default.blotName)
                  return false;
                if (block.children.length > 1)
                  return false;
                return block.children.head instanceof _break2.default;
              }
            }, {
              key: "removeFormat",
              value: function removeFormat(index28, length) {
                var text2 = this.getText(index28, length);
                var _scroll$line3 = this.scroll.line(index28 + length), _scroll$line4 = _slicedToArray(_scroll$line3, 2), line = _scroll$line4[0], offset = _scroll$line4[1];
                var suffixLength = 0, suffix = new _quillDelta2.default();
                if (line != null) {
                  if (!(line instanceof _code2.default)) {
                    suffixLength = line.length() - offset;
                  } else {
                    suffixLength = line.newlineIndex(offset) - offset + 1;
                  }
                  suffix = line.delta().slice(offset, offset + suffixLength - 1).insert("\n");
                }
                var contents = this.getContents(index28, length + suffixLength);
                var diff = contents.diff(new _quillDelta2.default().insert(text2).concat(suffix));
                var delta = new _quillDelta2.default().retain(index28).concat(diff);
                return this.applyDelta(delta);
              }
            }, {
              key: "update",
              value: function update2(change) {
                var mutations = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
                var cursorIndex = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : void 0;
                var oldDelta = this.delta;
                if (mutations.length === 1 && mutations[0].type === "characterData" && mutations[0].target.data.match(ASCII) && _parchment2.default.find(mutations[0].target)) {
                  var textBlot = _parchment2.default.find(mutations[0].target);
                  var formats = (0, _block.bubbleFormats)(textBlot);
                  var index28 = textBlot.offset(this.scroll);
                  var oldValue = mutations[0].oldValue.replace(_cursor2.default.CONTENTS, "");
                  var oldText = new _quillDelta2.default().insert(oldValue);
                  var newText = new _quillDelta2.default().insert(textBlot.value());
                  var diffDelta = new _quillDelta2.default().retain(index28).concat(oldText.diff(newText, cursorIndex));
                  change = diffDelta.reduce(function(delta, op) {
                    if (op.insert) {
                      return delta.insert(op.insert, formats);
                    } else {
                      return delta.push(op);
                    }
                  }, new _quillDelta2.default());
                  this.delta = oldDelta.compose(change);
                } else {
                  this.delta = this.getDelta();
                  if (!change || !(0, _deepEqual2.default)(oldDelta.compose(change), this.delta)) {
                    change = oldDelta.diff(this.delta, cursorIndex);
                  }
                }
                return change;
              }
            }]);
            return Editor2;
          }();
          function combineFormats(formats, combined) {
            return Object.keys(combined).reduce(function(merged, name) {
              if (formats[name] == null)
                return merged;
              if (combined[name] === formats[name]) {
                merged[name] = combined[name];
              } else if (Array.isArray(combined[name])) {
                if (combined[name].indexOf(formats[name]) < 0) {
                  merged[name] = combined[name].concat([formats[name]]);
                }
              } else {
                merged[name] = [combined[name], formats[name]];
              }
              return merged;
            }, {});
          }
          function normalizeDelta(delta) {
            return delta.reduce(function(delta2, op) {
              if (op.insert === 1) {
                var attributes = (0, _clone2.default)(op.attributes);
                delete attributes["image"];
                return delta2.insert({ image: op.attributes.image }, attributes);
              }
              if (op.attributes != null && (op.attributes.list === true || op.attributes.bullet === true)) {
                op = (0, _clone2.default)(op);
                if (op.attributes.list) {
                  op.attributes.list = "ordered";
                } else {
                  op.attributes.list = "bullet";
                  delete op.attributes.bullet;
                }
              }
              if (typeof op.insert === "string") {
                var text2 = op.insert.replace(/\r\n/g, "\n").replace(/\r/g, "\n");
                return delta2.insert(text2, op.attributes);
              }
              return delta2.push(op);
            }, new _quillDelta2.default());
          }
          exports2.default = Editor;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          exports2.default = exports2.Range = void 0;
          var _slicedToArray = function() {
            function sliceIterator(arr, i2) {
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = void 0;
              try {
                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                  _arr.push(_s.value);
                  if (i2 && _arr.length === i2)
                    break;
                }
              } catch (err) {
                _d = true;
                _e = err;
              } finally {
                try {
                  if (!_n && _i["return"])
                    _i["return"]();
                } finally {
                  if (_d)
                    throw _e;
                }
              }
              return _arr;
            }
            return function(arr, i2) {
              if (Array.isArray(arr)) {
                return arr;
              } else if (Symbol.iterator in Object(arr)) {
                return sliceIterator(arr, i2);
              } else {
                throw new TypeError("Invalid attempt to destructure non-iterable instance");
              }
            };
          }();
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _clone = __webpack_require__(21);
          var _clone2 = _interopRequireDefault(_clone);
          var _deepEqual = __webpack_require__(11);
          var _deepEqual2 = _interopRequireDefault(_deepEqual);
          var _emitter3 = __webpack_require__(8);
          var _emitter4 = _interopRequireDefault(_emitter3);
          var _logger = __webpack_require__(10);
          var _logger2 = _interopRequireDefault(_logger);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _toConsumableArray(arr) {
            if (Array.isArray(arr)) {
              for (var i2 = 0, arr2 = Array(arr.length); i2 < arr.length; i2++) {
                arr2[i2] = arr[i2];
              }
              return arr2;
            } else {
              return Array.from(arr);
            }
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          var debug = (0, _logger2.default)("quill:selection");
          var Range = function Range2(index28) {
            var length = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
            _classCallCheck(this, Range2);
            this.index = index28;
            this.length = length;
          };
          var Selection = function() {
            function Selection2(scroll, emitter) {
              var _this = this;
              _classCallCheck(this, Selection2);
              this.emitter = emitter;
              this.scroll = scroll;
              this.composing = false;
              this.mouseDown = false;
              this.root = this.scroll.domNode;
              this.cursor = _parchment2.default.create("cursor", this);
              this.lastRange = this.savedRange = new Range(0, 0);
              this.handleComposition();
              this.handleDragging();
              this.emitter.listenDOM("selectionchange", document, function() {
                if (!_this.mouseDown) {
                  setTimeout(_this.update.bind(_this, _emitter4.default.sources.USER), 1);
                }
              });
              this.emitter.on(_emitter4.default.events.EDITOR_CHANGE, function(type, delta) {
                if (type === _emitter4.default.events.TEXT_CHANGE && delta.length() > 0) {
                  _this.update(_emitter4.default.sources.SILENT);
                }
              });
              this.emitter.on(_emitter4.default.events.SCROLL_BEFORE_UPDATE, function() {
                if (!_this.hasFocus())
                  return;
                var native = _this.getNativeRange();
                if (native == null)
                  return;
                if (native.start.node === _this.cursor.textNode)
                  return;
                _this.emitter.once(_emitter4.default.events.SCROLL_UPDATE, function() {
                  try {
                    _this.setNativeRange(native.start.node, native.start.offset, native.end.node, native.end.offset);
                  } catch (ignored) {
                  }
                });
              });
              this.emitter.on(_emitter4.default.events.SCROLL_OPTIMIZE, function(mutations, context) {
                if (context.range) {
                  var _context$range = context.range, startNode = _context$range.startNode, startOffset = _context$range.startOffset, endNode = _context$range.endNode, endOffset = _context$range.endOffset;
                  _this.setNativeRange(startNode, startOffset, endNode, endOffset);
                }
              });
              this.update(_emitter4.default.sources.SILENT);
            }
            _createClass(Selection2, [{
              key: "handleComposition",
              value: function handleComposition() {
                var _this2 = this;
                this.root.addEventListener("compositionstart", function() {
                  _this2.composing = true;
                });
                this.root.addEventListener("compositionend", function() {
                  _this2.composing = false;
                  if (_this2.cursor.parent) {
                    var range = _this2.cursor.restore();
                    if (!range)
                      return;
                    setTimeout(function() {
                      _this2.setNativeRange(range.startNode, range.startOffset, range.endNode, range.endOffset);
                    }, 1);
                  }
                });
              }
            }, {
              key: "handleDragging",
              value: function handleDragging() {
                var _this3 = this;
                this.emitter.listenDOM("mousedown", document.body, function() {
                  _this3.mouseDown = true;
                });
                this.emitter.listenDOM("mouseup", document.body, function() {
                  _this3.mouseDown = false;
                  _this3.update(_emitter4.default.sources.USER);
                });
              }
            }, {
              key: "focus",
              value: function focus() {
                if (this.hasFocus())
                  return;
                this.root.focus();
                this.setRange(this.savedRange);
              }
            }, {
              key: "format",
              value: function format(_format, value2) {
                if (this.scroll.whitelist != null && !this.scroll.whitelist[_format])
                  return;
                this.scroll.update();
                var nativeRange = this.getNativeRange();
                if (nativeRange == null || !nativeRange.native.collapsed || _parchment2.default.query(_format, _parchment2.default.Scope.BLOCK))
                  return;
                if (nativeRange.start.node !== this.cursor.textNode) {
                  var blot = _parchment2.default.find(nativeRange.start.node, false);
                  if (blot == null)
                    return;
                  if (blot instanceof _parchment2.default.Leaf) {
                    var after = blot.split(nativeRange.start.offset);
                    blot.parent.insertBefore(this.cursor, after);
                  } else {
                    blot.insertBefore(this.cursor, nativeRange.start.node);
                  }
                  this.cursor.attach();
                }
                this.cursor.format(_format, value2);
                this.scroll.optimize();
                this.setNativeRange(this.cursor.textNode, this.cursor.textNode.data.length);
                this.update();
              }
            }, {
              key: "getBounds",
              value: function getBounds(index28) {
                var length = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
                var scrollLength = this.scroll.length();
                index28 = Math.min(index28, scrollLength - 1);
                length = Math.min(index28 + length, scrollLength - 1) - index28;
                var node = void 0, _scroll$leaf = this.scroll.leaf(index28), _scroll$leaf2 = _slicedToArray(_scroll$leaf, 2), leaf = _scroll$leaf2[0], offset = _scroll$leaf2[1];
                if (leaf == null)
                  return null;
                var _leaf$position = leaf.position(offset, true);
                var _leaf$position2 = _slicedToArray(_leaf$position, 2);
                node = _leaf$position2[0];
                offset = _leaf$position2[1];
                var range = document.createRange();
                if (length > 0) {
                  range.setStart(node, offset);
                  var _scroll$leaf3 = this.scroll.leaf(index28 + length);
                  var _scroll$leaf4 = _slicedToArray(_scroll$leaf3, 2);
                  leaf = _scroll$leaf4[0];
                  offset = _scroll$leaf4[1];
                  if (leaf == null)
                    return null;
                  var _leaf$position3 = leaf.position(offset, true);
                  var _leaf$position4 = _slicedToArray(_leaf$position3, 2);
                  node = _leaf$position4[0];
                  offset = _leaf$position4[1];
                  range.setEnd(node, offset);
                  return range.getBoundingClientRect();
                } else {
                  var side = "left";
                  var rect = void 0;
                  if (node instanceof Text) {
                    if (offset < node.data.length) {
                      range.setStart(node, offset);
                      range.setEnd(node, offset + 1);
                    } else {
                      range.setStart(node, offset - 1);
                      range.setEnd(node, offset);
                      side = "right";
                    }
                    rect = range.getBoundingClientRect();
                  } else {
                    rect = leaf.domNode.getBoundingClientRect();
                    if (offset > 0)
                      side = "right";
                  }
                  return {
                    bottom: rect.top + rect.height,
                    height: rect.height,
                    left: rect[side],
                    right: rect[side],
                    top: rect.top,
                    width: 0
                  };
                }
              }
            }, {
              key: "getNativeRange",
              value: function getNativeRange() {
                var selection = document.getSelection();
                if (selection == null || selection.rangeCount <= 0)
                  return null;
                var nativeRange = selection.getRangeAt(0);
                if (nativeRange == null)
                  return null;
                var range = this.normalizeNative(nativeRange);
                debug.info("getNativeRange", range);
                return range;
              }
            }, {
              key: "getRange",
              value: function getRange() {
                var normalized = this.getNativeRange();
                if (normalized == null)
                  return [null, null];
                var range = this.normalizedToRange(normalized);
                return [range, normalized];
              }
            }, {
              key: "hasFocus",
              value: function hasFocus() {
                return document.activeElement === this.root;
              }
            }, {
              key: "normalizedToRange",
              value: function normalizedToRange(range) {
                var _this4 = this;
                var positions = [[range.start.node, range.start.offset]];
                if (!range.native.collapsed) {
                  positions.push([range.end.node, range.end.offset]);
                }
                var indexes = positions.map(function(position) {
                  var _position = _slicedToArray(position, 2), node = _position[0], offset = _position[1];
                  var blot = _parchment2.default.find(node, true);
                  var index28 = blot.offset(_this4.scroll);
                  if (offset === 0) {
                    return index28;
                  } else if (blot instanceof _parchment2.default.Container) {
                    return index28 + blot.length();
                  } else {
                    return index28 + blot.index(node, offset);
                  }
                });
                var end = Math.min(Math.max.apply(Math, _toConsumableArray(indexes)), this.scroll.length() - 1);
                var start = Math.min.apply(Math, [end].concat(_toConsumableArray(indexes)));
                return new Range(start, end - start);
              }
            }, {
              key: "normalizeNative",
              value: function normalizeNative(nativeRange) {
                if (!contains(this.root, nativeRange.startContainer) || !nativeRange.collapsed && !contains(this.root, nativeRange.endContainer)) {
                  return null;
                }
                var range = {
                  start: { node: nativeRange.startContainer, offset: nativeRange.startOffset },
                  end: { node: nativeRange.endContainer, offset: nativeRange.endOffset },
                  native: nativeRange
                };
                [range.start, range.end].forEach(function(position) {
                  var node = position.node, offset = position.offset;
                  while (!(node instanceof Text) && node.childNodes.length > 0) {
                    if (node.childNodes.length > offset) {
                      node = node.childNodes[offset];
                      offset = 0;
                    } else if (node.childNodes.length === offset) {
                      node = node.lastChild;
                      offset = node instanceof Text ? node.data.length : node.childNodes.length + 1;
                    } else {
                      break;
                    }
                  }
                  position.node = node, position.offset = offset;
                });
                return range;
              }
            }, {
              key: "rangeToNative",
              value: function rangeToNative(range) {
                var _this5 = this;
                var indexes = range.collapsed ? [range.index] : [range.index, range.index + range.length];
                var args = [];
                var scrollLength = this.scroll.length();
                indexes.forEach(function(index28, i2) {
                  index28 = Math.min(scrollLength - 1, index28);
                  var node = void 0, _scroll$leaf5 = _this5.scroll.leaf(index28), _scroll$leaf6 = _slicedToArray(_scroll$leaf5, 2), leaf = _scroll$leaf6[0], offset = _scroll$leaf6[1];
                  var _leaf$position5 = leaf.position(offset, i2 !== 0);
                  var _leaf$position6 = _slicedToArray(_leaf$position5, 2);
                  node = _leaf$position6[0];
                  offset = _leaf$position6[1];
                  args.push(node, offset);
                });
                if (args.length < 2) {
                  args = args.concat(args);
                }
                return args;
              }
            }, {
              key: "scrollIntoView",
              value: function scrollIntoView(scrollingContainer) {
                var range = this.lastRange;
                if (range == null)
                  return;
                var bounds = this.getBounds(range.index, range.length);
                if (bounds == null)
                  return;
                var limit = this.scroll.length() - 1;
                var _scroll$line = this.scroll.line(Math.min(range.index, limit)), _scroll$line2 = _slicedToArray(_scroll$line, 1), first = _scroll$line2[0];
                var last = first;
                if (range.length > 0) {
                  var _scroll$line3 = this.scroll.line(Math.min(range.index + range.length, limit));
                  var _scroll$line4 = _slicedToArray(_scroll$line3, 1);
                  last = _scroll$line4[0];
                }
                if (first == null || last == null)
                  return;
                var scrollBounds = scrollingContainer.getBoundingClientRect();
                if (bounds.top < scrollBounds.top) {
                  scrollingContainer.scrollTop -= scrollBounds.top - bounds.top;
                } else if (bounds.bottom > scrollBounds.bottom) {
                  scrollingContainer.scrollTop += bounds.bottom - scrollBounds.bottom;
                }
              }
            }, {
              key: "setNativeRange",
              value: function setNativeRange(startNode, startOffset) {
                var endNode = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : startNode;
                var endOffset = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : startOffset;
                var force = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : false;
                debug.info("setNativeRange", startNode, startOffset, endNode, endOffset);
                if (startNode != null && (this.root.parentNode == null || startNode.parentNode == null || endNode.parentNode == null)) {
                  return;
                }
                var selection = document.getSelection();
                if (selection == null)
                  return;
                if (startNode != null) {
                  if (!this.hasFocus())
                    this.root.focus();
                  var native = (this.getNativeRange() || {}).native;
                  if (native == null || force || startNode !== native.startContainer || startOffset !== native.startOffset || endNode !== native.endContainer || endOffset !== native.endOffset) {
                    if (startNode.tagName == "BR") {
                      startOffset = [].indexOf.call(startNode.parentNode.childNodes, startNode);
                      startNode = startNode.parentNode;
                    }
                    if (endNode.tagName == "BR") {
                      endOffset = [].indexOf.call(endNode.parentNode.childNodes, endNode);
                      endNode = endNode.parentNode;
                    }
                    var range = document.createRange();
                    range.setStart(startNode, startOffset);
                    range.setEnd(endNode, endOffset);
                    selection.removeAllRanges();
                    selection.addRange(range);
                  }
                } else {
                  selection.removeAllRanges();
                  this.root.blur();
                  document.body.focus();
                }
              }
            }, {
              key: "setRange",
              value: function setRange(range) {
                var force = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
                var source = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : _emitter4.default.sources.API;
                if (typeof force === "string") {
                  source = force;
                  force = false;
                }
                debug.info("setRange", range);
                if (range != null) {
                  var args = this.rangeToNative(range);
                  this.setNativeRange.apply(this, _toConsumableArray(args).concat([force]));
                } else {
                  this.setNativeRange(null);
                }
                this.update(source);
              }
            }, {
              key: "update",
              value: function update2() {
                var source = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _emitter4.default.sources.USER;
                var oldRange = this.lastRange;
                var _getRange = this.getRange(), _getRange2 = _slicedToArray(_getRange, 2), lastRange = _getRange2[0], nativeRange = _getRange2[1];
                this.lastRange = lastRange;
                if (this.lastRange != null) {
                  this.savedRange = this.lastRange;
                }
                if (!(0, _deepEqual2.default)(oldRange, this.lastRange)) {
                  var _emitter;
                  if (!this.composing && nativeRange != null && nativeRange.native.collapsed && nativeRange.start.node !== this.cursor.textNode) {
                    this.cursor.restore();
                  }
                  var args = [_emitter4.default.events.SELECTION_CHANGE, (0, _clone2.default)(this.lastRange), (0, _clone2.default)(oldRange), source];
                  (_emitter = this.emitter).emit.apply(_emitter, [_emitter4.default.events.EDITOR_CHANGE].concat(args));
                  if (source !== _emitter4.default.sources.SILENT) {
                    var _emitter2;
                    (_emitter2 = this.emitter).emit.apply(_emitter2, args);
                  }
                }
              }
            }]);
            return Selection2;
          }();
          function contains(parent, descendant) {
            try {
              descendant.parentNode;
            } catch (e2) {
              return false;
            }
            if (descendant instanceof Text) {
              descendant = descendant.parentNode;
            }
            return parent.contains(descendant);
          }
          exports2.Range = Range;
          exports2.default = Selection;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          var _get = function get3(object, property, receiver) {
            if (object === null)
              object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get3(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var Break = function(_Parchment$Embed) {
            _inherits(Break2, _Parchment$Embed);
            function Break2() {
              _classCallCheck(this, Break2);
              return _possibleConstructorReturn(this, (Break2.__proto__ || Object.getPrototypeOf(Break2)).apply(this, arguments));
            }
            _createClass(Break2, [{
              key: "insertInto",
              value: function insertInto(parent, ref) {
                if (parent.children.length === 0) {
                  _get(Break2.prototype.__proto__ || Object.getPrototypeOf(Break2.prototype), "insertInto", this).call(this, parent, ref);
                } else {
                  this.remove();
                }
              }
            }, {
              key: "length",
              value: function length() {
                return 0;
              }
            }, {
              key: "value",
              value: function value2() {
                return "";
              }
            }], [{
              key: "value",
              value: function value2() {
                return void 0;
              }
            }]);
            return Break2;
          }(_parchment2.default.Embed);
          Break.blotName = "break";
          Break.tagName = "BR";
          exports2.default = Break;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
              d2.__proto__ = b2;
            } || function(d2, b2) {
              for (var p2 in b2)
                if (b2.hasOwnProperty(p2))
                  d2[p2] = b2[p2];
            };
            return function(d2, b2) {
              extendStatics(d2, b2);
              function __() {
                this.constructor = d2;
              }
              d2.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());
            };
          }();
          Object.defineProperty(exports2, "__esModule", { value: true });
          var linked_list_1 = __webpack_require__(44);
          var shadow_1 = __webpack_require__(30);
          var Registry = __webpack_require__(1);
          var ContainerBlot = function(_super) {
            __extends(ContainerBlot2, _super);
            function ContainerBlot2(domNode) {
              var _this = _super.call(this, domNode) || this;
              _this.build();
              return _this;
            }
            ContainerBlot2.prototype.appendChild = function(other) {
              this.insertBefore(other);
            };
            ContainerBlot2.prototype.attach = function() {
              _super.prototype.attach.call(this);
              this.children.forEach(function(child) {
                child.attach();
              });
            };
            ContainerBlot2.prototype.build = function() {
              var _this = this;
              this.children = new linked_list_1.default();
              [].slice.call(this.domNode.childNodes).reverse().forEach(function(node) {
                try {
                  var child = makeBlot(node);
                  _this.insertBefore(child, _this.children.head || void 0);
                } catch (err) {
                  if (err instanceof Registry.ParchmentError)
                    return;
                  else
                    throw err;
                }
              });
            };
            ContainerBlot2.prototype.deleteAt = function(index28, length) {
              if (index28 === 0 && length === this.length()) {
                return this.remove();
              }
              this.children.forEachAt(index28, length, function(child, offset, length2) {
                child.deleteAt(offset, length2);
              });
            };
            ContainerBlot2.prototype.descendant = function(criteria, index28) {
              var _a = this.children.find(index28), child = _a[0], offset = _a[1];
              if (criteria.blotName == null && criteria(child) || criteria.blotName != null && child instanceof criteria) {
                return [child, offset];
              } else if (child instanceof ContainerBlot2) {
                return child.descendant(criteria, offset);
              } else {
                return [null, -1];
              }
            };
            ContainerBlot2.prototype.descendants = function(criteria, index28, length) {
              if (index28 === void 0) {
                index28 = 0;
              }
              if (length === void 0) {
                length = Number.MAX_VALUE;
              }
              var descendants = [];
              var lengthLeft = length;
              this.children.forEachAt(index28, length, function(child, index29, length2) {
                if (criteria.blotName == null && criteria(child) || criteria.blotName != null && child instanceof criteria) {
                  descendants.push(child);
                }
                if (child instanceof ContainerBlot2) {
                  descendants = descendants.concat(child.descendants(criteria, index29, lengthLeft));
                }
                lengthLeft -= length2;
              });
              return descendants;
            };
            ContainerBlot2.prototype.detach = function() {
              this.children.forEach(function(child) {
                child.detach();
              });
              _super.prototype.detach.call(this);
            };
            ContainerBlot2.prototype.formatAt = function(index28, length, name, value2) {
              this.children.forEachAt(index28, length, function(child, offset, length2) {
                child.formatAt(offset, length2, name, value2);
              });
            };
            ContainerBlot2.prototype.insertAt = function(index28, value2, def) {
              var _a = this.children.find(index28), child = _a[0], offset = _a[1];
              if (child) {
                child.insertAt(offset, value2, def);
              } else {
                var blot = def == null ? Registry.create("text", value2) : Registry.create(value2, def);
                this.appendChild(blot);
              }
            };
            ContainerBlot2.prototype.insertBefore = function(childBlot, refBlot) {
              if (this.statics.allowedChildren != null && !this.statics.allowedChildren.some(function(child) {
                return childBlot instanceof child;
              })) {
                throw new Registry.ParchmentError("Cannot insert " + childBlot.statics.blotName + " into " + this.statics.blotName);
              }
              childBlot.insertInto(this, refBlot);
            };
            ContainerBlot2.prototype.length = function() {
              return this.children.reduce(function(memo, child) {
                return memo + child.length();
              }, 0);
            };
            ContainerBlot2.prototype.moveChildren = function(targetParent, refNode) {
              this.children.forEach(function(child) {
                targetParent.insertBefore(child, refNode);
              });
            };
            ContainerBlot2.prototype.optimize = function(context) {
              _super.prototype.optimize.call(this, context);
              if (this.children.length === 0) {
                if (this.statics.defaultChild != null) {
                  var child = Registry.create(this.statics.defaultChild);
                  this.appendChild(child);
                  child.optimize(context);
                } else {
                  this.remove();
                }
              }
            };
            ContainerBlot2.prototype.path = function(index28, inclusive) {
              if (inclusive === void 0) {
                inclusive = false;
              }
              var _a = this.children.find(index28, inclusive), child = _a[0], offset = _a[1];
              var position = [[this, index28]];
              if (child instanceof ContainerBlot2) {
                return position.concat(child.path(offset, inclusive));
              } else if (child != null) {
                position.push([child, offset]);
              }
              return position;
            };
            ContainerBlot2.prototype.removeChild = function(child) {
              this.children.remove(child);
            };
            ContainerBlot2.prototype.replace = function(target) {
              if (target instanceof ContainerBlot2) {
                target.moveChildren(this);
              }
              _super.prototype.replace.call(this, target);
            };
            ContainerBlot2.prototype.split = function(index28, force) {
              if (force === void 0) {
                force = false;
              }
              if (!force) {
                if (index28 === 0)
                  return this;
                if (index28 === this.length())
                  return this.next;
              }
              var after = this.clone();
              this.parent.insertBefore(after, this.next);
              this.children.forEachAt(index28, this.length(), function(child, offset, length) {
                child = child.split(offset, force);
                after.appendChild(child);
              });
              return after;
            };
            ContainerBlot2.prototype.unwrap = function() {
              this.moveChildren(this.parent, this.next);
              this.remove();
            };
            ContainerBlot2.prototype.update = function(mutations, context) {
              var _this = this;
              var addedNodes = [];
              var removedNodes = [];
              mutations.forEach(function(mutation) {
                if (mutation.target === _this.domNode && mutation.type === "childList") {
                  addedNodes.push.apply(addedNodes, mutation.addedNodes);
                  removedNodes.push.apply(removedNodes, mutation.removedNodes);
                }
              });
              removedNodes.forEach(function(node) {
                if (node.parentNode != null && node.tagName !== "IFRAME" && document.body.compareDocumentPosition(node) & Node.DOCUMENT_POSITION_CONTAINED_BY) {
                  return;
                }
                var blot = Registry.find(node);
                if (blot == null)
                  return;
                if (blot.domNode.parentNode == null || blot.domNode.parentNode === _this.domNode) {
                  blot.detach();
                }
              });
              addedNodes.filter(function(node) {
                return node.parentNode == _this.domNode;
              }).sort(function(a2, b2) {
                if (a2 === b2)
                  return 0;
                if (a2.compareDocumentPosition(b2) & Node.DOCUMENT_POSITION_FOLLOWING) {
                  return 1;
                }
                return -1;
              }).forEach(function(node) {
                var refBlot = null;
                if (node.nextSibling != null) {
                  refBlot = Registry.find(node.nextSibling);
                }
                var blot = makeBlot(node);
                if (blot.next != refBlot || blot.next == null) {
                  if (blot.parent != null) {
                    blot.parent.removeChild(_this);
                  }
                  _this.insertBefore(blot, refBlot || void 0);
                }
              });
            };
            return ContainerBlot2;
          }(shadow_1.default);
          function makeBlot(node) {
            var blot = Registry.find(node);
            if (blot == null) {
              try {
                blot = Registry.create(node);
              } catch (e2) {
                blot = Registry.create(Registry.Scope.INLINE);
                [].slice.call(node.childNodes).forEach(function(child) {
                  blot.domNode.appendChild(child);
                });
                if (node.parentNode) {
                  node.parentNode.replaceChild(blot.domNode, node);
                }
                blot.attach();
              }
            }
            return blot;
          }
          exports2.default = ContainerBlot;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
              d2.__proto__ = b2;
            } || function(d2, b2) {
              for (var p2 in b2)
                if (b2.hasOwnProperty(p2))
                  d2[p2] = b2[p2];
            };
            return function(d2, b2) {
              extendStatics(d2, b2);
              function __() {
                this.constructor = d2;
              }
              d2.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());
            };
          }();
          Object.defineProperty(exports2, "__esModule", { value: true });
          var attributor_1 = __webpack_require__(12);
          var store_1 = __webpack_require__(31);
          var container_1 = __webpack_require__(17);
          var Registry = __webpack_require__(1);
          var FormatBlot = function(_super) {
            __extends(FormatBlot2, _super);
            function FormatBlot2(domNode) {
              var _this = _super.call(this, domNode) || this;
              _this.attributes = new store_1.default(_this.domNode);
              return _this;
            }
            FormatBlot2.formats = function(domNode) {
              if (typeof this.tagName === "string") {
                return true;
              } else if (Array.isArray(this.tagName)) {
                return domNode.tagName.toLowerCase();
              }
              return void 0;
            };
            FormatBlot2.prototype.format = function(name, value2) {
              var format = Registry.query(name);
              if (format instanceof attributor_1.default) {
                this.attributes.attribute(format, value2);
              } else if (value2) {
                if (format != null && (name !== this.statics.blotName || this.formats()[name] !== value2)) {
                  this.replaceWith(name, value2);
                }
              }
            };
            FormatBlot2.prototype.formats = function() {
              var formats = this.attributes.values();
              var format = this.statics.formats(this.domNode);
              if (format != null) {
                formats[this.statics.blotName] = format;
              }
              return formats;
            };
            FormatBlot2.prototype.replaceWith = function(name, value2) {
              var replacement = _super.prototype.replaceWith.call(this, name, value2);
              this.attributes.copy(replacement);
              return replacement;
            };
            FormatBlot2.prototype.update = function(mutations, context) {
              var _this = this;
              _super.prototype.update.call(this, mutations, context);
              if (mutations.some(function(mutation) {
                return mutation.target === _this.domNode && mutation.type === "attributes";
              })) {
                this.attributes.build();
              }
            };
            FormatBlot2.prototype.wrap = function(name, value2) {
              var wrapper = _super.prototype.wrap.call(this, name, value2);
              if (wrapper instanceof FormatBlot2 && wrapper.statics.scope === this.statics.scope) {
                this.attributes.move(wrapper);
              }
              return wrapper;
            };
            return FormatBlot2;
          }(container_1.default);
          exports2.default = FormatBlot;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
              d2.__proto__ = b2;
            } || function(d2, b2) {
              for (var p2 in b2)
                if (b2.hasOwnProperty(p2))
                  d2[p2] = b2[p2];
            };
            return function(d2, b2) {
              extendStatics(d2, b2);
              function __() {
                this.constructor = d2;
              }
              d2.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());
            };
          }();
          Object.defineProperty(exports2, "__esModule", { value: true });
          var shadow_1 = __webpack_require__(30);
          var Registry = __webpack_require__(1);
          var LeafBlot = function(_super) {
            __extends(LeafBlot2, _super);
            function LeafBlot2() {
              return _super !== null && _super.apply(this, arguments) || this;
            }
            LeafBlot2.value = function(domNode) {
              return true;
            };
            LeafBlot2.prototype.index = function(node, offset) {
              if (this.domNode === node || this.domNode.compareDocumentPosition(node) & Node.DOCUMENT_POSITION_CONTAINED_BY) {
                return Math.min(offset, 1);
              }
              return -1;
            };
            LeafBlot2.prototype.position = function(index28, inclusive) {
              var offset = [].indexOf.call(this.parent.domNode.childNodes, this.domNode);
              if (index28 > 0)
                offset += 1;
              return [this.parent.domNode, offset];
            };
            LeafBlot2.prototype.value = function() {
              var _a;
              return _a = {}, _a[this.statics.blotName] = this.statics.value(this.domNode) || true, _a;
            };
            LeafBlot2.scope = Registry.Scope.INLINE_BLOT;
            return LeafBlot2;
          }(shadow_1.default);
          exports2.default = LeafBlot;
        },
        function(module2, exports2, __webpack_require__) {
          var equal = __webpack_require__(11);
          var extend = __webpack_require__(3);
          var lib = {
            attributes: {
              compose: function(a2, b2, keepNull) {
                if (typeof a2 !== "object")
                  a2 = {};
                if (typeof b2 !== "object")
                  b2 = {};
                var attributes = extend(true, {}, b2);
                if (!keepNull) {
                  attributes = Object.keys(attributes).reduce(function(copy, key3) {
                    if (attributes[key3] != null) {
                      copy[key3] = attributes[key3];
                    }
                    return copy;
                  }, {});
                }
                for (var key2 in a2) {
                  if (a2[key2] !== void 0 && b2[key2] === void 0) {
                    attributes[key2] = a2[key2];
                  }
                }
                return Object.keys(attributes).length > 0 ? attributes : void 0;
              },
              diff: function(a2, b2) {
                if (typeof a2 !== "object")
                  a2 = {};
                if (typeof b2 !== "object")
                  b2 = {};
                var attributes = Object.keys(a2).concat(Object.keys(b2)).reduce(function(attributes2, key2) {
                  if (!equal(a2[key2], b2[key2])) {
                    attributes2[key2] = b2[key2] === void 0 ? null : b2[key2];
                  }
                  return attributes2;
                }, {});
                return Object.keys(attributes).length > 0 ? attributes : void 0;
              },
              transform: function(a2, b2, priority) {
                if (typeof a2 !== "object")
                  return b2;
                if (typeof b2 !== "object")
                  return void 0;
                if (!priority)
                  return b2;
                var attributes = Object.keys(b2).reduce(function(attributes2, key2) {
                  if (a2[key2] === void 0)
                    attributes2[key2] = b2[key2];
                  return attributes2;
                }, {});
                return Object.keys(attributes).length > 0 ? attributes : void 0;
              }
            },
            iterator: function(ops) {
              return new Iterator(ops);
            },
            length: function(op) {
              if (typeof op["delete"] === "number") {
                return op["delete"];
              } else if (typeof op.retain === "number") {
                return op.retain;
              } else {
                return typeof op.insert === "string" ? op.insert.length : 1;
              }
            }
          };
          function Iterator(ops) {
            this.ops = ops;
            this.index = 0;
            this.offset = 0;
          }
          ;
          Iterator.prototype.hasNext = function() {
            return this.peekLength() < Infinity;
          };
          Iterator.prototype.next = function(length) {
            if (!length)
              length = Infinity;
            var nextOp = this.ops[this.index];
            if (nextOp) {
              var offset = this.offset;
              var opLength = lib.length(nextOp);
              if (length >= opLength - offset) {
                length = opLength - offset;
                this.index += 1;
                this.offset = 0;
              } else {
                this.offset += length;
              }
              if (typeof nextOp["delete"] === "number") {
                return { "delete": length };
              } else {
                var retOp = {};
                if (nextOp.attributes) {
                  retOp.attributes = nextOp.attributes;
                }
                if (typeof nextOp.retain === "number") {
                  retOp.retain = length;
                } else if (typeof nextOp.insert === "string") {
                  retOp.insert = nextOp.insert.substr(offset, length);
                } else {
                  retOp.insert = nextOp.insert;
                }
                return retOp;
              }
            } else {
              return { retain: Infinity };
            }
          };
          Iterator.prototype.peek = function() {
            return this.ops[this.index];
          };
          Iterator.prototype.peekLength = function() {
            if (this.ops[this.index]) {
              return lib.length(this.ops[this.index]) - this.offset;
            } else {
              return Infinity;
            }
          };
          Iterator.prototype.peekType = function() {
            if (this.ops[this.index]) {
              if (typeof this.ops[this.index]["delete"] === "number") {
                return "delete";
              } else if (typeof this.ops[this.index].retain === "number") {
                return "retain";
              } else {
                return "insert";
              }
            }
            return "retain";
          };
          Iterator.prototype.rest = function() {
            if (!this.hasNext()) {
              return [];
            } else if (this.offset === 0) {
              return this.ops.slice(this.index);
            } else {
              var offset = this.offset;
              var index28 = this.index;
              var next = this.next();
              var rest = this.ops.slice(this.index);
              this.offset = offset;
              this.index = index28;
              return [next].concat(rest);
            }
          };
          module2.exports = lib;
        },
        function(module2, exports2) {
          var clone = function() {
            "use strict";
            function _instanceof(obj, type) {
              return type != null && obj instanceof type;
            }
            var nativeMap;
            try {
              nativeMap = Map;
            } catch (_2) {
              nativeMap = function() {
              };
            }
            var nativeSet;
            try {
              nativeSet = Set;
            } catch (_2) {
              nativeSet = function() {
              };
            }
            var nativePromise;
            try {
              nativePromise = Promise;
            } catch (_2) {
              nativePromise = function() {
              };
            }
            function clone2(parent, circular, depth, prototype, includeNonEnumerable) {
              if (typeof circular === "object") {
                depth = circular.depth;
                prototype = circular.prototype;
                includeNonEnumerable = circular.includeNonEnumerable;
                circular = circular.circular;
              }
              var allParents = [];
              var allChildren = [];
              var useBuffer = typeof Buffer != "undefined";
              if (typeof circular == "undefined")
                circular = true;
              if (typeof depth == "undefined")
                depth = Infinity;
              function _clone(parent2, depth2) {
                if (parent2 === null)
                  return null;
                if (depth2 === 0)
                  return parent2;
                var child;
                var proto;
                if (typeof parent2 != "object") {
                  return parent2;
                }
                if (_instanceof(parent2, nativeMap)) {
                  child = new nativeMap();
                } else if (_instanceof(parent2, nativeSet)) {
                  child = new nativeSet();
                } else if (_instanceof(parent2, nativePromise)) {
                  child = new nativePromise(function(resolve, reject) {
                    parent2.then(function(value2) {
                      resolve(_clone(value2, depth2 - 1));
                    }, function(err) {
                      reject(_clone(err, depth2 - 1));
                    });
                  });
                } else if (clone2.__isArray(parent2)) {
                  child = [];
                } else if (clone2.__isRegExp(parent2)) {
                  child = new RegExp(parent2.source, __getRegExpFlags(parent2));
                  if (parent2.lastIndex)
                    child.lastIndex = parent2.lastIndex;
                } else if (clone2.__isDate(parent2)) {
                  child = new Date(parent2.getTime());
                } else if (useBuffer && Buffer.isBuffer(parent2)) {
                  if (Buffer.allocUnsafe) {
                    child = Buffer.allocUnsafe(parent2.length);
                  } else {
                    child = new Buffer(parent2.length);
                  }
                  parent2.copy(child);
                  return child;
                } else if (_instanceof(parent2, Error)) {
                  child = Object.create(parent2);
                } else {
                  if (typeof prototype == "undefined") {
                    proto = Object.getPrototypeOf(parent2);
                    child = Object.create(proto);
                  } else {
                    child = Object.create(prototype);
                    proto = prototype;
                  }
                }
                if (circular) {
                  var index28 = allParents.indexOf(parent2);
                  if (index28 != -1) {
                    return allChildren[index28];
                  }
                  allParents.push(parent2);
                  allChildren.push(child);
                }
                if (_instanceof(parent2, nativeMap)) {
                  parent2.forEach(function(value2, key2) {
                    var keyChild = _clone(key2, depth2 - 1);
                    var valueChild = _clone(value2, depth2 - 1);
                    child.set(keyChild, valueChild);
                  });
                }
                if (_instanceof(parent2, nativeSet)) {
                  parent2.forEach(function(value2) {
                    var entryChild = _clone(value2, depth2 - 1);
                    child.add(entryChild);
                  });
                }
                for (var i2 in parent2) {
                  var attrs;
                  if (proto) {
                    attrs = Object.getOwnPropertyDescriptor(proto, i2);
                  }
                  if (attrs && attrs.set == null) {
                    continue;
                  }
                  child[i2] = _clone(parent2[i2], depth2 - 1);
                }
                if (Object.getOwnPropertySymbols) {
                  var symbols = Object.getOwnPropertySymbols(parent2);
                  for (var i2 = 0; i2 < symbols.length; i2++) {
                    var symbol = symbols[i2];
                    var descriptor = Object.getOwnPropertyDescriptor(parent2, symbol);
                    if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {
                      continue;
                    }
                    child[symbol] = _clone(parent2[symbol], depth2 - 1);
                    if (!descriptor.enumerable) {
                      Object.defineProperty(child, symbol, {
                        enumerable: false
                      });
                    }
                  }
                }
                if (includeNonEnumerable) {
                  var allPropertyNames = Object.getOwnPropertyNames(parent2);
                  for (var i2 = 0; i2 < allPropertyNames.length; i2++) {
                    var propertyName = allPropertyNames[i2];
                    var descriptor = Object.getOwnPropertyDescriptor(parent2, propertyName);
                    if (descriptor && descriptor.enumerable) {
                      continue;
                    }
                    child[propertyName] = _clone(parent2[propertyName], depth2 - 1);
                    Object.defineProperty(child, propertyName, {
                      enumerable: false
                    });
                  }
                }
                return child;
              }
              return _clone(parent, depth);
            }
            clone2.clonePrototype = function clonePrototype(parent) {
              if (parent === null)
                return null;
              var c2 = function() {
              };
              c2.prototype = parent;
              return new c2();
            };
            function __objToStr(o2) {
              return Object.prototype.toString.call(o2);
            }
            clone2.__objToStr = __objToStr;
            function __isDate(o2) {
              return typeof o2 === "object" && __objToStr(o2) === "[object Date]";
            }
            clone2.__isDate = __isDate;
            function __isArray(o2) {
              return typeof o2 === "object" && __objToStr(o2) === "[object Array]";
            }
            clone2.__isArray = __isArray;
            function __isRegExp(o2) {
              return typeof o2 === "object" && __objToStr(o2) === "[object RegExp]";
            }
            clone2.__isRegExp = __isRegExp;
            function __getRegExpFlags(re) {
              var flags = "";
              if (re.global)
                flags += "g";
              if (re.ignoreCase)
                flags += "i";
              if (re.multiline)
                flags += "m";
              return flags;
            }
            clone2.__getRegExpFlags = __getRegExpFlags;
            return clone2;
          }();
          if (typeof module2 === "object" && module2.exports) {
            module2.exports = clone;
          }
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          var _slicedToArray = function() {
            function sliceIterator(arr, i2) {
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = void 0;
              try {
                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                  _arr.push(_s.value);
                  if (i2 && _arr.length === i2)
                    break;
                }
              } catch (err) {
                _d = true;
                _e = err;
              } finally {
                try {
                  if (!_n && _i["return"])
                    _i["return"]();
                } finally {
                  if (_d)
                    throw _e;
                }
              }
              return _arr;
            }
            return function(arr, i2) {
              if (Array.isArray(arr)) {
                return arr;
              } else if (Symbol.iterator in Object(arr)) {
                return sliceIterator(arr, i2);
              } else {
                throw new TypeError("Invalid attempt to destructure non-iterable instance");
              }
            };
          }();
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          var _get = function get3(object, property, receiver) {
            if (object === null)
              object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get3(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _emitter = __webpack_require__(8);
          var _emitter2 = _interopRequireDefault(_emitter);
          var _block = __webpack_require__(4);
          var _block2 = _interopRequireDefault(_block);
          var _break = __webpack_require__(16);
          var _break2 = _interopRequireDefault(_break);
          var _code = __webpack_require__(13);
          var _code2 = _interopRequireDefault(_code);
          var _container = __webpack_require__(25);
          var _container2 = _interopRequireDefault(_container);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          function isLine(blot) {
            return blot instanceof _block2.default || blot instanceof _block.BlockEmbed;
          }
          var Scroll = function(_Parchment$Scroll) {
            _inherits(Scroll2, _Parchment$Scroll);
            function Scroll2(domNode, config) {
              _classCallCheck(this, Scroll2);
              var _this = _possibleConstructorReturn(this, (Scroll2.__proto__ || Object.getPrototypeOf(Scroll2)).call(this, domNode));
              _this.emitter = config.emitter;
              if (Array.isArray(config.whitelist)) {
                _this.whitelist = config.whitelist.reduce(function(whitelist, format) {
                  whitelist[format] = true;
                  return whitelist;
                }, {});
              }
              _this.domNode.addEventListener("DOMNodeInserted", function() {
              });
              _this.optimize();
              _this.enable();
              return _this;
            }
            _createClass(Scroll2, [{
              key: "batchStart",
              value: function batchStart() {
                this.batch = true;
              }
            }, {
              key: "batchEnd",
              value: function batchEnd() {
                this.batch = false;
                this.optimize();
              }
            }, {
              key: "deleteAt",
              value: function deleteAt(index28, length) {
                var _line = this.line(index28), _line2 = _slicedToArray(_line, 2), first = _line2[0], offset = _line2[1];
                var _line3 = this.line(index28 + length), _line4 = _slicedToArray(_line3, 1), last = _line4[0];
                _get(Scroll2.prototype.__proto__ || Object.getPrototypeOf(Scroll2.prototype), "deleteAt", this).call(this, index28, length);
                if (last != null && first !== last && offset > 0) {
                  if (first instanceof _block.BlockEmbed || last instanceof _block.BlockEmbed) {
                    this.optimize();
                    return;
                  }
                  if (first instanceof _code2.default) {
                    var newlineIndex = first.newlineIndex(first.length(), true);
                    if (newlineIndex > -1) {
                      first = first.split(newlineIndex + 1);
                      if (first === last) {
                        this.optimize();
                        return;
                      }
                    }
                  } else if (last instanceof _code2.default) {
                    var _newlineIndex = last.newlineIndex(0);
                    if (_newlineIndex > -1) {
                      last.split(_newlineIndex + 1);
                    }
                  }
                  var ref = last.children.head instanceof _break2.default ? null : last.children.head;
                  first.moveChildren(last, ref);
                  first.remove();
                }
                this.optimize();
              }
            }, {
              key: "enable",
              value: function enable() {
                var enabled = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
                this.domNode.setAttribute("contenteditable", enabled);
              }
            }, {
              key: "formatAt",
              value: function formatAt(index28, length, format, value2) {
                if (this.whitelist != null && !this.whitelist[format])
                  return;
                _get(Scroll2.prototype.__proto__ || Object.getPrototypeOf(Scroll2.prototype), "formatAt", this).call(this, index28, length, format, value2);
                this.optimize();
              }
            }, {
              key: "insertAt",
              value: function insertAt(index28, value2, def) {
                if (def != null && this.whitelist != null && !this.whitelist[value2])
                  return;
                if (index28 >= this.length()) {
                  if (def == null || _parchment2.default.query(value2, _parchment2.default.Scope.BLOCK) == null) {
                    var blot = _parchment2.default.create(this.statics.defaultChild);
                    this.appendChild(blot);
                    if (def == null && value2.endsWith("\n")) {
                      value2 = value2.slice(0, -1);
                    }
                    blot.insertAt(0, value2, def);
                  } else {
                    var embed = _parchment2.default.create(value2, def);
                    this.appendChild(embed);
                  }
                } else {
                  _get(Scroll2.prototype.__proto__ || Object.getPrototypeOf(Scroll2.prototype), "insertAt", this).call(this, index28, value2, def);
                }
                this.optimize();
              }
            }, {
              key: "insertBefore",
              value: function insertBefore(blot, ref) {
                if (blot.statics.scope === _parchment2.default.Scope.INLINE_BLOT) {
                  var wrapper = _parchment2.default.create(this.statics.defaultChild);
                  wrapper.appendChild(blot);
                  blot = wrapper;
                }
                _get(Scroll2.prototype.__proto__ || Object.getPrototypeOf(Scroll2.prototype), "insertBefore", this).call(this, blot, ref);
              }
            }, {
              key: "leaf",
              value: function leaf(index28) {
                return this.path(index28).pop() || [null, -1];
              }
            }, {
              key: "line",
              value: function line(index28) {
                if (index28 === this.length()) {
                  return this.line(index28 - 1);
                }
                return this.descendant(isLine, index28);
              }
            }, {
              key: "lines",
              value: function lines() {
                var index28 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
                var length = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Number.MAX_VALUE;
                var getLines = function getLines2(blot, index29, length2) {
                  var lines2 = [], lengthLeft = length2;
                  blot.children.forEachAt(index29, length2, function(child, index30, length3) {
                    if (isLine(child)) {
                      lines2.push(child);
                    } else if (child instanceof _parchment2.default.Container) {
                      lines2 = lines2.concat(getLines2(child, index30, lengthLeft));
                    }
                    lengthLeft -= length3;
                  });
                  return lines2;
                };
                return getLines(this, index28, length);
              }
            }, {
              key: "optimize",
              value: function optimize() {
                var mutations = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
                var context = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                if (this.batch === true)
                  return;
                _get(Scroll2.prototype.__proto__ || Object.getPrototypeOf(Scroll2.prototype), "optimize", this).call(this, mutations, context);
                if (mutations.length > 0) {
                  this.emitter.emit(_emitter2.default.events.SCROLL_OPTIMIZE, mutations, context);
                }
              }
            }, {
              key: "path",
              value: function path(index28) {
                return _get(Scroll2.prototype.__proto__ || Object.getPrototypeOf(Scroll2.prototype), "path", this).call(this, index28).slice(1);
              }
            }, {
              key: "update",
              value: function update2(mutations) {
                if (this.batch === true)
                  return;
                var source = _emitter2.default.sources.USER;
                if (typeof mutations === "string") {
                  source = mutations;
                }
                if (!Array.isArray(mutations)) {
                  mutations = this.observer.takeRecords();
                }
                if (mutations.length > 0) {
                  this.emitter.emit(_emitter2.default.events.SCROLL_BEFORE_UPDATE, source, mutations);
                }
                _get(Scroll2.prototype.__proto__ || Object.getPrototypeOf(Scroll2.prototype), "update", this).call(this, mutations.concat([]));
                if (mutations.length > 0) {
                  this.emitter.emit(_emitter2.default.events.SCROLL_UPDATE, source, mutations);
                }
              }
            }]);
            return Scroll2;
          }(_parchment2.default.Scroll);
          Scroll.blotName = "scroll";
          Scroll.className = "ql-editor";
          Scroll.tagName = "DIV";
          Scroll.defaultChild = "block";
          Scroll.allowedChildren = [_block2.default, _block.BlockEmbed, _container2.default];
          exports2.default = Scroll;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          exports2.SHORTKEY = exports2.default = void 0;
          var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
            return typeof obj;
          } : function(obj) {
            return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
          };
          var _slicedToArray = function() {
            function sliceIterator(arr, i2) {
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = void 0;
              try {
                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                  _arr.push(_s.value);
                  if (i2 && _arr.length === i2)
                    break;
                }
              } catch (err) {
                _d = true;
                _e = err;
              } finally {
                try {
                  if (!_n && _i["return"])
                    _i["return"]();
                } finally {
                  if (_d)
                    throw _e;
                }
              }
              return _arr;
            }
            return function(arr, i2) {
              if (Array.isArray(arr)) {
                return arr;
              } else if (Symbol.iterator in Object(arr)) {
                return sliceIterator(arr, i2);
              } else {
                throw new TypeError("Invalid attempt to destructure non-iterable instance");
              }
            };
          }();
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          var _clone = __webpack_require__(21);
          var _clone2 = _interopRequireDefault(_clone);
          var _deepEqual = __webpack_require__(11);
          var _deepEqual2 = _interopRequireDefault(_deepEqual);
          var _extend = __webpack_require__(3);
          var _extend2 = _interopRequireDefault(_extend);
          var _quillDelta = __webpack_require__(2);
          var _quillDelta2 = _interopRequireDefault(_quillDelta);
          var _op = __webpack_require__(20);
          var _op2 = _interopRequireDefault(_op);
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _quill = __webpack_require__(5);
          var _quill2 = _interopRequireDefault(_quill);
          var _logger = __webpack_require__(10);
          var _logger2 = _interopRequireDefault(_logger);
          var _module = __webpack_require__(9);
          var _module2 = _interopRequireDefault(_module);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _defineProperty(obj, key2, value2) {
            if (key2 in obj) {
              Object.defineProperty(obj, key2, { value: value2, enumerable: true, configurable: true, writable: true });
            } else {
              obj[key2] = value2;
            }
            return obj;
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var debug = (0, _logger2.default)("quill:keyboard");
          var SHORTKEY = /Mac/i.test(navigator.platform) ? "metaKey" : "ctrlKey";
          var Keyboard = function(_Module) {
            _inherits(Keyboard2, _Module);
            _createClass(Keyboard2, null, [{
              key: "match",
              value: function match(evt, binding) {
                binding = normalize(binding);
                if (["altKey", "ctrlKey", "metaKey", "shiftKey"].some(function(key2) {
                  return !!binding[key2] !== evt[key2] && binding[key2] !== null;
                })) {
                  return false;
                }
                return binding.key === (evt.which || evt.keyCode);
              }
            }]);
            function Keyboard2(quill, options2) {
              _classCallCheck(this, Keyboard2);
              var _this = _possibleConstructorReturn(this, (Keyboard2.__proto__ || Object.getPrototypeOf(Keyboard2)).call(this, quill, options2));
              _this.bindings = {};
              Object.keys(_this.options.bindings).forEach(function(name) {
                if (name === "list autofill" && quill.scroll.whitelist != null && !quill.scroll.whitelist["list"]) {
                  return;
                }
                if (_this.options.bindings[name]) {
                  _this.addBinding(_this.options.bindings[name]);
                }
              });
              _this.addBinding({ key: Keyboard2.keys.ENTER, shiftKey: null }, handleEnter);
              _this.addBinding({ key: Keyboard2.keys.ENTER, metaKey: null, ctrlKey: null, altKey: null }, function() {
              });
              if (/Firefox/i.test(navigator.userAgent)) {
                _this.addBinding({ key: Keyboard2.keys.BACKSPACE }, { collapsed: true }, handleBackspace);
                _this.addBinding({ key: Keyboard2.keys.DELETE }, { collapsed: true }, handleDelete);
              } else {
                _this.addBinding({ key: Keyboard2.keys.BACKSPACE }, { collapsed: true, prefix: /^.?$/ }, handleBackspace);
                _this.addBinding({ key: Keyboard2.keys.DELETE }, { collapsed: true, suffix: /^.?$/ }, handleDelete);
              }
              _this.addBinding({ key: Keyboard2.keys.BACKSPACE }, { collapsed: false }, handleDeleteRange);
              _this.addBinding({ key: Keyboard2.keys.DELETE }, { collapsed: false }, handleDeleteRange);
              _this.addBinding({ key: Keyboard2.keys.BACKSPACE, altKey: null, ctrlKey: null, metaKey: null, shiftKey: null }, { collapsed: true, offset: 0 }, handleBackspace);
              _this.listen();
              return _this;
            }
            _createClass(Keyboard2, [{
              key: "addBinding",
              value: function addBinding(key2) {
                var context = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                var handler = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
                var binding = normalize(key2);
                if (binding == null || binding.key == null) {
                  return debug.warn("Attempted to add invalid keyboard binding", binding);
                }
                if (typeof context === "function") {
                  context = { handler: context };
                }
                if (typeof handler === "function") {
                  handler = { handler };
                }
                binding = (0, _extend2.default)(binding, context, handler);
                this.bindings[binding.key] = this.bindings[binding.key] || [];
                this.bindings[binding.key].push(binding);
              }
            }, {
              key: "listen",
              value: function listen() {
                var _this2 = this;
                this.quill.root.addEventListener("keydown", function(evt) {
                  if (evt.defaultPrevented)
                    return;
                  var which = evt.which || evt.keyCode;
                  var bindings = (_this2.bindings[which] || []).filter(function(binding) {
                    return Keyboard2.match(evt, binding);
                  });
                  if (bindings.length === 0)
                    return;
                  var range = _this2.quill.getSelection();
                  if (range == null || !_this2.quill.hasFocus())
                    return;
                  var _quill$getLine = _this2.quill.getLine(range.index), _quill$getLine2 = _slicedToArray(_quill$getLine, 2), line = _quill$getLine2[0], offset = _quill$getLine2[1];
                  var _quill$getLeaf = _this2.quill.getLeaf(range.index), _quill$getLeaf2 = _slicedToArray(_quill$getLeaf, 2), leafStart = _quill$getLeaf2[0], offsetStart = _quill$getLeaf2[1];
                  var _ref = range.length === 0 ? [leafStart, offsetStart] : _this2.quill.getLeaf(range.index + range.length), _ref2 = _slicedToArray(_ref, 2), leafEnd = _ref2[0], offsetEnd = _ref2[1];
                  var prefixText = leafStart instanceof _parchment2.default.Text ? leafStart.value().slice(0, offsetStart) : "";
                  var suffixText = leafEnd instanceof _parchment2.default.Text ? leafEnd.value().slice(offsetEnd) : "";
                  var curContext = {
                    collapsed: range.length === 0,
                    empty: range.length === 0 && line.length() <= 1,
                    format: _this2.quill.getFormat(range),
                    offset,
                    prefix: prefixText,
                    suffix: suffixText
                  };
                  var prevented = bindings.some(function(binding) {
                    if (binding.collapsed != null && binding.collapsed !== curContext.collapsed)
                      return false;
                    if (binding.empty != null && binding.empty !== curContext.empty)
                      return false;
                    if (binding.offset != null && binding.offset !== curContext.offset)
                      return false;
                    if (Array.isArray(binding.format)) {
                      if (binding.format.every(function(name) {
                        return curContext.format[name] == null;
                      })) {
                        return false;
                      }
                    } else if (_typeof(binding.format) === "object") {
                      if (!Object.keys(binding.format).every(function(name) {
                        if (binding.format[name] === true)
                          return curContext.format[name] != null;
                        if (binding.format[name] === false)
                          return curContext.format[name] == null;
                        return (0, _deepEqual2.default)(binding.format[name], curContext.format[name]);
                      })) {
                        return false;
                      }
                    }
                    if (binding.prefix != null && !binding.prefix.test(curContext.prefix))
                      return false;
                    if (binding.suffix != null && !binding.suffix.test(curContext.suffix))
                      return false;
                    return binding.handler.call(_this2, range, curContext) !== true;
                  });
                  if (prevented) {
                    evt.preventDefault();
                  }
                });
              }
            }]);
            return Keyboard2;
          }(_module2.default);
          Keyboard.keys = {
            BACKSPACE: 8,
            TAB: 9,
            ENTER: 13,
            ESCAPE: 27,
            LEFT: 37,
            UP: 38,
            RIGHT: 39,
            DOWN: 40,
            DELETE: 46
          };
          Keyboard.DEFAULTS = {
            bindings: {
              "bold": makeFormatHandler("bold"),
              "italic": makeFormatHandler("italic"),
              "underline": makeFormatHandler("underline"),
              "indent": {
                key: Keyboard.keys.TAB,
                format: ["blockquote", "indent", "list"],
                handler: function handler(range, context) {
                  if (context.collapsed && context.offset !== 0)
                    return true;
                  this.quill.format("indent", "+1", _quill2.default.sources.USER);
                }
              },
              "outdent": {
                key: Keyboard.keys.TAB,
                shiftKey: true,
                format: ["blockquote", "indent", "list"],
                handler: function handler(range, context) {
                  if (context.collapsed && context.offset !== 0)
                    return true;
                  this.quill.format("indent", "-1", _quill2.default.sources.USER);
                }
              },
              "outdent backspace": {
                key: Keyboard.keys.BACKSPACE,
                collapsed: true,
                shiftKey: null,
                metaKey: null,
                ctrlKey: null,
                altKey: null,
                format: ["indent", "list"],
                offset: 0,
                handler: function handler(range, context) {
                  if (context.format.indent != null) {
                    this.quill.format("indent", "-1", _quill2.default.sources.USER);
                  } else if (context.format.list != null) {
                    this.quill.format("list", false, _quill2.default.sources.USER);
                  }
                }
              },
              "indent code-block": makeCodeBlockHandler(true),
              "outdent code-block": makeCodeBlockHandler(false),
              "remove tab": {
                key: Keyboard.keys.TAB,
                shiftKey: true,
                collapsed: true,
                prefix: /\t$/,
                handler: function handler(range) {
                  this.quill.deleteText(range.index - 1, 1, _quill2.default.sources.USER);
                }
              },
              "tab": {
                key: Keyboard.keys.TAB,
                handler: function handler(range) {
                  this.quill.history.cutoff();
                  var delta = new _quillDelta2.default().retain(range.index).delete(range.length).insert("	");
                  this.quill.updateContents(delta, _quill2.default.sources.USER);
                  this.quill.history.cutoff();
                  this.quill.setSelection(range.index + 1, _quill2.default.sources.SILENT);
                }
              },
              "list empty enter": {
                key: Keyboard.keys.ENTER,
                collapsed: true,
                format: ["list"],
                empty: true,
                handler: function handler(range, context) {
                  this.quill.format("list", false, _quill2.default.sources.USER);
                  if (context.format.indent) {
                    this.quill.format("indent", false, _quill2.default.sources.USER);
                  }
                }
              },
              "checklist enter": {
                key: Keyboard.keys.ENTER,
                collapsed: true,
                format: { list: "checked" },
                handler: function handler(range) {
                  var _quill$getLine3 = this.quill.getLine(range.index), _quill$getLine4 = _slicedToArray(_quill$getLine3, 2), line = _quill$getLine4[0], offset = _quill$getLine4[1];
                  var formats = (0, _extend2.default)({}, line.formats(), { list: "checked" });
                  var delta = new _quillDelta2.default().retain(range.index).insert("\n", formats).retain(line.length() - offset - 1).retain(1, { list: "unchecked" });
                  this.quill.updateContents(delta, _quill2.default.sources.USER);
                  this.quill.setSelection(range.index + 1, _quill2.default.sources.SILENT);
                  this.quill.scrollIntoView();
                }
              },
              "header enter": {
                key: Keyboard.keys.ENTER,
                collapsed: true,
                format: ["header"],
                suffix: /^$/,
                handler: function handler(range, context) {
                  var _quill$getLine5 = this.quill.getLine(range.index), _quill$getLine6 = _slicedToArray(_quill$getLine5, 2), line = _quill$getLine6[0], offset = _quill$getLine6[1];
                  var delta = new _quillDelta2.default().retain(range.index).insert("\n", context.format).retain(line.length() - offset - 1).retain(1, { header: null });
                  this.quill.updateContents(delta, _quill2.default.sources.USER);
                  this.quill.setSelection(range.index + 1, _quill2.default.sources.SILENT);
                  this.quill.scrollIntoView();
                }
              },
              "list autofill": {
                key: " ",
                collapsed: true,
                format: { list: false },
                prefix: /^\s*?(\d+\.|-|\*|\[ ?\]|\[x\])$/,
                handler: function handler(range, context) {
                  var length = context.prefix.length;
                  var _quill$getLine7 = this.quill.getLine(range.index), _quill$getLine8 = _slicedToArray(_quill$getLine7, 2), line = _quill$getLine8[0], offset = _quill$getLine8[1];
                  if (offset > length)
                    return true;
                  var value2 = void 0;
                  switch (context.prefix.trim()) {
                    case "[]":
                    case "[ ]":
                      value2 = "unchecked";
                      break;
                    case "[x]":
                      value2 = "checked";
                      break;
                    case "-":
                    case "*":
                      value2 = "bullet";
                      break;
                    default:
                      value2 = "ordered";
                  }
                  this.quill.insertText(range.index, " ", _quill2.default.sources.USER);
                  this.quill.history.cutoff();
                  var delta = new _quillDelta2.default().retain(range.index - offset).delete(length + 1).retain(line.length() - 2 - offset).retain(1, { list: value2 });
                  this.quill.updateContents(delta, _quill2.default.sources.USER);
                  this.quill.history.cutoff();
                  this.quill.setSelection(range.index - length, _quill2.default.sources.SILENT);
                }
              },
              "code exit": {
                key: Keyboard.keys.ENTER,
                collapsed: true,
                format: ["code-block"],
                prefix: /\n\n$/,
                suffix: /^\s+$/,
                handler: function handler(range) {
                  var _quill$getLine9 = this.quill.getLine(range.index), _quill$getLine10 = _slicedToArray(_quill$getLine9, 2), line = _quill$getLine10[0], offset = _quill$getLine10[1];
                  var delta = new _quillDelta2.default().retain(range.index + line.length() - offset - 2).retain(1, { "code-block": null }).delete(1);
                  this.quill.updateContents(delta, _quill2.default.sources.USER);
                }
              },
              "embed left": makeEmbedArrowHandler(Keyboard.keys.LEFT, false),
              "embed left shift": makeEmbedArrowHandler(Keyboard.keys.LEFT, true),
              "embed right": makeEmbedArrowHandler(Keyboard.keys.RIGHT, false),
              "embed right shift": makeEmbedArrowHandler(Keyboard.keys.RIGHT, true)
            }
          };
          function makeEmbedArrowHandler(key2, shiftKey) {
            var _ref3;
            var where = key2 === Keyboard.keys.LEFT ? "prefix" : "suffix";
            return _ref3 = {
              key: key2,
              shiftKey,
              altKey: null
            }, _defineProperty(_ref3, where, /^$/), _defineProperty(_ref3, "handler", function handler(range) {
              var index28 = range.index;
              if (key2 === Keyboard.keys.RIGHT) {
                index28 += range.length + 1;
              }
              var _quill$getLeaf3 = this.quill.getLeaf(index28), _quill$getLeaf4 = _slicedToArray(_quill$getLeaf3, 1), leaf = _quill$getLeaf4[0];
              if (!(leaf instanceof _parchment2.default.Embed))
                return true;
              if (key2 === Keyboard.keys.LEFT) {
                if (shiftKey) {
                  this.quill.setSelection(range.index - 1, range.length + 1, _quill2.default.sources.USER);
                } else {
                  this.quill.setSelection(range.index - 1, _quill2.default.sources.USER);
                }
              } else {
                if (shiftKey) {
                  this.quill.setSelection(range.index, range.length + 1, _quill2.default.sources.USER);
                } else {
                  this.quill.setSelection(range.index + range.length + 1, _quill2.default.sources.USER);
                }
              }
              return false;
            }), _ref3;
          }
          function handleBackspace(range, context) {
            if (range.index === 0 || this.quill.getLength() <= 1)
              return;
            var _quill$getLine11 = this.quill.getLine(range.index), _quill$getLine12 = _slicedToArray(_quill$getLine11, 1), line = _quill$getLine12[0];
            var formats = {};
            if (context.offset === 0) {
              var _quill$getLine13 = this.quill.getLine(range.index - 1), _quill$getLine14 = _slicedToArray(_quill$getLine13, 1), prev = _quill$getLine14[0];
              if (prev != null && prev.length() > 1) {
                var curFormats = line.formats();
                var prevFormats = this.quill.getFormat(range.index - 1, 1);
                formats = _op2.default.attributes.diff(curFormats, prevFormats) || {};
              }
            }
            var length = /[\uD800-\uDBFF][\uDC00-\uDFFF]$/.test(context.prefix) ? 2 : 1;
            this.quill.deleteText(range.index - length, length, _quill2.default.sources.USER);
            if (Object.keys(formats).length > 0) {
              this.quill.formatLine(range.index - length, length, formats, _quill2.default.sources.USER);
            }
            this.quill.focus();
          }
          function handleDelete(range, context) {
            var length = /^[\uD800-\uDBFF][\uDC00-\uDFFF]/.test(context.suffix) ? 2 : 1;
            if (range.index >= this.quill.getLength() - length)
              return;
            var formats = {}, nextLength = 0;
            var _quill$getLine15 = this.quill.getLine(range.index), _quill$getLine16 = _slicedToArray(_quill$getLine15, 1), line = _quill$getLine16[0];
            if (context.offset >= line.length() - 1) {
              var _quill$getLine17 = this.quill.getLine(range.index + 1), _quill$getLine18 = _slicedToArray(_quill$getLine17, 1), next = _quill$getLine18[0];
              if (next) {
                var curFormats = line.formats();
                var nextFormats = this.quill.getFormat(range.index, 1);
                formats = _op2.default.attributes.diff(curFormats, nextFormats) || {};
                nextLength = next.length();
              }
            }
            this.quill.deleteText(range.index, length, _quill2.default.sources.USER);
            if (Object.keys(formats).length > 0) {
              this.quill.formatLine(range.index + nextLength - 1, length, formats, _quill2.default.sources.USER);
            }
          }
          function handleDeleteRange(range) {
            var lines = this.quill.getLines(range);
            var formats = {};
            if (lines.length > 1) {
              var firstFormats = lines[0].formats();
              var lastFormats = lines[lines.length - 1].formats();
              formats = _op2.default.attributes.diff(lastFormats, firstFormats) || {};
            }
            this.quill.deleteText(range, _quill2.default.sources.USER);
            if (Object.keys(formats).length > 0) {
              this.quill.formatLine(range.index, 1, formats, _quill2.default.sources.USER);
            }
            this.quill.setSelection(range.index, _quill2.default.sources.SILENT);
            this.quill.focus();
          }
          function handleEnter(range, context) {
            var _this3 = this;
            if (range.length > 0) {
              this.quill.scroll.deleteAt(range.index, range.length);
            }
            var lineFormats = Object.keys(context.format).reduce(function(lineFormats2, format) {
              if (_parchment2.default.query(format, _parchment2.default.Scope.BLOCK) && !Array.isArray(context.format[format])) {
                lineFormats2[format] = context.format[format];
              }
              return lineFormats2;
            }, {});
            this.quill.insertText(range.index, "\n", lineFormats, _quill2.default.sources.USER);
            this.quill.setSelection(range.index + 1, _quill2.default.sources.SILENT);
            this.quill.focus();
            Object.keys(context.format).forEach(function(name) {
              if (lineFormats[name] != null)
                return;
              if (Array.isArray(context.format[name]))
                return;
              if (name === "link")
                return;
              _this3.quill.format(name, context.format[name], _quill2.default.sources.USER);
            });
          }
          function makeCodeBlockHandler(indent) {
            return {
              key: Keyboard.keys.TAB,
              shiftKey: !indent,
              format: { "code-block": true },
              handler: function handler(range) {
                var CodeBlock = _parchment2.default.query("code-block");
                var index28 = range.index, length = range.length;
                var _quill$scroll$descend = this.quill.scroll.descendant(CodeBlock, index28), _quill$scroll$descend2 = _slicedToArray(_quill$scroll$descend, 2), block = _quill$scroll$descend2[0], offset = _quill$scroll$descend2[1];
                if (block == null)
                  return;
                var scrollIndex = this.quill.getIndex(block);
                var start = block.newlineIndex(offset, true) + 1;
                var end = block.newlineIndex(scrollIndex + offset + length);
                var lines = block.domNode.textContent.slice(start, end).split("\n");
                offset = 0;
                lines.forEach(function(line, i2) {
                  if (indent) {
                    block.insertAt(start + offset, CodeBlock.TAB);
                    offset += CodeBlock.TAB.length;
                    if (i2 === 0) {
                      index28 += CodeBlock.TAB.length;
                    } else {
                      length += CodeBlock.TAB.length;
                    }
                  } else if (line.startsWith(CodeBlock.TAB)) {
                    block.deleteAt(start + offset, CodeBlock.TAB.length);
                    offset -= CodeBlock.TAB.length;
                    if (i2 === 0) {
                      index28 -= CodeBlock.TAB.length;
                    } else {
                      length -= CodeBlock.TAB.length;
                    }
                  }
                  offset += line.length + 1;
                });
                this.quill.update(_quill2.default.sources.USER);
                this.quill.setSelection(index28, length, _quill2.default.sources.SILENT);
              }
            };
          }
          function makeFormatHandler(format) {
            return {
              key: format[0].toUpperCase(),
              shortKey: true,
              handler: function handler(range, context) {
                this.quill.format(format, !context.format[format], _quill2.default.sources.USER);
              }
            };
          }
          function normalize(binding) {
            if (typeof binding === "string" || typeof binding === "number") {
              return normalize({ key: binding });
            }
            if ((typeof binding === "undefined" ? "undefined" : _typeof(binding)) === "object") {
              binding = (0, _clone2.default)(binding, false);
            }
            if (typeof binding.key === "string") {
              if (Keyboard.keys[binding.key.toUpperCase()] != null) {
                binding.key = Keyboard.keys[binding.key.toUpperCase()];
              } else if (binding.key.length === 1) {
                binding.key = binding.key.toUpperCase().charCodeAt(0);
              } else {
                return null;
              }
            }
            if (binding.shortKey) {
              binding[SHORTKEY] = binding.shortKey;
              delete binding.shortKey;
            }
            return binding;
          }
          exports2.default = Keyboard;
          exports2.SHORTKEY = SHORTKEY;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          var _slicedToArray = function() {
            function sliceIterator(arr, i2) {
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = void 0;
              try {
                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                  _arr.push(_s.value);
                  if (i2 && _arr.length === i2)
                    break;
                }
              } catch (err) {
                _d = true;
                _e = err;
              } finally {
                try {
                  if (!_n && _i["return"])
                    _i["return"]();
                } finally {
                  if (_d)
                    throw _e;
                }
              }
              return _arr;
            }
            return function(arr, i2) {
              if (Array.isArray(arr)) {
                return arr;
              } else if (Symbol.iterator in Object(arr)) {
                return sliceIterator(arr, i2);
              } else {
                throw new TypeError("Invalid attempt to destructure non-iterable instance");
              }
            };
          }();
          var _get = function get3(object, property, receiver) {
            if (object === null)
              object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get3(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _text = __webpack_require__(7);
          var _text2 = _interopRequireDefault(_text);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var Cursor = function(_Parchment$Embed) {
            _inherits(Cursor2, _Parchment$Embed);
            _createClass(Cursor2, null, [{
              key: "value",
              value: function value2() {
                return void 0;
              }
            }]);
            function Cursor2(domNode, selection) {
              _classCallCheck(this, Cursor2);
              var _this = _possibleConstructorReturn(this, (Cursor2.__proto__ || Object.getPrototypeOf(Cursor2)).call(this, domNode));
              _this.selection = selection;
              _this.textNode = document.createTextNode(Cursor2.CONTENTS);
              _this.domNode.appendChild(_this.textNode);
              _this._length = 0;
              return _this;
            }
            _createClass(Cursor2, [{
              key: "detach",
              value: function detach() {
                if (this.parent != null)
                  this.parent.removeChild(this);
              }
            }, {
              key: "format",
              value: function format(name, value2) {
                if (this._length !== 0) {
                  return _get(Cursor2.prototype.__proto__ || Object.getPrototypeOf(Cursor2.prototype), "format", this).call(this, name, value2);
                }
                var target = this, index28 = 0;
                while (target != null && target.statics.scope !== _parchment2.default.Scope.BLOCK_BLOT) {
                  index28 += target.offset(target.parent);
                  target = target.parent;
                }
                if (target != null) {
                  this._length = Cursor2.CONTENTS.length;
                  target.optimize();
                  target.formatAt(index28, Cursor2.CONTENTS.length, name, value2);
                  this._length = 0;
                }
              }
            }, {
              key: "index",
              value: function index28(node, offset) {
                if (node === this.textNode)
                  return 0;
                return _get(Cursor2.prototype.__proto__ || Object.getPrototypeOf(Cursor2.prototype), "index", this).call(this, node, offset);
              }
            }, {
              key: "length",
              value: function length() {
                return this._length;
              }
            }, {
              key: "position",
              value: function position() {
                return [this.textNode, this.textNode.data.length];
              }
            }, {
              key: "remove",
              value: function remove2() {
                _get(Cursor2.prototype.__proto__ || Object.getPrototypeOf(Cursor2.prototype), "remove", this).call(this);
                this.parent = null;
              }
            }, {
              key: "restore",
              value: function restore() {
                if (this.selection.composing || this.parent == null)
                  return;
                var textNode = this.textNode;
                var range = this.selection.getNativeRange();
                var restoreText = void 0, start = void 0, end = void 0;
                if (range != null && range.start.node === textNode && range.end.node === textNode) {
                  var _ref = [textNode, range.start.offset, range.end.offset];
                  restoreText = _ref[0];
                  start = _ref[1];
                  end = _ref[2];
                }
                while (this.domNode.lastChild != null && this.domNode.lastChild !== this.textNode) {
                  this.domNode.parentNode.insertBefore(this.domNode.lastChild, this.domNode);
                }
                if (this.textNode.data !== Cursor2.CONTENTS) {
                  var text2 = this.textNode.data.split(Cursor2.CONTENTS).join("");
                  if (this.next instanceof _text2.default) {
                    restoreText = this.next.domNode;
                    this.next.insertAt(0, text2);
                    this.textNode.data = Cursor2.CONTENTS;
                  } else {
                    this.textNode.data = text2;
                    this.parent.insertBefore(_parchment2.default.create(this.textNode), this);
                    this.textNode = document.createTextNode(Cursor2.CONTENTS);
                    this.domNode.appendChild(this.textNode);
                  }
                }
                this.remove();
                if (start != null) {
                  var _map = [start, end].map(function(offset) {
                    return Math.max(0, Math.min(restoreText.data.length, offset - 1));
                  });
                  var _map2 = _slicedToArray(_map, 2);
                  start = _map2[0];
                  end = _map2[1];
                  return {
                    startNode: restoreText,
                    startOffset: start,
                    endNode: restoreText,
                    endOffset: end
                  };
                }
              }
            }, {
              key: "update",
              value: function update2(mutations, context) {
                var _this2 = this;
                if (mutations.some(function(mutation) {
                  return mutation.type === "characterData" && mutation.target === _this2.textNode;
                })) {
                  var range = this.restore();
                  if (range)
                    context.range = range;
                }
              }
            }, {
              key: "value",
              value: function value2() {
                return "";
              }
            }]);
            return Cursor2;
          }(_parchment2.default.Embed);
          Cursor.blotName = "cursor";
          Cursor.className = "ql-cursor";
          Cursor.tagName = "span";
          Cursor.CONTENTS = "\uFEFF";
          exports2.default = Cursor;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _block = __webpack_require__(4);
          var _block2 = _interopRequireDefault(_block);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var Container2 = function(_Parchment$Container) {
            _inherits(Container3, _Parchment$Container);
            function Container3() {
              _classCallCheck(this, Container3);
              return _possibleConstructorReturn(this, (Container3.__proto__ || Object.getPrototypeOf(Container3)).apply(this, arguments));
            }
            return Container3;
          }(_parchment2.default.Container);
          Container2.allowedChildren = [_block2.default, _block.BlockEmbed, Container2];
          exports2.default = Container2;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          exports2.ColorStyle = exports2.ColorClass = exports2.ColorAttributor = void 0;
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          var _get = function get3(object, property, receiver) {
            if (object === null)
              object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get3(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var ColorAttributor = function(_Parchment$Attributor) {
            _inherits(ColorAttributor2, _Parchment$Attributor);
            function ColorAttributor2() {
              _classCallCheck(this, ColorAttributor2);
              return _possibleConstructorReturn(this, (ColorAttributor2.__proto__ || Object.getPrototypeOf(ColorAttributor2)).apply(this, arguments));
            }
            _createClass(ColorAttributor2, [{
              key: "value",
              value: function value2(domNode) {
                var value3 = _get(ColorAttributor2.prototype.__proto__ || Object.getPrototypeOf(ColorAttributor2.prototype), "value", this).call(this, domNode);
                if (!value3.startsWith("rgb("))
                  return value3;
                value3 = value3.replace(/^[^\d]+/, "").replace(/[^\d]+$/, "");
                return "#" + value3.split(",").map(function(component28) {
                  return ("00" + parseInt(component28).toString(16)).slice(-2);
                }).join("");
              }
            }]);
            return ColorAttributor2;
          }(_parchment2.default.Attributor.Style);
          var ColorClass = new _parchment2.default.Attributor.Class("color", "ql-color", {
            scope: _parchment2.default.Scope.INLINE
          });
          var ColorStyle = new ColorAttributor("color", "color", {
            scope: _parchment2.default.Scope.INLINE
          });
          exports2.ColorAttributor = ColorAttributor;
          exports2.ColorClass = ColorClass;
          exports2.ColorStyle = ColorStyle;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          exports2.sanitize = exports2.default = void 0;
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          var _get = function get3(object, property, receiver) {
            if (object === null)
              object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get3(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _inline = __webpack_require__(6);
          var _inline2 = _interopRequireDefault(_inline);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var Link = function(_Inline) {
            _inherits(Link2, _Inline);
            function Link2() {
              _classCallCheck(this, Link2);
              return _possibleConstructorReturn(this, (Link2.__proto__ || Object.getPrototypeOf(Link2)).apply(this, arguments));
            }
            _createClass(Link2, [{
              key: "format",
              value: function format(name, value2) {
                if (name !== this.statics.blotName || !value2)
                  return _get(Link2.prototype.__proto__ || Object.getPrototypeOf(Link2.prototype), "format", this).call(this, name, value2);
                value2 = this.constructor.sanitize(value2);
                this.domNode.setAttribute("href", value2);
              }
            }], [{
              key: "create",
              value: function create(value2) {
                var node = _get(Link2.__proto__ || Object.getPrototypeOf(Link2), "create", this).call(this, value2);
                value2 = this.sanitize(value2);
                node.setAttribute("href", value2);
                node.setAttribute("rel", "noopener noreferrer");
                node.setAttribute("target", "_blank");
                return node;
              }
            }, {
              key: "formats",
              value: function formats(domNode) {
                return domNode.getAttribute("href");
              }
            }, {
              key: "sanitize",
              value: function sanitize(url) {
                return _sanitize(url, this.PROTOCOL_WHITELIST) ? url : this.SANITIZED_URL;
              }
            }]);
            return Link2;
          }(_inline2.default);
          Link.blotName = "link";
          Link.tagName = "A";
          Link.SANITIZED_URL = "about:blank";
          Link.PROTOCOL_WHITELIST = ["http", "https", "mailto", "tel"];
          function _sanitize(url, protocols) {
            var anchor = document.createElement("a");
            anchor.href = url;
            var protocol = anchor.href.slice(0, anchor.href.indexOf(":"));
            return protocols.indexOf(protocol) > -1;
          }
          exports2.default = Link;
          exports2.sanitize = _sanitize;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
            return typeof obj;
          } : function(obj) {
            return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
          };
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          var _keyboard = __webpack_require__(23);
          var _keyboard2 = _interopRequireDefault(_keyboard);
          var _dropdown = __webpack_require__(107);
          var _dropdown2 = _interopRequireDefault(_dropdown);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          var optionsCounter = 0;
          function toggleAriaAttribute(element, attribute) {
            element.setAttribute(attribute, !(element.getAttribute(attribute) === "true"));
          }
          var Picker = function() {
            function Picker2(select) {
              var _this = this;
              _classCallCheck(this, Picker2);
              this.select = select;
              this.container = document.createElement("span");
              this.buildPicker();
              this.select.style.display = "none";
              this.select.parentNode.insertBefore(this.container, this.select);
              this.label.addEventListener("mousedown", function() {
                _this.togglePicker();
              });
              this.label.addEventListener("keydown", function(event) {
                switch (event.keyCode) {
                  case _keyboard2.default.keys.ENTER:
                    _this.togglePicker();
                    break;
                  case _keyboard2.default.keys.ESCAPE:
                    _this.escape();
                    event.preventDefault();
                    break;
                  default:
                }
              });
              this.select.addEventListener("change", this.update.bind(this));
            }
            _createClass(Picker2, [{
              key: "togglePicker",
              value: function togglePicker() {
                this.container.classList.toggle("ql-expanded");
                toggleAriaAttribute(this.label, "aria-expanded");
                toggleAriaAttribute(this.options, "aria-hidden");
              }
            }, {
              key: "buildItem",
              value: function buildItem(option) {
                var _this2 = this;
                var item = document.createElement("span");
                item.tabIndex = "0";
                item.setAttribute("role", "button");
                item.classList.add("ql-picker-item");
                if (option.hasAttribute("value")) {
                  item.setAttribute("data-value", option.getAttribute("value"));
                }
                if (option.textContent) {
                  item.setAttribute("data-label", option.textContent);
                }
                item.addEventListener("click", function() {
                  _this2.selectItem(item, true);
                });
                item.addEventListener("keydown", function(event) {
                  switch (event.keyCode) {
                    case _keyboard2.default.keys.ENTER:
                      _this2.selectItem(item, true);
                      event.preventDefault();
                      break;
                    case _keyboard2.default.keys.ESCAPE:
                      _this2.escape();
                      event.preventDefault();
                      break;
                    default:
                  }
                });
                return item;
              }
            }, {
              key: "buildLabel",
              value: function buildLabel() {
                var label = document.createElement("span");
                label.classList.add("ql-picker-label");
                label.innerHTML = _dropdown2.default;
                label.tabIndex = "0";
                label.setAttribute("role", "button");
                label.setAttribute("aria-expanded", "false");
                this.container.appendChild(label);
                return label;
              }
            }, {
              key: "buildOptions",
              value: function buildOptions() {
                var _this3 = this;
                var options2 = document.createElement("span");
                options2.classList.add("ql-picker-options");
                options2.setAttribute("aria-hidden", "true");
                options2.tabIndex = "-1";
                options2.id = "ql-picker-options-" + optionsCounter;
                optionsCounter += 1;
                this.label.setAttribute("aria-controls", options2.id);
                this.options = options2;
                [].slice.call(this.select.options).forEach(function(option) {
                  var item = _this3.buildItem(option);
                  options2.appendChild(item);
                  if (option.selected === true) {
                    _this3.selectItem(item);
                  }
                });
                this.container.appendChild(options2);
              }
            }, {
              key: "buildPicker",
              value: function buildPicker() {
                var _this4 = this;
                [].slice.call(this.select.attributes).forEach(function(item) {
                  _this4.container.setAttribute(item.name, item.value);
                });
                this.container.classList.add("ql-picker");
                this.label = this.buildLabel();
                this.buildOptions();
              }
            }, {
              key: "escape",
              value: function escape2() {
                var _this5 = this;
                this.close();
                setTimeout(function() {
                  return _this5.label.focus();
                }, 1);
              }
            }, {
              key: "close",
              value: function close() {
                this.container.classList.remove("ql-expanded");
                this.label.setAttribute("aria-expanded", "false");
                this.options.setAttribute("aria-hidden", "true");
              }
            }, {
              key: "selectItem",
              value: function selectItem(item) {
                var trigger = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
                var selected = this.container.querySelector(".ql-selected");
                if (item === selected)
                  return;
                if (selected != null) {
                  selected.classList.remove("ql-selected");
                }
                if (item == null)
                  return;
                item.classList.add("ql-selected");
                this.select.selectedIndex = [].indexOf.call(item.parentNode.children, item);
                if (item.hasAttribute("data-value")) {
                  this.label.setAttribute("data-value", item.getAttribute("data-value"));
                } else {
                  this.label.removeAttribute("data-value");
                }
                if (item.hasAttribute("data-label")) {
                  this.label.setAttribute("data-label", item.getAttribute("data-label"));
                } else {
                  this.label.removeAttribute("data-label");
                }
                if (trigger) {
                  if (typeof Event === "function") {
                    this.select.dispatchEvent(new Event("change"));
                  } else if ((typeof Event === "undefined" ? "undefined" : _typeof(Event)) === "object") {
                    var event = document.createEvent("Event");
                    event.initEvent("change", true, true);
                    this.select.dispatchEvent(event);
                  }
                  this.close();
                }
              }
            }, {
              key: "update",
              value: function update2() {
                var option = void 0;
                if (this.select.selectedIndex > -1) {
                  var item = this.container.querySelector(".ql-picker-options").children[this.select.selectedIndex];
                  option = this.select.options[this.select.selectedIndex];
                  this.selectItem(item);
                } else {
                  this.selectItem(null);
                }
                var isActive = option != null && option !== this.select.querySelector("option[selected]");
                this.label.classList.toggle("ql-active", isActive);
              }
            }]);
            return Picker2;
          }();
          exports2.default = Picker;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _quill = __webpack_require__(5);
          var _quill2 = _interopRequireDefault(_quill);
          var _block = __webpack_require__(4);
          var _block2 = _interopRequireDefault(_block);
          var _break = __webpack_require__(16);
          var _break2 = _interopRequireDefault(_break);
          var _container = __webpack_require__(25);
          var _container2 = _interopRequireDefault(_container);
          var _cursor = __webpack_require__(24);
          var _cursor2 = _interopRequireDefault(_cursor);
          var _embed = __webpack_require__(35);
          var _embed2 = _interopRequireDefault(_embed);
          var _inline = __webpack_require__(6);
          var _inline2 = _interopRequireDefault(_inline);
          var _scroll = __webpack_require__(22);
          var _scroll2 = _interopRequireDefault(_scroll);
          var _text = __webpack_require__(7);
          var _text2 = _interopRequireDefault(_text);
          var _clipboard = __webpack_require__(55);
          var _clipboard2 = _interopRequireDefault(_clipboard);
          var _history = __webpack_require__(42);
          var _history2 = _interopRequireDefault(_history);
          var _keyboard = __webpack_require__(23);
          var _keyboard2 = _interopRequireDefault(_keyboard);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          _quill2.default.register({
            "blots/block": _block2.default,
            "blots/block/embed": _block.BlockEmbed,
            "blots/break": _break2.default,
            "blots/container": _container2.default,
            "blots/cursor": _cursor2.default,
            "blots/embed": _embed2.default,
            "blots/inline": _inline2.default,
            "blots/scroll": _scroll2.default,
            "blots/text": _text2.default,
            "modules/clipboard": _clipboard2.default,
            "modules/history": _history2.default,
            "modules/keyboard": _keyboard2.default
          });
          _parchment2.default.register(_block2.default, _break2.default, _cursor2.default, _inline2.default, _scroll2.default, _text2.default);
          exports2.default = _quill2.default;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", { value: true });
          var Registry = __webpack_require__(1);
          var ShadowBlot = function() {
            function ShadowBlot2(domNode) {
              this.domNode = domNode;
              this.domNode[Registry.DATA_KEY] = { blot: this };
            }
            Object.defineProperty(ShadowBlot2.prototype, "statics", {
              get: function() {
                return this.constructor;
              },
              enumerable: true,
              configurable: true
            });
            ShadowBlot2.create = function(value2) {
              if (this.tagName == null) {
                throw new Registry.ParchmentError("Blot definition missing tagName");
              }
              var node;
              if (Array.isArray(this.tagName)) {
                if (typeof value2 === "string") {
                  value2 = value2.toUpperCase();
                  if (parseInt(value2).toString() === value2) {
                    value2 = parseInt(value2);
                  }
                }
                if (typeof value2 === "number") {
                  node = document.createElement(this.tagName[value2 - 1]);
                } else if (this.tagName.indexOf(value2) > -1) {
                  node = document.createElement(value2);
                } else {
                  node = document.createElement(this.tagName[0]);
                }
              } else {
                node = document.createElement(this.tagName);
              }
              if (this.className) {
                node.classList.add(this.className);
              }
              return node;
            };
            ShadowBlot2.prototype.attach = function() {
              if (this.parent != null) {
                this.scroll = this.parent.scroll;
              }
            };
            ShadowBlot2.prototype.clone = function() {
              var domNode = this.domNode.cloneNode(false);
              return Registry.create(domNode);
            };
            ShadowBlot2.prototype.detach = function() {
              if (this.parent != null)
                this.parent.removeChild(this);
              delete this.domNode[Registry.DATA_KEY];
            };
            ShadowBlot2.prototype.deleteAt = function(index28, length) {
              var blot = this.isolate(index28, length);
              blot.remove();
            };
            ShadowBlot2.prototype.formatAt = function(index28, length, name, value2) {
              var blot = this.isolate(index28, length);
              if (Registry.query(name, Registry.Scope.BLOT) != null && value2) {
                blot.wrap(name, value2);
              } else if (Registry.query(name, Registry.Scope.ATTRIBUTE) != null) {
                var parent = Registry.create(this.statics.scope);
                blot.wrap(parent);
                parent.format(name, value2);
              }
            };
            ShadowBlot2.prototype.insertAt = function(index28, value2, def) {
              var blot = def == null ? Registry.create("text", value2) : Registry.create(value2, def);
              var ref = this.split(index28);
              this.parent.insertBefore(blot, ref);
            };
            ShadowBlot2.prototype.insertInto = function(parentBlot, refBlot) {
              if (refBlot === void 0) {
                refBlot = null;
              }
              if (this.parent != null) {
                this.parent.children.remove(this);
              }
              var refDomNode = null;
              parentBlot.children.insertBefore(this, refBlot);
              if (refBlot != null) {
                refDomNode = refBlot.domNode;
              }
              if (this.domNode.parentNode != parentBlot.domNode || this.domNode.nextSibling != refDomNode) {
                parentBlot.domNode.insertBefore(this.domNode, refDomNode);
              }
              this.parent = parentBlot;
              this.attach();
            };
            ShadowBlot2.prototype.isolate = function(index28, length) {
              var target = this.split(index28);
              target.split(length);
              return target;
            };
            ShadowBlot2.prototype.length = function() {
              return 1;
            };
            ShadowBlot2.prototype.offset = function(root) {
              if (root === void 0) {
                root = this.parent;
              }
              if (this.parent == null || this == root)
                return 0;
              return this.parent.children.offset(this) + this.parent.offset(root);
            };
            ShadowBlot2.prototype.optimize = function(context) {
              if (this.domNode[Registry.DATA_KEY] != null) {
                delete this.domNode[Registry.DATA_KEY].mutations;
              }
            };
            ShadowBlot2.prototype.remove = function() {
              if (this.domNode.parentNode != null) {
                this.domNode.parentNode.removeChild(this.domNode);
              }
              this.detach();
            };
            ShadowBlot2.prototype.replace = function(target) {
              if (target.parent == null)
                return;
              target.parent.insertBefore(this, target.next);
              target.remove();
            };
            ShadowBlot2.prototype.replaceWith = function(name, value2) {
              var replacement = typeof name === "string" ? Registry.create(name, value2) : name;
              replacement.replace(this);
              return replacement;
            };
            ShadowBlot2.prototype.split = function(index28, force) {
              return index28 === 0 ? this : this.next;
            };
            ShadowBlot2.prototype.update = function(mutations, context) {
            };
            ShadowBlot2.prototype.wrap = function(name, value2) {
              var wrapper = typeof name === "string" ? Registry.create(name, value2) : name;
              if (this.parent != null) {
                this.parent.insertBefore(wrapper, this.next);
              }
              wrapper.appendChild(this);
              return wrapper;
            };
            ShadowBlot2.blotName = "abstract";
            return ShadowBlot2;
          }();
          exports2.default = ShadowBlot;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", { value: true });
          var attributor_1 = __webpack_require__(12);
          var class_1 = __webpack_require__(32);
          var style_1 = __webpack_require__(33);
          var Registry = __webpack_require__(1);
          var AttributorStore = function() {
            function AttributorStore2(domNode) {
              this.attributes = {};
              this.domNode = domNode;
              this.build();
            }
            AttributorStore2.prototype.attribute = function(attribute, value2) {
              if (value2) {
                if (attribute.add(this.domNode, value2)) {
                  if (attribute.value(this.domNode) != null) {
                    this.attributes[attribute.attrName] = attribute;
                  } else {
                    delete this.attributes[attribute.attrName];
                  }
                }
              } else {
                attribute.remove(this.domNode);
                delete this.attributes[attribute.attrName];
              }
            };
            AttributorStore2.prototype.build = function() {
              var _this = this;
              this.attributes = {};
              var attributes = attributor_1.default.keys(this.domNode);
              var classes = class_1.default.keys(this.domNode);
              var styles = style_1.default.keys(this.domNode);
              attributes.concat(classes).concat(styles).forEach(function(name) {
                var attr = Registry.query(name, Registry.Scope.ATTRIBUTE);
                if (attr instanceof attributor_1.default) {
                  _this.attributes[attr.attrName] = attr;
                }
              });
            };
            AttributorStore2.prototype.copy = function(target) {
              var _this = this;
              Object.keys(this.attributes).forEach(function(key2) {
                var value2 = _this.attributes[key2].value(_this.domNode);
                target.format(key2, value2);
              });
            };
            AttributorStore2.prototype.move = function(target) {
              var _this = this;
              this.copy(target);
              Object.keys(this.attributes).forEach(function(key2) {
                _this.attributes[key2].remove(_this.domNode);
              });
              this.attributes = {};
            };
            AttributorStore2.prototype.values = function() {
              var _this = this;
              return Object.keys(this.attributes).reduce(function(attributes, name) {
                attributes[name] = _this.attributes[name].value(_this.domNode);
                return attributes;
              }, {});
            };
            return AttributorStore2;
          }();
          exports2.default = AttributorStore;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
              d2.__proto__ = b2;
            } || function(d2, b2) {
              for (var p2 in b2)
                if (b2.hasOwnProperty(p2))
                  d2[p2] = b2[p2];
            };
            return function(d2, b2) {
              extendStatics(d2, b2);
              function __() {
                this.constructor = d2;
              }
              d2.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());
            };
          }();
          Object.defineProperty(exports2, "__esModule", { value: true });
          var attributor_1 = __webpack_require__(12);
          function match(node, prefix) {
            var className = node.getAttribute("class") || "";
            return className.split(/\s+/).filter(function(name) {
              return name.indexOf(prefix + "-") === 0;
            });
          }
          var ClassAttributor = function(_super) {
            __extends(ClassAttributor2, _super);
            function ClassAttributor2() {
              return _super !== null && _super.apply(this, arguments) || this;
            }
            ClassAttributor2.keys = function(node) {
              return (node.getAttribute("class") || "").split(/\s+/).map(function(name) {
                return name.split("-").slice(0, -1).join("-");
              });
            };
            ClassAttributor2.prototype.add = function(node, value2) {
              if (!this.canAdd(node, value2))
                return false;
              this.remove(node);
              node.classList.add(this.keyName + "-" + value2);
              return true;
            };
            ClassAttributor2.prototype.remove = function(node) {
              var matches = match(node, this.keyName);
              matches.forEach(function(name) {
                node.classList.remove(name);
              });
              if (node.classList.length === 0) {
                node.removeAttribute("class");
              }
            };
            ClassAttributor2.prototype.value = function(node) {
              var result = match(node, this.keyName)[0] || "";
              var value2 = result.slice(this.keyName.length + 1);
              return this.canAdd(node, value2) ? value2 : "";
            };
            return ClassAttributor2;
          }(attributor_1.default);
          exports2.default = ClassAttributor;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
              d2.__proto__ = b2;
            } || function(d2, b2) {
              for (var p2 in b2)
                if (b2.hasOwnProperty(p2))
                  d2[p2] = b2[p2];
            };
            return function(d2, b2) {
              extendStatics(d2, b2);
              function __() {
                this.constructor = d2;
              }
              d2.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());
            };
          }();
          Object.defineProperty(exports2, "__esModule", { value: true });
          var attributor_1 = __webpack_require__(12);
          function camelize(name) {
            var parts = name.split("-");
            var rest = parts.slice(1).map(function(part) {
              return part[0].toUpperCase() + part.slice(1);
            }).join("");
            return parts[0] + rest;
          }
          var StyleAttributor = function(_super) {
            __extends(StyleAttributor2, _super);
            function StyleAttributor2() {
              return _super !== null && _super.apply(this, arguments) || this;
            }
            StyleAttributor2.keys = function(node) {
              return (node.getAttribute("style") || "").split(";").map(function(value2) {
                var arr = value2.split(":");
                return arr[0].trim();
              });
            };
            StyleAttributor2.prototype.add = function(node, value2) {
              if (!this.canAdd(node, value2))
                return false;
              node.style[camelize(this.keyName)] = value2;
              return true;
            };
            StyleAttributor2.prototype.remove = function(node) {
              node.style[camelize(this.keyName)] = "";
              if (!node.getAttribute("style")) {
                node.removeAttribute("style");
              }
            };
            StyleAttributor2.prototype.value = function(node) {
              var value2 = node.style[camelize(this.keyName)];
              return this.canAdd(node, value2) ? value2 : "";
            };
            return StyleAttributor2;
          }(attributor_1.default);
          exports2.default = StyleAttributor;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          var Theme2 = function() {
            function Theme3(quill, options2) {
              _classCallCheck(this, Theme3);
              this.quill = quill;
              this.options = options2;
              this.modules = {};
            }
            _createClass(Theme3, [{
              key: "init",
              value: function init2() {
                var _this = this;
                Object.keys(this.options.modules).forEach(function(name) {
                  if (_this.modules[name] == null) {
                    _this.addModule(name);
                  }
                });
              }
            }, {
              key: "addModule",
              value: function addModule(name) {
                var moduleClass = this.quill.constructor.import("modules/" + name);
                this.modules[name] = new moduleClass(this.quill, this.options.modules[name] || {});
                return this.modules[name];
              }
            }]);
            return Theme3;
          }();
          Theme2.DEFAULTS = {
            modules: {}
          };
          Theme2.themes = {
            "default": Theme2
          };
          exports2.default = Theme2;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          var _get = function get3(object, property, receiver) {
            if (object === null)
              object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get3(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _text = __webpack_require__(7);
          var _text2 = _interopRequireDefault(_text);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var GUARD_TEXT = "\uFEFF";
          var Embed = function(_Parchment$Embed) {
            _inherits(Embed2, _Parchment$Embed);
            function Embed2(node) {
              _classCallCheck(this, Embed2);
              var _this = _possibleConstructorReturn(this, (Embed2.__proto__ || Object.getPrototypeOf(Embed2)).call(this, node));
              _this.contentNode = document.createElement("span");
              _this.contentNode.setAttribute("contenteditable", false);
              [].slice.call(_this.domNode.childNodes).forEach(function(childNode) {
                _this.contentNode.appendChild(childNode);
              });
              _this.leftGuard = document.createTextNode(GUARD_TEXT);
              _this.rightGuard = document.createTextNode(GUARD_TEXT);
              _this.domNode.appendChild(_this.leftGuard);
              _this.domNode.appendChild(_this.contentNode);
              _this.domNode.appendChild(_this.rightGuard);
              return _this;
            }
            _createClass(Embed2, [{
              key: "index",
              value: function index28(node, offset) {
                if (node === this.leftGuard)
                  return 0;
                if (node === this.rightGuard)
                  return 1;
                return _get(Embed2.prototype.__proto__ || Object.getPrototypeOf(Embed2.prototype), "index", this).call(this, node, offset);
              }
            }, {
              key: "restore",
              value: function restore(node) {
                var range = void 0, textNode = void 0;
                var text2 = node.data.split(GUARD_TEXT).join("");
                if (node === this.leftGuard) {
                  if (this.prev instanceof _text2.default) {
                    var prevLength = this.prev.length();
                    this.prev.insertAt(prevLength, text2);
                    range = {
                      startNode: this.prev.domNode,
                      startOffset: prevLength + text2.length
                    };
                  } else {
                    textNode = document.createTextNode(text2);
                    this.parent.insertBefore(_parchment2.default.create(textNode), this);
                    range = {
                      startNode: textNode,
                      startOffset: text2.length
                    };
                  }
                } else if (node === this.rightGuard) {
                  if (this.next instanceof _text2.default) {
                    this.next.insertAt(0, text2);
                    range = {
                      startNode: this.next.domNode,
                      startOffset: text2.length
                    };
                  } else {
                    textNode = document.createTextNode(text2);
                    this.parent.insertBefore(_parchment2.default.create(textNode), this.next);
                    range = {
                      startNode: textNode,
                      startOffset: text2.length
                    };
                  }
                }
                node.data = GUARD_TEXT;
                return range;
              }
            }, {
              key: "update",
              value: function update2(mutations, context) {
                var _this2 = this;
                mutations.forEach(function(mutation) {
                  if (mutation.type === "characterData" && (mutation.target === _this2.leftGuard || mutation.target === _this2.rightGuard)) {
                    var range = _this2.restore(mutation.target);
                    if (range)
                      context.range = range;
                  }
                });
              }
            }]);
            return Embed2;
          }(_parchment2.default.Embed);
          exports2.default = Embed;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          exports2.AlignStyle = exports2.AlignClass = exports2.AlignAttribute = void 0;
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          var config = {
            scope: _parchment2.default.Scope.BLOCK,
            whitelist: ["right", "center", "justify"]
          };
          var AlignAttribute = new _parchment2.default.Attributor.Attribute("align", "align", config);
          var AlignClass = new _parchment2.default.Attributor.Class("align", "ql-align", config);
          var AlignStyle = new _parchment2.default.Attributor.Style("align", "text-align", config);
          exports2.AlignAttribute = AlignAttribute;
          exports2.AlignClass = AlignClass;
          exports2.AlignStyle = AlignStyle;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          exports2.BackgroundStyle = exports2.BackgroundClass = void 0;
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _color = __webpack_require__(26);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          var BackgroundClass = new _parchment2.default.Attributor.Class("background", "ql-bg", {
            scope: _parchment2.default.Scope.INLINE
          });
          var BackgroundStyle = new _color.ColorAttributor("background", "background-color", {
            scope: _parchment2.default.Scope.INLINE
          });
          exports2.BackgroundClass = BackgroundClass;
          exports2.BackgroundStyle = BackgroundStyle;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          exports2.DirectionStyle = exports2.DirectionClass = exports2.DirectionAttribute = void 0;
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          var config = {
            scope: _parchment2.default.Scope.BLOCK,
            whitelist: ["rtl"]
          };
          var DirectionAttribute = new _parchment2.default.Attributor.Attribute("direction", "dir", config);
          var DirectionClass = new _parchment2.default.Attributor.Class("direction", "ql-direction", config);
          var DirectionStyle = new _parchment2.default.Attributor.Style("direction", "direction", config);
          exports2.DirectionAttribute = DirectionAttribute;
          exports2.DirectionClass = DirectionClass;
          exports2.DirectionStyle = DirectionStyle;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          exports2.FontClass = exports2.FontStyle = void 0;
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          var _get = function get3(object, property, receiver) {
            if (object === null)
              object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get3(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var config = {
            scope: _parchment2.default.Scope.INLINE,
            whitelist: ["serif", "monospace"]
          };
          var FontClass = new _parchment2.default.Attributor.Class("font", "ql-font", config);
          var FontStyleAttributor = function(_Parchment$Attributor) {
            _inherits(FontStyleAttributor2, _Parchment$Attributor);
            function FontStyleAttributor2() {
              _classCallCheck(this, FontStyleAttributor2);
              return _possibleConstructorReturn(this, (FontStyleAttributor2.__proto__ || Object.getPrototypeOf(FontStyleAttributor2)).apply(this, arguments));
            }
            _createClass(FontStyleAttributor2, [{
              key: "value",
              value: function value2(node) {
                return _get(FontStyleAttributor2.prototype.__proto__ || Object.getPrototypeOf(FontStyleAttributor2.prototype), "value", this).call(this, node).replace(/["']/g, "");
              }
            }]);
            return FontStyleAttributor2;
          }(_parchment2.default.Attributor.Style);
          var FontStyle = new FontStyleAttributor("font", "font-family", config);
          exports2.FontStyle = FontStyle;
          exports2.FontClass = FontClass;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          exports2.SizeStyle = exports2.SizeClass = void 0;
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          var SizeClass = new _parchment2.default.Attributor.Class("size", "ql-size", {
            scope: _parchment2.default.Scope.INLINE,
            whitelist: ["small", "large", "huge"]
          });
          var SizeStyle = new _parchment2.default.Attributor.Style("size", "font-size", {
            scope: _parchment2.default.Scope.INLINE,
            whitelist: ["10px", "18px", "32px"]
          });
          exports2.SizeClass = SizeClass;
          exports2.SizeStyle = SizeStyle;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          module2.exports = {
            "align": {
              "": __webpack_require__(76),
              "center": __webpack_require__(77),
              "right": __webpack_require__(78),
              "justify": __webpack_require__(79)
            },
            "background": __webpack_require__(80),
            "blockquote": __webpack_require__(81),
            "bold": __webpack_require__(82),
            "clean": __webpack_require__(83),
            "code": __webpack_require__(58),
            "code-block": __webpack_require__(58),
            "color": __webpack_require__(84),
            "direction": {
              "": __webpack_require__(85),
              "rtl": __webpack_require__(86)
            },
            "float": {
              "center": __webpack_require__(87),
              "full": __webpack_require__(88),
              "left": __webpack_require__(89),
              "right": __webpack_require__(90)
            },
            "formula": __webpack_require__(91),
            "header": {
              "1": __webpack_require__(92),
              "2": __webpack_require__(93)
            },
            "italic": __webpack_require__(94),
            "image": __webpack_require__(95),
            "indent": {
              "+1": __webpack_require__(96),
              "-1": __webpack_require__(97)
            },
            "link": __webpack_require__(98),
            "list": {
              "ordered": __webpack_require__(99),
              "bullet": __webpack_require__(100),
              "check": __webpack_require__(101)
            },
            "script": {
              "sub": __webpack_require__(102),
              "super": __webpack_require__(103)
            },
            "strike": __webpack_require__(104),
            "underline": __webpack_require__(105),
            "video": __webpack_require__(106)
          };
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          exports2.getLastChangeIndex = exports2.default = void 0;
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _quill = __webpack_require__(5);
          var _quill2 = _interopRequireDefault(_quill);
          var _module = __webpack_require__(9);
          var _module2 = _interopRequireDefault(_module);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var History = function(_Module) {
            _inherits(History2, _Module);
            function History2(quill, options2) {
              _classCallCheck(this, History2);
              var _this = _possibleConstructorReturn(this, (History2.__proto__ || Object.getPrototypeOf(History2)).call(this, quill, options2));
              _this.lastRecorded = 0;
              _this.ignoreChange = false;
              _this.clear();
              _this.quill.on(_quill2.default.events.EDITOR_CHANGE, function(eventName, delta, oldDelta, source) {
                if (eventName !== _quill2.default.events.TEXT_CHANGE || _this.ignoreChange)
                  return;
                if (!_this.options.userOnly || source === _quill2.default.sources.USER) {
                  _this.record(delta, oldDelta);
                } else {
                  _this.transform(delta);
                }
              });
              _this.quill.keyboard.addBinding({ key: "Z", shortKey: true }, _this.undo.bind(_this));
              _this.quill.keyboard.addBinding({ key: "Z", shortKey: true, shiftKey: true }, _this.redo.bind(_this));
              if (/Win/i.test(navigator.platform)) {
                _this.quill.keyboard.addBinding({ key: "Y", shortKey: true }, _this.redo.bind(_this));
              }
              return _this;
            }
            _createClass(History2, [{
              key: "change",
              value: function change(source, dest) {
                if (this.stack[source].length === 0)
                  return;
                var delta = this.stack[source].pop();
                this.stack[dest].push(delta);
                this.lastRecorded = 0;
                this.ignoreChange = true;
                this.quill.updateContents(delta[source], _quill2.default.sources.USER);
                this.ignoreChange = false;
                var index28 = getLastChangeIndex(delta[source]);
                this.quill.setSelection(index28);
              }
            }, {
              key: "clear",
              value: function clear() {
                this.stack = { undo: [], redo: [] };
              }
            }, {
              key: "cutoff",
              value: function cutoff() {
                this.lastRecorded = 0;
              }
            }, {
              key: "record",
              value: function record(changeDelta, oldDelta) {
                if (changeDelta.ops.length === 0)
                  return;
                this.stack.redo = [];
                var undoDelta = this.quill.getContents().diff(oldDelta);
                var timestamp = Date.now();
                if (this.lastRecorded + this.options.delay > timestamp && this.stack.undo.length > 0) {
                  var delta = this.stack.undo.pop();
                  undoDelta = undoDelta.compose(delta.undo);
                  changeDelta = delta.redo.compose(changeDelta);
                } else {
                  this.lastRecorded = timestamp;
                }
                this.stack.undo.push({
                  redo: changeDelta,
                  undo: undoDelta
                });
                if (this.stack.undo.length > this.options.maxStack) {
                  this.stack.undo.shift();
                }
              }
            }, {
              key: "redo",
              value: function redo() {
                this.change("redo", "undo");
              }
            }, {
              key: "transform",
              value: function transform(delta) {
                this.stack.undo.forEach(function(change) {
                  change.undo = delta.transform(change.undo, true);
                  change.redo = delta.transform(change.redo, true);
                });
                this.stack.redo.forEach(function(change) {
                  change.undo = delta.transform(change.undo, true);
                  change.redo = delta.transform(change.redo, true);
                });
              }
            }, {
              key: "undo",
              value: function undo() {
                this.change("undo", "redo");
              }
            }]);
            return History2;
          }(_module2.default);
          History.DEFAULTS = {
            delay: 1e3,
            maxStack: 100,
            userOnly: false
          };
          function endsWithNewlineChange(delta) {
            var lastOp = delta.ops[delta.ops.length - 1];
            if (lastOp == null)
              return false;
            if (lastOp.insert != null) {
              return typeof lastOp.insert === "string" && lastOp.insert.endsWith("\n");
            }
            if (lastOp.attributes != null) {
              return Object.keys(lastOp.attributes).some(function(attr) {
                return _parchment2.default.query(attr, _parchment2.default.Scope.BLOCK) != null;
              });
            }
            return false;
          }
          function getLastChangeIndex(delta) {
            var deleteLength = delta.reduce(function(length, op) {
              length += op.delete || 0;
              return length;
            }, 0);
            var changeIndex = delta.length() - deleteLength;
            if (endsWithNewlineChange(delta)) {
              changeIndex -= 1;
            }
            return changeIndex;
          }
          exports2.default = History;
          exports2.getLastChangeIndex = getLastChangeIndex;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          exports2.default = exports2.BaseTooltip = void 0;
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          var _get = function get3(object, property, receiver) {
            if (object === null)
              object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get3(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _extend = __webpack_require__(3);
          var _extend2 = _interopRequireDefault(_extend);
          var _quillDelta = __webpack_require__(2);
          var _quillDelta2 = _interopRequireDefault(_quillDelta);
          var _emitter = __webpack_require__(8);
          var _emitter2 = _interopRequireDefault(_emitter);
          var _keyboard = __webpack_require__(23);
          var _keyboard2 = _interopRequireDefault(_keyboard);
          var _theme = __webpack_require__(34);
          var _theme2 = _interopRequireDefault(_theme);
          var _colorPicker = __webpack_require__(59);
          var _colorPicker2 = _interopRequireDefault(_colorPicker);
          var _iconPicker = __webpack_require__(60);
          var _iconPicker2 = _interopRequireDefault(_iconPicker);
          var _picker = __webpack_require__(28);
          var _picker2 = _interopRequireDefault(_picker);
          var _tooltip = __webpack_require__(61);
          var _tooltip2 = _interopRequireDefault(_tooltip);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var ALIGNS = [false, "center", "right", "justify"];
          var COLORS = ["#000000", "#e60000", "#ff9900", "#ffff00", "#008a00", "#0066cc", "#9933ff", "#ffffff", "#facccc", "#ffebcc", "#ffffcc", "#cce8cc", "#cce0f5", "#ebd6ff", "#bbbbbb", "#f06666", "#ffc266", "#ffff66", "#66b966", "#66a3e0", "#c285ff", "#888888", "#a10000", "#b26b00", "#b2b200", "#006100", "#0047b2", "#6b24b2", "#444444", "#5c0000", "#663d00", "#666600", "#003700", "#002966", "#3d1466"];
          var FONTS = [false, "serif", "monospace"];
          var HEADERS = ["1", "2", "3", false];
          var SIZES = ["small", false, "large", "huge"];
          var BaseTheme = function(_Theme) {
            _inherits(BaseTheme2, _Theme);
            function BaseTheme2(quill, options2) {
              _classCallCheck(this, BaseTheme2);
              var _this = _possibleConstructorReturn(this, (BaseTheme2.__proto__ || Object.getPrototypeOf(BaseTheme2)).call(this, quill, options2));
              var listener = function listener2(e2) {
                if (!document.body.contains(quill.root)) {
                  return document.body.removeEventListener("click", listener2);
                }
                if (_this.tooltip != null && !_this.tooltip.root.contains(e2.target) && document.activeElement !== _this.tooltip.textbox && !_this.quill.hasFocus()) {
                  _this.tooltip.hide();
                }
                if (_this.pickers != null) {
                  _this.pickers.forEach(function(picker) {
                    if (!picker.container.contains(e2.target)) {
                      picker.close();
                    }
                  });
                }
              };
              quill.emitter.listenDOM("click", document.body, listener);
              return _this;
            }
            _createClass(BaseTheme2, [{
              key: "addModule",
              value: function addModule(name) {
                var module3 = _get(BaseTheme2.prototype.__proto__ || Object.getPrototypeOf(BaseTheme2.prototype), "addModule", this).call(this, name);
                if (name === "toolbar") {
                  this.extendToolbar(module3);
                }
                return module3;
              }
            }, {
              key: "buildButtons",
              value: function buildButtons(buttons, icons) {
                buttons.forEach(function(button) {
                  var className = button.getAttribute("class") || "";
                  className.split(/\s+/).forEach(function(name) {
                    if (!name.startsWith("ql-"))
                      return;
                    name = name.slice("ql-".length);
                    if (icons[name] == null)
                      return;
                    if (name === "direction") {
                      button.innerHTML = icons[name][""] + icons[name]["rtl"];
                    } else if (typeof icons[name] === "string") {
                      button.innerHTML = icons[name];
                    } else {
                      var value2 = button.value || "";
                      if (value2 != null && icons[name][value2]) {
                        button.innerHTML = icons[name][value2];
                      }
                    }
                  });
                });
              }
            }, {
              key: "buildPickers",
              value: function buildPickers(selects, icons) {
                var _this2 = this;
                this.pickers = selects.map(function(select) {
                  if (select.classList.contains("ql-align")) {
                    if (select.querySelector("option") == null) {
                      fillSelect(select, ALIGNS);
                    }
                    return new _iconPicker2.default(select, icons.align);
                  } else if (select.classList.contains("ql-background") || select.classList.contains("ql-color")) {
                    var format = select.classList.contains("ql-background") ? "background" : "color";
                    if (select.querySelector("option") == null) {
                      fillSelect(select, COLORS, format === "background" ? "#ffffff" : "#000000");
                    }
                    return new _colorPicker2.default(select, icons[format]);
                  } else {
                    if (select.querySelector("option") == null) {
                      if (select.classList.contains("ql-font")) {
                        fillSelect(select, FONTS);
                      } else if (select.classList.contains("ql-header")) {
                        fillSelect(select, HEADERS);
                      } else if (select.classList.contains("ql-size")) {
                        fillSelect(select, SIZES);
                      }
                    }
                    return new _picker2.default(select);
                  }
                });
                var update2 = function update3() {
                  _this2.pickers.forEach(function(picker) {
                    picker.update();
                  });
                };
                this.quill.on(_emitter2.default.events.EDITOR_CHANGE, update2);
              }
            }]);
            return BaseTheme2;
          }(_theme2.default);
          BaseTheme.DEFAULTS = (0, _extend2.default)(true, {}, _theme2.default.DEFAULTS, {
            modules: {
              toolbar: {
                handlers: {
                  formula: function formula() {
                    this.quill.theme.tooltip.edit("formula");
                  },
                  image: function image() {
                    var _this3 = this;
                    var fileInput = this.container.querySelector("input.ql-image[type=file]");
                    if (fileInput == null) {
                      fileInput = document.createElement("input");
                      fileInput.setAttribute("type", "file");
                      fileInput.setAttribute("accept", "image/png, image/gif, image/jpeg, image/bmp, image/x-icon");
                      fileInput.classList.add("ql-image");
                      fileInput.addEventListener("change", function() {
                        if (fileInput.files != null && fileInput.files[0] != null) {
                          var reader = new FileReader();
                          reader.onload = function(e2) {
                            var range = _this3.quill.getSelection(true);
                            _this3.quill.updateContents(new _quillDelta2.default().retain(range.index).delete(range.length).insert({ image: e2.target.result }), _emitter2.default.sources.USER);
                            _this3.quill.setSelection(range.index + 1, _emitter2.default.sources.SILENT);
                            fileInput.value = "";
                          };
                          reader.readAsDataURL(fileInput.files[0]);
                        }
                      });
                      this.container.appendChild(fileInput);
                    }
                    fileInput.click();
                  },
                  video: function video() {
                    this.quill.theme.tooltip.edit("video");
                  }
                }
              }
            }
          });
          var BaseTooltip = function(_Tooltip) {
            _inherits(BaseTooltip2, _Tooltip);
            function BaseTooltip2(quill, boundsContainer) {
              _classCallCheck(this, BaseTooltip2);
              var _this4 = _possibleConstructorReturn(this, (BaseTooltip2.__proto__ || Object.getPrototypeOf(BaseTooltip2)).call(this, quill, boundsContainer));
              _this4.textbox = _this4.root.querySelector('input[type="text"]');
              _this4.listen();
              return _this4;
            }
            _createClass(BaseTooltip2, [{
              key: "listen",
              value: function listen() {
                var _this5 = this;
                this.textbox.addEventListener("keydown", function(event) {
                  if (_keyboard2.default.match(event, "enter")) {
                    _this5.save();
                    event.preventDefault();
                  } else if (_keyboard2.default.match(event, "escape")) {
                    _this5.cancel();
                    event.preventDefault();
                  }
                });
              }
            }, {
              key: "cancel",
              value: function cancel() {
                this.hide();
              }
            }, {
              key: "edit",
              value: function edit() {
                var mode = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "link";
                var preview = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
                this.root.classList.remove("ql-hidden");
                this.root.classList.add("ql-editing");
                if (preview != null) {
                  this.textbox.value = preview;
                } else if (mode !== this.root.getAttribute("data-mode")) {
                  this.textbox.value = "";
                }
                this.position(this.quill.getBounds(this.quill.selection.savedRange));
                this.textbox.select();
                this.textbox.setAttribute("placeholder", this.textbox.getAttribute("data-" + mode) || "");
                this.root.setAttribute("data-mode", mode);
              }
            }, {
              key: "restoreFocus",
              value: function restoreFocus() {
                var scrollTop = this.quill.scrollingContainer.scrollTop;
                this.quill.focus();
                this.quill.scrollingContainer.scrollTop = scrollTop;
              }
            }, {
              key: "save",
              value: function save() {
                var value2 = this.textbox.value;
                switch (this.root.getAttribute("data-mode")) {
                  case "link": {
                    var scrollTop = this.quill.root.scrollTop;
                    if (this.linkRange) {
                      this.quill.formatText(this.linkRange, "link", value2, _emitter2.default.sources.USER);
                      delete this.linkRange;
                    } else {
                      this.restoreFocus();
                      this.quill.format("link", value2, _emitter2.default.sources.USER);
                    }
                    this.quill.root.scrollTop = scrollTop;
                    break;
                  }
                  case "video": {
                    value2 = extractVideoUrl(value2);
                  }
                  case "formula": {
                    if (!value2)
                      break;
                    var range = this.quill.getSelection(true);
                    if (range != null) {
                      var index28 = range.index + range.length;
                      this.quill.insertEmbed(index28, this.root.getAttribute("data-mode"), value2, _emitter2.default.sources.USER);
                      if (this.root.getAttribute("data-mode") === "formula") {
                        this.quill.insertText(index28 + 1, " ", _emitter2.default.sources.USER);
                      }
                      this.quill.setSelection(index28 + 2, _emitter2.default.sources.USER);
                    }
                    break;
                  }
                  default:
                }
                this.textbox.value = "";
                this.hide();
              }
            }]);
            return BaseTooltip2;
          }(_tooltip2.default);
          function extractVideoUrl(url) {
            var match = url.match(/^(?:(https?):\/\/)?(?:(?:www|m)\.)?youtube\.com\/watch.*v=([a-zA-Z0-9_-]+)/) || url.match(/^(?:(https?):\/\/)?(?:(?:www|m)\.)?youtu\.be\/([a-zA-Z0-9_-]+)/);
            if (match) {
              return (match[1] || "https") + "://www.youtube.com/embed/" + match[2] + "?showinfo=0";
            }
            if (match = url.match(/^(?:(https?):\/\/)?(?:www\.)?vimeo\.com\/(\d+)/)) {
              return (match[1] || "https") + "://player.vimeo.com/video/" + match[2] + "/";
            }
            return url;
          }
          function fillSelect(select, values) {
            var defaultValue = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
            values.forEach(function(value2) {
              var option = document.createElement("option");
              if (value2 === defaultValue) {
                option.setAttribute("selected", "selected");
              } else {
                option.setAttribute("value", value2);
              }
              select.appendChild(option);
            });
          }
          exports2.BaseTooltip = BaseTooltip;
          exports2.default = BaseTheme;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", { value: true });
          var LinkedList = function() {
            function LinkedList2() {
              this.head = this.tail = null;
              this.length = 0;
            }
            LinkedList2.prototype.append = function() {
              var nodes = [];
              for (var _i = 0; _i < arguments.length; _i++) {
                nodes[_i] = arguments[_i];
              }
              this.insertBefore(nodes[0], null);
              if (nodes.length > 1) {
                this.append.apply(this, nodes.slice(1));
              }
            };
            LinkedList2.prototype.contains = function(node) {
              var cur, next = this.iterator();
              while (cur = next()) {
                if (cur === node)
                  return true;
              }
              return false;
            };
            LinkedList2.prototype.insertBefore = function(node, refNode) {
              if (!node)
                return;
              node.next = refNode;
              if (refNode != null) {
                node.prev = refNode.prev;
                if (refNode.prev != null) {
                  refNode.prev.next = node;
                }
                refNode.prev = node;
                if (refNode === this.head) {
                  this.head = node;
                }
              } else if (this.tail != null) {
                this.tail.next = node;
                node.prev = this.tail;
                this.tail = node;
              } else {
                node.prev = null;
                this.head = this.tail = node;
              }
              this.length += 1;
            };
            LinkedList2.prototype.offset = function(target) {
              var index28 = 0, cur = this.head;
              while (cur != null) {
                if (cur === target)
                  return index28;
                index28 += cur.length();
                cur = cur.next;
              }
              return -1;
            };
            LinkedList2.prototype.remove = function(node) {
              if (!this.contains(node))
                return;
              if (node.prev != null)
                node.prev.next = node.next;
              if (node.next != null)
                node.next.prev = node.prev;
              if (node === this.head)
                this.head = node.next;
              if (node === this.tail)
                this.tail = node.prev;
              this.length -= 1;
            };
            LinkedList2.prototype.iterator = function(curNode) {
              if (curNode === void 0) {
                curNode = this.head;
              }
              return function() {
                var ret = curNode;
                if (curNode != null)
                  curNode = curNode.next;
                return ret;
              };
            };
            LinkedList2.prototype.find = function(index28, inclusive) {
              if (inclusive === void 0) {
                inclusive = false;
              }
              var cur, next = this.iterator();
              while (cur = next()) {
                var length = cur.length();
                if (index28 < length || inclusive && index28 === length && (cur.next == null || cur.next.length() !== 0)) {
                  return [cur, index28];
                }
                index28 -= length;
              }
              return [null, 0];
            };
            LinkedList2.prototype.forEach = function(callback) {
              var cur, next = this.iterator();
              while (cur = next()) {
                callback(cur);
              }
            };
            LinkedList2.prototype.forEachAt = function(index28, length, callback) {
              if (length <= 0)
                return;
              var _a = this.find(index28), startNode = _a[0], offset = _a[1];
              var cur, curIndex = index28 - offset, next = this.iterator(startNode);
              while ((cur = next()) && curIndex < index28 + length) {
                var curLength = cur.length();
                if (index28 > curIndex) {
                  callback(cur, index28 - curIndex, Math.min(length, curIndex + curLength - index28));
                } else {
                  callback(cur, 0, Math.min(curLength, index28 + length - curIndex));
                }
                curIndex += curLength;
              }
            };
            LinkedList2.prototype.map = function(callback) {
              return this.reduce(function(memo, cur) {
                memo.push(callback(cur));
                return memo;
              }, []);
            };
            LinkedList2.prototype.reduce = function(callback, memo) {
              var cur, next = this.iterator();
              while (cur = next()) {
                memo = callback(memo, cur);
              }
              return memo;
            };
            return LinkedList2;
          }();
          exports2.default = LinkedList;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
              d2.__proto__ = b2;
            } || function(d2, b2) {
              for (var p2 in b2)
                if (b2.hasOwnProperty(p2))
                  d2[p2] = b2[p2];
            };
            return function(d2, b2) {
              extendStatics(d2, b2);
              function __() {
                this.constructor = d2;
              }
              d2.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());
            };
          }();
          Object.defineProperty(exports2, "__esModule", { value: true });
          var container_1 = __webpack_require__(17);
          var Registry = __webpack_require__(1);
          var OBSERVER_CONFIG = {
            attributes: true,
            characterData: true,
            characterDataOldValue: true,
            childList: true,
            subtree: true
          };
          var MAX_OPTIMIZE_ITERATIONS = 100;
          var ScrollBlot = function(_super) {
            __extends(ScrollBlot2, _super);
            function ScrollBlot2(node) {
              var _this = _super.call(this, node) || this;
              _this.scroll = _this;
              _this.observer = new MutationObserver(function(mutations) {
                _this.update(mutations);
              });
              _this.observer.observe(_this.domNode, OBSERVER_CONFIG);
              _this.attach();
              return _this;
            }
            ScrollBlot2.prototype.detach = function() {
              _super.prototype.detach.call(this);
              this.observer.disconnect();
            };
            ScrollBlot2.prototype.deleteAt = function(index28, length) {
              this.update();
              if (index28 === 0 && length === this.length()) {
                this.children.forEach(function(child) {
                  child.remove();
                });
              } else {
                _super.prototype.deleteAt.call(this, index28, length);
              }
            };
            ScrollBlot2.prototype.formatAt = function(index28, length, name, value2) {
              this.update();
              _super.prototype.formatAt.call(this, index28, length, name, value2);
            };
            ScrollBlot2.prototype.insertAt = function(index28, value2, def) {
              this.update();
              _super.prototype.insertAt.call(this, index28, value2, def);
            };
            ScrollBlot2.prototype.optimize = function(mutations, context) {
              var _this = this;
              if (mutations === void 0) {
                mutations = [];
              }
              if (context === void 0) {
                context = {};
              }
              _super.prototype.optimize.call(this, context);
              var records = [].slice.call(this.observer.takeRecords());
              while (records.length > 0)
                mutations.push(records.pop());
              var mark = function(blot, markParent) {
                if (markParent === void 0) {
                  markParent = true;
                }
                if (blot == null || blot === _this)
                  return;
                if (blot.domNode.parentNode == null)
                  return;
                if (blot.domNode[Registry.DATA_KEY].mutations == null) {
                  blot.domNode[Registry.DATA_KEY].mutations = [];
                }
                if (markParent)
                  mark(blot.parent);
              };
              var optimize = function(blot) {
                if (blot.domNode[Registry.DATA_KEY] == null || blot.domNode[Registry.DATA_KEY].mutations == null) {
                  return;
                }
                if (blot instanceof container_1.default) {
                  blot.children.forEach(optimize);
                }
                blot.optimize(context);
              };
              var remaining = mutations;
              for (var i2 = 0; remaining.length > 0; i2 += 1) {
                if (i2 >= MAX_OPTIMIZE_ITERATIONS) {
                  throw new Error("[Parchment] Maximum optimize iterations reached");
                }
                remaining.forEach(function(mutation) {
                  var blot = Registry.find(mutation.target, true);
                  if (blot == null)
                    return;
                  if (blot.domNode === mutation.target) {
                    if (mutation.type === "childList") {
                      mark(Registry.find(mutation.previousSibling, false));
                      [].forEach.call(mutation.addedNodes, function(node) {
                        var child = Registry.find(node, false);
                        mark(child, false);
                        if (child instanceof container_1.default) {
                          child.children.forEach(function(grandChild) {
                            mark(grandChild, false);
                          });
                        }
                      });
                    } else if (mutation.type === "attributes") {
                      mark(blot.prev);
                    }
                  }
                  mark(blot);
                });
                this.children.forEach(optimize);
                remaining = [].slice.call(this.observer.takeRecords());
                records = remaining.slice();
                while (records.length > 0)
                  mutations.push(records.pop());
              }
            };
            ScrollBlot2.prototype.update = function(mutations, context) {
              var _this = this;
              if (context === void 0) {
                context = {};
              }
              mutations = mutations || this.observer.takeRecords();
              mutations.map(function(mutation) {
                var blot = Registry.find(mutation.target, true);
                if (blot == null)
                  return null;
                if (blot.domNode[Registry.DATA_KEY].mutations == null) {
                  blot.domNode[Registry.DATA_KEY].mutations = [mutation];
                  return blot;
                } else {
                  blot.domNode[Registry.DATA_KEY].mutations.push(mutation);
                  return null;
                }
              }).forEach(function(blot) {
                if (blot == null || blot === _this || blot.domNode[Registry.DATA_KEY] == null)
                  return;
                blot.update(blot.domNode[Registry.DATA_KEY].mutations || [], context);
              });
              if (this.domNode[Registry.DATA_KEY].mutations != null) {
                _super.prototype.update.call(this, this.domNode[Registry.DATA_KEY].mutations, context);
              }
              this.optimize(mutations, context);
            };
            ScrollBlot2.blotName = "scroll";
            ScrollBlot2.defaultChild = "block";
            ScrollBlot2.scope = Registry.Scope.BLOCK_BLOT;
            ScrollBlot2.tagName = "DIV";
            return ScrollBlot2;
          }(container_1.default);
          exports2.default = ScrollBlot;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
              d2.__proto__ = b2;
            } || function(d2, b2) {
              for (var p2 in b2)
                if (b2.hasOwnProperty(p2))
                  d2[p2] = b2[p2];
            };
            return function(d2, b2) {
              extendStatics(d2, b2);
              function __() {
                this.constructor = d2;
              }
              d2.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());
            };
          }();
          Object.defineProperty(exports2, "__esModule", { value: true });
          var format_1 = __webpack_require__(18);
          var Registry = __webpack_require__(1);
          function isEqual(obj1, obj2) {
            if (Object.keys(obj1).length !== Object.keys(obj2).length)
              return false;
            for (var prop in obj1) {
              if (obj1[prop] !== obj2[prop])
                return false;
            }
            return true;
          }
          var InlineBlot = function(_super) {
            __extends(InlineBlot2, _super);
            function InlineBlot2() {
              return _super !== null && _super.apply(this, arguments) || this;
            }
            InlineBlot2.formats = function(domNode) {
              if (domNode.tagName === InlineBlot2.tagName)
                return void 0;
              return _super.formats.call(this, domNode);
            };
            InlineBlot2.prototype.format = function(name, value2) {
              var _this = this;
              if (name === this.statics.blotName && !value2) {
                this.children.forEach(function(child) {
                  if (!(child instanceof format_1.default)) {
                    child = child.wrap(InlineBlot2.blotName, true);
                  }
                  _this.attributes.copy(child);
                });
                this.unwrap();
              } else {
                _super.prototype.format.call(this, name, value2);
              }
            };
            InlineBlot2.prototype.formatAt = function(index28, length, name, value2) {
              if (this.formats()[name] != null || Registry.query(name, Registry.Scope.ATTRIBUTE)) {
                var blot = this.isolate(index28, length);
                blot.format(name, value2);
              } else {
                _super.prototype.formatAt.call(this, index28, length, name, value2);
              }
            };
            InlineBlot2.prototype.optimize = function(context) {
              _super.prototype.optimize.call(this, context);
              var formats = this.formats();
              if (Object.keys(formats).length === 0) {
                return this.unwrap();
              }
              var next = this.next;
              if (next instanceof InlineBlot2 && next.prev === this && isEqual(formats, next.formats())) {
                next.moveChildren(this);
                next.remove();
              }
            };
            InlineBlot2.blotName = "inline";
            InlineBlot2.scope = Registry.Scope.INLINE_BLOT;
            InlineBlot2.tagName = "SPAN";
            return InlineBlot2;
          }(format_1.default);
          exports2.default = InlineBlot;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
              d2.__proto__ = b2;
            } || function(d2, b2) {
              for (var p2 in b2)
                if (b2.hasOwnProperty(p2))
                  d2[p2] = b2[p2];
            };
            return function(d2, b2) {
              extendStatics(d2, b2);
              function __() {
                this.constructor = d2;
              }
              d2.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());
            };
          }();
          Object.defineProperty(exports2, "__esModule", { value: true });
          var format_1 = __webpack_require__(18);
          var Registry = __webpack_require__(1);
          var BlockBlot = function(_super) {
            __extends(BlockBlot2, _super);
            function BlockBlot2() {
              return _super !== null && _super.apply(this, arguments) || this;
            }
            BlockBlot2.formats = function(domNode) {
              var tagName = Registry.query(BlockBlot2.blotName).tagName;
              if (domNode.tagName === tagName)
                return void 0;
              return _super.formats.call(this, domNode);
            };
            BlockBlot2.prototype.format = function(name, value2) {
              if (Registry.query(name, Registry.Scope.BLOCK) == null) {
                return;
              } else if (name === this.statics.blotName && !value2) {
                this.replaceWith(BlockBlot2.blotName);
              } else {
                _super.prototype.format.call(this, name, value2);
              }
            };
            BlockBlot2.prototype.formatAt = function(index28, length, name, value2) {
              if (Registry.query(name, Registry.Scope.BLOCK) != null) {
                this.format(name, value2);
              } else {
                _super.prototype.formatAt.call(this, index28, length, name, value2);
              }
            };
            BlockBlot2.prototype.insertAt = function(index28, value2, def) {
              if (def == null || Registry.query(value2, Registry.Scope.INLINE) != null) {
                _super.prototype.insertAt.call(this, index28, value2, def);
              } else {
                var after = this.split(index28);
                var blot = Registry.create(value2, def);
                after.parent.insertBefore(blot, after);
              }
            };
            BlockBlot2.prototype.update = function(mutations, context) {
              if (navigator.userAgent.match(/Trident/)) {
                this.build();
              } else {
                _super.prototype.update.call(this, mutations, context);
              }
            };
            BlockBlot2.blotName = "block";
            BlockBlot2.scope = Registry.Scope.BLOCK_BLOT;
            BlockBlot2.tagName = "P";
            return BlockBlot2;
          }(format_1.default);
          exports2.default = BlockBlot;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
              d2.__proto__ = b2;
            } || function(d2, b2) {
              for (var p2 in b2)
                if (b2.hasOwnProperty(p2))
                  d2[p2] = b2[p2];
            };
            return function(d2, b2) {
              extendStatics(d2, b2);
              function __() {
                this.constructor = d2;
              }
              d2.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());
            };
          }();
          Object.defineProperty(exports2, "__esModule", { value: true });
          var leaf_1 = __webpack_require__(19);
          var EmbedBlot = function(_super) {
            __extends(EmbedBlot2, _super);
            function EmbedBlot2() {
              return _super !== null && _super.apply(this, arguments) || this;
            }
            EmbedBlot2.formats = function(domNode) {
              return void 0;
            };
            EmbedBlot2.prototype.format = function(name, value2) {
              _super.prototype.formatAt.call(this, 0, this.length(), name, value2);
            };
            EmbedBlot2.prototype.formatAt = function(index28, length, name, value2) {
              if (index28 === 0 && length === this.length()) {
                this.format(name, value2);
              } else {
                _super.prototype.formatAt.call(this, index28, length, name, value2);
              }
            };
            EmbedBlot2.prototype.formats = function() {
              return this.statics.formats(this.domNode);
            };
            return EmbedBlot2;
          }(leaf_1.default);
          exports2.default = EmbedBlot;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
              d2.__proto__ = b2;
            } || function(d2, b2) {
              for (var p2 in b2)
                if (b2.hasOwnProperty(p2))
                  d2[p2] = b2[p2];
            };
            return function(d2, b2) {
              extendStatics(d2, b2);
              function __() {
                this.constructor = d2;
              }
              d2.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());
            };
          }();
          Object.defineProperty(exports2, "__esModule", { value: true });
          var leaf_1 = __webpack_require__(19);
          var Registry = __webpack_require__(1);
          var TextBlot = function(_super) {
            __extends(TextBlot2, _super);
            function TextBlot2(node) {
              var _this = _super.call(this, node) || this;
              _this.text = _this.statics.value(_this.domNode);
              return _this;
            }
            TextBlot2.create = function(value2) {
              return document.createTextNode(value2);
            };
            TextBlot2.value = function(domNode) {
              var text2 = domNode.data;
              if (text2["normalize"])
                text2 = text2["normalize"]();
              return text2;
            };
            TextBlot2.prototype.deleteAt = function(index28, length) {
              this.domNode.data = this.text = this.text.slice(0, index28) + this.text.slice(index28 + length);
            };
            TextBlot2.prototype.index = function(node, offset) {
              if (this.domNode === node) {
                return offset;
              }
              return -1;
            };
            TextBlot2.prototype.insertAt = function(index28, value2, def) {
              if (def == null) {
                this.text = this.text.slice(0, index28) + value2 + this.text.slice(index28);
                this.domNode.data = this.text;
              } else {
                _super.prototype.insertAt.call(this, index28, value2, def);
              }
            };
            TextBlot2.prototype.length = function() {
              return this.text.length;
            };
            TextBlot2.prototype.optimize = function(context) {
              _super.prototype.optimize.call(this, context);
              this.text = this.statics.value(this.domNode);
              if (this.text.length === 0) {
                this.remove();
              } else if (this.next instanceof TextBlot2 && this.next.prev === this) {
                this.insertAt(this.length(), this.next.value());
                this.next.remove();
              }
            };
            TextBlot2.prototype.position = function(index28, inclusive) {
              if (inclusive === void 0) {
                inclusive = false;
              }
              return [this.domNode, index28];
            };
            TextBlot2.prototype.split = function(index28, force) {
              if (force === void 0) {
                force = false;
              }
              if (!force) {
                if (index28 === 0)
                  return this;
                if (index28 === this.length())
                  return this.next;
              }
              var after = Registry.create(this.domNode.splitText(index28));
              this.parent.insertBefore(after, this.next);
              this.text = this.statics.value(this.domNode);
              return after;
            };
            TextBlot2.prototype.update = function(mutations, context) {
              var _this = this;
              if (mutations.some(function(mutation) {
                return mutation.type === "characterData" && mutation.target === _this.domNode;
              })) {
                this.text = this.statics.value(this.domNode);
              }
            };
            TextBlot2.prototype.value = function() {
              return this.text;
            };
            TextBlot2.blotName = "text";
            TextBlot2.scope = Registry.Scope.INLINE_BLOT;
            return TextBlot2;
          }(leaf_1.default);
          exports2.default = TextBlot;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          var elem = document.createElement("div");
          elem.classList.toggle("test-class", false);
          if (elem.classList.contains("test-class")) {
            var _toggle = DOMTokenList.prototype.toggle;
            DOMTokenList.prototype.toggle = function(token, force) {
              if (arguments.length > 1 && !this.contains(token) === !force) {
                return force;
              } else {
                return _toggle.call(this, token);
              }
            };
          }
          if (!String.prototype.startsWith) {
            String.prototype.startsWith = function(searchString, position) {
              position = position || 0;
              return this.substr(position, searchString.length) === searchString;
            };
          }
          if (!String.prototype.endsWith) {
            String.prototype.endsWith = function(searchString, position) {
              var subjectString = this.toString();
              if (typeof position !== "number" || !isFinite(position) || Math.floor(position) !== position || position > subjectString.length) {
                position = subjectString.length;
              }
              position -= searchString.length;
              var lastIndex = subjectString.indexOf(searchString, position);
              return lastIndex !== -1 && lastIndex === position;
            };
          }
          if (!Array.prototype.find) {
            Object.defineProperty(Array.prototype, "find", {
              value: function value2(predicate) {
                if (this === null) {
                  throw new TypeError("Array.prototype.find called on null or undefined");
                }
                if (typeof predicate !== "function") {
                  throw new TypeError("predicate must be a function");
                }
                var list = Object(this);
                var length = list.length >>> 0;
                var thisArg = arguments[1];
                var value3;
                for (var i2 = 0; i2 < length; i2++) {
                  value3 = list[i2];
                  if (predicate.call(thisArg, value3, i2, list)) {
                    return value3;
                  }
                }
                return void 0;
              }
            });
          }
          document.addEventListener("DOMContentLoaded", function() {
            document.execCommand("enableObjectResizing", false, false);
            document.execCommand("autoUrlDetect", false, false);
          });
        },
        function(module2, exports2) {
          var DIFF_DELETE = -1;
          var DIFF_INSERT = 1;
          var DIFF_EQUAL = 0;
          function diff_main(text1, text2, cursor_pos) {
            if (text1 == text2) {
              if (text1) {
                return [[DIFF_EQUAL, text1]];
              }
              return [];
            }
            if (cursor_pos < 0 || text1.length < cursor_pos) {
              cursor_pos = null;
            }
            var commonlength = diff_commonPrefix(text1, text2);
            var commonprefix = text1.substring(0, commonlength);
            text1 = text1.substring(commonlength);
            text2 = text2.substring(commonlength);
            commonlength = diff_commonSuffix(text1, text2);
            var commonsuffix = text1.substring(text1.length - commonlength);
            text1 = text1.substring(0, text1.length - commonlength);
            text2 = text2.substring(0, text2.length - commonlength);
            var diffs = diff_compute_(text1, text2);
            if (commonprefix) {
              diffs.unshift([DIFF_EQUAL, commonprefix]);
            }
            if (commonsuffix) {
              diffs.push([DIFF_EQUAL, commonsuffix]);
            }
            diff_cleanupMerge(diffs);
            if (cursor_pos != null) {
              diffs = fix_cursor(diffs, cursor_pos);
            }
            diffs = fix_emoji(diffs);
            return diffs;
          }
          ;
          function diff_compute_(text1, text2) {
            var diffs;
            if (!text1) {
              return [[DIFF_INSERT, text2]];
            }
            if (!text2) {
              return [[DIFF_DELETE, text1]];
            }
            var longtext = text1.length > text2.length ? text1 : text2;
            var shorttext = text1.length > text2.length ? text2 : text1;
            var i2 = longtext.indexOf(shorttext);
            if (i2 != -1) {
              diffs = [
                [DIFF_INSERT, longtext.substring(0, i2)],
                [DIFF_EQUAL, shorttext],
                [DIFF_INSERT, longtext.substring(i2 + shorttext.length)]
              ];
              if (text1.length > text2.length) {
                diffs[0][0] = diffs[2][0] = DIFF_DELETE;
              }
              return diffs;
            }
            if (shorttext.length == 1) {
              return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];
            }
            var hm = diff_halfMatch_(text1, text2);
            if (hm) {
              var text1_a = hm[0];
              var text1_b = hm[1];
              var text2_a = hm[2];
              var text2_b = hm[3];
              var mid_common = hm[4];
              var diffs_a = diff_main(text1_a, text2_a);
              var diffs_b = diff_main(text1_b, text2_b);
              return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);
            }
            return diff_bisect_(text1, text2);
          }
          ;
          function diff_bisect_(text1, text2) {
            var text1_length = text1.length;
            var text2_length = text2.length;
            var max_d = Math.ceil((text1_length + text2_length) / 2);
            var v_offset = max_d;
            var v_length = 2 * max_d;
            var v1 = new Array(v_length);
            var v2 = new Array(v_length);
            for (var x2 = 0; x2 < v_length; x2++) {
              v1[x2] = -1;
              v2[x2] = -1;
            }
            v1[v_offset + 1] = 0;
            v2[v_offset + 1] = 0;
            var delta = text1_length - text2_length;
            var front = delta % 2 != 0;
            var k1start = 0;
            var k1end = 0;
            var k2start = 0;
            var k2end = 0;
            for (var d2 = 0; d2 < max_d; d2++) {
              for (var k1 = -d2 + k1start; k1 <= d2 - k1end; k1 += 2) {
                var k1_offset = v_offset + k1;
                var x1;
                if (k1 == -d2 || k1 != d2 && v1[k1_offset - 1] < v1[k1_offset + 1]) {
                  x1 = v1[k1_offset + 1];
                } else {
                  x1 = v1[k1_offset - 1] + 1;
                }
                var y1 = x1 - k1;
                while (x1 < text1_length && y1 < text2_length && text1.charAt(x1) == text2.charAt(y1)) {
                  x1++;
                  y1++;
                }
                v1[k1_offset] = x1;
                if (x1 > text1_length) {
                  k1end += 2;
                } else if (y1 > text2_length) {
                  k1start += 2;
                } else if (front) {
                  var k2_offset = v_offset + delta - k1;
                  if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {
                    var x22 = text1_length - v2[k2_offset];
                    if (x1 >= x22) {
                      return diff_bisectSplit_(text1, text2, x1, y1);
                    }
                  }
                }
              }
              for (var k2 = -d2 + k2start; k2 <= d2 - k2end; k2 += 2) {
                var k2_offset = v_offset + k2;
                var x22;
                if (k2 == -d2 || k2 != d2 && v2[k2_offset - 1] < v2[k2_offset + 1]) {
                  x22 = v2[k2_offset + 1];
                } else {
                  x22 = v2[k2_offset - 1] + 1;
                }
                var y2 = x22 - k2;
                while (x22 < text1_length && y2 < text2_length && text1.charAt(text1_length - x22 - 1) == text2.charAt(text2_length - y2 - 1)) {
                  x22++;
                  y2++;
                }
                v2[k2_offset] = x22;
                if (x22 > text1_length) {
                  k2end += 2;
                } else if (y2 > text2_length) {
                  k2start += 2;
                } else if (!front) {
                  var k1_offset = v_offset + delta - k2;
                  if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {
                    var x1 = v1[k1_offset];
                    var y1 = v_offset + x1 - k1_offset;
                    x22 = text1_length - x22;
                    if (x1 >= x22) {
                      return diff_bisectSplit_(text1, text2, x1, y1);
                    }
                  }
                }
              }
            }
            return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];
          }
          ;
          function diff_bisectSplit_(text1, text2, x2, y2) {
            var text1a = text1.substring(0, x2);
            var text2a = text2.substring(0, y2);
            var text1b = text1.substring(x2);
            var text2b = text2.substring(y2);
            var diffs = diff_main(text1a, text2a);
            var diffsb = diff_main(text1b, text2b);
            return diffs.concat(diffsb);
          }
          ;
          function diff_commonPrefix(text1, text2) {
            if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {
              return 0;
            }
            var pointermin = 0;
            var pointermax = Math.min(text1.length, text2.length);
            var pointermid = pointermax;
            var pointerstart = 0;
            while (pointermin < pointermid) {
              if (text1.substring(pointerstart, pointermid) == text2.substring(pointerstart, pointermid)) {
                pointermin = pointermid;
                pointerstart = pointermin;
              } else {
                pointermax = pointermid;
              }
              pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);
            }
            return pointermid;
          }
          ;
          function diff_commonSuffix(text1, text2) {
            if (!text1 || !text2 || text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {
              return 0;
            }
            var pointermin = 0;
            var pointermax = Math.min(text1.length, text2.length);
            var pointermid = pointermax;
            var pointerend = 0;
            while (pointermin < pointermid) {
              if (text1.substring(text1.length - pointermid, text1.length - pointerend) == text2.substring(text2.length - pointermid, text2.length - pointerend)) {
                pointermin = pointermid;
                pointerend = pointermin;
              } else {
                pointermax = pointermid;
              }
              pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);
            }
            return pointermid;
          }
          ;
          function diff_halfMatch_(text1, text2) {
            var longtext = text1.length > text2.length ? text1 : text2;
            var shorttext = text1.length > text2.length ? text2 : text1;
            if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {
              return null;
            }
            function diff_halfMatchI_(longtext2, shorttext2, i2) {
              var seed = longtext2.substring(i2, i2 + Math.floor(longtext2.length / 4));
              var j2 = -1;
              var best_common = "";
              var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;
              while ((j2 = shorttext2.indexOf(seed, j2 + 1)) != -1) {
                var prefixLength = diff_commonPrefix(
                  longtext2.substring(i2),
                  shorttext2.substring(j2)
                );
                var suffixLength = diff_commonSuffix(
                  longtext2.substring(0, i2),
                  shorttext2.substring(0, j2)
                );
                if (best_common.length < suffixLength + prefixLength) {
                  best_common = shorttext2.substring(j2 - suffixLength, j2) + shorttext2.substring(j2, j2 + prefixLength);
                  best_longtext_a = longtext2.substring(0, i2 - suffixLength);
                  best_longtext_b = longtext2.substring(i2 + prefixLength);
                  best_shorttext_a = shorttext2.substring(0, j2 - suffixLength);
                  best_shorttext_b = shorttext2.substring(j2 + prefixLength);
                }
              }
              if (best_common.length * 2 >= longtext2.length) {
                return [
                  best_longtext_a,
                  best_longtext_b,
                  best_shorttext_a,
                  best_shorttext_b,
                  best_common
                ];
              } else {
                return null;
              }
            }
            var hm1 = diff_halfMatchI_(
              longtext,
              shorttext,
              Math.ceil(longtext.length / 4)
            );
            var hm2 = diff_halfMatchI_(
              longtext,
              shorttext,
              Math.ceil(longtext.length / 2)
            );
            var hm;
            if (!hm1 && !hm2) {
              return null;
            } else if (!hm2) {
              hm = hm1;
            } else if (!hm1) {
              hm = hm2;
            } else {
              hm = hm1[4].length > hm2[4].length ? hm1 : hm2;
            }
            var text1_a, text1_b, text2_a, text2_b;
            if (text1.length > text2.length) {
              text1_a = hm[0];
              text1_b = hm[1];
              text2_a = hm[2];
              text2_b = hm[3];
            } else {
              text2_a = hm[0];
              text2_b = hm[1];
              text1_a = hm[2];
              text1_b = hm[3];
            }
            var mid_common = hm[4];
            return [text1_a, text1_b, text2_a, text2_b, mid_common];
          }
          ;
          function diff_cleanupMerge(diffs) {
            diffs.push([DIFF_EQUAL, ""]);
            var pointer = 0;
            var count_delete = 0;
            var count_insert = 0;
            var text_delete = "";
            var text_insert = "";
            var commonlength;
            while (pointer < diffs.length) {
              switch (diffs[pointer][0]) {
                case DIFF_INSERT:
                  count_insert++;
                  text_insert += diffs[pointer][1];
                  pointer++;
                  break;
                case DIFF_DELETE:
                  count_delete++;
                  text_delete += diffs[pointer][1];
                  pointer++;
                  break;
                case DIFF_EQUAL:
                  if (count_delete + count_insert > 1) {
                    if (count_delete !== 0 && count_insert !== 0) {
                      commonlength = diff_commonPrefix(text_insert, text_delete);
                      if (commonlength !== 0) {
                        if (pointer - count_delete - count_insert > 0 && diffs[pointer - count_delete - count_insert - 1][0] == DIFF_EQUAL) {
                          diffs[pointer - count_delete - count_insert - 1][1] += text_insert.substring(0, commonlength);
                        } else {
                          diffs.splice(0, 0, [
                            DIFF_EQUAL,
                            text_insert.substring(0, commonlength)
                          ]);
                          pointer++;
                        }
                        text_insert = text_insert.substring(commonlength);
                        text_delete = text_delete.substring(commonlength);
                      }
                      commonlength = diff_commonSuffix(text_insert, text_delete);
                      if (commonlength !== 0) {
                        diffs[pointer][1] = text_insert.substring(text_insert.length - commonlength) + diffs[pointer][1];
                        text_insert = text_insert.substring(0, text_insert.length - commonlength);
                        text_delete = text_delete.substring(0, text_delete.length - commonlength);
                      }
                    }
                    if (count_delete === 0) {
                      diffs.splice(
                        pointer - count_insert,
                        count_delete + count_insert,
                        [DIFF_INSERT, text_insert]
                      );
                    } else if (count_insert === 0) {
                      diffs.splice(
                        pointer - count_delete,
                        count_delete + count_insert,
                        [DIFF_DELETE, text_delete]
                      );
                    } else {
                      diffs.splice(
                        pointer - count_delete - count_insert,
                        count_delete + count_insert,
                        [DIFF_DELETE, text_delete],
                        [DIFF_INSERT, text_insert]
                      );
                    }
                    pointer = pointer - count_delete - count_insert + (count_delete ? 1 : 0) + (count_insert ? 1 : 0) + 1;
                  } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {
                    diffs[pointer - 1][1] += diffs[pointer][1];
                    diffs.splice(pointer, 1);
                  } else {
                    pointer++;
                  }
                  count_insert = 0;
                  count_delete = 0;
                  text_delete = "";
                  text_insert = "";
                  break;
              }
            }
            if (diffs[diffs.length - 1][1] === "") {
              diffs.pop();
            }
            var changes = false;
            pointer = 1;
            while (pointer < diffs.length - 1) {
              if (diffs[pointer - 1][0] == DIFF_EQUAL && diffs[pointer + 1][0] == DIFF_EQUAL) {
                if (diffs[pointer][1].substring(diffs[pointer][1].length - diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {
                  diffs[pointer][1] = diffs[pointer - 1][1] + diffs[pointer][1].substring(0, diffs[pointer][1].length - diffs[pointer - 1][1].length);
                  diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];
                  diffs.splice(pointer - 1, 1);
                  changes = true;
                } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) == diffs[pointer + 1][1]) {
                  diffs[pointer - 1][1] += diffs[pointer + 1][1];
                  diffs[pointer][1] = diffs[pointer][1].substring(diffs[pointer + 1][1].length) + diffs[pointer + 1][1];
                  diffs.splice(pointer + 1, 1);
                  changes = true;
                }
              }
              pointer++;
            }
            if (changes) {
              diff_cleanupMerge(diffs);
            }
          }
          ;
          var diff = diff_main;
          diff.INSERT = DIFF_INSERT;
          diff.DELETE = DIFF_DELETE;
          diff.EQUAL = DIFF_EQUAL;
          module2.exports = diff;
          function cursor_normalize_diff(diffs, cursor_pos) {
            if (cursor_pos === 0) {
              return [DIFF_EQUAL, diffs];
            }
            for (var current_pos = 0, i2 = 0; i2 < diffs.length; i2++) {
              var d2 = diffs[i2];
              if (d2[0] === DIFF_DELETE || d2[0] === DIFF_EQUAL) {
                var next_pos = current_pos + d2[1].length;
                if (cursor_pos === next_pos) {
                  return [i2 + 1, diffs];
                } else if (cursor_pos < next_pos) {
                  diffs = diffs.slice();
                  var split_pos = cursor_pos - current_pos;
                  var d_left = [d2[0], d2[1].slice(0, split_pos)];
                  var d_right = [d2[0], d2[1].slice(split_pos)];
                  diffs.splice(i2, 1, d_left, d_right);
                  return [i2 + 1, diffs];
                } else {
                  current_pos = next_pos;
                }
              }
            }
            throw new Error("cursor_pos is out of bounds!");
          }
          function fix_cursor(diffs, cursor_pos) {
            var norm = cursor_normalize_diff(diffs, cursor_pos);
            var ndiffs = norm[1];
            var cursor_pointer = norm[0];
            var d2 = ndiffs[cursor_pointer];
            var d_next = ndiffs[cursor_pointer + 1];
            if (d2 == null) {
              return diffs;
            } else if (d2[0] !== DIFF_EQUAL) {
              return diffs;
            } else {
              if (d_next != null && d2[1] + d_next[1] === d_next[1] + d2[1]) {
                ndiffs.splice(cursor_pointer, 2, d_next, d2);
                return merge_tuples(ndiffs, cursor_pointer, 2);
              } else if (d_next != null && d_next[1].indexOf(d2[1]) === 0) {
                ndiffs.splice(cursor_pointer, 2, [d_next[0], d2[1]], [0, d2[1]]);
                var suffix = d_next[1].slice(d2[1].length);
                if (suffix.length > 0) {
                  ndiffs.splice(cursor_pointer + 2, 0, [d_next[0], suffix]);
                }
                return merge_tuples(ndiffs, cursor_pointer, 3);
              } else {
                return diffs;
              }
            }
          }
          function fix_emoji(diffs) {
            var compact2 = false;
            var starts_with_pair_end = function(str) {
              return str.charCodeAt(0) >= 56320 && str.charCodeAt(0) <= 57343;
            };
            var ends_with_pair_start = function(str) {
              return str.charCodeAt(str.length - 1) >= 55296 && str.charCodeAt(str.length - 1) <= 56319;
            };
            for (var i2 = 2; i2 < diffs.length; i2 += 1) {
              if (diffs[i2 - 2][0] === DIFF_EQUAL && ends_with_pair_start(diffs[i2 - 2][1]) && diffs[i2 - 1][0] === DIFF_DELETE && starts_with_pair_end(diffs[i2 - 1][1]) && diffs[i2][0] === DIFF_INSERT && starts_with_pair_end(diffs[i2][1])) {
                compact2 = true;
                diffs[i2 - 1][1] = diffs[i2 - 2][1].slice(-1) + diffs[i2 - 1][1];
                diffs[i2][1] = diffs[i2 - 2][1].slice(-1) + diffs[i2][1];
                diffs[i2 - 2][1] = diffs[i2 - 2][1].slice(0, -1);
              }
            }
            if (!compact2) {
              return diffs;
            }
            var fixed_diffs = [];
            for (var i2 = 0; i2 < diffs.length; i2 += 1) {
              if (diffs[i2][1].length > 0) {
                fixed_diffs.push(diffs[i2]);
              }
            }
            return fixed_diffs;
          }
          function merge_tuples(diffs, start, length) {
            for (var i2 = start + length - 1; i2 >= 0 && i2 >= start - 1; i2--) {
              if (i2 + 1 < diffs.length) {
                var left_d = diffs[i2];
                var right_d = diffs[i2 + 1];
                if (left_d[0] === right_d[1]) {
                  diffs.splice(i2, 2, [left_d[0], left_d[1] + right_d[1]]);
                }
              }
            }
            return diffs;
          }
        },
        function(module2, exports2) {
          exports2 = module2.exports = typeof Object.keys === "function" ? Object.keys : shim;
          exports2.shim = shim;
          function shim(obj) {
            var keys = [];
            for (var key2 in obj)
              keys.push(key2);
            return keys;
          }
        },
        function(module2, exports2) {
          var supportsArgumentsClass = function() {
            return Object.prototype.toString.call(arguments);
          }() == "[object Arguments]";
          exports2 = module2.exports = supportsArgumentsClass ? supported : unsupported;
          exports2.supported = supported;
          function supported(object) {
            return Object.prototype.toString.call(object) == "[object Arguments]";
          }
          ;
          exports2.unsupported = unsupported;
          function unsupported(object) {
            return object && typeof object == "object" && typeof object.length == "number" && Object.prototype.hasOwnProperty.call(object, "callee") && !Object.prototype.propertyIsEnumerable.call(object, "callee") || false;
          }
          ;
        },
        function(module2, exports2) {
          "use strict";
          var has = Object.prototype.hasOwnProperty, prefix = "~";
          function Events() {
          }
          if (Object.create) {
            Events.prototype = /* @__PURE__ */ Object.create(null);
            if (!new Events().__proto__)
              prefix = false;
          }
          function EE(fn, context, once2) {
            this.fn = fn;
            this.context = context;
            this.once = once2 || false;
          }
          function EventEmitter() {
            this._events = new Events();
            this._eventsCount = 0;
          }
          EventEmitter.prototype.eventNames = function eventNames() {
            var names = [], events, name;
            if (this._eventsCount === 0)
              return names;
            for (name in events = this._events) {
              if (has.call(events, name))
                names.push(prefix ? name.slice(1) : name);
            }
            if (Object.getOwnPropertySymbols) {
              return names.concat(Object.getOwnPropertySymbols(events));
            }
            return names;
          };
          EventEmitter.prototype.listeners = function listeners(event, exists) {
            var evt = prefix ? prefix + event : event, available = this._events[evt];
            if (exists)
              return !!available;
            if (!available)
              return [];
            if (available.fn)
              return [available.fn];
            for (var i2 = 0, l2 = available.length, ee = new Array(l2); i2 < l2; i2++) {
              ee[i2] = available[i2].fn;
            }
            return ee;
          };
          EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
            var evt = prefix ? prefix + event : event;
            if (!this._events[evt])
              return false;
            var listeners = this._events[evt], len = arguments.length, args, i2;
            if (listeners.fn) {
              if (listeners.once)
                this.removeListener(event, listeners.fn, void 0, true);
              switch (len) {
                case 1:
                  return listeners.fn.call(listeners.context), true;
                case 2:
                  return listeners.fn.call(listeners.context, a1), true;
                case 3:
                  return listeners.fn.call(listeners.context, a1, a2), true;
                case 4:
                  return listeners.fn.call(listeners.context, a1, a2, a3), true;
                case 5:
                  return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;
                case 6:
                  return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
              }
              for (i2 = 1, args = new Array(len - 1); i2 < len; i2++) {
                args[i2 - 1] = arguments[i2];
              }
              listeners.fn.apply(listeners.context, args);
            } else {
              var length = listeners.length, j2;
              for (i2 = 0; i2 < length; i2++) {
                if (listeners[i2].once)
                  this.removeListener(event, listeners[i2].fn, void 0, true);
                switch (len) {
                  case 1:
                    listeners[i2].fn.call(listeners[i2].context);
                    break;
                  case 2:
                    listeners[i2].fn.call(listeners[i2].context, a1);
                    break;
                  case 3:
                    listeners[i2].fn.call(listeners[i2].context, a1, a2);
                    break;
                  case 4:
                    listeners[i2].fn.call(listeners[i2].context, a1, a2, a3);
                    break;
                  default:
                    if (!args)
                      for (j2 = 1, args = new Array(len - 1); j2 < len; j2++) {
                        args[j2 - 1] = arguments[j2];
                      }
                    listeners[i2].fn.apply(listeners[i2].context, args);
                }
              }
            }
            return true;
          };
          EventEmitter.prototype.on = function on(event, fn, context) {
            var listener = new EE(fn, context || this), evt = prefix ? prefix + event : event;
            if (!this._events[evt])
              this._events[evt] = listener, this._eventsCount++;
            else if (!this._events[evt].fn)
              this._events[evt].push(listener);
            else
              this._events[evt] = [this._events[evt], listener];
            return this;
          };
          EventEmitter.prototype.once = function once2(event, fn, context) {
            var listener = new EE(fn, context || this, true), evt = prefix ? prefix + event : event;
            if (!this._events[evt])
              this._events[evt] = listener, this._eventsCount++;
            else if (!this._events[evt].fn)
              this._events[evt].push(listener);
            else
              this._events[evt] = [this._events[evt], listener];
            return this;
          };
          EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once2) {
            var evt = prefix ? prefix + event : event;
            if (!this._events[evt])
              return this;
            if (!fn) {
              if (--this._eventsCount === 0)
                this._events = new Events();
              else
                delete this._events[evt];
              return this;
            }
            var listeners = this._events[evt];
            if (listeners.fn) {
              if (listeners.fn === fn && (!once2 || listeners.once) && (!context || listeners.context === context)) {
                if (--this._eventsCount === 0)
                  this._events = new Events();
                else
                  delete this._events[evt];
              }
            } else {
              for (var i2 = 0, events = [], length = listeners.length; i2 < length; i2++) {
                if (listeners[i2].fn !== fn || once2 && !listeners[i2].once || context && listeners[i2].context !== context) {
                  events.push(listeners[i2]);
                }
              }
              if (events.length)
                this._events[evt] = events.length === 1 ? events[0] : events;
              else if (--this._eventsCount === 0)
                this._events = new Events();
              else
                delete this._events[evt];
            }
            return this;
          };
          EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {
            var evt;
            if (event) {
              evt = prefix ? prefix + event : event;
              if (this._events[evt]) {
                if (--this._eventsCount === 0)
                  this._events = new Events();
                else
                  delete this._events[evt];
              }
            } else {
              this._events = new Events();
              this._eventsCount = 0;
            }
            return this;
          };
          EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
          EventEmitter.prototype.addListener = EventEmitter.prototype.on;
          EventEmitter.prototype.setMaxListeners = function setMaxListeners() {
            return this;
          };
          EventEmitter.prefixed = prefix;
          EventEmitter.EventEmitter = EventEmitter;
          if ("undefined" !== typeof module2) {
            module2.exports = EventEmitter;
          }
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          exports2.matchText = exports2.matchSpacing = exports2.matchNewline = exports2.matchBlot = exports2.matchAttributor = exports2.default = void 0;
          var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
            return typeof obj;
          } : function(obj) {
            return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
          };
          var _slicedToArray = function() {
            function sliceIterator(arr, i2) {
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = void 0;
              try {
                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                  _arr.push(_s.value);
                  if (i2 && _arr.length === i2)
                    break;
                }
              } catch (err) {
                _d = true;
                _e = err;
              } finally {
                try {
                  if (!_n && _i["return"])
                    _i["return"]();
                } finally {
                  if (_d)
                    throw _e;
                }
              }
              return _arr;
            }
            return function(arr, i2) {
              if (Array.isArray(arr)) {
                return arr;
              } else if (Symbol.iterator in Object(arr)) {
                return sliceIterator(arr, i2);
              } else {
                throw new TypeError("Invalid attempt to destructure non-iterable instance");
              }
            };
          }();
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          var _extend2 = __webpack_require__(3);
          var _extend3 = _interopRequireDefault(_extend2);
          var _quillDelta = __webpack_require__(2);
          var _quillDelta2 = _interopRequireDefault(_quillDelta);
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _quill = __webpack_require__(5);
          var _quill2 = _interopRequireDefault(_quill);
          var _logger = __webpack_require__(10);
          var _logger2 = _interopRequireDefault(_logger);
          var _module = __webpack_require__(9);
          var _module2 = _interopRequireDefault(_module);
          var _align = __webpack_require__(36);
          var _background = __webpack_require__(37);
          var _code = __webpack_require__(13);
          var _code2 = _interopRequireDefault(_code);
          var _color = __webpack_require__(26);
          var _direction = __webpack_require__(38);
          var _font = __webpack_require__(39);
          var _size = __webpack_require__(40);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _defineProperty(obj, key2, value2) {
            if (key2 in obj) {
              Object.defineProperty(obj, key2, { value: value2, enumerable: true, configurable: true, writable: true });
            } else {
              obj[key2] = value2;
            }
            return obj;
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var debug = (0, _logger2.default)("quill:clipboard");
          var DOM_KEY = "__ql-matcher";
          var CLIPBOARD_CONFIG = [[Node.TEXT_NODE, matchText], [Node.TEXT_NODE, matchNewline], ["br", matchBreak], [Node.ELEMENT_NODE, matchNewline], [Node.ELEMENT_NODE, matchBlot], [Node.ELEMENT_NODE, matchSpacing], [Node.ELEMENT_NODE, matchAttributor], [Node.ELEMENT_NODE, matchStyles], ["li", matchIndent], ["b", matchAlias.bind(matchAlias, "bold")], ["i", matchAlias.bind(matchAlias, "italic")], ["style", matchIgnore]];
          var ATTRIBUTE_ATTRIBUTORS = [_align.AlignAttribute, _direction.DirectionAttribute].reduce(function(memo, attr) {
            memo[attr.keyName] = attr;
            return memo;
          }, {});
          var STYLE_ATTRIBUTORS = [_align.AlignStyle, _background.BackgroundStyle, _color.ColorStyle, _direction.DirectionStyle, _font.FontStyle, _size.SizeStyle].reduce(function(memo, attr) {
            memo[attr.keyName] = attr;
            return memo;
          }, {});
          var Clipboard = function(_Module) {
            _inherits(Clipboard2, _Module);
            function Clipboard2(quill, options2) {
              _classCallCheck(this, Clipboard2);
              var _this = _possibleConstructorReturn(this, (Clipboard2.__proto__ || Object.getPrototypeOf(Clipboard2)).call(this, quill, options2));
              _this.quill.root.addEventListener("paste", _this.onPaste.bind(_this));
              _this.container = _this.quill.addContainer("ql-clipboard");
              _this.container.setAttribute("contenteditable", true);
              _this.container.setAttribute("tabindex", -1);
              _this.matchers = [];
              CLIPBOARD_CONFIG.concat(_this.options.matchers).forEach(function(_ref) {
                var _ref2 = _slicedToArray(_ref, 2), selector = _ref2[0], matcher = _ref2[1];
                if (!options2.matchVisual && matcher === matchSpacing)
                  return;
                _this.addMatcher(selector, matcher);
              });
              return _this;
            }
            _createClass(Clipboard2, [{
              key: "addMatcher",
              value: function addMatcher(selector, matcher) {
                this.matchers.push([selector, matcher]);
              }
            }, {
              key: "convert",
              value: function convert(html) {
                if (typeof html === "string") {
                  this.container.innerHTML = html.replace(/\>\r?\n +\</g, "><");
                  return this.convert();
                }
                var formats = this.quill.getFormat(this.quill.selection.savedRange.index);
                if (formats[_code2.default.blotName]) {
                  var text2 = this.container.innerText;
                  this.container.innerHTML = "";
                  return new _quillDelta2.default().insert(text2, _defineProperty({}, _code2.default.blotName, formats[_code2.default.blotName]));
                }
                var _prepareMatching = this.prepareMatching(), _prepareMatching2 = _slicedToArray(_prepareMatching, 2), elementMatchers = _prepareMatching2[0], textMatchers = _prepareMatching2[1];
                var delta = traverse(this.container, elementMatchers, textMatchers);
                if (deltaEndsWith(delta, "\n") && delta.ops[delta.ops.length - 1].attributes == null) {
                  delta = delta.compose(new _quillDelta2.default().retain(delta.length() - 1).delete(1));
                }
                debug.log("convert", this.container.innerHTML, delta);
                this.container.innerHTML = "";
                return delta;
              }
            }, {
              key: "dangerouslyPasteHTML",
              value: function dangerouslyPasteHTML(index28, html) {
                var source = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : _quill2.default.sources.API;
                if (typeof index28 === "string") {
                  this.quill.setContents(this.convert(index28), html);
                  this.quill.setSelection(0, _quill2.default.sources.SILENT);
                } else {
                  var paste = this.convert(html);
                  this.quill.updateContents(new _quillDelta2.default().retain(index28).concat(paste), source);
                  this.quill.setSelection(index28 + paste.length(), _quill2.default.sources.SILENT);
                }
              }
            }, {
              key: "onPaste",
              value: function onPaste(e2) {
                var _this2 = this;
                if (e2.defaultPrevented || !this.quill.isEnabled())
                  return;
                var range = this.quill.getSelection();
                var delta = new _quillDelta2.default().retain(range.index);
                var scrollTop = this.quill.scrollingContainer.scrollTop;
                this.container.focus();
                this.quill.selection.update(_quill2.default.sources.SILENT);
                setTimeout(function() {
                  delta = delta.concat(_this2.convert()).delete(range.length);
                  _this2.quill.updateContents(delta, _quill2.default.sources.USER);
                  _this2.quill.setSelection(delta.length() - range.length, _quill2.default.sources.SILENT);
                  _this2.quill.scrollingContainer.scrollTop = scrollTop;
                  _this2.quill.focus();
                }, 1);
              }
            }, {
              key: "prepareMatching",
              value: function prepareMatching() {
                var _this3 = this;
                var elementMatchers = [], textMatchers = [];
                this.matchers.forEach(function(pair) {
                  var _pair = _slicedToArray(pair, 2), selector = _pair[0], matcher = _pair[1];
                  switch (selector) {
                    case Node.TEXT_NODE:
                      textMatchers.push(matcher);
                      break;
                    case Node.ELEMENT_NODE:
                      elementMatchers.push(matcher);
                      break;
                    default:
                      [].forEach.call(_this3.container.querySelectorAll(selector), function(node) {
                        node[DOM_KEY] = node[DOM_KEY] || [];
                        node[DOM_KEY].push(matcher);
                      });
                      break;
                  }
                });
                return [elementMatchers, textMatchers];
              }
            }]);
            return Clipboard2;
          }(_module2.default);
          Clipboard.DEFAULTS = {
            matchers: [],
            matchVisual: true
          };
          function applyFormat(delta, format, value2) {
            if ((typeof format === "undefined" ? "undefined" : _typeof(format)) === "object") {
              return Object.keys(format).reduce(function(delta2, key2) {
                return applyFormat(delta2, key2, format[key2]);
              }, delta);
            } else {
              return delta.reduce(function(delta2, op) {
                if (op.attributes && op.attributes[format]) {
                  return delta2.push(op);
                } else {
                  return delta2.insert(op.insert, (0, _extend3.default)({}, _defineProperty({}, format, value2), op.attributes));
                }
              }, new _quillDelta2.default());
            }
          }
          function computeStyle(node) {
            if (node.nodeType !== Node.ELEMENT_NODE)
              return {};
            var DOM_KEY2 = "__ql-computed-style";
            return node[DOM_KEY2] || (node[DOM_KEY2] = window.getComputedStyle(node));
          }
          function deltaEndsWith(delta, text2) {
            var endText = "";
            for (var i2 = delta.ops.length - 1; i2 >= 0 && endText.length < text2.length; --i2) {
              var op = delta.ops[i2];
              if (typeof op.insert !== "string")
                break;
              endText = op.insert + endText;
            }
            return endText.slice(-1 * text2.length) === text2;
          }
          function isLine(node) {
            if (node.childNodes.length === 0)
              return false;
            var style = computeStyle(node);
            return ["block", "list-item"].indexOf(style.display) > -1;
          }
          function traverse(node, elementMatchers, textMatchers) {
            if (node.nodeType === node.TEXT_NODE) {
              return textMatchers.reduce(function(delta, matcher) {
                return matcher(node, delta);
              }, new _quillDelta2.default());
            } else if (node.nodeType === node.ELEMENT_NODE) {
              return [].reduce.call(node.childNodes || [], function(delta, childNode) {
                var childrenDelta = traverse(childNode, elementMatchers, textMatchers);
                if (childNode.nodeType === node.ELEMENT_NODE) {
                  childrenDelta = elementMatchers.reduce(function(childrenDelta2, matcher) {
                    return matcher(childNode, childrenDelta2);
                  }, childrenDelta);
                  childrenDelta = (childNode[DOM_KEY] || []).reduce(function(childrenDelta2, matcher) {
                    return matcher(childNode, childrenDelta2);
                  }, childrenDelta);
                }
                return delta.concat(childrenDelta);
              }, new _quillDelta2.default());
            } else {
              return new _quillDelta2.default();
            }
          }
          function matchAlias(format, node, delta) {
            return applyFormat(delta, format, true);
          }
          function matchAttributor(node, delta) {
            var attributes = _parchment2.default.Attributor.Attribute.keys(node);
            var classes = _parchment2.default.Attributor.Class.keys(node);
            var styles = _parchment2.default.Attributor.Style.keys(node);
            var formats = {};
            attributes.concat(classes).concat(styles).forEach(function(name) {
              var attr = _parchment2.default.query(name, _parchment2.default.Scope.ATTRIBUTE);
              if (attr != null) {
                formats[attr.attrName] = attr.value(node);
                if (formats[attr.attrName])
                  return;
              }
              attr = ATTRIBUTE_ATTRIBUTORS[name];
              if (attr != null && (attr.attrName === name || attr.keyName === name)) {
                formats[attr.attrName] = attr.value(node) || void 0;
              }
              attr = STYLE_ATTRIBUTORS[name];
              if (attr != null && (attr.attrName === name || attr.keyName === name)) {
                attr = STYLE_ATTRIBUTORS[name];
                formats[attr.attrName] = attr.value(node) || void 0;
              }
            });
            if (Object.keys(formats).length > 0) {
              delta = applyFormat(delta, formats);
            }
            return delta;
          }
          function matchBlot(node, delta) {
            var match = _parchment2.default.query(node);
            if (match == null)
              return delta;
            if (match.prototype instanceof _parchment2.default.Embed) {
              var embed = {};
              var value2 = match.value(node);
              if (value2 != null) {
                embed[match.blotName] = value2;
                delta = new _quillDelta2.default().insert(embed, match.formats(node));
              }
            } else if (typeof match.formats === "function") {
              delta = applyFormat(delta, match.blotName, match.formats(node));
            }
            return delta;
          }
          function matchBreak(node, delta) {
            if (!deltaEndsWith(delta, "\n")) {
              delta.insert("\n");
            }
            return delta;
          }
          function matchIgnore() {
            return new _quillDelta2.default();
          }
          function matchIndent(node, delta) {
            var match = _parchment2.default.query(node);
            if (match == null || match.blotName !== "list-item" || !deltaEndsWith(delta, "\n")) {
              return delta;
            }
            var indent = -1, parent = node.parentNode;
            while (!parent.classList.contains("ql-clipboard")) {
              if ((_parchment2.default.query(parent) || {}).blotName === "list") {
                indent += 1;
              }
              parent = parent.parentNode;
            }
            if (indent <= 0)
              return delta;
            return delta.compose(new _quillDelta2.default().retain(delta.length() - 1).retain(1, { indent }));
          }
          function matchNewline(node, delta) {
            if (!deltaEndsWith(delta, "\n")) {
              if (isLine(node) || delta.length() > 0 && node.nextSibling && isLine(node.nextSibling)) {
                delta.insert("\n");
              }
            }
            return delta;
          }
          function matchSpacing(node, delta) {
            if (isLine(node) && node.nextElementSibling != null && !deltaEndsWith(delta, "\n\n")) {
              var nodeHeight = node.offsetHeight + parseFloat(computeStyle(node).marginTop) + parseFloat(computeStyle(node).marginBottom);
              if (node.nextElementSibling.offsetTop > node.offsetTop + nodeHeight * 1.5) {
                delta.insert("\n");
              }
            }
            return delta;
          }
          function matchStyles(node, delta) {
            var formats = {};
            var style = node.style || {};
            if (style.fontStyle && computeStyle(node).fontStyle === "italic") {
              formats.italic = true;
            }
            if (style.fontWeight && (computeStyle(node).fontWeight.startsWith("bold") || parseInt(computeStyle(node).fontWeight) >= 700)) {
              formats.bold = true;
            }
            if (Object.keys(formats).length > 0) {
              delta = applyFormat(delta, formats);
            }
            if (parseFloat(style.textIndent || 0) > 0) {
              delta = new _quillDelta2.default().insert("	").concat(delta);
            }
            return delta;
          }
          function matchText(node, delta) {
            var text2 = node.data;
            if (node.parentNode.tagName === "O:P") {
              return delta.insert(text2.trim());
            }
            if (text2.trim().length === 0 && node.parentNode.classList.contains("ql-clipboard")) {
              return delta;
            }
            if (!computeStyle(node.parentNode).whiteSpace.startsWith("pre")) {
              var replacer = function replacer2(collapse, match) {
                match = match.replace(/[^\u00a0]/g, "");
                return match.length < 1 && collapse ? " " : match;
              };
              text2 = text2.replace(/\r\n/g, " ").replace(/\n/g, " ");
              text2 = text2.replace(/\s\s+/g, replacer.bind(replacer, true));
              if (node.previousSibling == null && isLine(node.parentNode) || node.previousSibling != null && isLine(node.previousSibling)) {
                text2 = text2.replace(/^\s+/, replacer.bind(replacer, false));
              }
              if (node.nextSibling == null && isLine(node.parentNode) || node.nextSibling != null && isLine(node.nextSibling)) {
                text2 = text2.replace(/\s+$/, replacer.bind(replacer, false));
              }
            }
            return delta.insert(text2);
          }
          exports2.default = Clipboard;
          exports2.matchAttributor = matchAttributor;
          exports2.matchBlot = matchBlot;
          exports2.matchNewline = matchNewline;
          exports2.matchSpacing = matchSpacing;
          exports2.matchText = matchText;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          var _get = function get3(object, property, receiver) {
            if (object === null)
              object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get3(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _inline = __webpack_require__(6);
          var _inline2 = _interopRequireDefault(_inline);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var Bold = function(_Inline) {
            _inherits(Bold2, _Inline);
            function Bold2() {
              _classCallCheck(this, Bold2);
              return _possibleConstructorReturn(this, (Bold2.__proto__ || Object.getPrototypeOf(Bold2)).apply(this, arguments));
            }
            _createClass(Bold2, [{
              key: "optimize",
              value: function optimize(context) {
                _get(Bold2.prototype.__proto__ || Object.getPrototypeOf(Bold2.prototype), "optimize", this).call(this, context);
                if (this.domNode.tagName !== this.statics.tagName[0]) {
                  this.replaceWith(this.statics.blotName);
                }
              }
            }], [{
              key: "create",
              value: function create() {
                return _get(Bold2.__proto__ || Object.getPrototypeOf(Bold2), "create", this).call(this);
              }
            }, {
              key: "formats",
              value: function formats() {
                return true;
              }
            }]);
            return Bold2;
          }(_inline2.default);
          Bold.blotName = "bold";
          Bold.tagName = ["STRONG", "B"];
          exports2.default = Bold;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          exports2.addControls = exports2.default = void 0;
          var _slicedToArray = function() {
            function sliceIterator(arr, i2) {
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = void 0;
              try {
                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                  _arr.push(_s.value);
                  if (i2 && _arr.length === i2)
                    break;
                }
              } catch (err) {
                _d = true;
                _e = err;
              } finally {
                try {
                  if (!_n && _i["return"])
                    _i["return"]();
                } finally {
                  if (_d)
                    throw _e;
                }
              }
              return _arr;
            }
            return function(arr, i2) {
              if (Array.isArray(arr)) {
                return arr;
              } else if (Symbol.iterator in Object(arr)) {
                return sliceIterator(arr, i2);
              } else {
                throw new TypeError("Invalid attempt to destructure non-iterable instance");
              }
            };
          }();
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          var _quillDelta = __webpack_require__(2);
          var _quillDelta2 = _interopRequireDefault(_quillDelta);
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _quill = __webpack_require__(5);
          var _quill2 = _interopRequireDefault(_quill);
          var _logger = __webpack_require__(10);
          var _logger2 = _interopRequireDefault(_logger);
          var _module = __webpack_require__(9);
          var _module2 = _interopRequireDefault(_module);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _defineProperty(obj, key2, value2) {
            if (key2 in obj) {
              Object.defineProperty(obj, key2, { value: value2, enumerable: true, configurable: true, writable: true });
            } else {
              obj[key2] = value2;
            }
            return obj;
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var debug = (0, _logger2.default)("quill:toolbar");
          var Toolbar = function(_Module) {
            _inherits(Toolbar2, _Module);
            function Toolbar2(quill, options2) {
              _classCallCheck(this, Toolbar2);
              var _this = _possibleConstructorReturn(this, (Toolbar2.__proto__ || Object.getPrototypeOf(Toolbar2)).call(this, quill, options2));
              if (Array.isArray(_this.options.container)) {
                var container = document.createElement("div");
                addControls(container, _this.options.container);
                quill.container.parentNode.insertBefore(container, quill.container);
                _this.container = container;
              } else if (typeof _this.options.container === "string") {
                _this.container = document.querySelector(_this.options.container);
              } else {
                _this.container = _this.options.container;
              }
              if (!(_this.container instanceof HTMLElement)) {
                var _ret;
                return _ret = debug.error("Container required for toolbar", _this.options), _possibleConstructorReturn(_this, _ret);
              }
              _this.container.classList.add("ql-toolbar");
              _this.controls = [];
              _this.handlers = {};
              Object.keys(_this.options.handlers).forEach(function(format) {
                _this.addHandler(format, _this.options.handlers[format]);
              });
              [].forEach.call(_this.container.querySelectorAll("button, select"), function(input) {
                _this.attach(input);
              });
              _this.quill.on(_quill2.default.events.EDITOR_CHANGE, function(type, range) {
                if (type === _quill2.default.events.SELECTION_CHANGE) {
                  _this.update(range);
                }
              });
              _this.quill.on(_quill2.default.events.SCROLL_OPTIMIZE, function() {
                var _this$quill$selection = _this.quill.selection.getRange(), _this$quill$selection2 = _slicedToArray(_this$quill$selection, 1), range = _this$quill$selection2[0];
                _this.update(range);
              });
              return _this;
            }
            _createClass(Toolbar2, [{
              key: "addHandler",
              value: function addHandler(format, handler) {
                this.handlers[format] = handler;
              }
            }, {
              key: "attach",
              value: function attach(input) {
                var _this2 = this;
                var format = [].find.call(input.classList, function(className) {
                  return className.indexOf("ql-") === 0;
                });
                if (!format)
                  return;
                format = format.slice("ql-".length);
                if (input.tagName === "BUTTON") {
                  input.setAttribute("type", "button");
                }
                if (this.handlers[format] == null) {
                  if (this.quill.scroll.whitelist != null && this.quill.scroll.whitelist[format] == null) {
                    debug.warn("ignoring attaching to disabled format", format, input);
                    return;
                  }
                  if (_parchment2.default.query(format) == null) {
                    debug.warn("ignoring attaching to nonexistent format", format, input);
                    return;
                  }
                }
                var eventName = input.tagName === "SELECT" ? "change" : "click";
                input.addEventListener(eventName, function(e2) {
                  var value2 = void 0;
                  if (input.tagName === "SELECT") {
                    if (input.selectedIndex < 0)
                      return;
                    var selected = input.options[input.selectedIndex];
                    if (selected.hasAttribute("selected")) {
                      value2 = false;
                    } else {
                      value2 = selected.value || false;
                    }
                  } else {
                    if (input.classList.contains("ql-active")) {
                      value2 = false;
                    } else {
                      value2 = input.value || !input.hasAttribute("value");
                    }
                    e2.preventDefault();
                  }
                  _this2.quill.focus();
                  var _quill$selection$getR = _this2.quill.selection.getRange(), _quill$selection$getR2 = _slicedToArray(_quill$selection$getR, 1), range = _quill$selection$getR2[0];
                  if (_this2.handlers[format] != null) {
                    _this2.handlers[format].call(_this2, value2);
                  } else if (_parchment2.default.query(format).prototype instanceof _parchment2.default.Embed) {
                    value2 = prompt("Enter " + format);
                    if (!value2)
                      return;
                    _this2.quill.updateContents(new _quillDelta2.default().retain(range.index).delete(range.length).insert(_defineProperty({}, format, value2)), _quill2.default.sources.USER);
                  } else {
                    _this2.quill.format(format, value2, _quill2.default.sources.USER);
                  }
                  _this2.update(range);
                });
                this.controls.push([format, input]);
              }
            }, {
              key: "update",
              value: function update2(range) {
                var formats = range == null ? {} : this.quill.getFormat(range);
                this.controls.forEach(function(pair) {
                  var _pair = _slicedToArray(pair, 2), format = _pair[0], input = _pair[1];
                  if (input.tagName === "SELECT") {
                    var option = void 0;
                    if (range == null) {
                      option = null;
                    } else if (formats[format] == null) {
                      option = input.querySelector("option[selected]");
                    } else if (!Array.isArray(formats[format])) {
                      var value2 = formats[format];
                      if (typeof value2 === "string") {
                        value2 = value2.replace(/\"/g, '\\"');
                      }
                      option = input.querySelector('option[value="' + value2 + '"]');
                    }
                    if (option == null) {
                      input.value = "";
                      input.selectedIndex = -1;
                    } else {
                      option.selected = true;
                    }
                  } else {
                    if (range == null) {
                      input.classList.remove("ql-active");
                    } else if (input.hasAttribute("value")) {
                      var isActive = formats[format] === input.getAttribute("value") || formats[format] != null && formats[format].toString() === input.getAttribute("value") || formats[format] == null && !input.getAttribute("value");
                      input.classList.toggle("ql-active", isActive);
                    } else {
                      input.classList.toggle("ql-active", formats[format] != null);
                    }
                  }
                });
              }
            }]);
            return Toolbar2;
          }(_module2.default);
          Toolbar.DEFAULTS = {};
          function addButton(container, format, value2) {
            var input = document.createElement("button");
            input.setAttribute("type", "button");
            input.classList.add("ql-" + format);
            if (value2 != null) {
              input.value = value2;
            }
            container.appendChild(input);
          }
          function addControls(container, groups) {
            if (!Array.isArray(groups[0])) {
              groups = [groups];
            }
            groups.forEach(function(controls) {
              var group = document.createElement("span");
              group.classList.add("ql-formats");
              controls.forEach(function(control) {
                if (typeof control === "string") {
                  addButton(group, control);
                } else {
                  var format = Object.keys(control)[0];
                  var value2 = control[format];
                  if (Array.isArray(value2)) {
                    addSelect(group, format, value2);
                  } else {
                    addButton(group, format, value2);
                  }
                }
              });
              container.appendChild(group);
            });
          }
          function addSelect(container, format, values) {
            var input = document.createElement("select");
            input.classList.add("ql-" + format);
            values.forEach(function(value2) {
              var option = document.createElement("option");
              if (value2 !== false) {
                option.setAttribute("value", value2);
              } else {
                option.setAttribute("selected", "selected");
              }
              input.appendChild(option);
            });
            container.appendChild(input);
          }
          Toolbar.DEFAULTS = {
            container: null,
            handlers: {
              clean: function clean() {
                var _this3 = this;
                var range = this.quill.getSelection();
                if (range == null)
                  return;
                if (range.length == 0) {
                  var formats = this.quill.getFormat();
                  Object.keys(formats).forEach(function(name) {
                    if (_parchment2.default.query(name, _parchment2.default.Scope.INLINE) != null) {
                      _this3.quill.format(name, false);
                    }
                  });
                } else {
                  this.quill.removeFormat(range, _quill2.default.sources.USER);
                }
              },
              direction: function direction(value2) {
                var align = this.quill.getFormat()["align"];
                if (value2 === "rtl" && align == null) {
                  this.quill.format("align", "right", _quill2.default.sources.USER);
                } else if (!value2 && align === "right") {
                  this.quill.format("align", false, _quill2.default.sources.USER);
                }
                this.quill.format("direction", value2, _quill2.default.sources.USER);
              },
              indent: function indent(value2) {
                var range = this.quill.getSelection();
                var formats = this.quill.getFormat(range);
                var indent2 = parseInt(formats.indent || 0);
                if (value2 === "+1" || value2 === "-1") {
                  var modifier = value2 === "+1" ? 1 : -1;
                  if (formats.direction === "rtl")
                    modifier *= -1;
                  this.quill.format("indent", indent2 + modifier, _quill2.default.sources.USER);
                }
              },
              link: function link(value2) {
                if (value2 === true) {
                  value2 = prompt("Enter link URL:");
                }
                this.quill.format("link", value2, _quill2.default.sources.USER);
              },
              list: function list(value2) {
                var range = this.quill.getSelection();
                var formats = this.quill.getFormat(range);
                if (value2 === "check") {
                  if (formats["list"] === "checked" || formats["list"] === "unchecked") {
                    this.quill.format("list", false, _quill2.default.sources.USER);
                  } else {
                    this.quill.format("list", "unchecked", _quill2.default.sources.USER);
                  }
                } else {
                  this.quill.format("list", value2, _quill2.default.sources.USER);
                }
              }
            }
          };
          exports2.default = Toolbar;
          exports2.addControls = addControls;
        },
        function(module2, exports2) {
          module2.exports = '<svg viewbox="0 0 18 18"> <polyline class="ql-even ql-stroke" points="5 7 3 9 5 11"></polyline> <polyline class="ql-even ql-stroke" points="13 7 15 9 13 11"></polyline> <line class=ql-stroke x1=10 x2=8 y1=5 y2=13></line> </svg>';
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          var _get = function get3(object, property, receiver) {
            if (object === null)
              object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get3(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _picker = __webpack_require__(28);
          var _picker2 = _interopRequireDefault(_picker);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var ColorPicker = function(_Picker) {
            _inherits(ColorPicker2, _Picker);
            function ColorPicker2(select, label) {
              _classCallCheck(this, ColorPicker2);
              var _this = _possibleConstructorReturn(this, (ColorPicker2.__proto__ || Object.getPrototypeOf(ColorPicker2)).call(this, select));
              _this.label.innerHTML = label;
              _this.container.classList.add("ql-color-picker");
              [].slice.call(_this.container.querySelectorAll(".ql-picker-item"), 0, 7).forEach(function(item) {
                item.classList.add("ql-primary");
              });
              return _this;
            }
            _createClass(ColorPicker2, [{
              key: "buildItem",
              value: function buildItem(option) {
                var item = _get(ColorPicker2.prototype.__proto__ || Object.getPrototypeOf(ColorPicker2.prototype), "buildItem", this).call(this, option);
                item.style.backgroundColor = option.getAttribute("value") || "";
                return item;
              }
            }, {
              key: "selectItem",
              value: function selectItem(item, trigger) {
                _get(ColorPicker2.prototype.__proto__ || Object.getPrototypeOf(ColorPicker2.prototype), "selectItem", this).call(this, item, trigger);
                var colorLabel = this.label.querySelector(".ql-color-label");
                var value2 = item ? item.getAttribute("data-value") || "" : "";
                if (colorLabel) {
                  if (colorLabel.tagName === "line") {
                    colorLabel.style.stroke = value2;
                  } else {
                    colorLabel.style.fill = value2;
                  }
                }
              }
            }]);
            return ColorPicker2;
          }(_picker2.default);
          exports2.default = ColorPicker;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          var _get = function get3(object, property, receiver) {
            if (object === null)
              object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get3(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _picker = __webpack_require__(28);
          var _picker2 = _interopRequireDefault(_picker);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var IconPicker = function(_Picker) {
            _inherits(IconPicker2, _Picker);
            function IconPicker2(select, icons) {
              _classCallCheck(this, IconPicker2);
              var _this = _possibleConstructorReturn(this, (IconPicker2.__proto__ || Object.getPrototypeOf(IconPicker2)).call(this, select));
              _this.container.classList.add("ql-icon-picker");
              [].forEach.call(_this.container.querySelectorAll(".ql-picker-item"), function(item) {
                item.innerHTML = icons[item.getAttribute("data-value") || ""];
              });
              _this.defaultItem = _this.container.querySelector(".ql-selected");
              _this.selectItem(_this.defaultItem);
              return _this;
            }
            _createClass(IconPicker2, [{
              key: "selectItem",
              value: function selectItem(item, trigger) {
                _get(IconPicker2.prototype.__proto__ || Object.getPrototypeOf(IconPicker2.prototype), "selectItem", this).call(this, item, trigger);
                item = item || this.defaultItem;
                this.label.innerHTML = item.innerHTML;
              }
            }]);
            return IconPicker2;
          }(_picker2.default);
          exports2.default = IconPicker;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          var Tooltip = function() {
            function Tooltip2(quill, boundsContainer) {
              var _this = this;
              _classCallCheck(this, Tooltip2);
              this.quill = quill;
              this.boundsContainer = boundsContainer || document.body;
              this.root = quill.addContainer("ql-tooltip");
              this.root.innerHTML = this.constructor.TEMPLATE;
              if (this.quill.root === this.quill.scrollingContainer) {
                this.quill.root.addEventListener("scroll", function() {
                  _this.root.style.marginTop = -1 * _this.quill.root.scrollTop + "px";
                });
              }
              this.hide();
            }
            _createClass(Tooltip2, [{
              key: "hide",
              value: function hide() {
                this.root.classList.add("ql-hidden");
              }
            }, {
              key: "position",
              value: function position(reference) {
                var left = reference.left + reference.width / 2 - this.root.offsetWidth / 2;
                var top = reference.bottom + this.quill.root.scrollTop;
                this.root.style.left = left + "px";
                this.root.style.top = top + "px";
                this.root.classList.remove("ql-flip");
                var containerBounds = this.boundsContainer.getBoundingClientRect();
                var rootBounds = this.root.getBoundingClientRect();
                var shift = 0;
                if (rootBounds.right > containerBounds.right) {
                  shift = containerBounds.right - rootBounds.right;
                  this.root.style.left = left + shift + "px";
                }
                if (rootBounds.left < containerBounds.left) {
                  shift = containerBounds.left - rootBounds.left;
                  this.root.style.left = left + shift + "px";
                }
                if (rootBounds.bottom > containerBounds.bottom) {
                  var height = rootBounds.bottom - rootBounds.top;
                  var verticalShift = reference.bottom - reference.top + height;
                  this.root.style.top = top - verticalShift + "px";
                  this.root.classList.add("ql-flip");
                }
                return shift;
              }
            }, {
              key: "show",
              value: function show() {
                this.root.classList.remove("ql-editing");
                this.root.classList.remove("ql-hidden");
              }
            }]);
            return Tooltip2;
          }();
          exports2.default = Tooltip;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          var _slicedToArray = function() {
            function sliceIterator(arr, i2) {
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = void 0;
              try {
                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                  _arr.push(_s.value);
                  if (i2 && _arr.length === i2)
                    break;
                }
              } catch (err) {
                _d = true;
                _e = err;
              } finally {
                try {
                  if (!_n && _i["return"])
                    _i["return"]();
                } finally {
                  if (_d)
                    throw _e;
                }
              }
              return _arr;
            }
            return function(arr, i2) {
              if (Array.isArray(arr)) {
                return arr;
              } else if (Symbol.iterator in Object(arr)) {
                return sliceIterator(arr, i2);
              } else {
                throw new TypeError("Invalid attempt to destructure non-iterable instance");
              }
            };
          }();
          var _get = function get3(object, property, receiver) {
            if (object === null)
              object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get3(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          var _extend = __webpack_require__(3);
          var _extend2 = _interopRequireDefault(_extend);
          var _emitter = __webpack_require__(8);
          var _emitter2 = _interopRequireDefault(_emitter);
          var _base = __webpack_require__(43);
          var _base2 = _interopRequireDefault(_base);
          var _link = __webpack_require__(27);
          var _link2 = _interopRequireDefault(_link);
          var _selection = __webpack_require__(15);
          var _icons = __webpack_require__(41);
          var _icons2 = _interopRequireDefault(_icons);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var TOOLBAR_CONFIG = [[{ header: ["1", "2", "3", false] }], ["bold", "italic", "underline", "link"], [{ list: "ordered" }, { list: "bullet" }], ["clean"]];
          var SnowTheme = function(_BaseTheme) {
            _inherits(SnowTheme2, _BaseTheme);
            function SnowTheme2(quill, options2) {
              _classCallCheck(this, SnowTheme2);
              if (options2.modules.toolbar != null && options2.modules.toolbar.container == null) {
                options2.modules.toolbar.container = TOOLBAR_CONFIG;
              }
              var _this = _possibleConstructorReturn(this, (SnowTheme2.__proto__ || Object.getPrototypeOf(SnowTheme2)).call(this, quill, options2));
              _this.quill.container.classList.add("ql-snow");
              return _this;
            }
            _createClass(SnowTheme2, [{
              key: "extendToolbar",
              value: function extendToolbar(toolbar) {
                toolbar.container.classList.add("ql-snow");
                this.buildButtons([].slice.call(toolbar.container.querySelectorAll("button")), _icons2.default);
                this.buildPickers([].slice.call(toolbar.container.querySelectorAll("select")), _icons2.default);
                this.tooltip = new SnowTooltip(this.quill, this.options.bounds);
                if (toolbar.container.querySelector(".ql-link")) {
                  this.quill.keyboard.addBinding({ key: "K", shortKey: true }, function(range, context) {
                    toolbar.handlers["link"].call(toolbar, !context.format.link);
                  });
                }
              }
            }]);
            return SnowTheme2;
          }(_base2.default);
          SnowTheme.DEFAULTS = (0, _extend2.default)(true, {}, _base2.default.DEFAULTS, {
            modules: {
              toolbar: {
                handlers: {
                  link: function link(value2) {
                    if (value2) {
                      var range = this.quill.getSelection();
                      if (range == null || range.length == 0)
                        return;
                      var preview = this.quill.getText(range);
                      if (/^\S+@\S+\.\S+$/.test(preview) && preview.indexOf("mailto:") !== 0) {
                        preview = "mailto:" + preview;
                      }
                      var tooltip = this.quill.theme.tooltip;
                      tooltip.edit("link", preview);
                    } else {
                      this.quill.format("link", false);
                    }
                  }
                }
              }
            }
          });
          var SnowTooltip = function(_BaseTooltip) {
            _inherits(SnowTooltip2, _BaseTooltip);
            function SnowTooltip2(quill, bounds) {
              _classCallCheck(this, SnowTooltip2);
              var _this2 = _possibleConstructorReturn(this, (SnowTooltip2.__proto__ || Object.getPrototypeOf(SnowTooltip2)).call(this, quill, bounds));
              _this2.preview = _this2.root.querySelector("a.ql-preview");
              return _this2;
            }
            _createClass(SnowTooltip2, [{
              key: "listen",
              value: function listen() {
                var _this3 = this;
                _get(SnowTooltip2.prototype.__proto__ || Object.getPrototypeOf(SnowTooltip2.prototype), "listen", this).call(this);
                this.root.querySelector("a.ql-action").addEventListener("click", function(event) {
                  if (_this3.root.classList.contains("ql-editing")) {
                    _this3.save();
                  } else {
                    _this3.edit("link", _this3.preview.textContent);
                  }
                  event.preventDefault();
                });
                this.root.querySelector("a.ql-remove").addEventListener("click", function(event) {
                  if (_this3.linkRange != null) {
                    var range = _this3.linkRange;
                    _this3.restoreFocus();
                    _this3.quill.formatText(range, "link", false, _emitter2.default.sources.USER);
                    delete _this3.linkRange;
                  }
                  event.preventDefault();
                  _this3.hide();
                });
                this.quill.on(_emitter2.default.events.SELECTION_CHANGE, function(range, oldRange, source) {
                  if (range == null)
                    return;
                  if (range.length === 0 && source === _emitter2.default.sources.USER) {
                    var _quill$scroll$descend = _this3.quill.scroll.descendant(_link2.default, range.index), _quill$scroll$descend2 = _slicedToArray(_quill$scroll$descend, 2), link = _quill$scroll$descend2[0], offset = _quill$scroll$descend2[1];
                    if (link != null) {
                      _this3.linkRange = new _selection.Range(range.index - offset, link.length());
                      var preview = _link2.default.formats(link.domNode);
                      _this3.preview.textContent = preview;
                      _this3.preview.setAttribute("href", preview);
                      _this3.show();
                      _this3.position(_this3.quill.getBounds(_this3.linkRange));
                      return;
                    }
                  } else {
                    delete _this3.linkRange;
                  }
                  _this3.hide();
                });
              }
            }, {
              key: "show",
              value: function show() {
                _get(SnowTooltip2.prototype.__proto__ || Object.getPrototypeOf(SnowTooltip2.prototype), "show", this).call(this);
                this.root.removeAttribute("data-mode");
              }
            }]);
            return SnowTooltip2;
          }(_base.BaseTooltip);
          SnowTooltip.TEMPLATE = ['<a class="ql-preview" rel="noopener noreferrer" target="_blank" href="about:blank"></a>', '<input type="text" data-formula="e=mc^2" data-link="https://quilljs.com" data-video="Embed URL">', '<a class="ql-action"></a>', '<a class="ql-remove"></a>'].join("");
          exports2.default = SnowTheme;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          var _core = __webpack_require__(29);
          var _core2 = _interopRequireDefault(_core);
          var _align = __webpack_require__(36);
          var _direction = __webpack_require__(38);
          var _indent = __webpack_require__(64);
          var _blockquote = __webpack_require__(65);
          var _blockquote2 = _interopRequireDefault(_blockquote);
          var _header = __webpack_require__(66);
          var _header2 = _interopRequireDefault(_header);
          var _list = __webpack_require__(67);
          var _list2 = _interopRequireDefault(_list);
          var _background = __webpack_require__(37);
          var _color = __webpack_require__(26);
          var _font = __webpack_require__(39);
          var _size = __webpack_require__(40);
          var _bold = __webpack_require__(56);
          var _bold2 = _interopRequireDefault(_bold);
          var _italic = __webpack_require__(68);
          var _italic2 = _interopRequireDefault(_italic);
          var _link = __webpack_require__(27);
          var _link2 = _interopRequireDefault(_link);
          var _script = __webpack_require__(69);
          var _script2 = _interopRequireDefault(_script);
          var _strike = __webpack_require__(70);
          var _strike2 = _interopRequireDefault(_strike);
          var _underline = __webpack_require__(71);
          var _underline2 = _interopRequireDefault(_underline);
          var _image = __webpack_require__(72);
          var _image2 = _interopRequireDefault(_image);
          var _video = __webpack_require__(73);
          var _video2 = _interopRequireDefault(_video);
          var _code = __webpack_require__(13);
          var _code2 = _interopRequireDefault(_code);
          var _formula = __webpack_require__(74);
          var _formula2 = _interopRequireDefault(_formula);
          var _syntax = __webpack_require__(75);
          var _syntax2 = _interopRequireDefault(_syntax);
          var _toolbar = __webpack_require__(57);
          var _toolbar2 = _interopRequireDefault(_toolbar);
          var _icons = __webpack_require__(41);
          var _icons2 = _interopRequireDefault(_icons);
          var _picker = __webpack_require__(28);
          var _picker2 = _interopRequireDefault(_picker);
          var _colorPicker = __webpack_require__(59);
          var _colorPicker2 = _interopRequireDefault(_colorPicker);
          var _iconPicker = __webpack_require__(60);
          var _iconPicker2 = _interopRequireDefault(_iconPicker);
          var _tooltip = __webpack_require__(61);
          var _tooltip2 = _interopRequireDefault(_tooltip);
          var _bubble = __webpack_require__(108);
          var _bubble2 = _interopRequireDefault(_bubble);
          var _snow = __webpack_require__(62);
          var _snow2 = _interopRequireDefault(_snow);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          _core2.default.register({
            "attributors/attribute/direction": _direction.DirectionAttribute,
            "attributors/class/align": _align.AlignClass,
            "attributors/class/background": _background.BackgroundClass,
            "attributors/class/color": _color.ColorClass,
            "attributors/class/direction": _direction.DirectionClass,
            "attributors/class/font": _font.FontClass,
            "attributors/class/size": _size.SizeClass,
            "attributors/style/align": _align.AlignStyle,
            "attributors/style/background": _background.BackgroundStyle,
            "attributors/style/color": _color.ColorStyle,
            "attributors/style/direction": _direction.DirectionStyle,
            "attributors/style/font": _font.FontStyle,
            "attributors/style/size": _size.SizeStyle
          }, true);
          _core2.default.register({
            "formats/align": _align.AlignClass,
            "formats/direction": _direction.DirectionClass,
            "formats/indent": _indent.IndentClass,
            "formats/background": _background.BackgroundStyle,
            "formats/color": _color.ColorStyle,
            "formats/font": _font.FontClass,
            "formats/size": _size.SizeClass,
            "formats/blockquote": _blockquote2.default,
            "formats/code-block": _code2.default,
            "formats/header": _header2.default,
            "formats/list": _list2.default,
            "formats/bold": _bold2.default,
            "formats/code": _code.Code,
            "formats/italic": _italic2.default,
            "formats/link": _link2.default,
            "formats/script": _script2.default,
            "formats/strike": _strike2.default,
            "formats/underline": _underline2.default,
            "formats/image": _image2.default,
            "formats/video": _video2.default,
            "formats/list/item": _list.ListItem,
            "modules/formula": _formula2.default,
            "modules/syntax": _syntax2.default,
            "modules/toolbar": _toolbar2.default,
            "themes/bubble": _bubble2.default,
            "themes/snow": _snow2.default,
            "ui/icons": _icons2.default,
            "ui/picker": _picker2.default,
            "ui/icon-picker": _iconPicker2.default,
            "ui/color-picker": _colorPicker2.default,
            "ui/tooltip": _tooltip2.default
          }, true);
          exports2.default = _core2.default;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          exports2.IndentClass = void 0;
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          var _get = function get3(object, property, receiver) {
            if (object === null)
              object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get3(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var IdentAttributor = function(_Parchment$Attributor) {
            _inherits(IdentAttributor2, _Parchment$Attributor);
            function IdentAttributor2() {
              _classCallCheck(this, IdentAttributor2);
              return _possibleConstructorReturn(this, (IdentAttributor2.__proto__ || Object.getPrototypeOf(IdentAttributor2)).apply(this, arguments));
            }
            _createClass(IdentAttributor2, [{
              key: "add",
              value: function add(node, value2) {
                if (value2 === "+1" || value2 === "-1") {
                  var indent = this.value(node) || 0;
                  value2 = value2 === "+1" ? indent + 1 : indent - 1;
                }
                if (value2 === 0) {
                  this.remove(node);
                  return true;
                } else {
                  return _get(IdentAttributor2.prototype.__proto__ || Object.getPrototypeOf(IdentAttributor2.prototype), "add", this).call(this, node, value2);
                }
              }
            }, {
              key: "canAdd",
              value: function canAdd(node, value2) {
                return _get(IdentAttributor2.prototype.__proto__ || Object.getPrototypeOf(IdentAttributor2.prototype), "canAdd", this).call(this, node, value2) || _get(IdentAttributor2.prototype.__proto__ || Object.getPrototypeOf(IdentAttributor2.prototype), "canAdd", this).call(this, node, parseInt(value2));
              }
            }, {
              key: "value",
              value: function value2(node) {
                return parseInt(_get(IdentAttributor2.prototype.__proto__ || Object.getPrototypeOf(IdentAttributor2.prototype), "value", this).call(this, node)) || void 0;
              }
            }]);
            return IdentAttributor2;
          }(_parchment2.default.Attributor.Class);
          var IndentClass = new IdentAttributor("indent", "ql-indent", {
            scope: _parchment2.default.Scope.BLOCK,
            whitelist: [1, 2, 3, 4, 5, 6, 7, 8]
          });
          exports2.IndentClass = IndentClass;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          var _block = __webpack_require__(4);
          var _block2 = _interopRequireDefault(_block);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var Blockquote = function(_Block) {
            _inherits(Blockquote2, _Block);
            function Blockquote2() {
              _classCallCheck(this, Blockquote2);
              return _possibleConstructorReturn(this, (Blockquote2.__proto__ || Object.getPrototypeOf(Blockquote2)).apply(this, arguments));
            }
            return Blockquote2;
          }(_block2.default);
          Blockquote.blotName = "blockquote";
          Blockquote.tagName = "blockquote";
          exports2.default = Blockquote;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          var _block = __webpack_require__(4);
          var _block2 = _interopRequireDefault(_block);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var Header = function(_Block) {
            _inherits(Header2, _Block);
            function Header2() {
              _classCallCheck(this, Header2);
              return _possibleConstructorReturn(this, (Header2.__proto__ || Object.getPrototypeOf(Header2)).apply(this, arguments));
            }
            _createClass(Header2, null, [{
              key: "formats",
              value: function formats(domNode) {
                return this.tagName.indexOf(domNode.tagName) + 1;
              }
            }]);
            return Header2;
          }(_block2.default);
          Header.blotName = "header";
          Header.tagName = ["H1", "H2", "H3", "H4", "H5", "H6"];
          exports2.default = Header;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          exports2.default = exports2.ListItem = void 0;
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          var _get = function get3(object, property, receiver) {
            if (object === null)
              object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get3(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _block = __webpack_require__(4);
          var _block2 = _interopRequireDefault(_block);
          var _container = __webpack_require__(25);
          var _container2 = _interopRequireDefault(_container);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _defineProperty(obj, key2, value2) {
            if (key2 in obj) {
              Object.defineProperty(obj, key2, { value: value2, enumerable: true, configurable: true, writable: true });
            } else {
              obj[key2] = value2;
            }
            return obj;
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var ListItem = function(_Block) {
            _inherits(ListItem2, _Block);
            function ListItem2() {
              _classCallCheck(this, ListItem2);
              return _possibleConstructorReturn(this, (ListItem2.__proto__ || Object.getPrototypeOf(ListItem2)).apply(this, arguments));
            }
            _createClass(ListItem2, [{
              key: "format",
              value: function format(name, value2) {
                if (name === List.blotName && !value2) {
                  this.replaceWith(_parchment2.default.create(this.statics.scope));
                } else {
                  _get(ListItem2.prototype.__proto__ || Object.getPrototypeOf(ListItem2.prototype), "format", this).call(this, name, value2);
                }
              }
            }, {
              key: "remove",
              value: function remove2() {
                if (this.prev == null && this.next == null) {
                  this.parent.remove();
                } else {
                  _get(ListItem2.prototype.__proto__ || Object.getPrototypeOf(ListItem2.prototype), "remove", this).call(this);
                }
              }
            }, {
              key: "replaceWith",
              value: function replaceWith(name, value2) {
                this.parent.isolate(this.offset(this.parent), this.length());
                if (name === this.parent.statics.blotName) {
                  this.parent.replaceWith(name, value2);
                  return this;
                } else {
                  this.parent.unwrap();
                  return _get(ListItem2.prototype.__proto__ || Object.getPrototypeOf(ListItem2.prototype), "replaceWith", this).call(this, name, value2);
                }
              }
            }], [{
              key: "formats",
              value: function formats(domNode) {
                return domNode.tagName === this.tagName ? void 0 : _get(ListItem2.__proto__ || Object.getPrototypeOf(ListItem2), "formats", this).call(this, domNode);
              }
            }]);
            return ListItem2;
          }(_block2.default);
          ListItem.blotName = "list-item";
          ListItem.tagName = "LI";
          var List = function(_Container) {
            _inherits(List2, _Container);
            _createClass(List2, null, [{
              key: "create",
              value: function create(value2) {
                var tagName = value2 === "ordered" ? "OL" : "UL";
                var node = _get(List2.__proto__ || Object.getPrototypeOf(List2), "create", this).call(this, tagName);
                if (value2 === "checked" || value2 === "unchecked") {
                  node.setAttribute("data-checked", value2 === "checked");
                }
                return node;
              }
            }, {
              key: "formats",
              value: function formats(domNode) {
                if (domNode.tagName === "OL")
                  return "ordered";
                if (domNode.tagName === "UL") {
                  if (domNode.hasAttribute("data-checked")) {
                    return domNode.getAttribute("data-checked") === "true" ? "checked" : "unchecked";
                  } else {
                    return "bullet";
                  }
                }
                return void 0;
              }
            }]);
            function List2(domNode) {
              _classCallCheck(this, List2);
              var _this2 = _possibleConstructorReturn(this, (List2.__proto__ || Object.getPrototypeOf(List2)).call(this, domNode));
              var listEventHandler = function listEventHandler2(e2) {
                if (e2.target.parentNode !== domNode)
                  return;
                var format = _this2.statics.formats(domNode);
                var blot = _parchment2.default.find(e2.target);
                if (format === "checked") {
                  blot.format("list", "unchecked");
                } else if (format === "unchecked") {
                  blot.format("list", "checked");
                }
              };
              domNode.addEventListener("touchstart", listEventHandler);
              domNode.addEventListener("mousedown", listEventHandler);
              return _this2;
            }
            _createClass(List2, [{
              key: "format",
              value: function format(name, value2) {
                if (this.children.length > 0) {
                  this.children.tail.format(name, value2);
                }
              }
            }, {
              key: "formats",
              value: function formats() {
                return _defineProperty({}, this.statics.blotName, this.statics.formats(this.domNode));
              }
            }, {
              key: "insertBefore",
              value: function insertBefore(blot, ref) {
                if (blot instanceof ListItem) {
                  _get(List2.prototype.__proto__ || Object.getPrototypeOf(List2.prototype), "insertBefore", this).call(this, blot, ref);
                } else {
                  var index28 = ref == null ? this.length() : ref.offset(this);
                  var after = this.split(index28);
                  after.parent.insertBefore(blot, after);
                }
              }
            }, {
              key: "optimize",
              value: function optimize(context) {
                _get(List2.prototype.__proto__ || Object.getPrototypeOf(List2.prototype), "optimize", this).call(this, context);
                var next = this.next;
                if (next != null && next.prev === this && next.statics.blotName === this.statics.blotName && next.domNode.tagName === this.domNode.tagName && next.domNode.getAttribute("data-checked") === this.domNode.getAttribute("data-checked")) {
                  next.moveChildren(this);
                  next.remove();
                }
              }
            }, {
              key: "replace",
              value: function replace(target) {
                if (target.statics.blotName !== this.statics.blotName) {
                  var item = _parchment2.default.create(this.statics.defaultChild);
                  target.moveChildren(item);
                  this.appendChild(item);
                }
                _get(List2.prototype.__proto__ || Object.getPrototypeOf(List2.prototype), "replace", this).call(this, target);
              }
            }]);
            return List2;
          }(_container2.default);
          List.blotName = "list";
          List.scope = _parchment2.default.Scope.BLOCK_BLOT;
          List.tagName = ["OL", "UL"];
          List.defaultChild = "list-item";
          List.allowedChildren = [ListItem];
          exports2.ListItem = ListItem;
          exports2.default = List;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          var _bold = __webpack_require__(56);
          var _bold2 = _interopRequireDefault(_bold);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var Italic = function(_Bold) {
            _inherits(Italic2, _Bold);
            function Italic2() {
              _classCallCheck(this, Italic2);
              return _possibleConstructorReturn(this, (Italic2.__proto__ || Object.getPrototypeOf(Italic2)).apply(this, arguments));
            }
            return Italic2;
          }(_bold2.default);
          Italic.blotName = "italic";
          Italic.tagName = ["EM", "I"];
          exports2.default = Italic;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          var _get = function get3(object, property, receiver) {
            if (object === null)
              object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get3(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _inline = __webpack_require__(6);
          var _inline2 = _interopRequireDefault(_inline);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var Script = function(_Inline) {
            _inherits(Script2, _Inline);
            function Script2() {
              _classCallCheck(this, Script2);
              return _possibleConstructorReturn(this, (Script2.__proto__ || Object.getPrototypeOf(Script2)).apply(this, arguments));
            }
            _createClass(Script2, null, [{
              key: "create",
              value: function create(value2) {
                if (value2 === "super") {
                  return document.createElement("sup");
                } else if (value2 === "sub") {
                  return document.createElement("sub");
                } else {
                  return _get(Script2.__proto__ || Object.getPrototypeOf(Script2), "create", this).call(this, value2);
                }
              }
            }, {
              key: "formats",
              value: function formats(domNode) {
                if (domNode.tagName === "SUB")
                  return "sub";
                if (domNode.tagName === "SUP")
                  return "super";
                return void 0;
              }
            }]);
            return Script2;
          }(_inline2.default);
          Script.blotName = "script";
          Script.tagName = ["SUB", "SUP"];
          exports2.default = Script;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          var _inline = __webpack_require__(6);
          var _inline2 = _interopRequireDefault(_inline);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var Strike = function(_Inline) {
            _inherits(Strike2, _Inline);
            function Strike2() {
              _classCallCheck(this, Strike2);
              return _possibleConstructorReturn(this, (Strike2.__proto__ || Object.getPrototypeOf(Strike2)).apply(this, arguments));
            }
            return Strike2;
          }(_inline2.default);
          Strike.blotName = "strike";
          Strike.tagName = "S";
          exports2.default = Strike;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          var _inline = __webpack_require__(6);
          var _inline2 = _interopRequireDefault(_inline);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var Underline = function(_Inline) {
            _inherits(Underline2, _Inline);
            function Underline2() {
              _classCallCheck(this, Underline2);
              return _possibleConstructorReturn(this, (Underline2.__proto__ || Object.getPrototypeOf(Underline2)).apply(this, arguments));
            }
            return Underline2;
          }(_inline2.default);
          Underline.blotName = "underline";
          Underline.tagName = "U";
          exports2.default = Underline;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          var _get = function get3(object, property, receiver) {
            if (object === null)
              object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get3(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _link = __webpack_require__(27);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var ATTRIBUTES = ["alt", "height", "width"];
          var Image2 = function(_Parchment$Embed) {
            _inherits(Image3, _Parchment$Embed);
            function Image3() {
              _classCallCheck(this, Image3);
              return _possibleConstructorReturn(this, (Image3.__proto__ || Object.getPrototypeOf(Image3)).apply(this, arguments));
            }
            _createClass(Image3, [{
              key: "format",
              value: function format(name, value2) {
                if (ATTRIBUTES.indexOf(name) > -1) {
                  if (value2) {
                    this.domNode.setAttribute(name, value2);
                  } else {
                    this.domNode.removeAttribute(name);
                  }
                } else {
                  _get(Image3.prototype.__proto__ || Object.getPrototypeOf(Image3.prototype), "format", this).call(this, name, value2);
                }
              }
            }], [{
              key: "create",
              value: function create(value2) {
                var node = _get(Image3.__proto__ || Object.getPrototypeOf(Image3), "create", this).call(this, value2);
                if (typeof value2 === "string") {
                  node.setAttribute("src", this.sanitize(value2));
                }
                return node;
              }
            }, {
              key: "formats",
              value: function formats(domNode) {
                return ATTRIBUTES.reduce(function(formats2, attribute) {
                  if (domNode.hasAttribute(attribute)) {
                    formats2[attribute] = domNode.getAttribute(attribute);
                  }
                  return formats2;
                }, {});
              }
            }, {
              key: "match",
              value: function match(url) {
                return /\.(jpe?g|gif|png)$/.test(url) || /^data:image\/.+;base64/.test(url);
              }
            }, {
              key: "sanitize",
              value: function sanitize(url) {
                return (0, _link.sanitize)(url, ["http", "https", "data"]) ? url : "//:0";
              }
            }, {
              key: "value",
              value: function value2(domNode) {
                return domNode.getAttribute("src");
              }
            }]);
            return Image3;
          }(_parchment2.default.Embed);
          Image2.blotName = "image";
          Image2.tagName = "IMG";
          exports2.default = Image2;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          var _get = function get3(object, property, receiver) {
            if (object === null)
              object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get3(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _block = __webpack_require__(4);
          var _link = __webpack_require__(27);
          var _link2 = _interopRequireDefault(_link);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var ATTRIBUTES = ["height", "width"];
          var Video = function(_BlockEmbed) {
            _inherits(Video2, _BlockEmbed);
            function Video2() {
              _classCallCheck(this, Video2);
              return _possibleConstructorReturn(this, (Video2.__proto__ || Object.getPrototypeOf(Video2)).apply(this, arguments));
            }
            _createClass(Video2, [{
              key: "format",
              value: function format(name, value2) {
                if (ATTRIBUTES.indexOf(name) > -1) {
                  if (value2) {
                    this.domNode.setAttribute(name, value2);
                  } else {
                    this.domNode.removeAttribute(name);
                  }
                } else {
                  _get(Video2.prototype.__proto__ || Object.getPrototypeOf(Video2.prototype), "format", this).call(this, name, value2);
                }
              }
            }], [{
              key: "create",
              value: function create(value2) {
                var node = _get(Video2.__proto__ || Object.getPrototypeOf(Video2), "create", this).call(this, value2);
                node.setAttribute("frameborder", "0");
                node.setAttribute("allowfullscreen", true);
                node.setAttribute("src", this.sanitize(value2));
                return node;
              }
            }, {
              key: "formats",
              value: function formats(domNode) {
                return ATTRIBUTES.reduce(function(formats2, attribute) {
                  if (domNode.hasAttribute(attribute)) {
                    formats2[attribute] = domNode.getAttribute(attribute);
                  }
                  return formats2;
                }, {});
              }
            }, {
              key: "sanitize",
              value: function sanitize(url) {
                return _link2.default.sanitize(url);
              }
            }, {
              key: "value",
              value: function value2(domNode) {
                return domNode.getAttribute("src");
              }
            }]);
            return Video2;
          }(_block.BlockEmbed);
          Video.blotName = "video";
          Video.className = "ql-video";
          Video.tagName = "IFRAME";
          exports2.default = Video;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          exports2.default = exports2.FormulaBlot = void 0;
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          var _get = function get3(object, property, receiver) {
            if (object === null)
              object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get3(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _embed = __webpack_require__(35);
          var _embed2 = _interopRequireDefault(_embed);
          var _quill = __webpack_require__(5);
          var _quill2 = _interopRequireDefault(_quill);
          var _module = __webpack_require__(9);
          var _module2 = _interopRequireDefault(_module);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var FormulaBlot = function(_Embed) {
            _inherits(FormulaBlot2, _Embed);
            function FormulaBlot2() {
              _classCallCheck(this, FormulaBlot2);
              return _possibleConstructorReturn(this, (FormulaBlot2.__proto__ || Object.getPrototypeOf(FormulaBlot2)).apply(this, arguments));
            }
            _createClass(FormulaBlot2, null, [{
              key: "create",
              value: function create(value2) {
                var node = _get(FormulaBlot2.__proto__ || Object.getPrototypeOf(FormulaBlot2), "create", this).call(this, value2);
                if (typeof value2 === "string") {
                  window.katex.render(value2, node, {
                    throwOnError: false,
                    errorColor: "#f00"
                  });
                  node.setAttribute("data-value", value2);
                }
                return node;
              }
            }, {
              key: "value",
              value: function value2(domNode) {
                return domNode.getAttribute("data-value");
              }
            }]);
            return FormulaBlot2;
          }(_embed2.default);
          FormulaBlot.blotName = "formula";
          FormulaBlot.className = "ql-formula";
          FormulaBlot.tagName = "SPAN";
          var Formula = function(_Module) {
            _inherits(Formula2, _Module);
            _createClass(Formula2, null, [{
              key: "register",
              value: function register() {
                _quill2.default.register(FormulaBlot, true);
              }
            }]);
            function Formula2() {
              _classCallCheck(this, Formula2);
              var _this2 = _possibleConstructorReturn(this, (Formula2.__proto__ || Object.getPrototypeOf(Formula2)).call(this));
              if (window.katex == null) {
                throw new Error("Formula module requires KaTeX.");
              }
              return _this2;
            }
            return Formula2;
          }(_module2.default);
          exports2.FormulaBlot = FormulaBlot;
          exports2.default = Formula;
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          exports2.default = exports2.CodeToken = exports2.CodeBlock = void 0;
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          var _get = function get3(object, property, receiver) {
            if (object === null)
              object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get3(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _parchment = __webpack_require__(0);
          var _parchment2 = _interopRequireDefault(_parchment);
          var _quill = __webpack_require__(5);
          var _quill2 = _interopRequireDefault(_quill);
          var _module = __webpack_require__(9);
          var _module2 = _interopRequireDefault(_module);
          var _code = __webpack_require__(13);
          var _code2 = _interopRequireDefault(_code);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var SyntaxCodeBlock = function(_CodeBlock) {
            _inherits(SyntaxCodeBlock2, _CodeBlock);
            function SyntaxCodeBlock2() {
              _classCallCheck(this, SyntaxCodeBlock2);
              return _possibleConstructorReturn(this, (SyntaxCodeBlock2.__proto__ || Object.getPrototypeOf(SyntaxCodeBlock2)).apply(this, arguments));
            }
            _createClass(SyntaxCodeBlock2, [{
              key: "replaceWith",
              value: function replaceWith(block) {
                this.domNode.textContent = this.domNode.textContent;
                this.attach();
                _get(SyntaxCodeBlock2.prototype.__proto__ || Object.getPrototypeOf(SyntaxCodeBlock2.prototype), "replaceWith", this).call(this, block);
              }
            }, {
              key: "highlight",
              value: function highlight(_highlight) {
                var text2 = this.domNode.textContent;
                if (this.cachedText !== text2) {
                  if (text2.trim().length > 0 || this.cachedText == null) {
                    this.domNode.innerHTML = _highlight(text2);
                    this.domNode.normalize();
                    this.attach();
                  }
                  this.cachedText = text2;
                }
              }
            }]);
            return SyntaxCodeBlock2;
          }(_code2.default);
          SyntaxCodeBlock.className = "ql-syntax";
          var CodeToken = new _parchment2.default.Attributor.Class("token", "hljs", {
            scope: _parchment2.default.Scope.INLINE
          });
          var Syntax = function(_Module) {
            _inherits(Syntax2, _Module);
            _createClass(Syntax2, null, [{
              key: "register",
              value: function register() {
                _quill2.default.register(CodeToken, true);
                _quill2.default.register(SyntaxCodeBlock, true);
              }
            }]);
            function Syntax2(quill, options2) {
              _classCallCheck(this, Syntax2);
              var _this2 = _possibleConstructorReturn(this, (Syntax2.__proto__ || Object.getPrototypeOf(Syntax2)).call(this, quill, options2));
              if (typeof _this2.options.highlight !== "function") {
                throw new Error("Syntax module requires highlight.js. Please include the library on the page before Quill.");
              }
              var timer = null;
              _this2.quill.on(_quill2.default.events.SCROLL_OPTIMIZE, function() {
                clearTimeout(timer);
                timer = setTimeout(function() {
                  _this2.highlight();
                  timer = null;
                }, _this2.options.interval);
              });
              _this2.highlight();
              return _this2;
            }
            _createClass(Syntax2, [{
              key: "highlight",
              value: function highlight() {
                var _this3 = this;
                if (this.quill.selection.composing)
                  return;
                this.quill.update(_quill2.default.sources.USER);
                var range = this.quill.getSelection();
                this.quill.scroll.descendants(SyntaxCodeBlock).forEach(function(code) {
                  code.highlight(_this3.options.highlight);
                });
                this.quill.update(_quill2.default.sources.SILENT);
                if (range != null) {
                  this.quill.setSelection(range, _quill2.default.sources.SILENT);
                }
              }
            }]);
            return Syntax2;
          }(_module2.default);
          Syntax.DEFAULTS = {
            highlight: function() {
              if (window.hljs == null)
                return null;
              return function(text2) {
                var result = window.hljs.highlightAuto(text2);
                return result.value;
              };
            }(),
            interval: 1e3
          };
          exports2.CodeBlock = SyntaxCodeBlock;
          exports2.CodeToken = CodeToken;
          exports2.default = Syntax;
        },
        function(module2, exports2) {
          module2.exports = '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=3 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=3 x2=13 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=9 y1=4 y2=4></line> </svg>';
        },
        function(module2, exports2) {
          module2.exports = '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=14 x2=4 y1=14 y2=14></line> <line class=ql-stroke x1=12 x2=6 y1=4 y2=4></line> </svg>';
        },
        function(module2, exports2) {
          module2.exports = '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=15 x2=5 y1=14 y2=14></line> <line class=ql-stroke x1=15 x2=9 y1=4 y2=4></line> </svg>';
        },
        function(module2, exports2) {
          module2.exports = '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=15 x2=3 y1=14 y2=14></line> <line class=ql-stroke x1=15 x2=3 y1=4 y2=4></line> </svg>';
        },
        function(module2, exports2) {
          module2.exports = '<svg viewbox="0 0 18 18"> <g class="ql-fill ql-color-label"> <polygon points="6 6.868 6 6 5 6 5 7 5.942 7 6 6.868"></polygon> <rect height=1 width=1 x=4 y=4></rect> <polygon points="6.817 5 6 5 6 6 6.38 6 6.817 5"></polygon> <rect height=1 width=1 x=2 y=6></rect> <rect height=1 width=1 x=3 y=5></rect> <rect height=1 width=1 x=4 y=7></rect> <polygon points="4 11.439 4 11 3 11 3 12 3.755 12 4 11.439"></polygon> <rect height=1 width=1 x=2 y=12></rect> <rect height=1 width=1 x=2 y=9></rect> <rect height=1 width=1 x=2 y=15></rect> <polygon points="4.63 10 4 10 4 11 4.192 11 4.63 10"></polygon> <rect height=1 width=1 x=3 y=8></rect> <path d=M10.832,4.2L11,4.582V4H10.708A1.948,1.948,0,0,1,10.832,4.2Z></path> <path d=M7,4.582L7.168,4.2A1.929,1.929,0,0,1,7.292,4H7V4.582Z></path> <path d=M8,13H7.683l-0.351.8a1.933,1.933,0,0,1-.124.2H8V13Z></path> <rect height=1 width=1 x=12 y=2></rect> <rect height=1 width=1 x=11 y=3></rect> <path d=M9,3H8V3.282A1.985,1.985,0,0,1,9,3Z></path> <rect height=1 width=1 x=2 y=3></rect> <rect height=1 width=1 x=6 y=2></rect> <rect height=1 width=1 x=3 y=2></rect> <rect height=1 width=1 x=5 y=3></rect> <rect height=1 width=1 x=9 y=2></rect> <rect height=1 width=1 x=15 y=14></rect> <polygon points="13.447 10.174 13.469 10.225 13.472 10.232 13.808 11 14 11 14 10 13.37 10 13.447 10.174"></polygon> <rect height=1 width=1 x=13 y=7></rect> <rect height=1 width=1 x=15 y=5></rect> <rect height=1 width=1 x=14 y=6></rect> <rect height=1 width=1 x=15 y=8></rect> <rect height=1 width=1 x=14 y=9></rect> <path d=M3.775,14H3v1H4V14.314A1.97,1.97,0,0,1,3.775,14Z></path> <rect height=1 width=1 x=14 y=3></rect> <polygon points="12 6.868 12 6 11.62 6 12 6.868"></polygon> <rect height=1 width=1 x=15 y=2></rect> <rect height=1 width=1 x=12 y=5></rect> <rect height=1 width=1 x=13 y=4></rect> <polygon points="12.933 9 13 9 13 8 12.495 8 12.933 9"></polygon> <rect height=1 width=1 x=9 y=14></rect> <rect height=1 width=1 x=8 y=15></rect> <path d=M6,14.926V15H7V14.316A1.993,1.993,0,0,1,6,14.926Z></path> <rect height=1 width=1 x=5 y=15></rect> <path d=M10.668,13.8L10.317,13H10v1h0.792A1.947,1.947,0,0,1,10.668,13.8Z></path> <rect height=1 width=1 x=11 y=15></rect> <path d=M14.332,12.2a1.99,1.99,0,0,1,.166.8H15V12H14.245Z></path> <rect height=1 width=1 x=14 y=15></rect> <rect height=1 width=1 x=15 y=11></rect> </g> <polyline class=ql-stroke points="5.5 13 9 5 12.5 13"></polyline> <line class=ql-stroke x1=11.63 x2=6.38 y1=11 y2=11></line> </svg>';
        },
        function(module2, exports2) {
          module2.exports = '<svg viewbox="0 0 18 18"> <rect class="ql-fill ql-stroke" height=3 width=3 x=4 y=5></rect> <rect class="ql-fill ql-stroke" height=3 width=3 x=11 y=5></rect> <path class="ql-even ql-fill ql-stroke" d=M7,8c0,4.031-3,5-3,5></path> <path class="ql-even ql-fill ql-stroke" d=M14,8c0,4.031-3,5-3,5></path> </svg>';
        },
        function(module2, exports2) {
          module2.exports = '<svg viewbox="0 0 18 18"> <path class=ql-stroke d=M5,4H9.5A2.5,2.5,0,0,1,12,6.5v0A2.5,2.5,0,0,1,9.5,9H5A0,0,0,0,1,5,9V4A0,0,0,0,1,5,4Z></path> <path class=ql-stroke d=M5,9h5.5A2.5,2.5,0,0,1,13,11.5v0A2.5,2.5,0,0,1,10.5,14H5a0,0,0,0,1,0,0V9A0,0,0,0,1,5,9Z></path> </svg>';
        },
        function(module2, exports2) {
          module2.exports = '<svg class="" viewbox="0 0 18 18"> <line class=ql-stroke x1=5 x2=13 y1=3 y2=3></line> <line class=ql-stroke x1=6 x2=9.35 y1=12 y2=3></line> <line class=ql-stroke x1=11 x2=15 y1=11 y2=15></line> <line class=ql-stroke x1=15 x2=11 y1=11 y2=15></line> <rect class=ql-fill height=1 rx=0.5 ry=0.5 width=7 x=2 y=14></rect> </svg>';
        },
        function(module2, exports2) {
          module2.exports = '<svg viewbox="0 0 18 18"> <line class="ql-color-label ql-stroke ql-transparent" x1=3 x2=15 y1=15 y2=15></line> <polyline class=ql-stroke points="5.5 11 9 3 12.5 11"></polyline> <line class=ql-stroke x1=11.63 x2=6.38 y1=9 y2=9></line> </svg>';
        },
        function(module2, exports2) {
          module2.exports = '<svg viewbox="0 0 18 18"> <polygon class="ql-stroke ql-fill" points="3 11 5 9 3 7 3 11"></polygon> <line class="ql-stroke ql-fill" x1=15 x2=11 y1=4 y2=4></line> <path class=ql-fill d=M11,3a3,3,0,0,0,0,6h1V3H11Z></path> <rect class=ql-fill height=11 width=1 x=11 y=4></rect> <rect class=ql-fill height=11 width=1 x=13 y=4></rect> </svg>';
        },
        function(module2, exports2) {
          module2.exports = '<svg viewbox="0 0 18 18"> <polygon class="ql-stroke ql-fill" points="15 12 13 10 15 8 15 12"></polygon> <line class="ql-stroke ql-fill" x1=9 x2=5 y1=4 y2=4></line> <path class=ql-fill d=M5,3A3,3,0,0,0,5,9H6V3H5Z></path> <rect class=ql-fill height=11 width=1 x=5 y=4></rect> <rect class=ql-fill height=11 width=1 x=7 y=4></rect> </svg>';
        },
        function(module2, exports2) {
          module2.exports = '<svg viewbox="0 0 18 18"> <path class=ql-fill d=M14,16H4a1,1,0,0,1,0-2H14A1,1,0,0,1,14,16Z /> <path class=ql-fill d=M14,4H4A1,1,0,0,1,4,2H14A1,1,0,0,1,14,4Z /> <rect class=ql-fill x=3 y=6 width=12 height=6 rx=1 ry=1 /> </svg>';
        },
        function(module2, exports2) {
          module2.exports = '<svg viewbox="0 0 18 18"> <path class=ql-fill d=M13,16H5a1,1,0,0,1,0-2h8A1,1,0,0,1,13,16Z /> <path class=ql-fill d=M13,4H5A1,1,0,0,1,5,2h8A1,1,0,0,1,13,4Z /> <rect class=ql-fill x=2 y=6 width=14 height=6 rx=1 ry=1 /> </svg>';
        },
        function(module2, exports2) {
          module2.exports = '<svg viewbox="0 0 18 18"> <path class=ql-fill d=M15,8H13a1,1,0,0,1,0-2h2A1,1,0,0,1,15,8Z /> <path class=ql-fill d=M15,12H13a1,1,0,0,1,0-2h2A1,1,0,0,1,15,12Z /> <path class=ql-fill d=M15,16H5a1,1,0,0,1,0-2H15A1,1,0,0,1,15,16Z /> <path class=ql-fill d=M15,4H5A1,1,0,0,1,5,2H15A1,1,0,0,1,15,4Z /> <rect class=ql-fill x=2 y=6 width=8 height=6 rx=1 ry=1 /> </svg>';
        },
        function(module2, exports2) {
          module2.exports = '<svg viewbox="0 0 18 18"> <path class=ql-fill d=M5,8H3A1,1,0,0,1,3,6H5A1,1,0,0,1,5,8Z /> <path class=ql-fill d=M5,12H3a1,1,0,0,1,0-2H5A1,1,0,0,1,5,12Z /> <path class=ql-fill d=M13,16H3a1,1,0,0,1,0-2H13A1,1,0,0,1,13,16Z /> <path class=ql-fill d=M13,4H3A1,1,0,0,1,3,2H13A1,1,0,0,1,13,4Z /> <rect class=ql-fill x=8 y=6 width=8 height=6 rx=1 ry=1 transform="translate(24 18) rotate(-180)"/> </svg>';
        },
        function(module2, exports2) {
          module2.exports = '<svg viewbox="0 0 18 18"> <path class=ql-fill d=M11.759,2.482a2.561,2.561,0,0,0-3.53.607A7.656,7.656,0,0,0,6.8,6.2C6.109,9.188,5.275,14.677,4.15,14.927a1.545,1.545,0,0,0-1.3-.933A0.922,0.922,0,0,0,2,15.036S1.954,16,4.119,16s3.091-2.691,3.7-5.553c0.177-.826.36-1.726,0.554-2.6L8.775,6.2c0.381-1.421.807-2.521,1.306-2.676a1.014,1.014,0,0,0,1.02.56A0.966,0.966,0,0,0,11.759,2.482Z></path> <rect class=ql-fill height=1.6 rx=0.8 ry=0.8 width=5 x=5.15 y=6.2></rect> <path class=ql-fill d=M13.663,12.027a1.662,1.662,0,0,1,.266-0.276q0.193,0.069.456,0.138a2.1,2.1,0,0,0,.535.069,1.075,1.075,0,0,0,.767-0.3,1.044,1.044,0,0,0,.314-0.8,0.84,0.84,0,0,0-.238-0.619,0.8,0.8,0,0,0-.594-0.239,1.154,1.154,0,0,0-.781.3,4.607,4.607,0,0,0-.781,1q-0.091.15-.218,0.346l-0.246.38c-0.068-.288-0.137-0.582-0.212-0.885-0.459-1.847-2.494-.984-2.941-0.8-0.482.2-.353,0.647-0.094,0.529a0.869,0.869,0,0,1,1.281.585c0.217,0.751.377,1.436,0.527,2.038a5.688,5.688,0,0,1-.362.467,2.69,2.69,0,0,1-.264.271q-0.221-.08-0.471-0.147a2.029,2.029,0,0,0-.522-0.066,1.079,1.079,0,0,0-.768.3A1.058,1.058,0,0,0,9,15.131a0.82,0.82,0,0,0,.832.852,1.134,1.134,0,0,0,.787-0.3,5.11,5.11,0,0,0,.776-0.993q0.141-.219.215-0.34c0.046-.076.122-0.194,0.223-0.346a2.786,2.786,0,0,0,.918,1.726,2.582,2.582,0,0,0,2.376-.185c0.317-.181.212-0.565,0-0.494A0.807,0.807,0,0,1,14.176,15a5.159,5.159,0,0,1-.913-2.446l0,0Q13.487,12.24,13.663,12.027Z></path> </svg>';
        },
        function(module2, exports2) {
          module2.exports = '<svg viewBox="0 0 18 18"> <path class=ql-fill d=M10,4V14a1,1,0,0,1-2,0V10H3v4a1,1,0,0,1-2,0V4A1,1,0,0,1,3,4V8H8V4a1,1,0,0,1,2,0Zm6.06787,9.209H14.98975V7.59863a.54085.54085,0,0,0-.605-.60547h-.62744a1.01119,1.01119,0,0,0-.748.29688L11.645,8.56641a.5435.5435,0,0,0-.022.8584l.28613.30762a.53861.53861,0,0,0,.84717.0332l.09912-.08789a1.2137,1.2137,0,0,0,.2417-.35254h.02246s-.01123.30859-.01123.60547V13.209H12.041a.54085.54085,0,0,0-.605.60547v.43945a.54085.54085,0,0,0,.605.60547h4.02686a.54085.54085,0,0,0,.605-.60547v-.43945A.54085.54085,0,0,0,16.06787,13.209Z /> </svg>';
        },
        function(module2, exports2) {
          module2.exports = '<svg viewBox="0 0 18 18"> <path class=ql-fill d=M16.73975,13.81445v.43945a.54085.54085,0,0,1-.605.60547H11.855a.58392.58392,0,0,1-.64893-.60547V14.0127c0-2.90527,3.39941-3.42187,3.39941-4.55469a.77675.77675,0,0,0-.84717-.78125,1.17684,1.17684,0,0,0-.83594.38477c-.2749.26367-.561.374-.85791.13184l-.4292-.34082c-.30811-.24219-.38525-.51758-.1543-.81445a2.97155,2.97155,0,0,1,2.45361-1.17676,2.45393,2.45393,0,0,1,2.68408,2.40918c0,2.45312-3.1792,2.92676-3.27832,3.93848h2.79443A.54085.54085,0,0,1,16.73975,13.81445ZM9,3A.99974.99974,0,0,0,8,4V8H3V4A1,1,0,0,0,1,4V14a1,1,0,0,0,2,0V10H8v4a1,1,0,0,0,2,0V4A.99974.99974,0,0,0,9,3Z /> </svg>';
        },
        function(module2, exports2) {
          module2.exports = '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=7 x2=13 y1=4 y2=4></line> <line class=ql-stroke x1=5 x2=11 y1=14 y2=14></line> <line class=ql-stroke x1=8 x2=10 y1=14 y2=4></line> </svg>';
        },
        function(module2, exports2) {
          module2.exports = '<svg viewbox="0 0 18 18"> <rect class=ql-stroke height=10 width=12 x=3 y=4></rect> <circle class=ql-fill cx=6 cy=7 r=1></circle> <polyline class="ql-even ql-fill" points="5 12 5 11 7 9 8 10 11 7 13 9 13 12 5 12"></polyline> </svg>';
        },
        function(module2, exports2) {
          module2.exports = '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=3 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class="ql-fill ql-stroke" points="3 7 3 11 5 9 3 7"></polyline> </svg>';
        },
        function(module2, exports2) {
          module2.exports = '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=3 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class=ql-stroke points="5 7 5 11 3 9 5 7"></polyline> </svg>';
        },
        function(module2, exports2) {
          module2.exports = '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=7 x2=11 y1=7 y2=11></line> <path class="ql-even ql-stroke" d=M8.9,4.577a3.476,3.476,0,0,1,.36,4.679A3.476,3.476,0,0,1,4.577,8.9C3.185,7.5,2.035,6.4,4.217,4.217S7.5,3.185,8.9,4.577Z></path> <path class="ql-even ql-stroke" d=M13.423,9.1a3.476,3.476,0,0,0-4.679-.36,3.476,3.476,0,0,0,.36,4.679c1.392,1.392,2.5,2.542,4.679.36S14.815,10.5,13.423,9.1Z></path> </svg>';
        },
        function(module2, exports2) {
          module2.exports = '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=7 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=7 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=7 x2=15 y1=14 y2=14></line> <line class="ql-stroke ql-thin" x1=2.5 x2=4.5 y1=5.5 y2=5.5></line> <path class=ql-fill d=M3.5,6A0.5,0.5,0,0,1,3,5.5V3.085l-0.276.138A0.5,0.5,0,0,1,2.053,3c-0.124-.247-0.023-0.324.224-0.447l1-.5A0.5,0.5,0,0,1,4,2.5v3A0.5,0.5,0,0,1,3.5,6Z></path> <path class="ql-stroke ql-thin" d=M4.5,10.5h-2c0-.234,1.85-1.076,1.85-2.234A0.959,0.959,0,0,0,2.5,8.156></path> <path class="ql-stroke ql-thin" d=M2.5,14.846a0.959,0.959,0,0,0,1.85-.109A0.7,0.7,0,0,0,3.75,14a0.688,0.688,0,0,0,.6-0.736,0.959,0.959,0,0,0-1.85-.109></path> </svg>';
        },
        function(module2, exports2) {
          module2.exports = '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=6 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=6 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=6 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=3 y1=4 y2=4></line> <line class=ql-stroke x1=3 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=3 x2=3 y1=14 y2=14></line> </svg>';
        },
        function(module2, exports2) {
          module2.exports = '<svg class="" viewbox="0 0 18 18"> <line class=ql-stroke x1=9 x2=15 y1=4 y2=4></line> <polyline class=ql-stroke points="3 4 4 5 6 3"></polyline> <line class=ql-stroke x1=9 x2=15 y1=14 y2=14></line> <polyline class=ql-stroke points="3 14 4 15 6 13"></polyline> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class=ql-stroke points="3 9 4 10 6 8"></polyline> </svg>';
        },
        function(module2, exports2) {
          module2.exports = '<svg viewbox="0 0 18 18"> <path class=ql-fill d=M15.5,15H13.861a3.858,3.858,0,0,0,1.914-2.975,1.8,1.8,0,0,0-1.6-1.751A1.921,1.921,0,0,0,12.021,11.7a0.50013,0.50013,0,1,0,.957.291h0a0.914,0.914,0,0,1,1.053-.725,0.81,0.81,0,0,1,.744.762c0,1.076-1.16971,1.86982-1.93971,2.43082A1.45639,1.45639,0,0,0,12,15.5a0.5,0.5,0,0,0,.5.5h3A0.5,0.5,0,0,0,15.5,15Z /> <path class=ql-fill d=M9.65,5.241a1,1,0,0,0-1.409.108L6,7.964,3.759,5.349A1,1,0,0,0,2.192,6.59178Q2.21541,6.6213,2.241,6.649L4.684,9.5,2.241,12.35A1,1,0,0,0,3.71,13.70722q0.02557-.02768.049-0.05722L6,11.036,8.241,13.65a1,1,0,1,0,1.567-1.24277Q9.78459,12.3777,9.759,12.35L7.316,9.5,9.759,6.651A1,1,0,0,0,9.65,5.241Z /> </svg>';
        },
        function(module2, exports2) {
          module2.exports = '<svg viewbox="0 0 18 18"> <path class=ql-fill d=M15.5,7H13.861a4.015,4.015,0,0,0,1.914-2.975,1.8,1.8,0,0,0-1.6-1.751A1.922,1.922,0,0,0,12.021,3.7a0.5,0.5,0,1,0,.957.291,0.917,0.917,0,0,1,1.053-.725,0.81,0.81,0,0,1,.744.762c0,1.077-1.164,1.925-1.934,2.486A1.423,1.423,0,0,0,12,7.5a0.5,0.5,0,0,0,.5.5h3A0.5,0.5,0,0,0,15.5,7Z /> <path class=ql-fill d=M9.651,5.241a1,1,0,0,0-1.41.108L6,7.964,3.759,5.349a1,1,0,1,0-1.519,1.3L4.683,9.5,2.241,12.35a1,1,0,1,0,1.519,1.3L6,11.036,8.241,13.65a1,1,0,0,0,1.519-1.3L7.317,9.5,9.759,6.651A1,1,0,0,0,9.651,5.241Z /> </svg>';
        },
        function(module2, exports2) {
          module2.exports = '<svg viewbox="0 0 18 18"> <line class="ql-stroke ql-thin" x1=15.5 x2=2.5 y1=8.5 y2=9.5></line> <path class=ql-fill d=M9.007,8C6.542,7.791,6,7.519,6,6.5,6,5.792,7.283,5,9,5c1.571,0,2.765.679,2.969,1.309a1,1,0,0,0,1.9-.617C13.356,4.106,11.354,3,9,3,6.2,3,4,4.538,4,6.5a3.2,3.2,0,0,0,.5,1.843Z></path> <path class=ql-fill d=M8.984,10C11.457,10.208,12,10.479,12,11.5c0,0.708-1.283,1.5-3,1.5-1.571,0-2.765-.679-2.969-1.309a1,1,0,1,0-1.9.617C4.644,13.894,6.646,15,9,15c2.8,0,5-1.538,5-3.5a3.2,3.2,0,0,0-.5-1.843Z></path> </svg>';
        },
        function(module2, exports2) {
          module2.exports = '<svg viewbox="0 0 18 18"> <path class=ql-stroke d=M5,3V9a4.012,4.012,0,0,0,4,4H9a4.012,4.012,0,0,0,4-4V3></path> <rect class=ql-fill height=1 rx=0.5 ry=0.5 width=12 x=3 y=15></rect> </svg>';
        },
        function(module2, exports2) {
          module2.exports = '<svg viewbox="0 0 18 18"> <rect class=ql-stroke height=12 width=12 x=3 y=3></rect> <rect class=ql-fill height=12 width=1 x=5 y=3></rect> <rect class=ql-fill height=12 width=1 x=12 y=3></rect> <rect class=ql-fill height=2 width=8 x=5 y=8></rect> <rect class=ql-fill height=1 width=3 x=3 y=5></rect> <rect class=ql-fill height=1 width=3 x=3 y=7></rect> <rect class=ql-fill height=1 width=3 x=3 y=10></rect> <rect class=ql-fill height=1 width=3 x=3 y=12></rect> <rect class=ql-fill height=1 width=3 x=12 y=5></rect> <rect class=ql-fill height=1 width=3 x=12 y=7></rect> <rect class=ql-fill height=1 width=3 x=12 y=10></rect> <rect class=ql-fill height=1 width=3 x=12 y=12></rect> </svg>';
        },
        function(module2, exports2) {
          module2.exports = '<svg viewbox="0 0 18 18"> <polygon class=ql-stroke points="7 11 9 13 11 11 7 11"></polygon> <polygon class=ql-stroke points="7 7 9 5 11 7 7 7"></polygon> </svg>';
        },
        function(module2, exports2, __webpack_require__) {
          "use strict";
          Object.defineProperty(exports2, "__esModule", {
            value: true
          });
          exports2.default = exports2.BubbleTooltip = void 0;
          var _get = function get3(object, property, receiver) {
            if (object === null)
              object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);
            if (desc === void 0) {
              var parent = Object.getPrototypeOf(object);
              if (parent === null) {
                return void 0;
              } else {
                return get3(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;
              if (getter === void 0) {
                return void 0;
              }
              return getter.call(receiver);
            }
          };
          var _createClass = function() {
            function defineProperties(target, props) {
              for (var i2 = 0; i2 < props.length; i2++) {
                var descriptor = props[i2];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor)
                  descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps)
                defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();
          var _extend = __webpack_require__(3);
          var _extend2 = _interopRequireDefault(_extend);
          var _emitter = __webpack_require__(8);
          var _emitter2 = _interopRequireDefault(_emitter);
          var _base = __webpack_require__(43);
          var _base2 = _interopRequireDefault(_base);
          var _selection = __webpack_require__(15);
          var _icons = __webpack_require__(41);
          var _icons2 = _interopRequireDefault(_icons);
          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _possibleConstructorReturn(self2, call) {
            if (!self2) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }
            return call && (typeof call === "object" || typeof call === "function") ? call : self2;
          }
          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
            if (superClass)
              Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }
          var TOOLBAR_CONFIG = [["bold", "italic", "link"], [{ header: 1 }, { header: 2 }, "blockquote"]];
          var BubbleTheme = function(_BaseTheme) {
            _inherits(BubbleTheme2, _BaseTheme);
            function BubbleTheme2(quill, options2) {
              _classCallCheck(this, BubbleTheme2);
              if (options2.modules.toolbar != null && options2.modules.toolbar.container == null) {
                options2.modules.toolbar.container = TOOLBAR_CONFIG;
              }
              var _this = _possibleConstructorReturn(this, (BubbleTheme2.__proto__ || Object.getPrototypeOf(BubbleTheme2)).call(this, quill, options2));
              _this.quill.container.classList.add("ql-bubble");
              return _this;
            }
            _createClass(BubbleTheme2, [{
              key: "extendToolbar",
              value: function extendToolbar(toolbar) {
                this.tooltip = new BubbleTooltip(this.quill, this.options.bounds);
                this.tooltip.root.appendChild(toolbar.container);
                this.buildButtons([].slice.call(toolbar.container.querySelectorAll("button")), _icons2.default);
                this.buildPickers([].slice.call(toolbar.container.querySelectorAll("select")), _icons2.default);
              }
            }]);
            return BubbleTheme2;
          }(_base2.default);
          BubbleTheme.DEFAULTS = (0, _extend2.default)(true, {}, _base2.default.DEFAULTS, {
            modules: {
              toolbar: {
                handlers: {
                  link: function link(value2) {
                    if (!value2) {
                      this.quill.format("link", false);
                    } else {
                      this.quill.theme.tooltip.edit();
                    }
                  }
                }
              }
            }
          });
          var BubbleTooltip = function(_BaseTooltip) {
            _inherits(BubbleTooltip2, _BaseTooltip);
            function BubbleTooltip2(quill, bounds) {
              _classCallCheck(this, BubbleTooltip2);
              var _this2 = _possibleConstructorReturn(this, (BubbleTooltip2.__proto__ || Object.getPrototypeOf(BubbleTooltip2)).call(this, quill, bounds));
              _this2.quill.on(_emitter2.default.events.EDITOR_CHANGE, function(type, range, oldRange, source) {
                if (type !== _emitter2.default.events.SELECTION_CHANGE)
                  return;
                if (range != null && range.length > 0 && source === _emitter2.default.sources.USER) {
                  _this2.show();
                  _this2.root.style.left = "0px";
                  _this2.root.style.width = "";
                  _this2.root.style.width = _this2.root.offsetWidth + "px";
                  var lines = _this2.quill.getLines(range.index, range.length);
                  if (lines.length === 1) {
                    _this2.position(_this2.quill.getBounds(range));
                  } else {
                    var lastLine = lines[lines.length - 1];
                    var index28 = _this2.quill.getIndex(lastLine);
                    var length = Math.min(lastLine.length() - 1, range.index + range.length - index28);
                    var _bounds = _this2.quill.getBounds(new _selection.Range(index28, length));
                    _this2.position(_bounds);
                  }
                } else if (document.activeElement !== _this2.textbox && _this2.quill.hasFocus()) {
                  _this2.hide();
                }
              });
              return _this2;
            }
            _createClass(BubbleTooltip2, [{
              key: "listen",
              value: function listen() {
                var _this3 = this;
                _get(BubbleTooltip2.prototype.__proto__ || Object.getPrototypeOf(BubbleTooltip2.prototype), "listen", this).call(this);
                this.root.querySelector(".ql-close").addEventListener("click", function() {
                  _this3.root.classList.remove("ql-editing");
                });
                this.quill.on(_emitter2.default.events.SCROLL_OPTIMIZE, function() {
                  setTimeout(function() {
                    if (_this3.root.classList.contains("ql-hidden"))
                      return;
                    var range = _this3.quill.getSelection();
                    if (range != null) {
                      _this3.position(_this3.quill.getBounds(range));
                    }
                  }, 1);
                });
              }
            }, {
              key: "cancel",
              value: function cancel() {
                this.show();
              }
            }, {
              key: "position",
              value: function position(reference) {
                var shift = _get(BubbleTooltip2.prototype.__proto__ || Object.getPrototypeOf(BubbleTooltip2.prototype), "position", this).call(this, reference);
                var arrow = this.root.querySelector(".ql-tooltip-arrow");
                arrow.style.marginLeft = "";
                if (shift === 0)
                  return shift;
                arrow.style.marginLeft = -1 * shift - arrow.offsetWidth / 2 + "px";
              }
            }]);
            return BubbleTooltip2;
          }(_base.BaseTooltip);
          BubbleTooltip.TEMPLATE = ['<span class="ql-tooltip-arrow"></span>', '<div class="ql-tooltip-editor">', '<input type="text" data-formula="e=mc^2" data-link="https://quilljs.com" data-video="Embed URL">', '<a class="ql-close"></a>', "</div>"].join("");
          exports2.BubbleTooltip = BubbleTooltip;
          exports2.default = BubbleTheme;
        },
        function(module2, exports2, __webpack_require__) {
          module2.exports = __webpack_require__(63);
        }
      ])["default"];
    });
  }
});
var page_svelte_exports5 = {};
__export(page_svelte_exports5, {
  default: () => Page5
});
var import_quill;
var Page5;
var init_page_svelte5 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/courses/(course)/_slug_/_page.svelte.js"() {
    init_index2();
    init_stores();
    import_quill = __toESM(require_quill(), 1);
    Page5 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $page, $$unsubscribe_page;
      $$unsubscribe_page = subscribe(page, (value2) => $page = value2);
      let { data } = $$props;
      let courses = $page.data.courses.data;
      $page.data.session?.user;
      $page.params.slug;
      let { layout_course = courses } = $$props;
      let content = { html: "", text: "" };
      if ($$props.data === void 0 && $$bindings.data && data !== void 0)
        $$bindings.data(data);
      if ($$props.layout_course === void 0 && $$bindings.layout_course && layout_course !== void 0)
        $$bindings.layout_course(layout_course);
      $$unsubscribe_page();
      return `


<div class="flex flex-row grow max-w-full-1/2"><section class="p-1 grow max-w-full-1/2"><div class="flex justify-between"><h4 class="text-xl font-bold text-white -mx-auto my-5">Home</h4>

			${`<div class=""><button class="my-4 relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-blue-500 to-blue-300 group-hover:from-blue-300 group-hover:to-blue-500 hover:text-white dark:text-white focus:ring-4 focus:outline-none focus:ring-blue-200 dark:focus:ring-blue-800"><span class="relative px-5 py-2.5 transition-all|local ease-in duration-75 bg-white dark:bg-gray-600 rounded-md group-hover:bg-opacity-0">Edit
						</span></button></div>`}</div>
		${``}

		<div class="my-6 rounded-lg"><div class="flex flex space-x-4 grow mr-4 rounded-lg"><div class="flex-1 w-1/2 bg-white min-h-screen border-0 rounded-lg" ${"hidden"}><div class="editor bg-white" ${"hidden"} id="editor"></div></div>
				<div class="editor flex-1 w-1/2 bg-white p-2 min-h-screen border-0 rounded-lg" ${""}><!-- HTML_TAG_START -->${content.html}<!-- HTML_TAG_END --></div></div></div></section></div>`;
    });
  }
});
var __exports12 = {};
__export(__exports12, {
  component: () => component12,
  fonts: () => fonts12,
  imports: () => imports12,
  index: () => index12,
  server: () => page_server_ts_exports4,
  server_id: () => server_id7,
  stylesheets: () => stylesheets12
});
var index12;
var component12;
var server_id7;
var imports12;
var stylesheets12;
var fonts12;
var init__12 = __esm({
  ".svelte-kit/output/server/nodes/11.js"() {
    init_page_server_ts4();
    index12 = 11;
    component12 = async () => (await Promise.resolve().then(() => (init_page_svelte5(), page_svelte_exports5))).default;
    server_id7 = "src/routes/d/(d)/courses/(course)/[slug]/+page.server.ts";
    imports12 = ["_app/immutable/nodes/11.565b1c1d.js", "_app/immutable/chunks/index.7ee2e23d.js", "_app/immutable/chunks/course.b2fd6fc0.js", "_app/immutable/chunks/stores.2de0b66f.js", "_app/immutable/chunks/singletons.21d018a5.js", "_app/immutable/chunks/paths.1c0372a3.js", "_app/immutable/chunks/_commonjsHelpers.725317a4.js", "_app/immutable/chunks/index.24430090.js"];
    stylesheets12 = [];
    fonts12 = [];
  }
});
var page_server_ts_exports5 = {};
__export(page_server_ts_exports5, {
  actions: () => actions3,
  prerender: () => prerender6
});
var prerender6;
var actions3;
var init_page_server_ts5 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/courses/(course)/_slug_/assignments/_page.server.ts.js"() {
    init_chunks();
    prerender6 = false;
    actions3 = {
      createAssignment: async ({ request, url, params, locals: { supabase } }) => {
        const formData = await request.formData();
        const { data } = await supabase.auth.refreshSession();
        const { session, user } = data;
        if (!session) {
          throw redirect(303, "/");
        }
        const name = formData.get("name");
        const description = formData.get("description");
        const points = formData.get("points");
        let category = formData.get("category");
        const display_as = formData.get("displayas");
        const submission_type = formData.get("submissiontype");
        formData.get("assignto");
        const due = formData.get("due");
        const availableStart = formData.get("availfrom");
        const availableEnd = formData.get("availto");
        const module = formData.get("modules");
        const course_id = params.slug;
        if (category == "Select category") {
          category = "";
        }
        const _assignment_id = Math.floor(Math.random() * 9999999999);
        if (user != null) {
          let updates = {
            assignment_id: _assignment_id,
            title: name,
            creator_id: user.id,
            course_id,
            category,
            points,
            display_as,
            due
          };
          let info_updates = {
            assignment: _assignment_id,
            inserted_at: /* @__PURE__ */ new Date(),
            description,
            submission_type,
            submission_attempts: submission_type,
            available_start: availableStart,
            available_end: availableEnd
          };
          if (module != "") {
            updates = Object.assign(updates, { in_module: module });
          }
          const { error: error2 } = await supabase.from("assignments").upsert(updates);
          console.log(error2);
          const { error: error_info } = await supabase.from("assignments_info").upsert(info_updates);
          console.log(error_info);
        }
      }
    };
  }
});
var __exports13 = {};
__export(__exports13, {
  component: () => component13,
  fonts: () => fonts13,
  imports: () => imports13,
  index: () => index13,
  server: () => page_server_ts_exports5,
  server_id: () => server_id8,
  stylesheets: () => stylesheets13
});
var index13;
var component13;
var server_id8;
var imports13;
var stylesheets13;
var fonts13;
var init__13 = __esm({
  ".svelte-kit/output/server/nodes/12.js"() {
    init_page_server_ts5();
    index13 = 12;
    component13 = async () => (await Promise.resolve().then(() => (init_page_svelte(), page_svelte_exports))).default;
    server_id8 = "src/routes/d/(d)/courses/(course)/[slug]/assignments/+page.server.ts";
    imports13 = ["_app/immutable/nodes/12.5b1572f1.js", "_app/immutable/chunks/index.7ee2e23d.js", "_app/immutable/chunks/forms.b3e5ddf7.js", "_app/immutable/chunks/parse.bee59afc.js", "_app/immutable/chunks/singletons.21d018a5.js", "_app/immutable/chunks/paths.1c0372a3.js", "_app/immutable/chunks/navigation.0d698c81.js", "_app/immutable/chunks/Scrollable.svelte_svelte_type_style_lang.48f5de07.js", "_app/immutable/chunks/dayjs.min.9ad1b313.js", "_app/immutable/chunks/_commonjsHelpers.725317a4.js", "_app/immutable/chunks/index.24430090.js", "_app/immutable/chunks/dragMe.3d5f1e0c.js", "_app/immutable/chunks/Indicator.svelte_svelte_type_style_lang.880982d3.js", "_app/immutable/chunks/Modal.087a6368.js", "_app/immutable/chunks/CloseButton.ed454e30.js", "_app/immutable/chunks/TableHeadCell.24b1fb8e.js", "_app/immutable/chunks/TableSearch.e66e4c61.js", "_app/immutable/chunks/stores.2de0b66f.js", "_app/immutable/chunks/notifications.93f6c838.js"];
    stylesheets13 = ["_app/immutable/assets/Scrollable.b43def7c.css", "_app/immutable/assets/Indicator.1d121e74.css"];
    fonts13 = [];
  }
});
var page_server_ts_exports6 = {};
__export(page_server_ts_exports6, {
  load: () => load11,
  prerender: () => prerender7
});
var prerender7;
var load11;
var init_page_server_ts6 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/courses/(course)/_slug_/assignments/_assignment_/_page.server.ts.js"() {
    init_chunks();
    prerender7 = false;
    load11 = async ({ fetch: fetch2, data, request, url, params, parent, locals: { supabase } }) => {
      const parentData = await parent();
      const session = parentData.session;
      if (!session) {
        throw redirect(303, "/");
      }
      const { data: assignmentDataInfo, error: error2 } = await supabase.from("assignments_info").select("description, submission_type, submission_attempts, display_as, available_start, available_end, inserted_at, assign_to").eq("assignment", params.assignment).single();
      console.log(error2);
      return {
        courses: await assignmentDataInfo
      };
    };
  }
});
var page_svelte_exports6 = {};
__export(page_svelte_exports6, {
  default: () => Page6
});
var Page6;
var init_page_svelte6 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/courses/(course)/_slug_/assignments/_assignment_/_page.svelte.js"() {
    init_index2();
    init_devalue();
    Page6 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { data } = $$props;
      let { show_create_box } = $$props;
      let assignments;
      if ($$props.data === void 0 && $$bindings.data && data !== void 0)
        $$bindings.data(data);
      if ($$props.show_create_box === void 0 && $$bindings.show_create_box && show_create_box !== void 0)
        $$bindings.show_create_box(show_create_box);
      assignments = data.assignmentDataInfo;
      return `<div class="flex flex-row"><section class="p-1"><div class="container mx-1 my-8"><h4 class="text-xl font-bold text-white -mx-auto my-5">Title: ${escape(assignments.title)}</h4>
			<h4 class="text-xl font-bold text-white -mx-auto my-5">Creator: ${escape(assignments.creator_id)}</h4>
			<h4 class="text-xl font-bold text-white -mx-auto my-5">Description: ${escape(assignments.description)}</h4>
			<h4 class="text-xl font-bold text-white -mx-auto my-5">Submission Type: ${escape(assignments.submission_type)}</h4>
			<h4 class="text-xl font-bold text-white -mx-auto my-5">Submission Attempts: ${escape(assignments.submission_attempts)}</h4>
			<h4 class="text-xl font-bold text-white -mx-auto my-5">Display as: ${escape(assignments.display_as)}</h4>
			<h4 class="text-xl font-bold text-white -mx-auto my-5">Available Start: ${escape(assignments.available_start)}</h4>
			<h4 class="text-xl font-bold text-white -mx-auto my-5">Available End: ${escape(assignments.available_end)}</h4>
			<h4 class="text-xl font-bold text-white -mx-auto my-5">Inserted At: ${escape(assignments.inserted_at)}</h4>
			<h4 class="text-xl font-bold text-white -mx-auto my-5">Assign To: ${escape(assignments.assign_to)}</h4></div></section></div>`;
    });
  }
});
var __exports14 = {};
__export(__exports14, {
  component: () => component14,
  fonts: () => fonts14,
  imports: () => imports14,
  index: () => index14,
  server: () => page_server_ts_exports6,
  server_id: () => server_id9,
  stylesheets: () => stylesheets14
});
var index14;
var component14;
var server_id9;
var imports14;
var stylesheets14;
var fonts14;
var init__14 = __esm({
  ".svelte-kit/output/server/nodes/13.js"() {
    init_page_server_ts6();
    index14 = 13;
    component14 = async () => (await Promise.resolve().then(() => (init_page_svelte6(), page_svelte_exports6))).default;
    server_id9 = "src/routes/d/(d)/courses/(course)/[slug]/assignments/[assignment]/+page.server.ts";
    imports14 = ["_app/immutable/nodes/13.8b525dc6.js", "_app/immutable/chunks/index.7ee2e23d.js", "_app/immutable/chunks/paths.1c0372a3.js"];
    stylesheets14 = [];
    fonts14 = [];
  }
});
var page_server_ts_exports7 = {};
var init_page_server_ts7 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/courses/(course)/_slug_/assignments/_assignment_/edit/_page.server.ts.js"() {
  }
});
var page_svelte_exports7 = {};
__export(page_svelte_exports7, {
  default: () => Page7
});
var import_dayjs3;
var import_just_throttle3;
var import_classnames8;
var Page7;
var init_page_svelte7 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/courses/(course)/_slug_/assignments/_assignment_/edit/_page.svelte.js"() {
    init_index2();
    init_devalue();
    init_Scrollable_svelte_svelte_type_style_lang();
    import_dayjs3 = __toESM(require_dayjs_min(), 1);
    import_just_throttle3 = __toESM(require_just_throttle(), 1);
    import_classnames8 = __toESM(require_classnames(), 1);
    Page7 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      const theme2 = {
        calendar: {
          width: "400px",
          maxWidth: "75vw",
          legend: { height: "45px" },
          shadow: "0px 10px 26px rgba(0, 0, 0, 0.1)",
          colors: {
            text: { primary: "#eee", highlight: "#fff" },
            background: {
              primary: "rgb(28,35,45)",
              highlight: "#435bad",
              hover: "#242f49"
            },
            border: "#222"
          },
          font: { regular: "1em", large: "15em" },
          grid: {
            disabledOpacity: ".5",
            outsiderOpacity: ".7"
          }
        }
      };
      let { dueDate } = $$props;
      let { availablefromDate } = $$props;
      let { availableuntilDate } = $$props;
      let { data } = $$props;
      let { show_create_box } = $$props;
      let assignments;
      let modules = data.modules;
      let storeDueDate;
      let storeAvailableDate;
      let storeAvailableUntilDate;
      if ($$props.dueDate === void 0 && $$bindings.dueDate && dueDate !== void 0)
        $$bindings.dueDate(dueDate);
      if ($$props.availablefromDate === void 0 && $$bindings.availablefromDate && availablefromDate !== void 0)
        $$bindings.availablefromDate(availablefromDate);
      if ($$props.availableuntilDate === void 0 && $$bindings.availableuntilDate && availableuntilDate !== void 0)
        $$bindings.availableuntilDate(availableuntilDate);
      if ($$props.data === void 0 && $$bindings.data && data !== void 0)
        $$bindings.data(data);
      if ($$props.show_create_box === void 0 && $$bindings.show_create_box && show_create_box !== void 0)
        $$bindings.show_create_box(show_create_box);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        assignments = data.assignmentData;
        $$rendered = `<div class="w-full"><section class="p-1"><div class="container"><h4 class="text-xl font-bold text-white -mx-auto my-5">Assignments</h4>

			<div class="py-4"><div class="relative p-4 w-full max-w-2xl h-full md:h-auto">
						
						<div class="flex justify-between items-center pb-4 mb-4 rounded-t border-b sm:mb-5 dark:border-gray-600"><h3 class="text-lg font-semibold text-gray-900 dark:text-white">Edit Assignment</h3></div>
						
						<form method="POST" action="?/createAssignment"><div class="grid gap-4 mb-4 sm:grid-cols-2"><div><label for="name" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Assignment Name</label>
									<input type="text" name="name" id="name" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" placeholder="Assignment Name" required${add_attribute("value", assignments.assignment_title, 0)}></div>

								<div class="sm:col-span-2"><label for="description" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Description</label>
									<textarea name="description" id="description" rows="4" class="block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" placeholder="Summarize assignment description" required>${escape(assignments.description, false)}</textarea></div>

								<div><label for="points" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Points</label>
									<input type="text" name="points" id="points"${add_attribute("value", assignments.points, 0)} class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" placeholder="" required=""></div>

								<div><label for="category" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Category</label>
									<select name="category" id="category" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" required><option ${assignments.category ? "selected" : ""}${add_attribute("value", assignments.category, 0)}>${escape(assignments.category)}</option><option value="Assignment">Assignment</option><option value="Quiz">Quiz</option><option value="Project">Project</option></select></div>

								<div><label for="displayas" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Display Grade As</label>
									<select name="displayas" id="displayas" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"><option ${assignments.submission_type ? "selected" : ""}${add_attribute("value", assignments.submission_type, 0)}>${escape(assignments.submission_type)}</option><option value="Points">Points</option><option value="Percentage">Percentage</option></select></div>

								<div><label for="submissiontype" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Submission Type</label>
									<select name="submissiontype" id="submissiontype" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"><option value="Points">Online</option><option value="Percentage">Physical</option></select></div>

								<div><label for="modules" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Module</label>
									<select name="modules" id="modules" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"><option value="">No module</option>${each(modules, ({ module_title, id }, i2) => {
          return `<option${add_attribute("value", id, 0)}>${escape(module_title)}</option>`;
        })}</select></div>

								<div><label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white w-full">Due</label>
									${validate_component(Datepicker, "Datepicker").$$render(
          $$result,
          { theme: theme2, class: "w-full", storeDueDate },
          {
            storeDueDate: ($$value) => {
              storeDueDate = $$value;
              $$settled = false;
            }
          },
          {}
        )}</div>

								

								<div><label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white w-full">Available from</label>
									${validate_component(Datepicker, "Datepicker").$$render(
          $$result,
          {
            theme: theme2,
            class: "w-full",
            storeAvailableDate
          },
          {
            storeAvailableDate: ($$value) => {
              storeAvailableDate = $$value;
              $$settled = false;
            }
          },
          {}
        )}</div>

								<div><label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white w-full">Available Until</label>
									${validate_component(Datepicker, "Datepicker").$$render(
          $$result,
          {
            theme: theme2,
            class: "w-full",
            storeAvailableUntilDate
          },
          {
            storeAvailableUntilDate: ($$value) => {
              storeAvailableUntilDate = $$value;
              $$settled = false;
            }
          },
          {}
        )}</div></div>
							<button type="submit" class="text-white inline-flex items-center bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800">Save details
							</button></form></div></div></div></section></div>`;
      } while (!$$settled);
      return $$rendered;
    });
  }
});
var __exports15 = {};
__export(__exports15, {
  component: () => component15,
  fonts: () => fonts15,
  imports: () => imports15,
  index: () => index15,
  server: () => page_server_ts_exports7,
  server_id: () => server_id10,
  stylesheets: () => stylesheets15
});
var index15;
var component15;
var server_id10;
var imports15;
var stylesheets15;
var fonts15;
var init__15 = __esm({
  ".svelte-kit/output/server/nodes/14.js"() {
    init_page_server_ts7();
    index15 = 14;
    component15 = async () => (await Promise.resolve().then(() => (init_page_svelte7(), page_svelte_exports7))).default;
    server_id10 = "src/routes/d/(d)/courses/(course)/[slug]/assignments/[assignment]/edit/+page.server.ts";
    imports15 = ["_app/immutable/nodes/14.d3fff59b.js", "_app/immutable/chunks/index.7ee2e23d.js", "_app/immutable/chunks/forms.b3e5ddf7.js", "_app/immutable/chunks/parse.bee59afc.js", "_app/immutable/chunks/singletons.21d018a5.js", "_app/immutable/chunks/paths.1c0372a3.js", "_app/immutable/chunks/navigation.0d698c81.js", "_app/immutable/chunks/Scrollable.svelte_svelte_type_style_lang.48f5de07.js", "_app/immutable/chunks/dayjs.min.9ad1b313.js", "_app/immutable/chunks/_commonjsHelpers.725317a4.js", "_app/immutable/chunks/index.24430090.js", "_app/immutable/chunks/Indicator.svelte_svelte_type_style_lang.880982d3.js"];
    stylesheets15 = ["_app/immutable/assets/Scrollable.b43def7c.css", "_app/immutable/assets/Indicator.1d121e74.css"];
    fonts15 = [];
  }
});
var page_server_ts_exports8 = {};
var init_page_server_ts8 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/courses/(course)/_slug_/grades/_page.server.ts.js"() {
  }
});
var page_svelte_exports8 = {};
__export(page_svelte_exports8, {
  default: () => Page8
});
var Page8;
var init_page_svelte8 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/courses/(course)/_slug_/grades/_page.svelte.js"() {
    init_index2();
    Page8 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { data } = $$props;
      data.courseData;
      if ($$props.data === void 0 && $$bindings.data && data !== void 0)
        $$bindings.data(data);
      return `<div class="flex flex-row"><section class="p-1"><div class="container mx-12 my-5"><h4 class="text-xl font-bold text-white -mx-10 my-5">Grades</h4>

			<div class="flex flex-wrap -mx-10 -mb-6 text-white font-semibold">1 2 3</div></div></section></div>`;
    });
  }
});
var __exports16 = {};
__export(__exports16, {
  component: () => component16,
  fonts: () => fonts16,
  imports: () => imports16,
  index: () => index16,
  server: () => page_server_ts_exports8,
  server_id: () => server_id11,
  stylesheets: () => stylesheets16
});
var index16;
var component16;
var server_id11;
var imports16;
var stylesheets16;
var fonts16;
var init__16 = __esm({
  ".svelte-kit/output/server/nodes/15.js"() {
    init_page_server_ts8();
    index16 = 15;
    component16 = async () => (await Promise.resolve().then(() => (init_page_svelte8(), page_svelte_exports8))).default;
    server_id11 = "src/routes/d/(d)/courses/(course)/[slug]/grades/+page.server.ts";
    imports16 = ["_app/immutable/nodes/15.53c7b5a0.js", "_app/immutable/chunks/index.7ee2e23d.js"];
    stylesheets16 = [];
    fonts16 = [];
  }
});
var page_server_ts_exports9 = {};
__export(page_server_ts_exports9, {
  actions: () => actions4,
  prerender: () => prerender8,
  ssr: () => ssr6
});
var prerender8;
var ssr6;
var actions4;
var init_page_server_ts9 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/courses/(course)/_slug_/modules/_page.server.ts.js"() {
    prerender8 = false;
    ssr6 = false;
    actions4 = {
      createModule: async ({ request, url, params, locals: { supabase } }) => {
        const formData = await request.formData();
        const { data } = await supabase.auth.refreshSession();
        let user;
        if (data == null) {
          const { data: data2 } = await supabase.auth.refreshSession();
          user = data2.user;
        }
        user = data.user;
        const name = formData.get("name");
        const course_id = params.slug;
        if (user != null) {
          const updates = {
            user_id: user.id,
            course_id,
            module_title: name
          };
          await supabase.from("modules").upsert(updates);
        }
      },
      addItemToModule: async ({ request, url, params, locals: { supabase } }) => {
        const formData = await request.formData();
        const { data } = await supabase.auth.refreshSession();
        let user;
        if (data == null) {
          const { data: data2 } = await supabase.auth.refreshSession();
          user = data2.user;
        }
        user = data.user;
        const id = formData.get("id");
        const module = formData.get("modules");
        const course_id = params.slug;
        if (user != null) {
          const updates = {
            in_module: module
          };
          const { error: error2 } = await supabase.from("assignments").update(updates).eq("creator_id", user.id).eq("course_id", course_id).eq("assignment_id", id);
          console.log(error2);
        }
      }
    };
  }
});
var page_svelte_exports9 = {};
__export(page_svelte_exports9, {
  default: () => Page9
});
var import_classnames9;
var Accordion;
var ChevronDown;
var ChevronUp;
var AccordionItem;
var Page9;
var init_page_svelte9 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/courses/(course)/_slug_/modules/_page.svelte.js"() {
    init_index2();
    init_devalue();
    init_stores();
    init_index3();
    init_CloseButton();
    import_classnames9 = __toESM(require_classnames(), 1);
    init_Modal();
    Accordion = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$restProps = compute_rest_props($$props, ["multiple", "flush", "activeClasses", "inactiveClasses", "defaultClass"]);
      let { multiple = false } = $$props;
      let { flush: flush2 = false } = $$props;
      let { activeClasses = "bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-white focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-800" } = $$props;
      let { inactiveClasses = "text-gray-500 dark:text-gray-400 hover:bg-gray-100 hover:dark:bg-gray-800" } = $$props;
      let { defaultClass = "text-gray-500 dark:text-gray-400" } = $$props;
      const ctx = {
        flush: flush2,
        activeClasses,
        inactiveClasses,
        selected: multiple ? void 0 : writable()
      };
      setContext("ctx", ctx);
      let frameClass = (0, import_classnames9.default)(defaultClass, $$props.class);
      if ($$props.multiple === void 0 && $$bindings.multiple && multiple !== void 0)
        $$bindings.multiple(multiple);
      if ($$props.flush === void 0 && $$bindings.flush && flush2 !== void 0)
        $$bindings.flush(flush2);
      if ($$props.activeClasses === void 0 && $$bindings.activeClasses && activeClasses !== void 0)
        $$bindings.activeClasses(activeClasses);
      if ($$props.inactiveClasses === void 0 && $$bindings.inactiveClasses && inactiveClasses !== void 0)
        $$bindings.inactiveClasses(inactiveClasses);
      if ($$props.defaultClass === void 0 && $$bindings.defaultClass && defaultClass !== void 0)
        $$bindings.defaultClass(defaultClass);
      return `${validate_component(Frame, "Frame").$$render($$result, Object.assign({}, $$restProps, { class: frameClass }, { color: "none" }), {}, {
        default: () => {
          return `${slots.default ? slots.default({}) : ``}`;
        }
      })}

`;
    });
    ChevronDown = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$restProps = compute_rest_props($$props, ["size", "color", "variation", "ariaLabel", "role"]);
      let { size: size2 = "20" } = $$props;
      let { color = "currentColor" } = $$props;
      let { variation = "outline" } = $$props;
      let { ariaLabel = "chevron down" } = $$props;
      let { role = "img" } = $$props;
      let viewBox;
      let svgpath;
      let svgoutline = `<path stroke-linecap="round" stroke-linejoin="round" d="M19 9l-7 7-7-7" stroke="${color}"></path>`;
      let svgsolid = `<path clip-rule="evenodd" fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" fill="${color}"></path>`;
      if ($$props.size === void 0 && $$bindings.size && size2 !== void 0)
        $$bindings.size(size2);
      if ($$props.color === void 0 && $$bindings.color && color !== void 0)
        $$bindings.color(color);
      if ($$props.variation === void 0 && $$bindings.variation && variation !== void 0)
        $$bindings.variation(variation);
      if ($$props.ariaLabel === void 0 && $$bindings.ariaLabel && ariaLabel !== void 0)
        $$bindings.ariaLabel(ariaLabel);
      if ($$props.role === void 0 && $$bindings.role && role !== void 0)
        $$bindings.role(role);
      {
        switch (variation) {
          case "outline":
            svgpath = svgoutline;
            viewBox = "0 0 20 20";
            break;
          case "solid":
            svgpath = svgsolid;
            viewBox = "0 0 20 20";
            break;
          default:
            svgpath = svgoutline;
            viewBox = "0 0 20 20";
        }
      }
      return `<svg${spread(
        [
          { xmlns: "http://www.w3.org/2000/svg" },
          { width: escape_attribute_value(size2) },
          { height: escape_attribute_value(size2) },
          {
            class: escape_attribute_value($$props.class)
          },
          escape_object($$restProps),
          {
            "aria-label": escape_attribute_value(ariaLabel)
          },
          { fill: "none" },
          { viewBox: escape_attribute_value(viewBox) },
          { role: escape_attribute_value(role) },
          { "stroke-width": "2" }
        ],
        {}
      )}><!-- HTML_TAG_START -->${svgpath}<!-- HTML_TAG_END --></svg>

`;
    });
    ChevronUp = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$restProps = compute_rest_props($$props, ["size", "color", "variation", "ariaLabel", "role"]);
      let { size: size2 = "20" } = $$props;
      let { color = "currentColor" } = $$props;
      let { variation = "outline" } = $$props;
      let { ariaLabel = "chevron up" } = $$props;
      let { role = "img" } = $$props;
      let viewBox;
      let svgpath;
      let svgoutline = `<path clip-rule="evenodd" fill-rule="evenodd" d="M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z" stroke="${color}"></path>`;
      let svgsolid = `<path clip-rule="evenodd" fill-rule="evenodd" d="M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z" fill="${color}"></path>`;
      if ($$props.size === void 0 && $$bindings.size && size2 !== void 0)
        $$bindings.size(size2);
      if ($$props.color === void 0 && $$bindings.color && color !== void 0)
        $$bindings.color(color);
      if ($$props.variation === void 0 && $$bindings.variation && variation !== void 0)
        $$bindings.variation(variation);
      if ($$props.ariaLabel === void 0 && $$bindings.ariaLabel && ariaLabel !== void 0)
        $$bindings.ariaLabel(ariaLabel);
      if ($$props.role === void 0 && $$bindings.role && role !== void 0)
        $$bindings.role(role);
      {
        switch (variation) {
          case "outline":
            svgpath = svgoutline;
            viewBox = "0 0 20 20";
            break;
          case "solid":
            svgpath = svgsolid;
            viewBox = "0 0 20 20";
            break;
          default:
            svgpath = svgoutline;
            viewBox = "0 0 20 20";
        }
      }
      return `<svg${spread(
        [
          { xmlns: "http://www.w3.org/2000/svg" },
          { width: escape_attribute_value(size2) },
          { height: escape_attribute_value(size2) },
          {
            class: escape_attribute_value($$props.class)
          },
          escape_object($$restProps),
          {
            "aria-label": escape_attribute_value(ariaLabel)
          },
          { fill: "none" },
          { viewBox: escape_attribute_value(viewBox) },
          { role: escape_attribute_value(role) },
          { "stroke-width": "2" }
        ],
        {}
      )}><!-- HTML_TAG_START -->${svgpath}<!-- HTML_TAG_END --></svg>

`;
    });
    AccordionItem = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$unsubscribe_selected;
      let { open: open2 = false } = $$props;
      let { activeClasses = void 0 } = $$props;
      let { inactiveClasses = void 0 } = $$props;
      let { defaultClass = "flex items-center justify-between w-full font-medium text-left group-first:rounded-t-xl border-gray-200 dark:border-gray-700" } = $$props;
      let { transitionType = "slide" } = $$props;
      let { transitionParams = {} } = $$props;
      let { paddingFlush = "py-5" } = $$props;
      let { paddingDefault = "p-5" } = $$props;
      let { textFlushOpen = "text-gray-900 dark:text-white" } = $$props;
      let { textFlushDefault = "text-gray-500 dark:text-gray-400" } = $$props;
      let { borderClass = "border-l border-r group-first:border-t" } = $$props;
      let { borderOpenClass = "border-l border-r" } = $$props;
      let { borderBottomClass = "border-b" } = $$props;
      let { borderSharedClass = "border-gray-200 dark:border-gray-700" } = $$props;
      const ctx = getContext("ctx") ?? {};
      const selected = ctx.selected ?? writable();
      $$unsubscribe_selected = subscribe(selected, (value2) => value2);
      open2 = false;
      let buttonClass;
      if ($$props.open === void 0 && $$bindings.open && open2 !== void 0)
        $$bindings.open(open2);
      if ($$props.activeClasses === void 0 && $$bindings.activeClasses && activeClasses !== void 0)
        $$bindings.activeClasses(activeClasses);
      if ($$props.inactiveClasses === void 0 && $$bindings.inactiveClasses && inactiveClasses !== void 0)
        $$bindings.inactiveClasses(inactiveClasses);
      if ($$props.defaultClass === void 0 && $$bindings.defaultClass && defaultClass !== void 0)
        $$bindings.defaultClass(defaultClass);
      if ($$props.transitionType === void 0 && $$bindings.transitionType && transitionType !== void 0)
        $$bindings.transitionType(transitionType);
      if ($$props.transitionParams === void 0 && $$bindings.transitionParams && transitionParams !== void 0)
        $$bindings.transitionParams(transitionParams);
      if ($$props.paddingFlush === void 0 && $$bindings.paddingFlush && paddingFlush !== void 0)
        $$bindings.paddingFlush(paddingFlush);
      if ($$props.paddingDefault === void 0 && $$bindings.paddingDefault && paddingDefault !== void 0)
        $$bindings.paddingDefault(paddingDefault);
      if ($$props.textFlushOpen === void 0 && $$bindings.textFlushOpen && textFlushOpen !== void 0)
        $$bindings.textFlushOpen(textFlushOpen);
      if ($$props.textFlushDefault === void 0 && $$bindings.textFlushDefault && textFlushDefault !== void 0)
        $$bindings.textFlushDefault(textFlushDefault);
      if ($$props.borderClass === void 0 && $$bindings.borderClass && borderClass !== void 0)
        $$bindings.borderClass(borderClass);
      if ($$props.borderOpenClass === void 0 && $$bindings.borderOpenClass && borderOpenClass !== void 0)
        $$bindings.borderOpenClass(borderOpenClass);
      if ($$props.borderBottomClass === void 0 && $$bindings.borderBottomClass && borderBottomClass !== void 0)
        $$bindings.borderBottomClass(borderBottomClass);
      if ($$props.borderSharedClass === void 0 && $$bindings.borderSharedClass && borderSharedClass !== void 0)
        $$bindings.borderSharedClass(borderSharedClass);
      buttonClass = (0, import_classnames9.default)(
        defaultClass,
        ctx.flush || borderClass,
        borderBottomClass,
        borderSharedClass,
        ctx.flush ? paddingFlush : paddingDefault,
        open2 && (ctx.flush ? textFlushOpen : activeClasses || ctx.activeClasses),
        !open2 && (ctx.flush ? textFlushDefault : inactiveClasses || ctx.inactiveClasses),
        $$props.class
      );
      $$unsubscribe_selected();
      return `<h2 class="group"><button type="button"${add_attribute("class", buttonClass, 0)}${add_attribute("aria-expanded", open2, 0)}>${slots.header ? slots.header({}) : ``}
    ${open2 ? `${slots.arrowup ? slots.arrowup({}) : `${validate_component(ChevronUp, "ChevronUp").$$render($$result, {}, {}, {})}`}` : `${slots.arrowdown ? slots.arrowdown({}) : `${validate_component(ChevronDown, "ChevronDown").$$render($$result, {}, {}, {})}`}`}</button></h2>
${open2 ? `<div><div class="${escape(ctx.flush ? paddingFlush : paddingDefault, true) + " " + escape(ctx.flush ? "" : borderOpenClass, true) + " " + escape(borderBottomClass, true) + " " + escape(borderSharedClass, true)}">${slots.default ? slots.default({}) : ``}</div></div>` : ``}

`;
    });
    Page9 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $page, $$unsubscribe_page;
      $$unsubscribe_page = subscribe(page, (value2) => $page = value2);
      let { data } = $$props;
      let addModuleModel = false;
      let addAssignmentModel = false;
      let modules;
      let assignments;
      function add_item(id) {
        addAssignmentModel = true;
      }
      if ($$props.data === void 0 && $$bindings.data && data !== void 0)
        $$bindings.data(data);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        modules = $page.data.modules;
        assignments = $page.data.assignments;
        $$rendered = `<div class="w-full"><section class="p-1 "><div class="container"><h4 class="text-xl font-bold text-white -mx-auto my-5">Modules</h4>
			<button class="relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-blue-500 to-blue-300 group-hover:from-blue-300 group-hover:to-blue-500 hover:text-white dark:text-white focus:ring-4 focus:outline-none focus:ring-blue-200 dark:focus:ring-blue-800"><span class="relative px-5 py-2.5 transition-all|local ease-in duration-75 bg-white dark:bg-gray-600 rounded-md group-hover:bg-opacity-0">Create
				</span></button>
			<div class="flex flex-col -mx-20 my-2 pl-14 -mb-6 text-white font-semibold ">${each(modules, ({ module_title, id, assignments: assignments2 }, i2) => {
          return `<div class="mb-6 mx-6 cursor-pointer">
						${validate_component(Accordion, "Accordion").$$render(
            $$result,
            {
              activeClasses: "bg-gray-400 dark:bg-gray-800 text-blue-600 dark:text-white focus:ring-4 focus:ring-blue-200 dark:focus:ring-blue-800",
              inactiveClasses: "text-gray-200 dark:text-gray-200 hover:bg-gray-400 dark:hover:bg-gray-500 bg-gray-700 dark:text-white"
            },
            {},
            {
              default: () => {
                return `${validate_component(AccordionItem, "AccordionItem").$$render($$result, { inactiveClasses: "" }, {}, {
                  header: () => {
                    return `<span slot="header">${escape(module_title)}
									</span>`;
                  },
                  default: () => {
                    return `
									<a class="text-gray-200 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm ml-auto inline-flex items-center dark:hover:bg-gray-600 dark:hover:text-white">Add
										<span class="ml-auto"><svg class="mr-1 -ml-1 w-6 h-6" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z" clip-rule="evenodd"></path></svg>
										</span></a>
									
									${each(assignments2, ({ title, in_module }, i22) => {
                      return `${in_module === id ? `<a><div class="py-4 px-2 text-gray-200 hover:text-white hover:scale-[1.002]">${escape(title === "" ? "Assignment Error.." : title)}</div>
											</a>` : ``}`;
                    })}
								`;
                  }
                })}

						`;
              }
            }
          )}</div>
						`;
        })}</div></div></section></div>

${validate_component(Modal, "Modal").$$render(
          $$result,
          {
            title: "Add module",
            open: addModuleModel
          },
          {
            open: ($$value) => {
              addModuleModel = $$value;
              $$settled = false;
            }
          },
          {
            default: () => {
              return `
		<form method="POST" action="?/createModule"><div class="grid gap-4 mb-4 sm:grid-cols-1"><div><label for="name" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Module Name</label>
					<input type="text" name="name" id="name" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" placeholder="Module Name" required></div></div>
			<button type="submit" class="text-white inline-flex items-center bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800"><svg class="mr-1 -ml-1 w-6 h-6" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z" clip-rule="evenodd"></path></svg>
				Add new module
			</button></form>`;
            }
          }
        )}


${validate_component(Modal, "Modal").$$render(
          $$result,
          {
            title: "Add assignment to module",
            open: addAssignmentModel
          },
          {
            open: ($$value) => {
              addAssignmentModel = $$value;
              $$settled = false;
            }
          },
          {
            default: () => {
              return `<form method="POST" action="?/addItemToModule"><div class="grid gap-4 mb-4 sm:grid-cols-2"><div><label for="modules" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Module</label>
				<select name="modules" id="modules" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" required>${each(modules, ({ module_title, id }, i2) => {
                return `<option${add_attribute("value", id, 0)} ${id === add_item ? "selected" : ""}>${escape(module_title)}</option>`;
              })}</select></div></div>
		<div><label for="id" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Select an item</label>
			<select multiple name="id" id="id" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">${each(assignments, ({ assignment_id, title, due }) => {
                return `<option${add_attribute("value", assignment_id, 0)}>${escape(title)} | Due - ${escape(new Date(due).toDateString())}</option>`;
              })}</select></div>
		<button type="submit" class="text-white inline-flex items-center bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800"><svg class="mr-1 -ml-1 w-6 h-6" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z" clip-rule="evenodd"></path></svg>
			Add new item
		</button></form>`;
            }
          }
        )}`;
      } while (!$$settled);
      $$unsubscribe_page();
      return $$rendered;
    });
  }
});
var __exports17 = {};
__export(__exports17, {
  component: () => component17,
  fonts: () => fonts17,
  imports: () => imports17,
  index: () => index17,
  server: () => page_server_ts_exports9,
  server_id: () => server_id12,
  stylesheets: () => stylesheets17
});
var index17;
var component17;
var server_id12;
var imports17;
var stylesheets17;
var fonts17;
var init__17 = __esm({
  ".svelte-kit/output/server/nodes/16.js"() {
    init_page_server_ts9();
    index17 = 16;
    component17 = async () => (await Promise.resolve().then(() => (init_page_svelte9(), page_svelte_exports9))).default;
    server_id12 = "src/routes/d/(d)/courses/(course)/[slug]/modules/+page.server.ts";
    imports17 = ["_app/immutable/nodes/16.d7386b5b.js", "_app/immutable/chunks/index.7ee2e23d.js", "_app/immutable/chunks/index.24430090.js", "_app/immutable/chunks/forms.b3e5ddf7.js", "_app/immutable/chunks/parse.bee59afc.js", "_app/immutable/chunks/singletons.21d018a5.js", "_app/immutable/chunks/paths.1c0372a3.js", "_app/immutable/chunks/navigation.0d698c81.js", "_app/immutable/chunks/stores.2de0b66f.js", "_app/immutable/chunks/CloseButton.ed454e30.js", "_app/immutable/chunks/Indicator.svelte_svelte_type_style_lang.880982d3.js", "_app/immutable/chunks/_commonjsHelpers.725317a4.js", "_app/immutable/chunks/Modal.087a6368.js"];
    stylesheets17 = ["_app/immutable/assets/Indicator.1d121e74.css"];
    fonts17 = [];
  }
});
var page_server_ts_exports10 = {};
var init_page_server_ts10 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/courses/(course)/_slug_/people/_page.server.ts.js"() {
  }
});
var page_svelte_exports10 = {};
__export(page_svelte_exports10, {
  default: () => Page10
});
var import_classnames10;
var Page10;
var init_page_svelte10 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/courses/(course)/_slug_/people/_page.svelte.js"() {
    init_index2();
    import_classnames10 = __toESM(require_classnames(), 1);
    init_Modal();
    init_TableHeadCell();
    init_TableSearch();
    Page10 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let filteredItems;
      let { data } = $$props;
      let searchTerm = "";
      let peopleModel = false;
      let removeModel = false;
      let people;
      let { show_create_box } = $$props;
      if ($$props.data === void 0 && $$bindings.data && data !== void 0)
        $$bindings.data(data);
      if ($$props.show_create_box === void 0 && $$bindings.show_create_box && show_create_box !== void 0)
        $$bindings.show_create_box(show_create_box);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        people = data.people;
        filteredItems = people.filter((enrollment_data) => enrollment_data.users.first_name.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1);
        $$rendered = `<div class="w-full"><section class="p-1"><div class="container"><h4 class="text-xl font-bold text-white -mx-auto my-5">People</h4>
			<button class="relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-blue-500 to-blue-300 group-hover:from-blue-300 group-hover:to-blue-500 hover:text-white dark:text-white focus:ring-4 focus:outline-none focus:ring-blue-200 dark:focus:ring-blue-800"><span class="relative px-5 py-2.5 transition-all|local ease-in duration-75 bg-white dark:bg-gray-600 rounded-md group-hover:bg-opacity-0">Add
				</span></button>


			<div class="py-4"><div class="relative overflow-x-auto shadow-md sm:rounded-lg w-full">${validate_component(TableSearch, "TableSearch").$$render(
          $$result,
          {
            placeholder: "Search by first name...",
            hoverable: true,
            inputValue: searchTerm
          },
          {
            inputValue: ($$value) => {
              searchTerm = $$value;
              $$settled = false;
            }
          },
          {
            default: () => {
              return `${validate_component(Table, "Table").$$render($$result, { shadow: true, hoverable: true }, {}, {
                default: () => {
                  return `${validate_component(TableHead, "TableHead").$$render($$result, {}, {}, {
                    default: () => {
                      return `${validate_component(TableHeadCell, "TableHeadCell").$$render($$result, {}, {}, {
                        default: () => {
                          return `Name`;
                        }
                      })}
								${validate_component(TableHeadCell, "TableHeadCell").$$render($$result, {}, {}, {
                        default: () => {
                          return `Enrolled`;
                        }
                      })}
								${validate_component(TableHeadCell, "TableHeadCell").$$render($$result, {}, {}, {
                        default: () => {
                          return `Date Enrolled`;
                        }
                      })}
								${validate_component(TableHeadCell, "TableHeadCell").$$render($$result, {}, {}, {
                        default: () => {
                          return `<span class="sr-only ">Edit</span>`;
                        }
                      })}`;
                    }
                  })}
							${validate_component(TableBody, "TableBody").$$render($$result, { class: "divide-y" }, {}, {
                    default: () => {
                      return `${each(filteredItems, ({ user_id, enrolled, enrollment_date, users }) => {
                        return `${validate_component(TableBodyRow, "TableBodyRow").$$render($$result, { class: "cursor-pointer" }, {}, {
                          default: () => {
                            return `${validate_component(TableBodyCell, "TableBodyCell").$$render($$result, {}, {}, {
                              default: () => {
                                return `${escape(users.first_name)} ${escape(users.last_name)}`;
                              }
                            })}
										${validate_component(TableBodyCell, "TableBodyCell").$$render($$result, {}, {}, {
                              default: () => {
                                return `<button class="${escape(enrolled ? "hidden" : "block", true) + " relative inline-flex items-center justify-center p-0.5 mb-1 mr-1 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-green-400 to-green-600 hover:text-white dark:text-white focus:ring-4 focus:outline-none"}"><span class="relative px-3 py-2.5 transition-all|local ease-in duration-75 bg-white dark:bg-gray-600 rounded-md group-hover:bg-opacity-0">Accept
											</span></button>
											${enrolled ? `TRUE` : ``}
										`;
                              }
                            })}
										${validate_component(TableBodyCell, "TableBodyCell").$$render($$result, {}, {}, {
                              default: () => {
                                return `${escape(enrollment_date.substring(0, 10))}`;
                              }
                            })}
										${validate_component(TableBodyCell, "TableBodyCell").$$render(
                              $$result,
                              {
                                tdClass: "py-4 whitespace-nowrap font-medium"
                              },
                              {},
                              {
                                default: () => {
                                  return `<a class="font-medium text-blue-600 hover:underline dark:text-blue-500 px-1">Edit
											</a>
											<a class="font-medium text-blue-600 hover:underline dark:text-red-500">Remove
											</a>
										`;
                                }
                              }
                            )}
									`;
                          }
                        })}`;
                      })}`;
                    }
                  })}`;
                }
              })}`;
            }
          }
        )}</div></div></div></section>
	<div>
		${validate_component(Modal, "Modal").$$render(
          $$result,
          { title: "Add People", open: peopleModel },
          {
            open: ($$value) => {
              peopleModel = $$value;
              $$settled = false;
            }
          },
          {
            default: () => {
              return `<form method="POST"><div class="grid gap-4 mb-6 px-6 sm:grid-cols-1"><div><label for="type" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Type</label>
						<select name="type" id="type" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" required><option selected="" value="Select type">Select type</option><option value="Basic">Student</option><option value="Basic">Teacher</option><option value="Basic">TA</option></select></div>

					<div class="sm:col-span-2"><button type="button" class="px-3 py-2 text-sm font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Generate Code</button></div>
					${``}</div></form>`;
            }
          }
        )}

		
		${validate_component(Modal, "Modal").$$render(
          $$result,
          {
            title: "Remove person",
            open: removeModel
          },
          {
            open: ($$value) => {
              removeModel = $$value;
              $$settled = false;
            }
          },
          {
            default: () => {
              return `<p class="mb-4 text-gray-500 dark:text-gray-300">Are you sure you want to delete this item?</p>
			<div class="flex justify-center items-center space-x-4"><button data-modal-toggle="deleteModal" type="button" class="py-2 px-3 text-sm font-medium text-gray-500 bg-white rounded-lg border border-gray-200 hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-primary-300 hover:text-gray-900 focus:z-10 dark:bg-gray-700 dark:text-gray-300 dark:border-gray-500 dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-gray-600">No, cancel
				</button>
				<button type="submit" class="py-2 px-3 text-sm font-medium text-center text-white bg-red-600 rounded-lg hover:bg-red-700 focus:ring-4 focus:outline-none focus:ring-red-300 dark:bg-red-500 dark:hover:bg-red-600 dark:focus:ring-red-900">Yes, I&#39;m sure
				</button></div>`;
            }
          }
        )}</div></div>`;
      } while (!$$settled);
      return $$rendered;
    });
  }
});
var __exports18 = {};
__export(__exports18, {
  component: () => component18,
  fonts: () => fonts18,
  imports: () => imports18,
  index: () => index18,
  server: () => page_server_ts_exports10,
  server_id: () => server_id13,
  stylesheets: () => stylesheets18
});
var index18;
var component18;
var server_id13;
var imports18;
var stylesheets18;
var fonts18;
var init__18 = __esm({
  ".svelte-kit/output/server/nodes/17.js"() {
    init_page_server_ts10();
    index18 = 17;
    component18 = async () => (await Promise.resolve().then(() => (init_page_svelte10(), page_svelte_exports10))).default;
    server_id13 = "src/routes/d/(d)/courses/(course)/[slug]/people/+page.server.ts";
    imports18 = ["_app/immutable/nodes/17.fa5a6074.js", "_app/immutable/chunks/index.7ee2e23d.js", "_app/immutable/chunks/Indicator.svelte_svelte_type_style_lang.880982d3.js", "_app/immutable/chunks/_commonjsHelpers.725317a4.js", "_app/immutable/chunks/Modal.087a6368.js", "_app/immutable/chunks/CloseButton.ed454e30.js", "_app/immutable/chunks/TableHeadCell.24b1fb8e.js", "_app/immutable/chunks/TableSearch.e66e4c61.js", "_app/immutable/chunks/paths.1c0372a3.js", "_app/immutable/chunks/navigation.0d698c81.js", "_app/immutable/chunks/singletons.21d018a5.js", "_app/immutable/chunks/notifications.93f6c838.js"];
    stylesheets18 = ["_app/immutable/assets/Indicator.1d121e74.css"];
    fonts18 = [];
  }
});
var page_server_ts_exports11 = {};
var init_page_server_ts11 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/courses/(course)/_slug_/settings/_page.server.ts.js"() {
  }
});
var page_svelte_exports11 = {};
__export(page_svelte_exports11, {
  default: () => Page11
});
var Page11;
var init_page_svelte11 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/courses/(course)/_slug_/settings/_page.svelte.js"() {
    init_index2();
    Page11 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { data } = $$props;
      data.courseData;
      if ($$props.data === void 0 && $$bindings.data && data !== void 0)
        $$bindings.data(data);
      return `<div class="flex flex-row"><section class="p-1"><div class="container mx-12 my-5"><h4 class="text-xl font-bold text-white -mx-10 my-5">Settings</h4>

			<div class="flex flex-wrap -mx-10 -mb-6 text-white font-semibold">1 2 3</div></div></section></div>`;
    });
  }
});
var __exports19 = {};
__export(__exports19, {
  component: () => component19,
  fonts: () => fonts19,
  imports: () => imports19,
  index: () => index19,
  server: () => page_server_ts_exports11,
  server_id: () => server_id14,
  stylesheets: () => stylesheets19
});
var index19;
var component19;
var server_id14;
var imports19;
var stylesheets19;
var fonts19;
var init__19 = __esm({
  ".svelte-kit/output/server/nodes/18.js"() {
    init_page_server_ts11();
    index19 = 18;
    component19 = async () => (await Promise.resolve().then(() => (init_page_svelte11(), page_svelte_exports11))).default;
    server_id14 = "src/routes/d/(d)/courses/(course)/[slug]/settings/+page.server.ts";
    imports19 = ["_app/immutable/nodes/18.76ac00bd.js", "_app/immutable/chunks/index.7ee2e23d.js"];
    stylesheets19 = [];
    fonts19 = [];
  }
});
var page_server_ts_exports12 = {};
__export(page_server_ts_exports12, {
  actions: () => actions5,
  prerender: () => prerender9
});
var prerender9;
var actions5;
var init_page_server_ts12 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/courses/create/_page.server.ts.js"() {
    prerender9 = false;
    actions5 = {
      createCourse: async ({ request, url, locals: { supabase } }) => {
        const { data } = await supabase.auth.refreshSession();
        const user = data.user;
        const formData = await request.formData();
        const title = formData.get("course_title");
        const prefix = formData.get("course_prefix");
        const number = formData.get("course_number");
        const term = formData.get("course_term");
        if (data.session) {
          const course_id = Math.floor(Math.random() * 9999999999);
          const { error: error2 } = await supabase.rpc(
            "create_course",
            {
              _course_id: course_id,
              _inserted_at: /* @__PURE__ */ new Date(),
              _created_by: user.id,
              _course_title: title,
              _course_prefix: prefix,
              _course_number: number,
              _course_term: term
            }
          );
          if (!error2) {
            return { success: true, course_id };
          }
        }
      }
    };
  }
});
var page_svelte_exports12 = {};
__export(page_svelte_exports12, {
  default: () => Page12
});
var import_react_image_file_resizer2;
var import_classnames11;
var StepIndicator;
var Page12;
var init_page_svelte12 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/courses/create/_page.svelte.js"() {
    init_index2();
    init_stores();
    import_react_image_file_resizer2 = __toESM(require_build(), 1);
    init_devalue();
    import_classnames11 = __toESM(require_classnames(), 1);
    StepIndicator = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$restProps = compute_rest_props($$props, [
        "steps",
        "currentStep",
        "size",
        "color",
        "glow",
        "hideLabel",
        "completedCustom",
        "currentCustom"
      ]);
      let { steps = ["Step 1", "Step 2", "Step 3", "Step 4", "Step 5"] } = $$props;
      let { currentStep = 1 } = $$props;
      let { size: size2 = "h-2.5" } = $$props;
      let { color = "primary" } = $$props;
      let { glow = false } = $$props;
      let { hideLabel = false } = $$props;
      let { completedCustom = "" } = $$props;
      let { currentCustom = "" } = $$props;
      const completedStepColors = {
        primary: "bg-primary-500 dark:bg-primary-900",
        secondary: "bg-secondary-500 dark:bg-secondary-900",
        gray: "bg-gray-400 dark:bg-gray-500",
        red: "bg-red-600 dark:bg-red-900",
        yellow: "bg-yellow-400 dark:bg-yellow-600",
        green: "bg-green-500 dark:bg-green-900",
        indigo: "bg-indigo-500 dark:bg-indigo-900",
        purple: "bg-purple-500 dark:bg-purple-900",
        pink: "bg-pink-500 dark:bg-pink-900",
        blue: "bg-blue-500 dark:bg-blue-900",
        custom: completedCustom
      };
      const currentStepColors = {
        primary: "bg-primary-800 dark:bg-primary-400",
        secondary: "bg-secondary-800 dark:bg-secondary-400",
        gray: "bg-gray-700 dark:bg-gray-200",
        red: "bg-red-900 dark:bg-red-500",
        yellow: "bg-yellow-600 dark:bg-yellow-400",
        green: "bg-green-800 dark:bg-green-400",
        indigo: "bg-indigo-800 dark:bg-indigo-400",
        purple: "bg-purple-800 dark:bg-purple-400",
        pink: "bg-pink-800 dark:bg-pink-400",
        blue: "bg-blue-800 dark:bg-blue-400",
        custom: currentCustom
      };
      if ($$props.steps === void 0 && $$bindings.steps && steps !== void 0)
        $$bindings.steps(steps);
      if ($$props.currentStep === void 0 && $$bindings.currentStep && currentStep !== void 0)
        $$bindings.currentStep(currentStep);
      if ($$props.size === void 0 && $$bindings.size && size2 !== void 0)
        $$bindings.size(size2);
      if ($$props.color === void 0 && $$bindings.color && color !== void 0)
        $$bindings.color(color);
      if ($$props.glow === void 0 && $$bindings.glow && glow !== void 0)
        $$bindings.glow(glow);
      if ($$props.hideLabel === void 0 && $$bindings.hideLabel && hideLabel !== void 0)
        $$bindings.hideLabel(hideLabel);
      if ($$props.completedCustom === void 0 && $$bindings.completedCustom && completedCustom !== void 0)
        $$bindings.completedCustom(completedCustom);
      if ($$props.currentCustom === void 0 && $$bindings.currentCustom && currentCustom !== void 0)
        $$bindings.currentCustom(currentCustom);
      return `<div${spread(
        [
          escape_object($$restProps),
          {
            class: escape_attribute_value((0, import_classnames11.default)("space-y-2 dark:text-white", $$props.class))
          }
        ],
        {}
      )}>${!hideLabel ? `<h3 class="text-base font-semibold">${escape(steps[currentStep - 1])}</h3>` : ``}
  <div${add_attribute("class", (0, import_classnames11.default)("flex justify-between gap-2 w-full", size2), 0)}>${each(steps, (step, i2) => {
        return `${i2 === currentStep - 1 ? `<div class="relative w-full h-full"><div${add_attribute("class", (0, import_classnames11.default)("relative w-full h-full rounded-sm", currentStepColors[color]), 0)}></div>
          ${glow ? `<div${add_attribute("class", (0, import_classnames11.default)("absolute -inset-1 rounded-sm blur opacity-30 dark:opacity-25", currentStepColors[color]), 0)}></div>` : ``}
        </div>` : `${i2 < currentStep - 1 ? `<div${add_attribute("class", (0, import_classnames11.default)("w-full h-full rounded-sm", completedStepColors[color]), 0)}></div>` : `<div${add_attribute("class", (0, import_classnames11.default)("w-full h-full rounded-sm bg-gray-200 dark:bg-gray-700"), 0)}></div>`}`}`;
      })}</div></div>

`;
    });
    Page12 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $page, $$unsubscribe_page;
      $$unsubscribe_page = subscribe(page, (value2) => $page = value2);
      let steps = ["Step 1", "Step 2", "Step 3"];
      $page.data.session;
      let { data } = $$props;
      let course_title;
      let course_prefix;
      let course_number;
      let course_term;
      let currentStep = 1;
      let { files } = $$props;
      let { form } = $$props;
      if ($$props.data === void 0 && $$bindings.data && data !== void 0)
        $$bindings.data(data);
      if ($$props.files === void 0 && $$bindings.files && files !== void 0)
        $$bindings.files(files);
      if ($$props.form === void 0 && $$bindings.form && form !== void 0)
        $$bindings.form(form);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        $$rendered = `
<body class="bg-gray-600 antialiased bg-body text-body font-body"><div class="from-gray-500 to-gray-500 bg-gradient-to-br antialiased bg-body text-body font-body"><form action="?/createCourse" method="POST"><section class="py-3"><div class="container px-6 mx-auto"><div class="min-h-screen gap-4 flex min-w-2/3"><div class="flex w-2/3 justify-around i items-center md:w-2/3"><div class="min-w-xs max-w-xs"><div class="relative group"><div class="absolute -inset-0.5 bg-gradient-to-r from-gray-400 to-gray-400 rounded-lg blur opacity-10 group-hover:opacity-75 transition duration-1500 group-hover:duration-200 animate-tilt"></div>
									<div><div class="relative p-6 bg-gray-700 rounded-xl"><img class="inline-flex items-center justify-center w-20 h-20 mb-6 rounded-lg drop-shadow-2xl"${add_attribute(
          "src",
          "https://dummyimage.com/150x150/000/fff",
          0
        )}>
											<a class="inline-block absolute top-1 right-0 m-5 text-gray-300 hover:text-gray-200" href="#"><svg fill="none" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M12 13C12.5523 13 13 12.5523 13 12C13 11.4477 12.5523 11 12 11C11.4477 11 11 11.4477 11 12C11 12.5523 11.4477 13 12 13Z" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"></path><path d="M12 20C12.5523 20 13 19.5523 13 19C13 18.4477 12.5523 18 12 18C11.4477 18 11 18.4477 11 19C11 19.5523 11.4477 20 12 20Z" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"></path><path d="M12 6C12.5523 6 13 5.55228 13 5C13 4.44772 12.5523 4 12 4C11.4477 4 11 4.44772 11 5C11 5.55228 11.4477 6 12 6Z" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"></path></svg></a>
											<h4 class="text-xl text-white font-bold mb-3">${escape(
          "Software Development"
        )}</h4>
											<h4 class="text-xl text-white font-bold mb-1">${escape(
          "CS100"
        )}
												${escape(
          "12345"
        )}</h4>
											<h4 class="text-gray-300 mb-1">${escape(
          "Spring 2023"
        )}</h4></div></div></div></div></div>

						<div class="flex w-2/3 justify-around i items-center md:w-2/3"><div class="p-9 bg-gray-600 rounded-xl">
								<div class="mb-8">${validate_component(StepIndicator, "StepIndicator").$$render($$result, { currentStep, steps, glow: true }, {}, {})}</div>
								<div class="flex flex-wrap items-center justify-between -mx-4 mb-8 pb-6 border-b border-gray-400 border-opacity-20"><div class="w-full sm:w-auto px-4 mb-6 sm:mb-0"><h4 class="text-2xl font-bold tracking-wide text-white mb-1">Create Course</h4></div></div>


								
								${`<div class="flex flex-wrap items-center -mx-4 pb-8 mb-8 border-b border-gray-400 border-opacity-20"><div class="w-full sm:w-1/3 px-4 mb-4 sm:mb-0"><span class="text-sm font-medium text-gray-100">Course Title</span></div>
										<div class="w-full sm:w-2/3 px-4"><div class="max-w-xl"><div class="flex items-center -mx-3"><div class="w-full sm:w-auto px-3 mb-3 sm:mb-0"><input name="course_title" id="course_title" type="text" class="block py-4 px-3 w-full text-sm text-gray-100 placeholder-gray-100 font-medium outline-none bg-transparent border border-gray-400 hover:border-white focus:border-blue-500 rounded-lg" placeholder="Software Development I" required${add_attribute("value", course_title, 0)}></div></div></div></div></div>

									<div class="flex flex-wrap items-center -mx-4 pb-8 mb-8 border-b border-gray-400 border-opacity-20"><div class="w-full sm:w-1/3 px-4 mb-4 sm:mb-0"><span class="text-sm font-medium text-gray-100">Course Prefix</span></div>
										<div class="w-full sm:w-2/3 px-4"><div class="max-w-xl"><div class="flex flex-wrap items-center -mx-3"><div class="w-full sm:w-auto px-3 mb-3 sm:mb-0"><input name="course_prefix" id="course_prefix" type="text" class="block py-4 px-3 w-full text-sm text-gray-100 placeholder-gray-100 font-medium outline-none bg-transparent border border-gray-400 hover:border-white focus:border-blue-500 rounded-lg" placeholder="CS100" required${add_attribute("value", course_prefix, 0)}></div></div></div></div></div>

									<div class="flex flex-wrap items-center -mx-4 pb-8 mb-8 border-b border-gray-400 border-opacity-20"><div class="w-full sm:w-1/3 px-4 mb-4 sm:mb-0"><span class="text-sm font-medium text-gray-100">Course Number</span></div>
										<div class="w-full sm:w-2/3 px-4"><div class="max-w-xl"><div class="flex flex-wrap items-center -mx-3"><div class="w-full sm:w-auto px-3 mb-3 sm:mb-0"><input name="course_number" id="course_number" type="text" class="block py-4 px-3 w-full text-sm text-gray-100 placeholder-gray-100 font-medium outline-none bg-transparent border border-gray-400 hover:border-white focus:border-blue-500 rounded-lg" placeholder="12345" required${add_attribute("value", course_number, 0)}></div></div></div></div></div>

									<div class="flex flex-wrap items-center -mx-4 pb-8 mb-8 border-b border-gray-400 border-opacity-20"><div class="w-full sm:w-1/3 px-4 mb-4 sm:mb-0"><span class="text-sm font-medium text-gray-100">Course Term</span></div>
										<div class="w-full sm:w-2/3 px-4"><div class="max-w-xl"><div class="flex flex-wrap items-center -mx-3"><div class="w-full sm:w-auto px-3 mb-3 sm:mb-0"><input name="course_term" id="course_term" type="text" class="block py-4 px-3 w-full text-sm text-gray-100 placeholder-gray-100 font-medium outline-none bg-transparent border border-gray-400 hover:border-white focus:border-blue-500 rounded-lg" placeholder="Spring 2023" required${add_attribute("value", course_term, 0)}></div></div></div></div></div>

									

									<div class="flex justify-between w-full sm:w-auto"><div>
											
											<a class="inline-block py-2 px-4 mr-3 text-xs text-center font-semibold leading-normal text-gray-200 bg-gray-500 hover:bg-gray-400 rounded-lg transition duration-200" href="/d/courses">Cancel</a></div>

										<button class="inline-block py-2 px-4 text-sm text-center font-bold leading-normal text-gray-200 bg-blue-500 hover:bg-blue-700 rounded-lg transition duration-200" type="submit">${``}
											Next
										</button></div>
									`}</div></div></div></div></section></form></div></body>`;
      } while (!$$settled);
      $$unsubscribe_page();
      return $$rendered;
    });
  }
});
var __exports20 = {};
__export(__exports20, {
  component: () => component20,
  fonts: () => fonts20,
  imports: () => imports20,
  index: () => index20,
  server: () => page_server_ts_exports12,
  server_id: () => server_id15,
  stylesheets: () => stylesheets20
});
var index20;
var component20;
var server_id15;
var imports20;
var stylesheets20;
var fonts20;
var init__20 = __esm({
  ".svelte-kit/output/server/nodes/19.js"() {
    init_page_server_ts12();
    index20 = 19;
    component20 = async () => (await Promise.resolve().then(() => (init_page_svelte12(), page_svelte_exports12))).default;
    server_id15 = "src/routes/d/(d)/courses/create/+page.server.ts";
    imports20 = ["_app/immutable/nodes/19.11528e9b.js", "_app/immutable/chunks/index.7ee2e23d.js", "_app/immutable/chunks/stores.2de0b66f.js", "_app/immutable/chunks/singletons.21d018a5.js", "_app/immutable/chunks/paths.1c0372a3.js", "_app/immutable/chunks/imageStorage.281a7663.js", "_app/immutable/chunks/_commonjsHelpers.725317a4.js", "_app/immutable/chunks/navigation.0d698c81.js", "_app/immutable/chunks/forms.b3e5ddf7.js", "_app/immutable/chunks/parse.bee59afc.js", "_app/immutable/chunks/Indicator.svelte_svelte_type_style_lang.880982d3.js", "_app/immutable/chunks/course.b2fd6fc0.js"];
    stylesheets20 = ["_app/immutable/assets/19.95b16411.css", "_app/immutable/assets/Indicator.1d121e74.css"];
    fonts20 = [];
  }
});
var page_server_ts_exports13 = {};
var init_page_server_ts13 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/courses/join/_page.server.ts.js"() {
  }
});
var page_svelte_exports13 = {};
__export(page_svelte_exports13, {
  default: () => Page13
});
var Page13;
var init_page_svelte13 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/courses/join/_page.svelte.js"() {
    init_index2();
    Page13 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return ``;
    });
  }
});
var __exports21 = {};
__export(__exports21, {
  component: () => component21,
  fonts: () => fonts21,
  imports: () => imports21,
  index: () => index21,
  server: () => page_server_ts_exports13,
  server_id: () => server_id16,
  stylesheets: () => stylesheets21
});
var index21;
var component21;
var server_id16;
var imports21;
var stylesheets21;
var fonts21;
var init__21 = __esm({
  ".svelte-kit/output/server/nodes/20.js"() {
    init_page_server_ts13();
    index21 = 20;
    component21 = async () => (await Promise.resolve().then(() => (init_page_svelte13(), page_svelte_exports13))).default;
    server_id16 = "src/routes/d/(d)/courses/join/+page.server.ts";
    imports21 = ["_app/immutable/nodes/20.3ea7bf55.js", "_app/immutable/chunks/index.7ee2e23d.js"];
    stylesheets21 = [];
    fonts21 = [];
  }
});
var page_server_ts_exports14 = {};
__export(page_server_ts_exports14, {
  actions: () => actions6,
  load: () => load12,
  prerender: () => prerender10
});
var prerender10;
var load12;
var actions6;
var init_page_server_ts14 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/instances/_page.server.ts.js"() {
    prerender10 = false;
    load12 = async ({ request, url, locals: { supabase, getSession } }) => {
      const session = await getSession();
      if (session) {
        const { data: assignmentData, error: error2 } = await supabase.from("assignments").select("assignment_id, title");
        const { data: instanceData } = await supabase.from("instances").select("id, assignment_id, inserted_at, type, assignments ( assignment_id, title )").eq("user_id", session.user.id);
        return {
          assignmentData,
          instanceData
        };
      }
    };
    actions6 = {
      createInstance: async ({ request, url, locals: { supabase } }) => {
        const formData = await request.formData();
        const { data } = await supabase.auth.refreshSession();
        let user = data.user;
        const type = formData.get("type");
        const assignment = formData.get("assignment");
        if (user != null) {
          let updates = {
            user_id: user.id,
            inserted_at: /* @__PURE__ */ new Date(),
            type,
            assignment_id: assignment
          };
          await supabase.from("instances").upsert(updates);
        }
      }
    };
  }
});
var page_svelte_exports14 = {};
__export(page_svelte_exports14, {
  default: () => Page14
});
var import_classnames12;
var import_dayjs4;
var PauseSolid;
var PlaySolid;
var TrashSolid;
var Page14;
var init_page_svelte14 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/instances/_page.svelte.js"() {
    init_index2();
    init_Settings();
    import_classnames12 = __toESM(require_classnames(), 1);
    init_TableHeadCell();
    import_dayjs4 = __toESM(require_dayjs_min(), 1);
    init_devalue();
    PauseSolid = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$restProps = compute_rest_props($$props, ["size", "role", "color", "ariaLabel"]);
      let { size: size2 = "24" } = $$props;
      let { role = "img" } = $$props;
      let { color = "currentColor" } = $$props;
      let { ariaLabel = "pause" } = $$props;
      if ($$props.size === void 0 && $$bindings.size && size2 !== void 0)
        $$bindings.size(size2);
      if ($$props.role === void 0 && $$bindings.role && role !== void 0)
        $$bindings.role(role);
      if ($$props.color === void 0 && $$bindings.color && color !== void 0)
        $$bindings.color(color);
      if ($$props.ariaLabel === void 0 && $$bindings.ariaLabel && ariaLabel !== void 0)
        $$bindings.ariaLabel(ariaLabel);
      return `<svg${spread(
        [
          { xmlns: "http://www.w3.org/2000/svg" },
          escape_object($$restProps),
          { role: escape_attribute_value(role) },
          { width: escape_attribute_value(size2) },
          { height: escape_attribute_value(size2) },
          { fill: escape_attribute_value(color) },
          {
            class: escape_attribute_value($$props.class)
          },
          {
            "aria-label": escape_attribute_value(ariaLabel)
          },
          { viewBox: "0 0 320 512" }
        ],
        {}
      )}><path d="M48 64C21.5 64 0 85.5 0 112V400c0 26.5 21.5 48 48 48H80c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48H48zm192 0c-26.5 0-48 21.5-48 48V400c0 26.5 21.5 48 48 48h32c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48H240z"></path></svg>
`;
    });
    PlaySolid = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$restProps = compute_rest_props($$props, ["size", "role", "color", "ariaLabel"]);
      let { size: size2 = "24" } = $$props;
      let { role = "img" } = $$props;
      let { color = "currentColor" } = $$props;
      let { ariaLabel = "play" } = $$props;
      if ($$props.size === void 0 && $$bindings.size && size2 !== void 0)
        $$bindings.size(size2);
      if ($$props.role === void 0 && $$bindings.role && role !== void 0)
        $$bindings.role(role);
      if ($$props.color === void 0 && $$bindings.color && color !== void 0)
        $$bindings.color(color);
      if ($$props.ariaLabel === void 0 && $$bindings.ariaLabel && ariaLabel !== void 0)
        $$bindings.ariaLabel(ariaLabel);
      return `<svg${spread(
        [
          { xmlns: "http://www.w3.org/2000/svg" },
          escape_object($$restProps),
          { role: escape_attribute_value(role) },
          { width: escape_attribute_value(size2) },
          { height: escape_attribute_value(size2) },
          { fill: escape_attribute_value(color) },
          {
            class: escape_attribute_value($$props.class)
          },
          {
            "aria-label": escape_attribute_value(ariaLabel)
          },
          { viewBox: "0 0 384 512" }
        ],
        {}
      )}><path d="M73 39c-14.8-9.1-33.4-9.4-48.5-.9S0 62.6 0 80V432c0 17.4 9.4 33.4 24.5 41.9s33.7 8.1 48.5-.9L361 297c14.3-8.7 23-24.2 23-41s-8.7-32.2-23-41L73 39z"></path></svg>
`;
    });
    TrashSolid = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$restProps = compute_rest_props($$props, ["size", "role", "color", "ariaLabel"]);
      let { size: size2 = "24" } = $$props;
      let { role = "img" } = $$props;
      let { color = "currentColor" } = $$props;
      let { ariaLabel = "trash" } = $$props;
      if ($$props.size === void 0 && $$bindings.size && size2 !== void 0)
        $$bindings.size(size2);
      if ($$props.role === void 0 && $$bindings.role && role !== void 0)
        $$bindings.role(role);
      if ($$props.color === void 0 && $$bindings.color && color !== void 0)
        $$bindings.color(color);
      if ($$props.ariaLabel === void 0 && $$bindings.ariaLabel && ariaLabel !== void 0)
        $$bindings.ariaLabel(ariaLabel);
      return `<svg${spread(
        [
          { xmlns: "http://www.w3.org/2000/svg" },
          escape_object($$restProps),
          { role: escape_attribute_value(role) },
          { width: escape_attribute_value(size2) },
          { height: escape_attribute_value(size2) },
          { fill: escape_attribute_value(color) },
          {
            class: escape_attribute_value($$props.class)
          },
          {
            "aria-label": escape_attribute_value(ariaLabel)
          },
          { viewBox: "0 0 448 512" }
        ],
        {}
      )}><path d="M135.2 17.7L128 32H32C14.3 32 0 46.3 0 64S14.3 96 32 96H416c17.7 0 32-14.3 32-32s-14.3-32-32-32H320l-7.2-14.3C307.4 6.8 296.3 0 284.2 0H163.8c-12.1 0-23.2 6.8-28.6 17.7zM416 128H32L53.2 467c1.6 25.3 22.6 45 47.9 45H346.9c25.3 0 46.3-19.7 47.9-45L416 128z"></path></svg>
`;
    });
    Page14 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let model;
      let { data } = $$props;
      let assignments;
      let instances;
      let { show_create_box } = $$props;
      if ($$props.data === void 0 && $$bindings.data && data !== void 0)
        $$bindings.data(data);
      if ($$props.show_create_box === void 0 && $$bindings.show_create_box && show_create_box !== void 0)
        $$bindings.show_create_box(show_create_box);
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        instances = data.instanceData;
        assignments = data.assignmentData;
        $$rendered = `<body class="bg-gray-600 antialiased bg-body text-body font-body"><div class="">${validate_component(Navbar, "Navbar").$$render($$result, {}, {}, {})}<s></s>
		<div class="mx-auto lg:ml-20"><section><div class="pt-5 pb-6 px-8 bg-gray-700"><div class="flex flex-wrap items-center justify-between -mx-2"><div class="w-full lg:w-auto px-2 mb-6 lg:mb-0"><h4 class="text-2xl font-bold text-white tracking-wide leading-7 mb-1">Instances</h4></div>
						<div class="w-full lg:w-auto px-2"><div class="sm:flex items-center"><div class="w-full sm:w-auto mb-6 sm:mb-0 sm:mr-4"><div class="flex flex-wrap items-center -mb-2"><a class="inline-flex items-center justify-center w-12 h-12 mb-2 mr-4 p-1 text-gray-300 bg-gray-500 hover:bg-gray-400 hover:bg-opacity-40 transition|local duration-150 rounded-full" href="#"><svg fill="none" height="16" viewBox="0 0 20 16" width="20" xmlns="http://www.w3.org/2000/svg"><path d="M17 0H3C2.20435 0 1.44129 0.316071 0.87868 0.87868C0.316071 1.44129 0 2.20435 0 3V13C0 13.7956 0.316071 14.5587 0.87868 15.1213C1.44129 15.6839 2.20435 16 3 16H17C17.7956 16 18.5587 15.6839 19.1213 15.1213C19.6839 14.5587 20 13.7956 20 13V3C20 2.20435 19.6839 1.44129 19.1213 0.87868C18.5587 0.316071 17.7956 0 17 0ZM3 2H17C17.2652 2 17.5196 2.10536 17.7071 2.29289C17.8946 2.48043 18 2.73478 18 3L10 7.88L2 3C2 2.73478 2.10536 2.48043 2.29289 2.29289C2.48043 2.10536 2.73478 2 3 2ZM18 13C18 13.2652 17.8946 13.5196 17.7071 13.7071C17.5196 13.8946 17.2652 14 17 14H3C2.73478 14 2.48043 13.8946 2.29289 13.7071C2.10536 13.5196 2 13.2652 2 13V5.28L9.48 9.85C9.63202 9.93777 9.80446 9.98397 9.98 9.98397C10.1555 9.98397 10.328 9.93777 10.48 9.85L18 5.28V13Z" fill="currentColor"></path></svg></a>
										<a class="inline-flex items-center justify-center w-12 h-12 mb-2 mr-4 p-1 text-gray-300 bg-gray-500 hover:bg-gray-400 hover:bg-opacity-40 transition|local duration-150 rounded-full" href="#"><svg fill="none" height="20" viewBox="0 0 16 20" width="16" xmlns="http://www.w3.org/2000/svg"><path d="M14 11.18V8C13.9986 6.58312 13.4958 5.21247 12.5806 4.13077C11.6655 3.04908 10.3971 2.32615 9 2.09V1C9 0.734784 8.89464 0.48043 8.70711 0.292893C8.51957 0.105357 8.26522 0 8 0C7.73478 0 7.48043 0.105357 7.29289 0.292893C7.10536 0.48043 7 0.734784 7 1V2.09C5.60294 2.32615 4.33452 3.04908 3.41939 4.13077C2.50425 5.21247 2.00144 6.58312 2 8V11.18C1.41645 11.3863 0.910998 11.7681 0.552938 12.2729C0.194879 12.7778 0.00173951 13.3811 0 14V16C0 16.2652 0.105357 16.5196 0.292893 16.7071C0.48043 16.8946 0.734784 17 1 17H4.14C4.37028 17.8474 4.873 18.5954 5.5706 19.1287C6.26819 19.6621 7.1219 19.951 8 19.951C8.8781 19.951 9.73181 19.6621 10.4294 19.1287C11.127 18.5954 11.6297 17.8474 11.86 17H15C15.2652 17 15.5196 16.8946 15.7071 16.7071C15.8946 16.5196 16 16.2652 16 16V14C15.9983 13.3811 15.8051 12.7778 15.4471 12.2729C15.089 11.7681 14.5835 11.3863 14 11.18ZM4 8C4 6.93913 4.42143 5.92172 5.17157 5.17157C5.92172 4.42143 6.93913 4 8 4C9.06087 4 10.0783 4.42143 10.8284 5.17157C11.5786 5.92172 12 6.93913 12 8V11H4V8ZM8 18C7.65097 17.9979 7.30857 17.9045 7.00683 17.7291C6.70509 17.5536 6.45451 17.3023 6.28 17H9.72C9.54549 17.3023 9.29491 17.5536 8.99317 17.7291C8.69143 17.9045 8.34903 17.9979 8 18ZM14 15H2V14C2 13.7348 2.10536 13.4804 2.29289 13.2929C2.48043 13.1054 2.73478 13 3 13H13C13.2652 13 13.5196 13.1054 13.7071 13.2929C13.8946 13.4804 14 13.7348 14 14V15Z" fill="currentColor"></path></svg></a>
										<a class="inline-flex items-center justify-center w-12 h-12 mb-2 p-1 text-gray-300 bg-gray-500 hover:bg-gray-400 hover:bg-opacity-40 transition|local duration-150 rounded-full" href="#"><svg fill="none" height="21" viewBox="0 0 21 21" width="21" xmlns="http://www.w3.org/2000/svg"><path d="M20.71 19.29L17 15.61C18.4401 13.8144 19.1375 11.5353 18.9488 9.24133C18.7601 6.94733 17.6997 4.81281 15.9855 3.27667C14.2714 1.74053 12.0338 0.919537 9.73295 0.982497C7.43207 1.04546 5.24275 1.98759 3.61517 3.61517C1.98759 5.24275 1.04546 7.43207 0.982497 9.73295C0.919537 12.0338 1.74053 14.2714 3.27667 15.9855C4.81281 17.6997 6.94733 18.7601 9.24133 18.9488C11.5353 19.1375 13.8144 18.4401 15.61 17L19.29 20.68C19.383 20.7738 19.4936 20.8482 19.6154 20.8989C19.7373 20.9497 19.868 20.9758 20 20.9758C20.132 20.9758 20.2627 20.9497 20.3846 20.8989C20.5065 20.8482 20.6171 20.7738 20.71 20.68C20.8903 20.4936 20.991 20.2444 20.991 19.985C20.991 19.7257 20.8903 19.4765 20.71 19.29ZM10 17C8.61556 17 7.26218 16.5895 6.11103 15.8203C4.95989 15.0511 4.06268 13.9579 3.53287 12.6788C3.00306 11.3997 2.86443 9.99226 3.13453 8.63439C3.40463 7.27653 4.07131 6.02925 5.05028 5.05028C6.02925 4.07131 7.27653 3.40463 8.63439 3.13453C9.99226 2.86443 11.3997 3.00306 12.6788 3.53287C13.9579 4.06268 15.0511 4.95989 15.8203 6.11103C16.5895 7.26218 17 8.61556 17 10C17 11.8565 16.2625 13.637 14.9498 14.9498C13.637 16.2625 11.8565 17 10 17Z" fill="currentColor"></path></svg></a></div></div>
								${validate_component(Settings, "Settings").$$render(
          $$result,
          { this: model },
          {
            this: ($$value) => {
              model = $$value;
              $$settled = false;
            }
          },
          {}
        )}</div></div></div></div></section>

			<section class="pl-6"><div class="container"><h4 class="text-xl font-bold text-white -mx-auto my-5">Your instances</h4>
						<button class="relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-blue-300 to-blue-500 group-hover:from-blue-300 group-hover:to-blue-500 hover:text-white dark:text-white focus:ring-4 focus:outline-none focus:ring-blue-200 dark:focus:ring-blue-800"><span class="relative px-5 py-2.5 transition-all|local ease-in duration-75 bg-white dark:bg-gray-600 rounded-md group-hover:bg-opacity-0">Create
						</span></button></div>


				${validate_component(Table, "Table").$$render($$result, { shadow: true, hoverable: true }, {}, {
          default: () => {
            return `${validate_component(TableHead, "TableHead").$$render($$result, {}, {}, {
              default: () => {
                return `${validate_component(TableHeadCell, "TableHeadCell").$$render($$result, {}, {}, {
                  default: () => {
                    return `Assignment`;
                  }
                })}
						${validate_component(TableHeadCell, "TableHeadCell").$$render($$result, {}, {}, {
                  default: () => {
                    return `Type`;
                  }
                })}
						${validate_component(TableHeadCell, "TableHeadCell").$$render($$result, {}, {}, {
                  default: () => {
                    return `Created`;
                  }
                })}
						${validate_component(TableHeadCell, "TableHeadCell").$$render($$result, {}, {}, {
                  default: () => {
                    return `Status`;
                  }
                })}
						${validate_component(TableHeadCell, "TableHeadCell").$$render($$result, {}, {}, {
                  default: () => {
                    return `<span class="sr-only ">Edit</span>`;
                  }
                })}`;
              }
            })}
					${validate_component(TableBody, "TableBody").$$render($$result, { class: "divide-y" }, {}, {
              default: () => {
                return `${each(instances, ({ assignment_id, type, inserted_at, assignments: assignments2 }) => {
                  return `${validate_component(TableBodyRow, "TableBodyRow").$$render($$result, { class: "cursor-pointer" }, {}, {
                    default: () => {
                      return `${validate_component(TableBodyCell, "TableBodyCell").$$render($$result, {}, {}, {
                        default: () => {
                          return `${escape(assignments2.title)}`;
                        }
                      })}
								${validate_component(TableBodyCell, "TableBodyCell").$$render($$result, {}, {}, {
                        default: () => {
                          return `${escape(type)}`;
                        }
                      })}
								${validate_component(TableBodyCell, "TableBodyCell").$$render($$result, {}, {}, {
                        default: () => {
                          return `${escape(inserted_at.substring(0, 10))}`;
                        }
                      })}
								${validate_component(TableBodyCell, "TableBodyCell").$$render($$result, {}, {}, {
                        default: () => {
                          return `Running`;
                        }
                      })}
								${validate_component(TableBodyCell, "TableBodyCell").$$render(
                        $$result,
                        {
                          tdClass: "py-4 whitespace-nowrap font-medium"
                        },
                        {},
                        {
                          default: () => {
                            return `<div><a class="font-medium inline-block text-green-600 hover:underline dark:text-green-500 px-1">${validate_component(PlaySolid, "PlaySolid").$$render($$result, { size: "20" }, {}, {})}</a>
									<a class="font-medium inline-block text-blue-600 hover:underline dark:text-blue-500 px-1">${validate_component(PauseSolid, "PauseSolid").$$render($$result, { size: "20" }, {}, {})}</a>
									<a class="font-medium inline-block text-blue-600 hover:underline dark:text-red-500">${validate_component(TrashSolid, "TrashCanSolid").$$render($$result, { size: "20" }, {}, {})}
									</a></div>
								`;
                          }
                        }
                      )}
							`;
                    }
                  })}`;
                })}`;
              }
            })}`;
          }
        })}</section></div>
		${show_create_box ? `
			<div class="z-1000 fixed top-1/2 left-1/2"><div class="relative p-4 w-full max-w-2xl h-full md:h-auto">
					<div class="relative p-4 bg-white rounded-lg shadow dark:bg-gray-700 sm:p-5">
						<div class="flex justify-between items-center pb-4 mb-4 rounded-t border-b sm:mb-5 dark:border-gray-600"><h3 class="text-lg font-semibold text-gray-900 dark:text-white">Create Instance</h3>
							<button type="button" class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-600 dark:hover:text-white" data-modal-toggle="defaultModal"><svg aria-hidden="true" class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
								<span class="sr-only">Close modal</span></button></div>
						
						<form method="POST" action="?/createInstance"><div class="grid gap-4 mb-4 sm:grid-cols-2"><div><label for="type" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Type</label>
									<select name="type" id="type" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" required><option selected="" value="Select type">Select type</option><option value="Basic">Basic</option><option value="Basic">Advanced</option><option value="Basic">Ultra</option></select></div>

								<div><label for="assignment" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Assignment</label>
									<select name="assignment" id="assignment" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"><option value="">No assignment</option>${assignments ? `${each(assignments, ({ title, assignment_id }, i2) => {
          return `<option${add_attribute("value", assignment_id, 0)}>${escape(title)}</option>`;
        })}` : ``}</select></div></div>
							<button type="submit" class="text-white inline-flex items-center bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800"><svg class="mr-1 -ml-1 w-6 h-6" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z" clip-rule="evenodd"></path></svg>
								Add new instance
							</button></form></div></div></div>` : ``}</div></body>`;
      } while (!$$settled);
      return $$rendered;
    });
  }
});
var __exports22 = {};
__export(__exports22, {
  component: () => component22,
  fonts: () => fonts22,
  imports: () => imports22,
  index: () => index22,
  server: () => page_server_ts_exports14,
  server_id: () => server_id17,
  stylesheets: () => stylesheets22
});
var index22;
var component22;
var server_id17;
var imports22;
var stylesheets22;
var fonts22;
var init__22 = __esm({
  ".svelte-kit/output/server/nodes/21.js"() {
    init_page_server_ts14();
    index22 = 21;
    component22 = async () => (await Promise.resolve().then(() => (init_page_svelte14(), page_svelte_exports14))).default;
    server_id17 = "src/routes/d/(d)/instances/+page.server.ts";
    imports22 = ["_app/immutable/nodes/21.adeb9e4d.js", "_app/immutable/chunks/index.7ee2e23d.js", "_app/immutable/chunks/Settings.e5d87b42.js", "_app/immutable/chunks/stores.2de0b66f.js", "_app/immutable/chunks/singletons.21d018a5.js", "_app/immutable/chunks/paths.1c0372a3.js", "_app/immutable/chunks/navigation.0d698c81.js", "_app/immutable/chunks/Indicator.svelte_svelte_type_style_lang.880982d3.js", "_app/immutable/chunks/_commonjsHelpers.725317a4.js", "_app/immutable/chunks/TableHeadCell.24b1fb8e.js", "_app/immutable/chunks/dragMe.3d5f1e0c.js", "_app/immutable/chunks/dayjs.min.9ad1b313.js", "_app/immutable/chunks/forms.b3e5ddf7.js", "_app/immutable/chunks/parse.bee59afc.js"];
    stylesheets22 = ["_app/immutable/assets/Indicator.1d121e74.css"];
    fonts22 = [];
  }
});
var page_ts_exports = {};
__export(page_ts_exports, {
  load: () => load13
});
async function load13({ parent }) {
  const parentData = await parent();
  return {
    user: parentData.user.data
  };
}
var init_page_ts = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/profile/_page.ts.js"() {
  }
});
var page_server_ts_exports15 = {};
__export(page_server_ts_exports15, {
  actions: () => actions7,
  prerender: () => prerender11
});
var prerender11;
var actions7;
var init_page_server_ts15 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/profile/_page.server.ts.js"() {
    init_chunks();
    prerender11 = false;
    actions7 = {
      updateProfile: async ({ request, url, locals: { supabase } }) => {
        const formData = await request.formData();
        const { data } = await supabase.auth.refreshSession();
        const { session, user } = data;
        if (!session || !user) {
          throw redirect(303, "/");
        }
        const fullName = formData.get("first");
        const lastName = formData.get("last_name");
        const website = formData.get("website");
        const updates = {
          id: user.id,
          first_name: fullName,
          last_name: lastName,
          website,
          updated_at: /* @__PURE__ */ new Date()
        };
        await supabase.from("users").upsert(updates);
        throw redirect(303, "/d");
      }
    };
  }
});
var page_svelte_exports15 = {};
__export(page_svelte_exports15, {
  default: () => Page15
});
var Page15;
var init_page_svelte15 = __esm({
  ".svelte-kit/output/server/entries/pages/d/(d)/profile/_page.svelte.js"() {
    init_index2();
    init_stores();
    init_Avatar();
    init_devalue();
    Page15 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $page, $$unsubscribe_page;
      $$unsubscribe_page = subscribe(page, (value2) => $page = value2);
      const { session, user } = $page.data;
      let $$settled;
      let $$rendered;
      do {
        $$settled = true;
        $$rendered = `<body class="bg-gray-600 antialiased bg-body text-body font-body"><form action="?/updateProfile" method="POST"><section class="py-3"><div class="container px-6 mx-auto"><div class="p-8 bg-gray-500 rounded-xl"><div class="flex flex-wrap items-center justify-between -mx-4 mb-8 pb-6 border-b border-gray-400 border-opacity-20"><div class="w-full sm:w-auto px-4 mb-6 sm:mb-0"><h4 class="text-2xl font-bold tracking-wide text-white mb-1">Edit Profile</h4></div>
						<div class="w-full sm:w-auto px-4"><div>
								<button class="inline-block py-2 px-4 mr-3 text-xs text-center font-semibold leading-normal text-gray-200 bg-gray-600 hover:bg-gray-400 rounded-lg transition duration-200" rel="external">Cancel
								</button>
								<input class="inline-block py-2 px-4 text-xs text-center font-semibold leading-normal text-gray-200 bg-blue-500 hover:bg-blue-700 rounded-lg transition duration-200" href="/dashboard" rel="external" type="submit"></div></div></div>
					<div class="flex flex-wrap items-center -mx-4 pb-8 mb-8 border-b border-gray-400 border-opacity-20"><div class="w-full sm:w-1/3 px-4 mb-4 sm:mb-0"><span class="text-sm font-medium text-gray-100">Name</span></div>
						<div class="w-full sm:w-2/3 px-4"><div class="max-w-xl"><div class="flex flex-wrap items-center -mx-3"><div class="w-full sm:w-1/2 px-3 mb-3 sm:mb-0"><input class="block py-4 px-3 w-full text-sm text-gray-100 placeholder-gray-100 font-medium outline-none bg-transparent border border-gray-400 hover:border-white focus:border-blue-500 rounded-lg" id="first" name="first" placeholder="" type="text"${add_attribute("value", user.first_name, 0)}></div>
									<div class="w-full sm:w-1/2 px-3"><input class="block py-4 px-3 w-full text-sm text-gray-100 placeholder-gray-100 font-medium outline-none bg-transparent border border-gray-400 hover:border-white focus:border-blue-500 rounded-lg" id="last_name" name="last_name" placeholder="" type="text"${add_attribute("value", user.last_name, 0)}></div></div></div></div></div>
					<div class="flex flex-wrap items-center -mx-4 pb-8 mb-8 border-b border-gray-400 border-opacity-20"><div class="w-full sm:w-1/3 px-4 mb-4 sm:mb-0"><span class="text-sm font-medium text-gray-100">Email address</span></div>
						<div class="w-full sm:w-2/3 px-4"><div class="max-w-xl"><input class="block py-4 px-3 w-full text-sm text-gray-100 placeholder-gray-100 font-medium outline-none bg-transparent border border-gray-400 hover:border-white focus:border-blue-500 rounded-lg" id="formInput1-3" placeholder="example@email.com" type="text"${add_attribute("value", session.user.email, 0)}></div></div></div>
					${validate_component(Avatar, "Avatar").$$render(
          $$result,
          { size: 10, url: user.avatar_url },
          {
            url: ($$value) => {
              user.avatar_url = $$value;
              $$settled = false;
            }
          },
          {}
        )}
					<div class="flex flex-wrap items-center -mx-4 pb-8 mb-8 border-b border-gray-400 border-opacity-20"><div class="w-full sm:w-1/3 px-4 mb-4 sm:mb-0"><span class="text-sm font-medium text-gray-100">Country</span></div>
						<div class="w-full sm:w-2/3 px-4"><div class="max-w-xl"><div class="relative block px-3 w-full text-sm text-gray-200 placeholder-gray-100 font-medium border border-gray-400 hover:border-white focus-within:border-blue-500 rounded-lg"><span class="absolute top-1/2 right-0 mr-5 transform -translate-y-1/2"><svg fill="none" height="8" viewBox="0 0 12 8" width="12" xmlns="http://www.w3.org/2000/svg"><path d="M10.9999 1.16994C10.8126 0.983692 10.5591 0.87915 10.2949 0.87915C10.0308 0.87915 9.77731 0.983692 9.58995 1.16994L5.99995 4.70994L2.45995 1.16994C2.27259 0.983692 2.01913 0.87915 1.75495 0.87915C1.49076 0.87915 1.23731 0.983692 1.04995 1.16994C0.95622 1.26291 0.881826 1.37351 0.831057 1.49537C0.780288 1.61723 0.75415 1.74793 0.75415 1.87994C0.75415 2.01195 0.780288 2.14266 0.831057 2.26452C0.881826 2.38638 0.95622 2.49698 1.04995 2.58994L5.28995 6.82994C5.38291 6.92367 5.49351 6.99807 5.61537 7.04883C5.73723 7.0996 5.86794 7.12574 5.99995 7.12574C6.13196 7.12574 6.26267 7.0996 6.38453 7.04883C6.50638 6.99807 6.61699 6.92367 6.70995 6.82994L10.9999 2.58994C11.0937 2.49698 11.1681 2.38638 11.2188 2.26452C11.2696 2.14266 11.2957 2.01195 11.2957 1.87994C11.2957 1.74793 11.2696 1.61723 11.2188 1.49537C11.1681 1.37351 11.0937 1.26291 10.9999 1.16994Z" fill="#3D485B"></path></svg></span>
									<select class="w-full py-4 appearance-none bg-transparent outline-none" id="country" name="country"><option class="bg-gray-600" value="1">United States</option><option class="bg-gray-600" value="1">United States</option><option class="bg-gray-600" value="1">United States</option></select></div></div></div></div>
					<div class="flex flex-wrap items-center -mx-4 pb-8 mb-8 border-b border-gray-400 border-opacity-20"><div class="w-full sm:w-1/3 px-4 mb-4 sm:mb-0"><span class="text-sm font-medium text-gray-100">Github</span></div>
						<div class="w-full sm:w-2/3 px-4"><div class="max-w-xl"><input class="block py-4 px-3 w-full text-sm text-gray-100 placeholder-gray-100 font-medium outline-none bg-transparent border border-gray-400 hover:border-white focus:border-blue-500 rounded-lg" id="website" name="website" placeholder="" type="text"${add_attribute("value", user.website, 0)}></div></div></div>
					<div class="flex flex-wrap items-start -mx-4 pb-8 mb-8 border-b border-gray-400 border-opacity-20"><div class="w-full sm:w-1/3 px-4 mb-5 sm:mb-0"><span class="block mt-2 text-sm font-medium text-gray-100">Bio</span>
							<span class="text-xs text-gray-300" name="bio">Tell everyone more about yourself!</span></div>
						<div class="w-full sm:w-2/3 px-4"><div class="max-w-xl"><textarea class="block h-56 py-4 px-3 w-full text-sm text-gray-100 placeholder-gray-100 font-medium outline-none bg-transparent border border-gray-400 hover:border-white focus:border-blue-500 rounded-lg resize-none" id="formInput1-9" placeholder="Hello! . . ." type="text"></textarea></div></div></div></div></div></section></form></body>`;
      } while (!$$settled);
      $$unsubscribe_page();
      return $$rendered;
    });
  }
});
var __exports23 = {};
__export(__exports23, {
  component: () => component23,
  fonts: () => fonts23,
  imports: () => imports23,
  index: () => index23,
  server: () => page_server_ts_exports15,
  server_id: () => server_id18,
  stylesheets: () => stylesheets23,
  universal: () => page_ts_exports,
  universal_id: () => universal_id7
});
var index23;
var component23;
var universal_id7;
var server_id18;
var imports23;
var stylesheets23;
var fonts23;
var init__23 = __esm({
  ".svelte-kit/output/server/nodes/22.js"() {
    init_page_ts();
    init_page_server_ts15();
    index23 = 22;
    component23 = async () => (await Promise.resolve().then(() => (init_page_svelte15(), page_svelte_exports15))).default;
    universal_id7 = "src/routes/d/(d)/profile/+page.ts";
    server_id18 = "src/routes/d/(d)/profile/+page.server.ts";
    imports23 = ["_app/immutable/nodes/22.259da7c7.js", "_app/immutable/chunks/index.7ee2e23d.js", "_app/immutable/chunks/stores.2de0b66f.js", "_app/immutable/chunks/singletons.21d018a5.js", "_app/immutable/chunks/paths.1c0372a3.js", "_app/immutable/chunks/Avatar.fd902668.js", "_app/immutable/chunks/imageStorage.281a7663.js", "_app/immutable/chunks/_commonjsHelpers.725317a4.js", "_app/immutable/chunks/navigation.0d698c81.js", "_app/immutable/chunks/forms.b3e5ddf7.js", "_app/immutable/chunks/parse.bee59afc.js"];
    stylesheets23 = [];
    fonts23 = [];
  }
});
var page_svelte_exports16 = {};
__export(page_svelte_exports16, {
  default: () => Page16
});
var css3;
var Page16;
var init_page_svelte16 = __esm({
  ".svelte-kit/output/server/entries/pages/legal/aup/_page.svelte.js"() {
    init_index2();
    css3 = {
      code: "main.svelte-1c7x56l{padding:20px}h1.svelte-1c7x56l{font-size:24px;margin-bottom:20px}.terms-container.svelte-1c7x56l{font-size:16px;line-height:1.5}",
      map: null
    };
    Page16 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let aup = `Acceptable Use Policy for CSBOX LLC
Introduction
CSBOX LLC ("CSBOX," "Company," "we," or "us") provides instances of servers for users, including students, teachers, and other individuals ("Users"), to engage in coding activities and educational purposes. This Acceptable Use Policy (AUP) outlines the rules and guidelines that Users must adhere to when utilizing CSBOX servers and related services.

Compliance with Applicable Laws
2.1 Users must comply with all applicable local, state, national, and international laws and regulations when using CSBOX servers.
2.2 Users are solely responsible for ensuring that their activities on CSBOX servers are lawful and do not infringe upon the rights of others.

Prohibited Activities
3.1 Users are strictly prohibited from engaging in any activities that are illegal or violate the rights of others while using CSBOX servers. This includes, but is not limited to:
a) Unauthorized access to systems or networks.
b) Transmission or distribution of malware, viruses, or other malicious content.
c) Engaging in activities that violate intellectual property rights, such as unauthorized copying or distribution of copyrighted materials.
d) Sending unsolicited bulk messages (spam) or engaging in any form of abusive or disruptive behavior.
e) Engaging in hacking attempts, network scanning, or any activity that compromises the security or integrity of CSBOX servers or other users' data.
f) Any activity that is deemed illegal under local, state, national, or international laws.

User Responsibility
4.1 Users are solely responsible for their actions and use of CSBOX servers.
4.2 Users must ensure that their activities on CSBOX servers do not disrupt the services or infringe upon the rights of other Users or third parties.

User Content
5.1 Users are solely responsible for the content they create, upload, or transmit through CSBOX servers.
5.2 Users must ensure that their content does not violate any applicable laws or infringe upon the rights of others, including intellectual property rights.
5.3 CSBOX does not claim ownership over User content, but Users grant CSBOX a non-exclusive, worldwide, royalty-free license to use, reproduce, modify, adapt, publish, distribute, and display User content for the purpose of providing and improving the services.

Limitation of Liability
6.1 CSBOX shall not be held liable for any damages, losses, or legal consequences arising from Users' activities on CSBOX servers.
6.2 Users acknowledge that they use CSBOX servers at their own risk and understand that CSBOX cannot control or be responsible for User actions.

Enforcement
7.1 CSBOX reserves the right to monitor User activities on CSBOX servers to ensure compliance with this AUP.
7.2 In the event of a violation of this AUP, CSBOX may take appropriate actions, including suspending or terminating a User's access to CSBOX servers and services.
7.3 CSBOX may also report any illegal activities to the relevant authorities.

Modifications to the Acceptable Use Policy
8.1 CSBOX may modify this AUP from time to time to reflect changes in laws, regulations, or our services. Users will be notified of any material changes to this AUP through appropriate means.`;
      $$result.css.add(css3);
      return `<main class="svelte-1c7x56l"><h1 class="svelte-1c7x56l">Acceptable Use Policy </h1>
  <div class="terms-container svelte-1c7x56l"><pre><!-- HTML_TAG_START -->${aup}<!-- HTML_TAG_END --></pre></div>
</main>`;
    });
  }
});
var __exports24 = {};
__export(__exports24, {
  component: () => component24,
  fonts: () => fonts24,
  imports: () => imports24,
  index: () => index24,
  stylesheets: () => stylesheets24
});
var index24;
var component24;
var imports24;
var stylesheets24;
var fonts24;
var init__24 = __esm({
  ".svelte-kit/output/server/nodes/23.js"() {
    index24 = 23;
    component24 = async () => (await Promise.resolve().then(() => (init_page_svelte16(), page_svelte_exports16))).default;
    imports24 = ["_app/immutable/nodes/23.df54adb0.js", "_app/immutable/chunks/index.7ee2e23d.js"];
    stylesheets24 = ["_app/immutable/assets/23.fba02596.css"];
    fonts24 = [];
  }
});
var page_svelte_exports17 = {};
__export(page_svelte_exports17, {
  default: () => Page17
});
var css4;
var Page17;
var init_page_svelte17 = __esm({
  ".svelte-kit/output/server/entries/pages/legal/privacy/_page.svelte.js"() {
    init_index2();
    css4 = {
      code: "main.svelte-1c7x56l{padding:20px}h1.svelte-1c7x56l{font-size:24px;margin-bottom:20px}.terms-container.svelte-1c7x56l{font-size:16px;line-height:1.5}",
      map: null
    };
    Page17 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let privacy = `Privacy Policy

Effective Date: 06/8/2023

CSBOX LLC ("CSBOX," "Company," "we," or "us") is committed to protecting the privacy of our users ("User" or "you") and maintaining the confidentiality of personal information collected in connection with our educational technology platform and services (collectively referred to as the "Service"). This Privacy Policy outlines how we collect, use, disclose, and protect your personal information. By using the Service, you consent to the terms of this Privacy Policy.

Information We Collect
1.1 Personal Information: We may collect personal information from Users, including but not limited to names, email addresses, contact information, student identifiers, and other data necessary for account creation and access to the Service.
1.2 Usage Data: We may collect usage data, including log files, IP addresses, browser information, device identifiers, and other information about your interactions with the Service.
1.3 Cookies and Similar Technologies: We may use cookies and similar technologies to enhance your experience and collect information about your usage of the Service. You can manage your cookie preferences through your browser settings.

Use of Information
2.1 We use the collected information for the following purposes:
a) Providing and improving the Service
b) Communicating with Users
c) Personalizing the user experience
d) Analyzing usage patterns and trends
e) Enforcing our terms and policies
f) Protecting against fraud and unauthorized access

Disclosure of Information
3.1 We may disclose your personal information to third parties in the following circumstances:
a) With your consent or as otherwise specified in this Privacy Policy
b) To trusted third-party service providers who assist in operating and maintaining the Service
c) To comply with legal obligations, such as responding to lawful requests and protecting our rights and interests
d) In connection with a business transaction, such as a merger, acquisition, or sale of assets, where personal information may be transferred to the acquiring entity

Data Security
4.1 We implement industry-standard security measures to protect personal information from unauthorized access, disclosure, alteration, or destruction.
4.2 Despite our best efforts, no data transmission or storage system can be guaranteed to be 100% secure. Therefore, we cannot guarantee the absolute security of your personal information.

Third-Party Links and Services
5.1 The Service may contain links to third-party websites or services. We are not responsible for the privacy practices or content of such third parties. We encourage you to review the privacy policies of those third parties before providing any personal information.

Children's Privacy
6.1 The Service is not intended for children under the age of 13. We do not knowingly collect personal information from children under 13 without parental consent. If we become aware that we have collected personal information from a child under 13 without parental consent, we will take steps to remove the information from our systems.

Your Rights and Choices
7.1 You have the right to access, correct, or delete your personal information held by us, subject to legal limitations.
7.2 You may opt-out of receiving certain communications from us by following the instructions provided in the communication.

Changes to the Privacy Policy
8.1 We may update this Privacy Policy from time to time. Any material changes will be notified through the Service or by other means. Please review this Privacy Policy periodically for any updates.

Consent to International Data Transfer
9.1 By using the Service, you acknowledge and agree that your personal information may be transferred to and processed in countries other than your own. These countries may have different data protection laws than your country of residence. We will take reasonable steps to ensure that your personal information is treated securely and in accordance with applicable privacy laws.

Retention of Personal Information
10.1 We will retain your personal information for as long as necessary to fulfill the purposes outlined in this Privacy Policy, unless a longer retention period is required or permitted by law.

California Privacy Rights
11.1 If you are a California resident, you may have additional rights under the California Consumer Privacy Act (CCPA). For more information about your rights and how to exercise them, please refer to our California Privacy Notice.

Governing Law and Dispute Resolution
12.1 This Privacy Policy shall be governed by and construed in accordance with the laws of the state of Arizona, United States. Any disputes arising under or in connection with this Privacy Policy shall be subject to the exclusive jurisdiction of the state and federal courts located in Arizona.

Severability
13.1 If any provision of this Privacy Policy is found to be invalid, illegal, or unenforceable, the remaining provisions shall continue in full force and effect. The invalid, illegal, or unenforceable provision shall be replaced with a valid, legal, and enforceable provision that most closely reflects the original intent of the parties.

Privacy Laws for Arizona
13.1 In addition to the provisions outlined in this Privacy Policy, we adhere to the following privacy laws in the state of Arizona:

13.2 Arizona Revised Statutes \xA7 44-1371 et seq. (Arizona Consumer Privacy Act): This act governs the collection, use, and disclosure of personal information by businesses operating in Arizona. It provides consumers with certain rights regarding their personal information and imposes obligations on businesses for handling and securing that information.

13.3 Arizona Revised Statutes \xA7 44-7501 et seq. (Arizona Data Breach Notification Law): This law requires businesses to notify individuals if there has been a security breach that compromises their personal information. It outlines the definition of a breach, the timeline for notification, and the content of the notification.

13.4 Compliance with these privacy laws is of utmost importance to us. We strive to ensure that our data handling practices, security measures, and user rights align with the requirements set forth in these laws.

13.5 For more information on these privacy laws and your rights as an Arizona resident, please refer to the relevant statutes or consult legal counsel.

Privacy Laws for the United States
14.1 In addition to the provisions outlined in this Privacy Policy, CSBOX LLC ("CSBOX," "Company," "we," or "us") complies with the following privacy laws and regulations in the United States:

14.2 Family Educational Rights and Privacy Act (FERPA): CSBOX understands the importance of protecting the privacy of student education records. We adhere to FERPA, which governs the collection, use, and disclosure of student records in educational institutions.

14.3 Children's Online Privacy Protection Act (COPPA): CSBOX acknowledges the special privacy considerations for children under the age of 13. We comply with COPPA, which sets requirements for the collection, use, and disclosure of personal information from children.

14.4 California Consumer Privacy Act (CCPA): CSBOX recognizes the privacy rights of California residents. If you are a California resident, you may have additional rights under the CCPA. Please refer to our California Privacy Notice for more information on your rights and how to exercise them.

14.5 General Data Protection Regulation (GDPR): Although CSBOX is based in the United States, we understand that the GDPR may apply to the personal data of individuals in the European Union. If we process personal data of EU individuals, we take appropriate measures to comply with the GDPR's requirements regarding data protection and individual rights.

14.6 Other Federal and State Laws: CSBOX also complies with other applicable federal and state laws and regulations specific to privacy and data protection to ensure the privacy and security of personal information.

14.7 We are committed to protecting the privacy and rights of our users and ensuring compliance with applicable privacy laws and regulations. For more information on these privacy laws and your rights, we recommend referring to the specific statutes or consulting legal counsel.

Protection of Privacy and Data
15.1 CSBOX values the privacy and security of your personal information and employs appropriate measures to protect it. We take reasonable steps to safeguard personal information from unauthorized access, use, disclosure, alteration, or destruction.
15.2 We limit access to personal information to authorized personnel who require it for legitimate business purposes and ensure that they are bound by confidentiality obligations.
15.3 While we strive to protect your personal information, please note that no method of transmission or electronic storage is completely secure. Therefore, we cannot guarantee its absolute security.

Data Sharing and Disclosure
16.1 CSBOX may share personal information in the following circumstances:
a) With your consent or as otherwise required or permitted by law.
b) With trusted third-party service providers who assist us in delivering and improving the Service, subject to their compliance with appropriate data protection and security measures.
c) In connection with a business transaction, such as a merger, acquisition, or sale of assets, where personal information may be transferred to the acquiring entity.
16.2 We do not sell or rent your personal information to third parties for their marketing purposes without your explicit consent.

User Choices and Rights
17.1 You have certain rights regarding your personal information held by CSBOX, including the right to access, correct, update, delete, or restrict its processing, as permitted by applicable law.
17.2 If you wish to exercise these rights or have any privacy-related concerns, please contact us using the information provided in the "Contact Us" section of this Privacy Policy.

Data Retention
18.1 We retain personal information for as long as necessary to fulfill the purposes outlined in this Privacy Policy, or as required by applicable laws and regulations.
18.2 We will securely dispose of personal information in a manner that ensures its confidentiality, taking into account the sensitivity of the information.

Changes to the Privacy Policy
19.1 We may update this Privacy Policy from time to time to reflect changes in our privacy practices or legal obligations.
19.2 We will notify you of any material changes to this Privacy Policy by posting a notice on our website or by other means prior to the changes taking effect.

User Agreement and Age Verification
20.1 By using our services, you represent and warrant that you are at least 13 years of age. If you are under 13 years old, you may not use the service unless you have obtained verifiable parental consent in accordance with applicable laws, such as the Children's Online Privacy Protection Act (COPPA).

Limitation of Liability
21.1 To the extent permitted by applicable laws, CSBOX LLC and its affiliates, officers, directors, employees, and agents shall not be liable for any direct, indirect, incidental, consequential, special, or exemplary damages arising out of or in connection with your use of the service or any content provided therein.
21.2 This limitation of liability shall apply whether the alleged liability is based on contract, tort, negligence, strict liability, or any other basis, even if CSBOX has been advised of the possibility of such damages.

Indemnification
22.1 You agree to indemnify, defend, and hold CSBOX LLC and its affiliates, officers, directors, employees, and agents harmless from and against any claims, liabilities, damages, losses, costs, or expenses, including reasonable attorneys' fees, arising out of or in connection with your use of the service or any violation of this Privacy Policy or our terms and conditions.

Governing Law and Jurisdiction
23.1 This Privacy Policy shall be governed by and construed in accordance with the laws of the state of Arizona, United States, without regard to its conflict of law principles.
23.2 Any disputes arising under or in connection with this Privacy Policy shall be subject to the exclusive jurisdiction of the state and federal courts located in Arizona.
  `;
      $$result.css.add(css4);
      return `<main class="svelte-1c7x56l"><h1 class="svelte-1c7x56l">Privacy Policy </h1>
  <div class="terms-container svelte-1c7x56l"><pre><!-- HTML_TAG_START -->${privacy}<!-- HTML_TAG_END --></pre></div>
</main>`;
    });
  }
});
var __exports25 = {};
__export(__exports25, {
  component: () => component25,
  fonts: () => fonts25,
  imports: () => imports25,
  index: () => index25,
  stylesheets: () => stylesheets25
});
var index25;
var component25;
var imports25;
var stylesheets25;
var fonts25;
var init__25 = __esm({
  ".svelte-kit/output/server/nodes/24.js"() {
    index25 = 24;
    component25 = async () => (await Promise.resolve().then(() => (init_page_svelte17(), page_svelte_exports17))).default;
    imports25 = ["_app/immutable/nodes/24.9cb431ec.js", "_app/immutable/chunks/index.7ee2e23d.js"];
    stylesheets25 = ["_app/immutable/assets/23.fba02596.css"];
    fonts25 = [];
  }
});
var page_svelte_exports18 = {};
__export(page_svelte_exports18, {
  default: () => Page18
});
var css5;
var Page18;
var init_page_svelte18 = __esm({
  ".svelte-kit/output/server/entries/pages/legal/terms/_page.svelte.js"() {
    init_index2();
    css5 = {
      code: "main.svelte-1c7x56l{padding:20px}h1.svelte-1c7x56l{font-size:24px;margin-bottom:20px}.terms-container.svelte-1c7x56l{font-size:16px;line-height:1.5}",
      map: null
    };
    Page18 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let terms = `Terms and Conditions

These terms and conditions ("Agreement") govern your use of the CSBOX LLC ("CSBOX," "Company," "we," or "us") educational technology platform, including any associated services and features (collectively referred to as the "Service"). By registering for an account and using the Service, you ("User" or "you") agree to be bound by this Agreement.

Registration and User Accounts
1.1 By registering for an account, you confirm that you are either a student or an authorized representative of a student, and you consent to abide by this Agreement.
1.2 You must provide accurate and complete information during the registration process.
1.3 If you are registering on behalf of a student, you confirm that you have the necessary authority to do so.

Use of the Service
2.1 The Service provided by CSBOX is intended for educational purposes only.
2.2 You agree to use the Service in compliance with all applicable laws and regulations.
2.3 CSBOX does not guarantee the availability, accuracy, or reliability of the content or features provided through the Service.
2.4 You acknowledge that the Service may include third-party content or links to third-party websites, and CSBOX is not responsible for such content or websites.

Privacy and Data Protection
3.1 CSBOX respects your privacy and handles personal data in accordance with applicable privacy laws and regulations.
3.2 However, due to the nature of technology systems, CSBOX cannot guarantee the absolute security of your data or the prevention of unauthorized access, data breaches, or leaks.
3.3 By using the Service, you acknowledge and accept these inherent risks associated with data protection.

Intellectual Property
4.1 The Service and all associated intellectual property rights are owned by CSBOX or its licensors.
4.2 You are granted a limited, non-exclusive, non-transferable license to use the Service solely for educational purposes.
4.3 You may not copy, modify, distribute, sell, or lease any part of the Service without prior written permission from CSBOX.

Limitation of Liability
5.1 CSBOX shall not be liable for any direct, indirect, incidental, special, consequential, or exemplary damages arising out of or in connection with the use of the Service.
5.2 CSBOX shall not be responsible for any disruptions, delays, or errors in the Service, including but not limited to technical malfunctions, server downtime, or network failures.
5.3 You agree to indemnify, defend, and hold harmless CSBOX and its officers, directors, employees, and agents from any claims, damages, liabilities, and expenses arising out of your use of the Service.

Governing Law and Jurisdiction
6.1 This Agreement shall be governed by and construed in accordance with the laws of the state of Arizona, United States.
6.2 Any disputes arising under or in connection with this Agreement shall be subject to the exclusive jurisdiction of the state and federal courts located in Arizona.

Amendments
7.1 CSBOX reserves the right to modify or amend this Agreement at any time. Updated versions will be posted on our website.
7.2 It is your responsibility to review this Agreement periodically. Continued use of the Service after any modifications or amendments constitutes your acceptance of the revised terms.

Entire Agreement
8.1 This Agreement constitutes the entire agreement between you and CSBOX regarding the use of the Service and supersedes any prior agreements or understandings, whether written or oral, relating to the subject matter herein.

Severability
9.1 If any provision of this Agreement is found to be invalid, illegal, or unenforceable, the remaining provisions shall continue in full force and effect.
9.2 The invalid, illegal, or unenforceable provision shall be replaced with a valid, legal, and enforceable provision that most closely reflects the original intent of the parties.

Waiver
10.1 The failure of CSBOX to enforce any provision of this Agreement shall not be deemed a waiver of such provision or the right to enforce it.
10.2 Any waiver of any provision of this Agreement must be in writing and signed by an authorized representative of CSBOX.

Compliance with FERPA and OCR
11.1 CSBOX understands the importance of complying with the Family Educational Rights and Privacy Act (FERPA) and the regulations of the U.S. Department of Education's Office for Civil Rights (OCR).
11.2 CSBOX takes appropriate measures to protect student information and ensures that personally identifiable information (PII) is handled in accordance with FERPA and OCR guidelines.

Liability of Vendor Information Sharing
12.1 CSBOX may collaborate with trusted vendors or third parties to provide certain features or services within the Service.
12.2 CSBOX shall make reasonable efforts to ensure that these vendors or third parties comply with applicable privacy and data protection laws.
12.3 CSBOX shall not be held liable for any breaches or mishandling of data by these vendors or third parties. However, CSBOX will promptly address any known issues to mitigate any potential risks.

Protection of CSBOX from Legal Claims
13.1 CSBOX takes measures to protect itself from legal claims related to the actions or behavior of parents, teachers, and staff using the Service.
13.2 CSBOX disclaims any responsibility for the actions, comments, or behavior of parents, teachers, and staff using the Service.
13.3 It is the responsibility of parents, teachers, and staff to comply with applicable laws, regulations, and policies when using the Service.
13.4 CSBOX shall not be held liable for any legal claims arising from the actions, comments, or behavior of parents, teachers, and staff.

Intellectual Property
14.1 The Service and all associated intellectual property rights are owned by CSBOX or its licensors.
14.2 You are granted a limited, non-exclusive, non-transferable license to use the Service solely for educational purposes.
14.3 You may not copy, modify, distribute, sell, or lease any part of the Service without prior written permission from CSBOX.

Limitation of Liability
15.1 CSBOX shall not be liable for any direct, indirect, incidental, special, consequential, or exemplary damages arising out of or in connection with the use of the Service.
15.2 CSBOX shall not be responsible for any disruptions, delays, or errors in the Service, including but not limited to technical malfunctions, server downtime, or network failures.
15.3 You agree to indemnify, defend, and hold harmless CSBOX and its officers, directors, employees, and agents from any claims, damages, liabilities, and expenses arising out of your use of the Service.

Governing Law and Jurisdiction
16.1 This Agreement shall be governed by and construed in accordance with the laws of the state of Arizona, United States.
16.2 Any disputes arising under or in connection with this Agreement shall be subject to the exclusive jurisdiction of the state and federal courts located in Arizona.

Amendments
17.1 CSBOX reserves the right to modify or amend this Agreement at any time. Updated versions will be posted on our website.
17.2 It is your responsibility to review this Agreement periodically. Continued use of the Service after any modifications or amendments constitutes your acceptance of the revised terms.

Entire Agreement
18.1 This Agreement constitutes the entire agreement between you and CSBOX regarding the use of the Service and supersedes any prior agreements or understandings, whether written or oral, relating to the subject matter herein.

Severability
19.1 If any provision of this Agreement is found to be invalid, illegal, or unenforceable, the remaining provisions shall continue in full force and effect.
19.2 The invalid, illegal, or unenforceable provision shall be replaced with a valid, legal, and enforceable provision that most closely reflects the original intent of the parties.

Waiver
20.1 The failure of CSBOX to enforce any provision of this Agreement shall not be deemed a waiver of such provision or the right to enforce it.
20.2 Any waiver of any provision of this Agreement must be in writing and signed by an authorized representative of CSBOX.

Misuse of the Software
21.1 You agree not to misuse the software provided by CSBOX, including but not limited to:
a) Reverse engineering, decompiling, or disassembling the software.
b) Modifying, copying, or distributing the software without prior written permission from CSBOX.
c) Using the software for any illegal, unauthorized, or unethical purposes.
21.2 CSBOX reserves the right to monitor the use of the software to ensure compliance with this Agreement.
21.3 In the event of any misuse or violation of this Agreement, CSBOX may suspend or terminate your access to the Service and take legal action as necessary.

Limitation of Liability and Indemnification
22.1 CSBOX shall not be liable for any direct, indirect, incidental, special, consequential, or exemplary damages arising out of or in connection with the use of the Service or the software.
22.2 You agree to indemnify, defend, and hold harmless CSBOX, its officers, directors, employees, and agents from any claims, damages, liabilities, and expenses, including reasonable attorney fees, arising out of your use of the Service, your violation of this Agreement, or your infringement of any rights of a third party.

Governing Law and Jurisdiction
23.1 This Agreement shall be governed by and construed in accordance with the laws of the state of Arizona, United States.
23.2 Any disputes arising under or in connection with this Agreement shall be subject to the exclusive jurisdiction of the state and federal courts located in Arizona.

Amendments
24.1 CSBOX reserves the right to modify or amend this Agreement at any time. Updated versions will be posted on our website.
24.2 It is your responsibility to review this Agreement periodically. Continued use of the Service after any modifications or amendments constitutes your acceptance of the revised terms.

Entire Agreement
25.1 This Agreement constitutes the entire agreement between you and CSBOX regarding the use of the Service and supersedes any prior agreements or understandings, whether written or oral, relating to the subject matter herein.

Severability
26.1 If any provision of this Agreement is found to be invalid, illegal, or unenforceable, the remaining provisions shall continue in full force and effect.
26.2 The invalid, illegal, or unenforceable provision shall be replaced with a valid, legal, and enforceable provision that most closely reflects the original intent of the parties.

Waiver
27.1 The failure of CSBOX to enforce any provision of this Agreement shall not be deemed a waiver of such provision or the right to enforce it.
27.2 Any waiver of any provision of this Agreement must be in writing and signed by an authorized representative of CSBOX.

Contract Law
28.1 This Agreement constitutes a legally binding contract between you and CSBOX.
28.2 You acknowledge that you have read and understood this Agreement, and you agree to be bound by its terms and conditions.

Payment
29.1 If the use of the Service requires payment, you agree to pay all applicable fees and charges as outlined in the pricing and payment terms provided by CSBOX.
29.2 You are responsible for providing accurate and updated payment information, and you authorize CSBOX to charge the applicable fees to your chosen payment method.
29.3 CSBOX uses secure payment processing methods to protect your payment information. However, CSBOX shall not be held liable for any unauthorized access or breaches of your payment information.

Governing Law and Jurisdiction
30.1 This Agreement shall be governed by and construed in accordance with the laws of the state of Arizona, United States.
30.2 Any disputes arising under or in connection with this Agreement shall be subject to the exclusive jurisdiction of the state and federal courts located in Arizona.

Amendments
31.1 CSBOX reserves the right to modify or amend this Agreement at any time. Updated versions will be posted on our website.
31.2 It is your responsibility to review this Agreement periodically. Continued use of the Service after any modifications or amendments constitutes your acceptance of the revised terms.

Entire Agreement
32.1 This Agreement constitutes the entire agreement between you and CSBOX regarding the use of the Service and supersedes any prior agreements or understandings, whether written or oral, relating to the subject matter herein.

Severability
33.1 If any provision of this Agreement is found to be invalid, illegal, or unenforceable, the remaining provisions shall continue in full force and effect.
33.2 The invalid, illegal, or unenforceable provision shall be replaced with a valid, legal, and enforceable provision that most closely reflects the original intent of the parties.

Ownership of Content
33.1 Any content, including text, images, audio, video, or other materials, that is written, uploaded, or contributed to CSBOX by Users, instructors, or any other party, shall become the property of CSBOX.
33.2 CSBOX reserves the right to use, reproduce, modify, adapt, publish, distribute, and display such content for the purposes of providing and improving the Service, without any obligation to compensate or seek further permission from the content contributors.

Copyright Protection
34.1 CSBOX respects intellectual property rights and expects Users to do the same.
34.2 Users are solely responsible for ensuring that any material they upload or share on CSBOX does not infringe upon the copyrights or intellectual property rights of others.
34.3 CSBOX shall not be held liable for any copyright infringements committed by Users.

Ownership of Course Material
35.1 Any course material, including curriculum, assignments, quizzes, and educational resources, created or used within the CSBOX platform, shall be owned by CSBOX.
35.2 Instructors and educational institutions retain the right to use the course material within the CSBOX platform during the period of their contractual agreement with CSBOX.

Binding Agreement
36.1 This Agreement is binding upon and inures to the benefit of the parties and their respective successors, assigns, and legal representatives.
36.2 This Agreement may not be assigned or transferred by you without prior written consent from CSBOX.

Term and Termination
37.1 This Agreement shall remain in effect until terminated by either party.
37.2 CSBOX reserves the right to suspend or terminate your access to the Service at any time for violation of this Agreement or any other legitimate reason.

Severability
38.1 If any provision of this Agreement is found to be invalid, illegal, or unenforceable, the remaining provisions shall continue in full force and effect.
38.2 The invalid, illegal, or unenforceable provision shall be replaced with a valid, legal, and enforceable provision that most closely reflects the original intent of the parties.

Governing Law and Jurisdiction
39.1 This Agreement shall be governed by and construed in accordance with the laws of the state of Arizona, United States.
39.2 Any disputes arising under or in connection with this Agreement shall be subject to the exclusive jurisdiction of the state and federal courts located in Arizona.

Third-Party Providers and Cloud Services
40.1 CSBOX may engage third-party service providers and utilize cloud services to support and enhance the functionality of the Service.
40.2 CSBOX undertakes due diligence in selecting reputable third-party providers and cloud services that maintain appropriate data protection and security measures.
40.3 However, CSBOX shall not be held liable for any breaches or mishandling of data by these third-party providers or cloud services. CSBOX will make reasonable efforts to address any known issues to mitigate potential risks.

Data Security and Breach Notification
41.1 CSBOX implements reasonable security measures to protect the data and information stored within its systems from unauthorized access, breaches, or misuse.
41.2 In the event of a data breach that may affect high school student data, CSBOX will comply with applicable data breach notification laws, promptly notifying affected parties as required by law.

State and Local Laws
42.1 CSBOX recognizes the importance of complying with state and local laws regarding the protection of high school student data.
42.2 CSBOX will make reasonable efforts to comply with any additional requirements or restrictions imposed by state and local laws where it operates or provides services.

Limitation of Liability
43.1 CSBOX shall not be held liable for any damages, losses, or claims arising from the unauthorized access, breach, or misuse of high school student data, including but not limited to incidents resulting from hacking, cyberattacks, or other unauthorized activities.

Privacy and Consent
44.1 CSBOX respects the privacy of high school students and obtains necessary consents and permissions as required by applicable laws.
44.2 By using the Service, Users acknowledge and consent to the collection, use, and processing of their data in accordance with CSBOX's Privacy Policy.

User Responsibilities
45.1 Users of the Service, including teachers, students, parents, administrators, and any other individuals involved, are responsible for complying with applicable laws, regulations, and CSBOX's terms and conditions.
45.2 Users shall not misuse or share high school student data in violation of privacy laws or the rights of others.


`;
      $$result.css.add(css5);
      return `<main class="svelte-1c7x56l"><h1 class="svelte-1c7x56l">Terms and Conditions</h1>
  <div class="terms-container svelte-1c7x56l"><pre><!-- HTML_TAG_START -->${terms}<!-- HTML_TAG_END --></pre></div>
</main>`;
    });
  }
});
var __exports26 = {};
__export(__exports26, {
  component: () => component26,
  fonts: () => fonts26,
  imports: () => imports26,
  index: () => index26,
  stylesheets: () => stylesheets26
});
var index26;
var component26;
var imports26;
var stylesheets26;
var fonts26;
var init__26 = __esm({
  ".svelte-kit/output/server/nodes/25.js"() {
    index26 = 25;
    component26 = async () => (await Promise.resolve().then(() => (init_page_svelte18(), page_svelte_exports18))).default;
    imports26 = ["_app/immutable/nodes/25.529043cd.js", "_app/immutable/chunks/index.7ee2e23d.js"];
    stylesheets26 = ["_app/immutable/assets/23.fba02596.css"];
    fonts26 = [];
  }
});
var page_svelte_exports19 = {};
__export(page_svelte_exports19, {
  default: () => Page19
});
var Page19;
var init_page_svelte19 = __esm({
  ".svelte-kit/output/server/entries/pages/test/_page.svelte.js"() {
    init_index2();
    Page19 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      return ``;
    });
  }
});
var __exports27 = {};
__export(__exports27, {
  component: () => component27,
  fonts: () => fonts27,
  imports: () => imports27,
  index: () => index27,
  stylesheets: () => stylesheets27
});
var index27;
var component27;
var imports27;
var stylesheets27;
var fonts27;
var init__27 = __esm({
  ".svelte-kit/output/server/nodes/26.js"() {
    index27 = 26;
    component27 = async () => (await Promise.resolve().then(() => (init_page_svelte19(), page_svelte_exports19))).default;
    imports27 = ["_app/immutable/nodes/26.3ea7bf55.js", "_app/immutable/chunks/index.7ee2e23d.js"];
    stylesheets27 = [];
    fonts27 = [];
  }
});
var server_ts_exports = {};
__export(server_ts_exports, {
  GET: () => GET
});
var GET;
var init_server_ts = __esm({
  ".svelte-kit/output/server/entries/endpoints/api/assignments/_server.ts.js"() {
    init_chunks();
    GET = async ({ request, url, locals: { supabase, getSession }, event }) => {
      const session = await getSession();
      if (!session) {
        throw redirect(303, "/");
      }
      const course = url.searchParams.get("course");
      const { data, error: error2 } = await supabase.from("assignments").select("assignment_id, title, category, due, points").eq("course_id", course);
      return json(data);
    };
  }
});
var server_ts_exports2 = {};
var init_server_ts2 = __esm({
  ".svelte-kit/output/server/entries/endpoints/api/auth/_server.ts.js"() {
  }
});
var server_ts_exports3 = {};
__export(server_ts_exports3, {
  POST: () => POST
});
var POST;
var init_server_ts3 = __esm({
  ".svelte-kit/output/server/entries/endpoints/api/avatar/_server.ts.js"() {
    init_chunks();
    POST = async ({ request, url, locals: { supabase, getSession }, event }) => {
      const { user } = await request.json();
      let avatar_url;
      try {
        const { data, error: error2, status } = await supabase.from("users").select(`avatar_url`).eq("id", user.id).single();
        if (error2) {
          throw error2;
        }
        if (data != null) {
          avatar_url = data.avatar_url;
        }
      } catch (error2) {
        if (error2 instanceof Error) {
          console.log("Error downloading image: ", error2.message);
        }
      }
      return new Response(avatar_url);
    };
  }
});
var server_ts_exports4 = {};
__export(server_ts_exports4, {
  GET: () => GET2
});
var GET2;
var init_server_ts4 = __esm({
  ".svelte-kit/output/server/entries/endpoints/api/courses/_server.ts.js"() {
    init_chunks();
    GET2 = async ({ request, url, locals: { supabase, getSession }, event }) => {
      const session = await getSession();
      if (!session) {
        throw redirect(303, "/");
      }
      const { data, error: error2 } = await supabase.from("courses").select("id, course_image_url, course_title, course_prefix, course_number, course_term");
      return json({ data });
    };
  }
});
var server_ts_exports5 = {};
__export(server_ts_exports5, {
  GET: () => GET3
});
var GET3;
var init_server_ts5 = __esm({
  ".svelte-kit/output/server/entries/endpoints/api/modules/_server.ts.js"() {
    init_chunks();
    GET3 = async ({ request, url, locals: { supabase, getSession }, event }) => {
      const session = await getSession();
      if (!session) {
        throw redirect(303, "/");
      }
      const course = url.searchParams.get("course");
      const { data } = await supabase.from("modules").select("module_title, id, assignments ( assignment_id, title, category, in_module )").eq("course_id", course);
      return json(data);
    };
  }
});
var server_ts_exports6 = {};
__export(server_ts_exports6, {
  GET: () => GET4
});
var GET4;
var init_server_ts6 = __esm({
  ".svelte-kit/output/server/entries/endpoints/api/people/_server.ts.js"() {
    init_chunks();
    GET4 = async ({ request, url, locals: { supabase, getSession }, event }) => {
      const session = await getSession();
      if (!session) {
        throw redirect(303, "/");
      }
      const course = url.searchParams.get("course");
      const { data } = await supabase.from("enrollment").select("user_id,  course_id, enrolled, enrollment_date, users ( first_name, last_name )").eq("course_id", course);
      return json(data);
    };
  }
});
var server_ts_exports7 = {};
__export(server_ts_exports7, {
  GET: () => GET5
});
var GET5;
var init_server_ts7 = __esm({
  ".svelte-kit/output/server/entries/endpoints/api/people/accept/_server.ts.js"() {
    init_chunks();
    GET5 = async ({ request, url, locals: { supabase, getSession }, event }) => {
      const session = await getSession();
      if (!session) {
        throw redirect(303, "/");
      }
      const course = url.searchParams.get("course");
      const user = url.searchParams.get("user");
      const { error: error2, data: res, status } = await supabase.rpc(
        "accept_into_course",
        { _sender_id: session.user.id, _user_id: user, _course_id: course }
      );
      console.log(error2, res, status);
      return json({ res, error: error2, status });
    };
  }
});
var server_ts_exports8 = {};
__export(server_ts_exports8, {
  GET: () => GET6
});
var GET6;
var init_server_ts8 = __esm({
  ".svelte-kit/output/server/entries/endpoints/api/people/code/_server.ts.js"() {
    init_chunks();
    GET6 = async ({ request, url, locals: { supabase, getSession }, event }) => {
      const session = await getSession();
      if (!session) {
        throw redirect(303, "/");
      }
      const course = url.searchParams.get("course");
      const { error: error2, data: res, status } = await supabase.rpc(
        "new_enroll_code",
        { course_id: course, created_by: session.user.id }
      );
      return json({ res, error: error2, status });
    };
  }
});
var server_ts_exports9 = {};
__export(server_ts_exports9, {
  GET: () => GET7
});
var GET7;
var init_server_ts9 = __esm({
  ".svelte-kit/output/server/entries/endpoints/api/people/delete/_server.ts.js"() {
    init_chunks();
    GET7 = async ({ request, url, locals: { supabase, getSession }, event }) => {
      const session = await getSession();
      if (!session) {
        throw redirect(303, "/");
      }
      const course = url.searchParams.get("course");
      const user = url.searchParams.get("user");
      const { error: error2, data: res, status } = await supabase.rpc(
        "unenroll_user",
        { _sender_id: session.user.id, _user_id: user, _course_id: course }
      );
      console.log(error2, res, status);
      return json({ res, error: error2, status });
    };
  }
});
var server_ts_exports10 = {};
__export(server_ts_exports10, {
  GET: () => GET8
});
var GET8;
var init_server_ts10 = __esm({
  ".svelte-kit/output/server/entries/endpoints/api/users/_server.ts.js"() {
    init_chunks();
    GET8 = async ({ request, url, locals: { supabase, getSession }, event }) => {
      const session = await getSession();
      if (!session) {
        throw redirect(303, "/");
      }
      const { data, error: error2 } = await supabase.from("users").select("updated_at, username, first_name, last_name, website, avatar_url").eq("id", session.user?.id).single();
      return json({ data });
    };
  }
});
var server_ts_exports11 = {};
__export(server_ts_exports11, {
  GET: () => GET9
});
var GET9;
var init_server_ts11 = __esm({
  ".svelte-kit/output/server/entries/endpoints/auth/callback/_server.ts.js"() {
    init_chunks();
    GET9 = async ({ url, locals: { supabase } }) => {
      const code = url.searchParams.get("code");
      if (code) {
        await supabase.auth.exchangeCodeForSession(code);
      }
      throw redirect(303, "/");
    };
  }
});
var require_Mime = __commonJS({
  ".svelte-kit/cloudflare-workers-tmp/node_modules/mime/Mime.js"(exports, module) {
    "use strict";
    function Mime() {
      this._types = /* @__PURE__ */ Object.create(null);
      this._extensions = /* @__PURE__ */ Object.create(null);
      for (let i2 = 0; i2 < arguments.length; i2++) {
        this.define(arguments[i2]);
      }
      this.define = this.define.bind(this);
      this.getType = this.getType.bind(this);
      this.getExtension = this.getExtension.bind(this);
    }
    Mime.prototype.define = function(typeMap, force) {
      for (let type in typeMap) {
        let extensions = typeMap[type].map(function(t2) {
          return t2.toLowerCase();
        });
        type = type.toLowerCase();
        for (let i2 = 0; i2 < extensions.length; i2++) {
          const ext = extensions[i2];
          if (ext[0] === "*") {
            continue;
          }
          if (!force && ext in this._types) {
            throw new Error(
              'Attempt to change mapping for "' + ext + '" extension from "' + this._types[ext] + '" to "' + type + '". Pass `force=true` to allow this, otherwise remove "' + ext + '" from the list of extensions for "' + type + '".'
            );
          }
          this._types[ext] = type;
        }
        if (force || !this._extensions[type]) {
          const ext = extensions[0];
          this._extensions[type] = ext[0] !== "*" ? ext : ext.substr(1);
        }
      }
    };
    Mime.prototype.getType = function(path) {
      path = String(path);
      let last = path.replace(/^.*[/\\]/, "").toLowerCase();
      let ext = last.replace(/^.*\./, "").toLowerCase();
      let hasPath = last.length < path.length;
      let hasDot = ext.length < last.length - 1;
      return (hasDot || !hasPath) && this._types[ext] || null;
    };
    Mime.prototype.getExtension = function(type) {
      type = /^\s*([^;\s]*)/.test(type) && RegExp.$1;
      return type && this._extensions[type.toLowerCase()] || null;
    };
    module.exports = Mime;
  }
});
var require_standard = __commonJS({
  ".svelte-kit/cloudflare-workers-tmp/node_modules/mime/types/standard.js"(exports, module) {
    module.exports = { "application/andrew-inset": ["ez"], "application/applixware": ["aw"], "application/atom+xml": ["atom"], "application/atomcat+xml": ["atomcat"], "application/atomdeleted+xml": ["atomdeleted"], "application/atomsvc+xml": ["atomsvc"], "application/atsc-dwd+xml": ["dwd"], "application/atsc-held+xml": ["held"], "application/atsc-rsat+xml": ["rsat"], "application/bdoc": ["bdoc"], "application/calendar+xml": ["xcs"], "application/ccxml+xml": ["ccxml"], "application/cdfx+xml": ["cdfx"], "application/cdmi-capability": ["cdmia"], "application/cdmi-container": ["cdmic"], "application/cdmi-domain": ["cdmid"], "application/cdmi-object": ["cdmio"], "application/cdmi-queue": ["cdmiq"], "application/cu-seeme": ["cu"], "application/dash+xml": ["mpd"], "application/davmount+xml": ["davmount"], "application/docbook+xml": ["dbk"], "application/dssc+der": ["dssc"], "application/dssc+xml": ["xdssc"], "application/ecmascript": ["es", "ecma"], "application/emma+xml": ["emma"], "application/emotionml+xml": ["emotionml"], "application/epub+zip": ["epub"], "application/exi": ["exi"], "application/express": ["exp"], "application/fdt+xml": ["fdt"], "application/font-tdpfr": ["pfr"], "application/geo+json": ["geojson"], "application/gml+xml": ["gml"], "application/gpx+xml": ["gpx"], "application/gxf": ["gxf"], "application/gzip": ["gz"], "application/hjson": ["hjson"], "application/hyperstudio": ["stk"], "application/inkml+xml": ["ink", "inkml"], "application/ipfix": ["ipfix"], "application/its+xml": ["its"], "application/java-archive": ["jar", "war", "ear"], "application/java-serialized-object": ["ser"], "application/java-vm": ["class"], "application/javascript": ["js", "mjs"], "application/json": ["json", "map"], "application/json5": ["json5"], "application/jsonml+json": ["jsonml"], "application/ld+json": ["jsonld"], "application/lgr+xml": ["lgr"], "application/lost+xml": ["lostxml"], "application/mac-binhex40": ["hqx"], "application/mac-compactpro": ["cpt"], "application/mads+xml": ["mads"], "application/manifest+json": ["webmanifest"], "application/marc": ["mrc"], "application/marcxml+xml": ["mrcx"], "application/mathematica": ["ma", "nb", "mb"], "application/mathml+xml": ["mathml"], "application/mbox": ["mbox"], "application/mediaservercontrol+xml": ["mscml"], "application/metalink+xml": ["metalink"], "application/metalink4+xml": ["meta4"], "application/mets+xml": ["mets"], "application/mmt-aei+xml": ["maei"], "application/mmt-usd+xml": ["musd"], "application/mods+xml": ["mods"], "application/mp21": ["m21", "mp21"], "application/mp4": ["mp4s", "m4p"], "application/msword": ["doc", "dot"], "application/mxf": ["mxf"], "application/n-quads": ["nq"], "application/n-triples": ["nt"], "application/node": ["cjs"], "application/octet-stream": ["bin", "dms", "lrf", "mar", "so", "dist", "distz", "pkg", "bpk", "dump", "elc", "deploy", "exe", "dll", "deb", "dmg", "iso", "img", "msi", "msp", "msm", "buffer"], "application/oda": ["oda"], "application/oebps-package+xml": ["opf"], "application/ogg": ["ogx"], "application/omdoc+xml": ["omdoc"], "application/onenote": ["onetoc", "onetoc2", "onetmp", "onepkg"], "application/oxps": ["oxps"], "application/p2p-overlay+xml": ["relo"], "application/patch-ops-error+xml": ["xer"], "application/pdf": ["pdf"], "application/pgp-encrypted": ["pgp"], "application/pgp-signature": ["asc", "sig"], "application/pics-rules": ["prf"], "application/pkcs10": ["p10"], "application/pkcs7-mime": ["p7m", "p7c"], "application/pkcs7-signature": ["p7s"], "application/pkcs8": ["p8"], "application/pkix-attr-cert": ["ac"], "application/pkix-cert": ["cer"], "application/pkix-crl": ["crl"], "application/pkix-pkipath": ["pkipath"], "application/pkixcmp": ["pki"], "application/pls+xml": ["pls"], "application/postscript": ["ai", "eps", "ps"], "application/provenance+xml": ["provx"], "application/pskc+xml": ["pskcxml"], "application/raml+yaml": ["raml"], "application/rdf+xml": ["rdf", "owl"], "application/reginfo+xml": ["rif"], "application/relax-ng-compact-syntax": ["rnc"], "application/resource-lists+xml": ["rl"], "application/resource-lists-diff+xml": ["rld"], "application/rls-services+xml": ["rs"], "application/route-apd+xml": ["rapd"], "application/route-s-tsid+xml": ["sls"], "application/route-usd+xml": ["rusd"], "application/rpki-ghostbusters": ["gbr"], "application/rpki-manifest": ["mft"], "application/rpki-roa": ["roa"], "application/rsd+xml": ["rsd"], "application/rss+xml": ["rss"], "application/rtf": ["rtf"], "application/sbml+xml": ["sbml"], "application/scvp-cv-request": ["scq"], "application/scvp-cv-response": ["scs"], "application/scvp-vp-request": ["spq"], "application/scvp-vp-response": ["spp"], "application/sdp": ["sdp"], "application/senml+xml": ["senmlx"], "application/sensml+xml": ["sensmlx"], "application/set-payment-initiation": ["setpay"], "application/set-registration-initiation": ["setreg"], "application/shf+xml": ["shf"], "application/sieve": ["siv", "sieve"], "application/smil+xml": ["smi", "smil"], "application/sparql-query": ["rq"], "application/sparql-results+xml": ["srx"], "application/srgs": ["gram"], "application/srgs+xml": ["grxml"], "application/sru+xml": ["sru"], "application/ssdl+xml": ["ssdl"], "application/ssml+xml": ["ssml"], "application/swid+xml": ["swidtag"], "application/tei+xml": ["tei", "teicorpus"], "application/thraud+xml": ["tfi"], "application/timestamped-data": ["tsd"], "application/toml": ["toml"], "application/trig": ["trig"], "application/ttml+xml": ["ttml"], "application/ubjson": ["ubj"], "application/urc-ressheet+xml": ["rsheet"], "application/urc-targetdesc+xml": ["td"], "application/voicexml+xml": ["vxml"], "application/wasm": ["wasm"], "application/widget": ["wgt"], "application/winhlp": ["hlp"], "application/wsdl+xml": ["wsdl"], "application/wspolicy+xml": ["wspolicy"], "application/xaml+xml": ["xaml"], "application/xcap-att+xml": ["xav"], "application/xcap-caps+xml": ["xca"], "application/xcap-diff+xml": ["xdf"], "application/xcap-el+xml": ["xel"], "application/xcap-ns+xml": ["xns"], "application/xenc+xml": ["xenc"], "application/xhtml+xml": ["xhtml", "xht"], "application/xliff+xml": ["xlf"], "application/xml": ["xml", "xsl", "xsd", "rng"], "application/xml-dtd": ["dtd"], "application/xop+xml": ["xop"], "application/xproc+xml": ["xpl"], "application/xslt+xml": ["*xsl", "xslt"], "application/xspf+xml": ["xspf"], "application/xv+xml": ["mxml", "xhvml", "xvml", "xvm"], "application/yang": ["yang"], "application/yin+xml": ["yin"], "application/zip": ["zip"], "audio/3gpp": ["*3gpp"], "audio/adpcm": ["adp"], "audio/amr": ["amr"], "audio/basic": ["au", "snd"], "audio/midi": ["mid", "midi", "kar", "rmi"], "audio/mobile-xmf": ["mxmf"], "audio/mp3": ["*mp3"], "audio/mp4": ["m4a", "mp4a"], "audio/mpeg": ["mpga", "mp2", "mp2a", "mp3", "m2a", "m3a"], "audio/ogg": ["oga", "ogg", "spx", "opus"], "audio/s3m": ["s3m"], "audio/silk": ["sil"], "audio/wav": ["wav"], "audio/wave": ["*wav"], "audio/webm": ["weba"], "audio/xm": ["xm"], "font/collection": ["ttc"], "font/otf": ["otf"], "font/ttf": ["ttf"], "font/woff": ["woff"], "font/woff2": ["woff2"], "image/aces": ["exr"], "image/apng": ["apng"], "image/avif": ["avif"], "image/bmp": ["bmp"], "image/cgm": ["cgm"], "image/dicom-rle": ["drle"], "image/emf": ["emf"], "image/fits": ["fits"], "image/g3fax": ["g3"], "image/gif": ["gif"], "image/heic": ["heic"], "image/heic-sequence": ["heics"], "image/heif": ["heif"], "image/heif-sequence": ["heifs"], "image/hej2k": ["hej2"], "image/hsj2": ["hsj2"], "image/ief": ["ief"], "image/jls": ["jls"], "image/jp2": ["jp2", "jpg2"], "image/jpeg": ["jpeg", "jpg", "jpe"], "image/jph": ["jph"], "image/jphc": ["jhc"], "image/jpm": ["jpm"], "image/jpx": ["jpx", "jpf"], "image/jxr": ["jxr"], "image/jxra": ["jxra"], "image/jxrs": ["jxrs"], "image/jxs": ["jxs"], "image/jxsc": ["jxsc"], "image/jxsi": ["jxsi"], "image/jxss": ["jxss"], "image/ktx": ["ktx"], "image/ktx2": ["ktx2"], "image/png": ["png"], "image/sgi": ["sgi"], "image/svg+xml": ["svg", "svgz"], "image/t38": ["t38"], "image/tiff": ["tif", "tiff"], "image/tiff-fx": ["tfx"], "image/webp": ["webp"], "image/wmf": ["wmf"], "message/disposition-notification": ["disposition-notification"], "message/global": ["u8msg"], "message/global-delivery-status": ["u8dsn"], "message/global-disposition-notification": ["u8mdn"], "message/global-headers": ["u8hdr"], "message/rfc822": ["eml", "mime"], "model/3mf": ["3mf"], "model/gltf+json": ["gltf"], "model/gltf-binary": ["glb"], "model/iges": ["igs", "iges"], "model/mesh": ["msh", "mesh", "silo"], "model/mtl": ["mtl"], "model/obj": ["obj"], "model/step+xml": ["stpx"], "model/step+zip": ["stpz"], "model/step-xml+zip": ["stpxz"], "model/stl": ["stl"], "model/vrml": ["wrl", "vrml"], "model/x3d+binary": ["*x3db", "x3dbz"], "model/x3d+fastinfoset": ["x3db"], "model/x3d+vrml": ["*x3dv", "x3dvz"], "model/x3d+xml": ["x3d", "x3dz"], "model/x3d-vrml": ["x3dv"], "text/cache-manifest": ["appcache", "manifest"], "text/calendar": ["ics", "ifb"], "text/coffeescript": ["coffee", "litcoffee"], "text/css": ["css"], "text/csv": ["csv"], "text/html": ["html", "htm", "shtml"], "text/jade": ["jade"], "text/jsx": ["jsx"], "text/less": ["less"], "text/markdown": ["markdown", "md"], "text/mathml": ["mml"], "text/mdx": ["mdx"], "text/n3": ["n3"], "text/plain": ["txt", "text", "conf", "def", "list", "log", "in", "ini"], "text/richtext": ["rtx"], "text/rtf": ["*rtf"], "text/sgml": ["sgml", "sgm"], "text/shex": ["shex"], "text/slim": ["slim", "slm"], "text/spdx": ["spdx"], "text/stylus": ["stylus", "styl"], "text/tab-separated-values": ["tsv"], "text/troff": ["t", "tr", "roff", "man", "me", "ms"], "text/turtle": ["ttl"], "text/uri-list": ["uri", "uris", "urls"], "text/vcard": ["vcard"], "text/vtt": ["vtt"], "text/xml": ["*xml"], "text/yaml": ["yaml", "yml"], "video/3gpp": ["3gp", "3gpp"], "video/3gpp2": ["3g2"], "video/h261": ["h261"], "video/h263": ["h263"], "video/h264": ["h264"], "video/iso.segment": ["m4s"], "video/jpeg": ["jpgv"], "video/jpm": ["*jpm", "jpgm"], "video/mj2": ["mj2", "mjp2"], "video/mp2t": ["ts"], "video/mp4": ["mp4", "mp4v", "mpg4"], "video/mpeg": ["mpeg", "mpg", "mpe", "m1v", "m2v"], "video/ogg": ["ogv"], "video/quicktime": ["qt", "mov"], "video/webm": ["webm"] };
  }
});
var require_other = __commonJS({
  ".svelte-kit/cloudflare-workers-tmp/node_modules/mime/types/other.js"(exports, module) {
    module.exports = { "application/prs.cww": ["cww"], "application/vnd.1000minds.decision-model+xml": ["1km"], "application/vnd.3gpp.pic-bw-large": ["plb"], "application/vnd.3gpp.pic-bw-small": ["psb"], "application/vnd.3gpp.pic-bw-var": ["pvb"], "application/vnd.3gpp2.tcap": ["tcap"], "application/vnd.3m.post-it-notes": ["pwn"], "application/vnd.accpac.simply.aso": ["aso"], "application/vnd.accpac.simply.imp": ["imp"], "application/vnd.acucobol": ["acu"], "application/vnd.acucorp": ["atc", "acutc"], "application/vnd.adobe.air-application-installer-package+zip": ["air"], "application/vnd.adobe.formscentral.fcdt": ["fcdt"], "application/vnd.adobe.fxp": ["fxp", "fxpl"], "application/vnd.adobe.xdp+xml": ["xdp"], "application/vnd.adobe.xfdf": ["xfdf"], "application/vnd.ahead.space": ["ahead"], "application/vnd.airzip.filesecure.azf": ["azf"], "application/vnd.airzip.filesecure.azs": ["azs"], "application/vnd.amazon.ebook": ["azw"], "application/vnd.americandynamics.acc": ["acc"], "application/vnd.amiga.ami": ["ami"], "application/vnd.android.package-archive": ["apk"], "application/vnd.anser-web-certificate-issue-initiation": ["cii"], "application/vnd.anser-web-funds-transfer-initiation": ["fti"], "application/vnd.antix.game-component": ["atx"], "application/vnd.apple.installer+xml": ["mpkg"], "application/vnd.apple.keynote": ["key"], "application/vnd.apple.mpegurl": ["m3u8"], "application/vnd.apple.numbers": ["numbers"], "application/vnd.apple.pages": ["pages"], "application/vnd.apple.pkpass": ["pkpass"], "application/vnd.aristanetworks.swi": ["swi"], "application/vnd.astraea-software.iota": ["iota"], "application/vnd.audiograph": ["aep"], "application/vnd.balsamiq.bmml+xml": ["bmml"], "application/vnd.blueice.multipass": ["mpm"], "application/vnd.bmi": ["bmi"], "application/vnd.businessobjects": ["rep"], "application/vnd.chemdraw+xml": ["cdxml"], "application/vnd.chipnuts.karaoke-mmd": ["mmd"], "application/vnd.cinderella": ["cdy"], "application/vnd.citationstyles.style+xml": ["csl"], "application/vnd.claymore": ["cla"], "application/vnd.cloanto.rp9": ["rp9"], "application/vnd.clonk.c4group": ["c4g", "c4d", "c4f", "c4p", "c4u"], "application/vnd.cluetrust.cartomobile-config": ["c11amc"], "application/vnd.cluetrust.cartomobile-config-pkg": ["c11amz"], "application/vnd.commonspace": ["csp"], "application/vnd.contact.cmsg": ["cdbcmsg"], "application/vnd.cosmocaller": ["cmc"], "application/vnd.crick.clicker": ["clkx"], "application/vnd.crick.clicker.keyboard": ["clkk"], "application/vnd.crick.clicker.palette": ["clkp"], "application/vnd.crick.clicker.template": ["clkt"], "application/vnd.crick.clicker.wordbank": ["clkw"], "application/vnd.criticaltools.wbs+xml": ["wbs"], "application/vnd.ctc-posml": ["pml"], "application/vnd.cups-ppd": ["ppd"], "application/vnd.curl.car": ["car"], "application/vnd.curl.pcurl": ["pcurl"], "application/vnd.dart": ["dart"], "application/vnd.data-vision.rdz": ["rdz"], "application/vnd.dbf": ["dbf"], "application/vnd.dece.data": ["uvf", "uvvf", "uvd", "uvvd"], "application/vnd.dece.ttml+xml": ["uvt", "uvvt"], "application/vnd.dece.unspecified": ["uvx", "uvvx"], "application/vnd.dece.zip": ["uvz", "uvvz"], "application/vnd.denovo.fcselayout-link": ["fe_launch"], "application/vnd.dna": ["dna"], "application/vnd.dolby.mlp": ["mlp"], "application/vnd.dpgraph": ["dpg"], "application/vnd.dreamfactory": ["dfac"], "application/vnd.ds-keypoint": ["kpxx"], "application/vnd.dvb.ait": ["ait"], "application/vnd.dvb.service": ["svc"], "application/vnd.dynageo": ["geo"], "application/vnd.ecowin.chart": ["mag"], "application/vnd.enliven": ["nml"], "application/vnd.epson.esf": ["esf"], "application/vnd.epson.msf": ["msf"], "application/vnd.epson.quickanime": ["qam"], "application/vnd.epson.salt": ["slt"], "application/vnd.epson.ssf": ["ssf"], "application/vnd.eszigno3+xml": ["es3", "et3"], "application/vnd.ezpix-album": ["ez2"], "application/vnd.ezpix-package": ["ez3"], "application/vnd.fdf": ["fdf"], "application/vnd.fdsn.mseed": ["mseed"], "application/vnd.fdsn.seed": ["seed", "dataless"], "application/vnd.flographit": ["gph"], "application/vnd.fluxtime.clip": ["ftc"], "application/vnd.framemaker": ["fm", "frame", "maker", "book"], "application/vnd.frogans.fnc": ["fnc"], "application/vnd.frogans.ltf": ["ltf"], "application/vnd.fsc.weblaunch": ["fsc"], "application/vnd.fujitsu.oasys": ["oas"], "application/vnd.fujitsu.oasys2": ["oa2"], "application/vnd.fujitsu.oasys3": ["oa3"], "application/vnd.fujitsu.oasysgp": ["fg5"], "application/vnd.fujitsu.oasysprs": ["bh2"], "application/vnd.fujixerox.ddd": ["ddd"], "application/vnd.fujixerox.docuworks": ["xdw"], "application/vnd.fujixerox.docuworks.binder": ["xbd"], "application/vnd.fuzzysheet": ["fzs"], "application/vnd.genomatix.tuxedo": ["txd"], "application/vnd.geogebra.file": ["ggb"], "application/vnd.geogebra.tool": ["ggt"], "application/vnd.geometry-explorer": ["gex", "gre"], "application/vnd.geonext": ["gxt"], "application/vnd.geoplan": ["g2w"], "application/vnd.geospace": ["g3w"], "application/vnd.gmx": ["gmx"], "application/vnd.google-apps.document": ["gdoc"], "application/vnd.google-apps.presentation": ["gslides"], "application/vnd.google-apps.spreadsheet": ["gsheet"], "application/vnd.google-earth.kml+xml": ["kml"], "application/vnd.google-earth.kmz": ["kmz"], "application/vnd.grafeq": ["gqf", "gqs"], "application/vnd.groove-account": ["gac"], "application/vnd.groove-help": ["ghf"], "application/vnd.groove-identity-message": ["gim"], "application/vnd.groove-injector": ["grv"], "application/vnd.groove-tool-message": ["gtm"], "application/vnd.groove-tool-template": ["tpl"], "application/vnd.groove-vcard": ["vcg"], "application/vnd.hal+xml": ["hal"], "application/vnd.handheld-entertainment+xml": ["zmm"], "application/vnd.hbci": ["hbci"], "application/vnd.hhe.lesson-player": ["les"], "application/vnd.hp-hpgl": ["hpgl"], "application/vnd.hp-hpid": ["hpid"], "application/vnd.hp-hps": ["hps"], "application/vnd.hp-jlyt": ["jlt"], "application/vnd.hp-pcl": ["pcl"], "application/vnd.hp-pclxl": ["pclxl"], "application/vnd.hydrostatix.sof-data": ["sfd-hdstx"], "application/vnd.ibm.minipay": ["mpy"], "application/vnd.ibm.modcap": ["afp", "listafp", "list3820"], "application/vnd.ibm.rights-management": ["irm"], "application/vnd.ibm.secure-container": ["sc"], "application/vnd.iccprofile": ["icc", "icm"], "application/vnd.igloader": ["igl"], "application/vnd.immervision-ivp": ["ivp"], "application/vnd.immervision-ivu": ["ivu"], "application/vnd.insors.igm": ["igm"], "application/vnd.intercon.formnet": ["xpw", "xpx"], "application/vnd.intergeo": ["i2g"], "application/vnd.intu.qbo": ["qbo"], "application/vnd.intu.qfx": ["qfx"], "application/vnd.ipunplugged.rcprofile": ["rcprofile"], "application/vnd.irepository.package+xml": ["irp"], "application/vnd.is-xpr": ["xpr"], "application/vnd.isac.fcs": ["fcs"], "application/vnd.jam": ["jam"], "application/vnd.jcp.javame.midlet-rms": ["rms"], "application/vnd.jisp": ["jisp"], "application/vnd.joost.joda-archive": ["joda"], "application/vnd.kahootz": ["ktz", "ktr"], "application/vnd.kde.karbon": ["karbon"], "application/vnd.kde.kchart": ["chrt"], "application/vnd.kde.kformula": ["kfo"], "application/vnd.kde.kivio": ["flw"], "application/vnd.kde.kontour": ["kon"], "application/vnd.kde.kpresenter": ["kpr", "kpt"], "application/vnd.kde.kspread": ["ksp"], "application/vnd.kde.kword": ["kwd", "kwt"], "application/vnd.kenameaapp": ["htke"], "application/vnd.kidspiration": ["kia"], "application/vnd.kinar": ["kne", "knp"], "application/vnd.koan": ["skp", "skd", "skt", "skm"], "application/vnd.kodak-descriptor": ["sse"], "application/vnd.las.las+xml": ["lasxml"], "application/vnd.llamagraphics.life-balance.desktop": ["lbd"], "application/vnd.llamagraphics.life-balance.exchange+xml": ["lbe"], "application/vnd.lotus-1-2-3": ["123"], "application/vnd.lotus-approach": ["apr"], "application/vnd.lotus-freelance": ["pre"], "application/vnd.lotus-notes": ["nsf"], "application/vnd.lotus-organizer": ["org"], "application/vnd.lotus-screencam": ["scm"], "application/vnd.lotus-wordpro": ["lwp"], "application/vnd.macports.portpkg": ["portpkg"], "application/vnd.mapbox-vector-tile": ["mvt"], "application/vnd.mcd": ["mcd"], "application/vnd.medcalcdata": ["mc1"], "application/vnd.mediastation.cdkey": ["cdkey"], "application/vnd.mfer": ["mwf"], "application/vnd.mfmp": ["mfm"], "application/vnd.micrografx.flo": ["flo"], "application/vnd.micrografx.igx": ["igx"], "application/vnd.mif": ["mif"], "application/vnd.mobius.daf": ["daf"], "application/vnd.mobius.dis": ["dis"], "application/vnd.mobius.mbk": ["mbk"], "application/vnd.mobius.mqy": ["mqy"], "application/vnd.mobius.msl": ["msl"], "application/vnd.mobius.plc": ["plc"], "application/vnd.mobius.txf": ["txf"], "application/vnd.mophun.application": ["mpn"], "application/vnd.mophun.certificate": ["mpc"], "application/vnd.mozilla.xul+xml": ["xul"], "application/vnd.ms-artgalry": ["cil"], "application/vnd.ms-cab-compressed": ["cab"], "application/vnd.ms-excel": ["xls", "xlm", "xla", "xlc", "xlt", "xlw"], "application/vnd.ms-excel.addin.macroenabled.12": ["xlam"], "application/vnd.ms-excel.sheet.binary.macroenabled.12": ["xlsb"], "application/vnd.ms-excel.sheet.macroenabled.12": ["xlsm"], "application/vnd.ms-excel.template.macroenabled.12": ["xltm"], "application/vnd.ms-fontobject": ["eot"], "application/vnd.ms-htmlhelp": ["chm"], "application/vnd.ms-ims": ["ims"], "application/vnd.ms-lrm": ["lrm"], "application/vnd.ms-officetheme": ["thmx"], "application/vnd.ms-outlook": ["msg"], "application/vnd.ms-pki.seccat": ["cat"], "application/vnd.ms-pki.stl": ["*stl"], "application/vnd.ms-powerpoint": ["ppt", "pps", "pot"], "application/vnd.ms-powerpoint.addin.macroenabled.12": ["ppam"], "application/vnd.ms-powerpoint.presentation.macroenabled.12": ["pptm"], "application/vnd.ms-powerpoint.slide.macroenabled.12": ["sldm"], "application/vnd.ms-powerpoint.slideshow.macroenabled.12": ["ppsm"], "application/vnd.ms-powerpoint.template.macroenabled.12": ["potm"], "application/vnd.ms-project": ["mpp", "mpt"], "application/vnd.ms-word.document.macroenabled.12": ["docm"], "application/vnd.ms-word.template.macroenabled.12": ["dotm"], "application/vnd.ms-works": ["wps", "wks", "wcm", "wdb"], "application/vnd.ms-wpl": ["wpl"], "application/vnd.ms-xpsdocument": ["xps"], "application/vnd.mseq": ["mseq"], "application/vnd.musician": ["mus"], "application/vnd.muvee.style": ["msty"], "application/vnd.mynfc": ["taglet"], "application/vnd.neurolanguage.nlu": ["nlu"], "application/vnd.nitf": ["ntf", "nitf"], "application/vnd.noblenet-directory": ["nnd"], "application/vnd.noblenet-sealer": ["nns"], "application/vnd.noblenet-web": ["nnw"], "application/vnd.nokia.n-gage.ac+xml": ["*ac"], "application/vnd.nokia.n-gage.data": ["ngdat"], "application/vnd.nokia.n-gage.symbian.install": ["n-gage"], "application/vnd.nokia.radio-preset": ["rpst"], "application/vnd.nokia.radio-presets": ["rpss"], "application/vnd.novadigm.edm": ["edm"], "application/vnd.novadigm.edx": ["edx"], "application/vnd.novadigm.ext": ["ext"], "application/vnd.oasis.opendocument.chart": ["odc"], "application/vnd.oasis.opendocument.chart-template": ["otc"], "application/vnd.oasis.opendocument.database": ["odb"], "application/vnd.oasis.opendocument.formula": ["odf"], "application/vnd.oasis.opendocument.formula-template": ["odft"], "application/vnd.oasis.opendocument.graphics": ["odg"], "application/vnd.oasis.opendocument.graphics-template": ["otg"], "application/vnd.oasis.opendocument.image": ["odi"], "application/vnd.oasis.opendocument.image-template": ["oti"], "application/vnd.oasis.opendocument.presentation": ["odp"], "application/vnd.oasis.opendocument.presentation-template": ["otp"], "application/vnd.oasis.opendocument.spreadsheet": ["ods"], "application/vnd.oasis.opendocument.spreadsheet-template": ["ots"], "application/vnd.oasis.opendocument.text": ["odt"], "application/vnd.oasis.opendocument.text-master": ["odm"], "application/vnd.oasis.opendocument.text-template": ["ott"], "application/vnd.oasis.opendocument.text-web": ["oth"], "application/vnd.olpc-sugar": ["xo"], "application/vnd.oma.dd2+xml": ["dd2"], "application/vnd.openblox.game+xml": ["obgx"], "application/vnd.openofficeorg.extension": ["oxt"], "application/vnd.openstreetmap.data+xml": ["osm"], "application/vnd.openxmlformats-officedocument.presentationml.presentation": ["pptx"], "application/vnd.openxmlformats-officedocument.presentationml.slide": ["sldx"], "application/vnd.openxmlformats-officedocument.presentationml.slideshow": ["ppsx"], "application/vnd.openxmlformats-officedocument.presentationml.template": ["potx"], "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": ["xlsx"], "application/vnd.openxmlformats-officedocument.spreadsheetml.template": ["xltx"], "application/vnd.openxmlformats-officedocument.wordprocessingml.document": ["docx"], "application/vnd.openxmlformats-officedocument.wordprocessingml.template": ["dotx"], "application/vnd.osgeo.mapguide.package": ["mgp"], "application/vnd.osgi.dp": ["dp"], "application/vnd.osgi.subsystem": ["esa"], "application/vnd.palm": ["pdb", "pqa", "oprc"], "application/vnd.pawaafile": ["paw"], "application/vnd.pg.format": ["str"], "application/vnd.pg.osasli": ["ei6"], "application/vnd.picsel": ["efif"], "application/vnd.pmi.widget": ["wg"], "application/vnd.pocketlearn": ["plf"], "application/vnd.powerbuilder6": ["pbd"], "application/vnd.previewsystems.box": ["box"], "application/vnd.proteus.magazine": ["mgz"], "application/vnd.publishare-delta-tree": ["qps"], "application/vnd.pvi.ptid1": ["ptid"], "application/vnd.quark.quarkxpress": ["qxd", "qxt", "qwd", "qwt", "qxl", "qxb"], "application/vnd.rar": ["rar"], "application/vnd.realvnc.bed": ["bed"], "application/vnd.recordare.musicxml": ["mxl"], "application/vnd.recordare.musicxml+xml": ["musicxml"], "application/vnd.rig.cryptonote": ["cryptonote"], "application/vnd.rim.cod": ["cod"], "application/vnd.rn-realmedia": ["rm"], "application/vnd.rn-realmedia-vbr": ["rmvb"], "application/vnd.route66.link66+xml": ["link66"], "application/vnd.sailingtracker.track": ["st"], "application/vnd.seemail": ["see"], "application/vnd.sema": ["sema"], "application/vnd.semd": ["semd"], "application/vnd.semf": ["semf"], "application/vnd.shana.informed.formdata": ["ifm"], "application/vnd.shana.informed.formtemplate": ["itp"], "application/vnd.shana.informed.interchange": ["iif"], "application/vnd.shana.informed.package": ["ipk"], "application/vnd.simtech-mindmapper": ["twd", "twds"], "application/vnd.smaf": ["mmf"], "application/vnd.smart.teacher": ["teacher"], "application/vnd.software602.filler.form+xml": ["fo"], "application/vnd.solent.sdkm+xml": ["sdkm", "sdkd"], "application/vnd.spotfire.dxp": ["dxp"], "application/vnd.spotfire.sfs": ["sfs"], "application/vnd.stardivision.calc": ["sdc"], "application/vnd.stardivision.draw": ["sda"], "application/vnd.stardivision.impress": ["sdd"], "application/vnd.stardivision.math": ["smf"], "application/vnd.stardivision.writer": ["sdw", "vor"], "application/vnd.stardivision.writer-global": ["sgl"], "application/vnd.stepmania.package": ["smzip"], "application/vnd.stepmania.stepchart": ["sm"], "application/vnd.sun.wadl+xml": ["wadl"], "application/vnd.sun.xml.calc": ["sxc"], "application/vnd.sun.xml.calc.template": ["stc"], "application/vnd.sun.xml.draw": ["sxd"], "application/vnd.sun.xml.draw.template": ["std"], "application/vnd.sun.xml.impress": ["sxi"], "application/vnd.sun.xml.impress.template": ["sti"], "application/vnd.sun.xml.math": ["sxm"], "application/vnd.sun.xml.writer": ["sxw"], "application/vnd.sun.xml.writer.global": ["sxg"], "application/vnd.sun.xml.writer.template": ["stw"], "application/vnd.sus-calendar": ["sus", "susp"], "application/vnd.svd": ["svd"], "application/vnd.symbian.install": ["sis", "sisx"], "application/vnd.syncml+xml": ["xsm"], "application/vnd.syncml.dm+wbxml": ["bdm"], "application/vnd.syncml.dm+xml": ["xdm"], "application/vnd.syncml.dmddf+xml": ["ddf"], "application/vnd.tao.intent-module-archive": ["tao"], "application/vnd.tcpdump.pcap": ["pcap", "cap", "dmp"], "application/vnd.tmobile-livetv": ["tmo"], "application/vnd.trid.tpt": ["tpt"], "application/vnd.triscape.mxs": ["mxs"], "application/vnd.trueapp": ["tra"], "application/vnd.ufdl": ["ufd", "ufdl"], "application/vnd.uiq.theme": ["utz"], "application/vnd.umajin": ["umj"], "application/vnd.unity": ["unityweb"], "application/vnd.uoml+xml": ["uoml"], "application/vnd.vcx": ["vcx"], "application/vnd.visio": ["vsd", "vst", "vss", "vsw"], "application/vnd.visionary": ["vis"], "application/vnd.vsf": ["vsf"], "application/vnd.wap.wbxml": ["wbxml"], "application/vnd.wap.wmlc": ["wmlc"], "application/vnd.wap.wmlscriptc": ["wmlsc"], "application/vnd.webturbo": ["wtb"], "application/vnd.wolfram.player": ["nbp"], "application/vnd.wordperfect": ["wpd"], "application/vnd.wqd": ["wqd"], "application/vnd.wt.stf": ["stf"], "application/vnd.xara": ["xar"], "application/vnd.xfdl": ["xfdl"], "application/vnd.yamaha.hv-dic": ["hvd"], "application/vnd.yamaha.hv-script": ["hvs"], "application/vnd.yamaha.hv-voice": ["hvp"], "application/vnd.yamaha.openscoreformat": ["osf"], "application/vnd.yamaha.openscoreformat.osfpvg+xml": ["osfpvg"], "application/vnd.yamaha.smaf-audio": ["saf"], "application/vnd.yamaha.smaf-phrase": ["spf"], "application/vnd.yellowriver-custom-menu": ["cmp"], "application/vnd.zul": ["zir", "zirz"], "application/vnd.zzazz.deck+xml": ["zaz"], "application/x-7z-compressed": ["7z"], "application/x-abiword": ["abw"], "application/x-ace-compressed": ["ace"], "application/x-apple-diskimage": ["*dmg"], "application/x-arj": ["arj"], "application/x-authorware-bin": ["aab", "x32", "u32", "vox"], "application/x-authorware-map": ["aam"], "application/x-authorware-seg": ["aas"], "application/x-bcpio": ["bcpio"], "application/x-bdoc": ["*bdoc"], "application/x-bittorrent": ["torrent"], "application/x-blorb": ["blb", "blorb"], "application/x-bzip": ["bz"], "application/x-bzip2": ["bz2", "boz"], "application/x-cbr": ["cbr", "cba", "cbt", "cbz", "cb7"], "application/x-cdlink": ["vcd"], "application/x-cfs-compressed": ["cfs"], "application/x-chat": ["chat"], "application/x-chess-pgn": ["pgn"], "application/x-chrome-extension": ["crx"], "application/x-cocoa": ["cco"], "application/x-conference": ["nsc"], "application/x-cpio": ["cpio"], "application/x-csh": ["csh"], "application/x-debian-package": ["*deb", "udeb"], "application/x-dgc-compressed": ["dgc"], "application/x-director": ["dir", "dcr", "dxr", "cst", "cct", "cxt", "w3d", "fgd", "swa"], "application/x-doom": ["wad"], "application/x-dtbncx+xml": ["ncx"], "application/x-dtbook+xml": ["dtb"], "application/x-dtbresource+xml": ["res"], "application/x-dvi": ["dvi"], "application/x-envoy": ["evy"], "application/x-eva": ["eva"], "application/x-font-bdf": ["bdf"], "application/x-font-ghostscript": ["gsf"], "application/x-font-linux-psf": ["psf"], "application/x-font-pcf": ["pcf"], "application/x-font-snf": ["snf"], "application/x-font-type1": ["pfa", "pfb", "pfm", "afm"], "application/x-freearc": ["arc"], "application/x-futuresplash": ["spl"], "application/x-gca-compressed": ["gca"], "application/x-glulx": ["ulx"], "application/x-gnumeric": ["gnumeric"], "application/x-gramps-xml": ["gramps"], "application/x-gtar": ["gtar"], "application/x-hdf": ["hdf"], "application/x-httpd-php": ["php"], "application/x-install-instructions": ["install"], "application/x-iso9660-image": ["*iso"], "application/x-iwork-keynote-sffkey": ["*key"], "application/x-iwork-numbers-sffnumbers": ["*numbers"], "application/x-iwork-pages-sffpages": ["*pages"], "application/x-java-archive-diff": ["jardiff"], "application/x-java-jnlp-file": ["jnlp"], "application/x-keepass2": ["kdbx"], "application/x-latex": ["latex"], "application/x-lua-bytecode": ["luac"], "application/x-lzh-compressed": ["lzh", "lha"], "application/x-makeself": ["run"], "application/x-mie": ["mie"], "application/x-mobipocket-ebook": ["prc", "mobi"], "application/x-ms-application": ["application"], "application/x-ms-shortcut": ["lnk"], "application/x-ms-wmd": ["wmd"], "application/x-ms-wmz": ["wmz"], "application/x-ms-xbap": ["xbap"], "application/x-msaccess": ["mdb"], "application/x-msbinder": ["obd"], "application/x-mscardfile": ["crd"], "application/x-msclip": ["clp"], "application/x-msdos-program": ["*exe"], "application/x-msdownload": ["*exe", "*dll", "com", "bat", "*msi"], "application/x-msmediaview": ["mvb", "m13", "m14"], "application/x-msmetafile": ["*wmf", "*wmz", "*emf", "emz"], "application/x-msmoney": ["mny"], "application/x-mspublisher": ["pub"], "application/x-msschedule": ["scd"], "application/x-msterminal": ["trm"], "application/x-mswrite": ["wri"], "application/x-netcdf": ["nc", "cdf"], "application/x-ns-proxy-autoconfig": ["pac"], "application/x-nzb": ["nzb"], "application/x-perl": ["pl", "pm"], "application/x-pilot": ["*prc", "*pdb"], "application/x-pkcs12": ["p12", "pfx"], "application/x-pkcs7-certificates": ["p7b", "spc"], "application/x-pkcs7-certreqresp": ["p7r"], "application/x-rar-compressed": ["*rar"], "application/x-redhat-package-manager": ["rpm"], "application/x-research-info-systems": ["ris"], "application/x-sea": ["sea"], "application/x-sh": ["sh"], "application/x-shar": ["shar"], "application/x-shockwave-flash": ["swf"], "application/x-silverlight-app": ["xap"], "application/x-sql": ["sql"], "application/x-stuffit": ["sit"], "application/x-stuffitx": ["sitx"], "application/x-subrip": ["srt"], "application/x-sv4cpio": ["sv4cpio"], "application/x-sv4crc": ["sv4crc"], "application/x-t3vm-image": ["t3"], "application/x-tads": ["gam"], "application/x-tar": ["tar"], "application/x-tcl": ["tcl", "tk"], "application/x-tex": ["tex"], "application/x-tex-tfm": ["tfm"], "application/x-texinfo": ["texinfo", "texi"], "application/x-tgif": ["*obj"], "application/x-ustar": ["ustar"], "application/x-virtualbox-hdd": ["hdd"], "application/x-virtualbox-ova": ["ova"], "application/x-virtualbox-ovf": ["ovf"], "application/x-virtualbox-vbox": ["vbox"], "application/x-virtualbox-vbox-extpack": ["vbox-extpack"], "application/x-virtualbox-vdi": ["vdi"], "application/x-virtualbox-vhd": ["vhd"], "application/x-virtualbox-vmdk": ["vmdk"], "application/x-wais-source": ["src"], "application/x-web-app-manifest+json": ["webapp"], "application/x-x509-ca-cert": ["der", "crt", "pem"], "application/x-xfig": ["fig"], "application/x-xliff+xml": ["*xlf"], "application/x-xpinstall": ["xpi"], "application/x-xz": ["xz"], "application/x-zmachine": ["z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8"], "audio/vnd.dece.audio": ["uva", "uvva"], "audio/vnd.digital-winds": ["eol"], "audio/vnd.dra": ["dra"], "audio/vnd.dts": ["dts"], "audio/vnd.dts.hd": ["dtshd"], "audio/vnd.lucent.voice": ["lvp"], "audio/vnd.ms-playready.media.pya": ["pya"], "audio/vnd.nuera.ecelp4800": ["ecelp4800"], "audio/vnd.nuera.ecelp7470": ["ecelp7470"], "audio/vnd.nuera.ecelp9600": ["ecelp9600"], "audio/vnd.rip": ["rip"], "audio/x-aac": ["aac"], "audio/x-aiff": ["aif", "aiff", "aifc"], "audio/x-caf": ["caf"], "audio/x-flac": ["flac"], "audio/x-m4a": ["*m4a"], "audio/x-matroska": ["mka"], "audio/x-mpegurl": ["m3u"], "audio/x-ms-wax": ["wax"], "audio/x-ms-wma": ["wma"], "audio/x-pn-realaudio": ["ram", "ra"], "audio/x-pn-realaudio-plugin": ["rmp"], "audio/x-realaudio": ["*ra"], "audio/x-wav": ["*wav"], "chemical/x-cdx": ["cdx"], "chemical/x-cif": ["cif"], "chemical/x-cmdf": ["cmdf"], "chemical/x-cml": ["cml"], "chemical/x-csml": ["csml"], "chemical/x-xyz": ["xyz"], "image/prs.btif": ["btif"], "image/prs.pti": ["pti"], "image/vnd.adobe.photoshop": ["psd"], "image/vnd.airzip.accelerator.azv": ["azv"], "image/vnd.dece.graphic": ["uvi", "uvvi", "uvg", "uvvg"], "image/vnd.djvu": ["djvu", "djv"], "image/vnd.dvb.subtitle": ["*sub"], "image/vnd.dwg": ["dwg"], "image/vnd.dxf": ["dxf"], "image/vnd.fastbidsheet": ["fbs"], "image/vnd.fpx": ["fpx"], "image/vnd.fst": ["fst"], "image/vnd.fujixerox.edmics-mmr": ["mmr"], "image/vnd.fujixerox.edmics-rlc": ["rlc"], "image/vnd.microsoft.icon": ["ico"], "image/vnd.ms-dds": ["dds"], "image/vnd.ms-modi": ["mdi"], "image/vnd.ms-photo": ["wdp"], "image/vnd.net-fpx": ["npx"], "image/vnd.pco.b16": ["b16"], "image/vnd.tencent.tap": ["tap"], "image/vnd.valve.source.texture": ["vtf"], "image/vnd.wap.wbmp": ["wbmp"], "image/vnd.xiff": ["xif"], "image/vnd.zbrush.pcx": ["pcx"], "image/x-3ds": ["3ds"], "image/x-cmu-raster": ["ras"], "image/x-cmx": ["cmx"], "image/x-freehand": ["fh", "fhc", "fh4", "fh5", "fh7"], "image/x-icon": ["*ico"], "image/x-jng": ["jng"], "image/x-mrsid-image": ["sid"], "image/x-ms-bmp": ["*bmp"], "image/x-pcx": ["*pcx"], "image/x-pict": ["pic", "pct"], "image/x-portable-anymap": ["pnm"], "image/x-portable-bitmap": ["pbm"], "image/x-portable-graymap": ["pgm"], "image/x-portable-pixmap": ["ppm"], "image/x-rgb": ["rgb"], "image/x-tga": ["tga"], "image/x-xbitmap": ["xbm"], "image/x-xpixmap": ["xpm"], "image/x-xwindowdump": ["xwd"], "message/vnd.wfa.wsc": ["wsc"], "model/vnd.collada+xml": ["dae"], "model/vnd.dwf": ["dwf"], "model/vnd.gdl": ["gdl"], "model/vnd.gtw": ["gtw"], "model/vnd.mts": ["mts"], "model/vnd.opengex": ["ogex"], "model/vnd.parasolid.transmit.binary": ["x_b"], "model/vnd.parasolid.transmit.text": ["x_t"], "model/vnd.sap.vds": ["vds"], "model/vnd.usdz+zip": ["usdz"], "model/vnd.valve.source.compiled-map": ["bsp"], "model/vnd.vtu": ["vtu"], "text/prs.lines.tag": ["dsc"], "text/vnd.curl": ["curl"], "text/vnd.curl.dcurl": ["dcurl"], "text/vnd.curl.mcurl": ["mcurl"], "text/vnd.curl.scurl": ["scurl"], "text/vnd.dvb.subtitle": ["sub"], "text/vnd.fly": ["fly"], "text/vnd.fmi.flexstor": ["flx"], "text/vnd.graphviz": ["gv"], "text/vnd.in3d.3dml": ["3dml"], "text/vnd.in3d.spot": ["spot"], "text/vnd.sun.j2me.app-descriptor": ["jad"], "text/vnd.wap.wml": ["wml"], "text/vnd.wap.wmlscript": ["wmls"], "text/x-asm": ["s", "asm"], "text/x-c": ["c", "cc", "cxx", "cpp", "h", "hh", "dic"], "text/x-component": ["htc"], "text/x-fortran": ["f", "for", "f77", "f90"], "text/x-handlebars-template": ["hbs"], "text/x-java-source": ["java"], "text/x-lua": ["lua"], "text/x-markdown": ["mkd"], "text/x-nfo": ["nfo"], "text/x-opml": ["opml"], "text/x-org": ["*org"], "text/x-pascal": ["p", "pas"], "text/x-processing": ["pde"], "text/x-sass": ["sass"], "text/x-scss": ["scss"], "text/x-setext": ["etx"], "text/x-sfv": ["sfv"], "text/x-suse-ymp": ["ymp"], "text/x-uuencode": ["uu"], "text/x-vcalendar": ["vcs"], "text/x-vcard": ["vcf"], "video/vnd.dece.hd": ["uvh", "uvvh"], "video/vnd.dece.mobile": ["uvm", "uvvm"], "video/vnd.dece.pd": ["uvp", "uvvp"], "video/vnd.dece.sd": ["uvs", "uvvs"], "video/vnd.dece.video": ["uvv", "uvvv"], "video/vnd.dvb.file": ["dvb"], "video/vnd.fvt": ["fvt"], "video/vnd.mpegurl": ["mxu", "m4u"], "video/vnd.ms-playready.media.pyv": ["pyv"], "video/vnd.uvvu.mp4": ["uvu", "uvvu"], "video/vnd.vivo": ["viv"], "video/x-f4v": ["f4v"], "video/x-fli": ["fli"], "video/x-flv": ["flv"], "video/x-m4v": ["m4v"], "video/x-matroska": ["mkv", "mk3d", "mks"], "video/x-mng": ["mng"], "video/x-ms-asf": ["asf", "asx"], "video/x-ms-vob": ["vob"], "video/x-ms-wm": ["wm"], "video/x-ms-wmv": ["wmv"], "video/x-ms-wmx": ["wmx"], "video/x-ms-wvx": ["wvx"], "video/x-msvideo": ["avi"], "video/x-sgi-movie": ["movie"], "video/x-smv": ["smv"], "x-conference/x-cooltalk": ["ice"] };
  }
});
var require_mime = __commonJS({
  ".svelte-kit/cloudflare-workers-tmp/node_modules/mime/index.js"(exports, module) {
    "use strict";
    var Mime = require_Mime();
    module.exports = new Mime(require_standard(), require_other());
  }
});
var require_types = __commonJS({
  ".svelte-kit/cloudflare-workers-tmp/node_modules/@cloudflare/kv-asset-handler/dist/types.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.InternalError = exports.NotFoundError = exports.MethodNotAllowedError = exports.KVError = void 0;
    var KVError = class extends Error {
      constructor(message, status = 500) {
        super(message);
        Object.setPrototypeOf(this, new.target.prototype);
        this.name = KVError.name;
        this.status = status;
      }
    };
    exports.KVError = KVError;
    var MethodNotAllowedError = class extends KVError {
      constructor(message = `Not a valid request method`, status = 405) {
        super(message, status);
      }
    };
    exports.MethodNotAllowedError = MethodNotAllowedError;
    var NotFoundError = class extends KVError {
      constructor(message = `Not Found`, status = 404) {
        super(message, status);
      }
    };
    exports.NotFoundError = NotFoundError;
    var InternalError = class extends KVError {
      constructor(message = `Internal Error in KV Asset Handler`, status = 500) {
        super(message, status);
      }
    };
    exports.InternalError = InternalError;
  }
});
var require_dist = __commonJS({
  ".svelte-kit/cloudflare-workers-tmp/node_modules/@cloudflare/kv-asset-handler/dist/index.js"(exports) {
    "use strict";
    var __awaiter15 = exports && exports.__awaiter || function(thisArg, _arguments, P2, generator) {
      function adopt(value2) {
        return value2 instanceof P2 ? value2 : new P2(function(resolve) {
          resolve(value2);
        });
      }
      return new (P2 || (P2 = Promise))(function(resolve, reject) {
        function fulfilled(value2) {
          try {
            step(generator.next(value2));
          } catch (e2) {
            reject(e2);
          }
        }
        function rejected(value2) {
          try {
            step(generator["throw"](value2));
          } catch (e2) {
            reject(e2);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.InternalError = exports.NotFoundError = exports.MethodNotAllowedError = exports.serveSinglePageApp = exports.mapRequestToAsset = exports.getAssetFromKV = void 0;
    var mime = require_mime();
    var types_1 = require_types();
    Object.defineProperty(exports, "MethodNotAllowedError", { enumerable: true, get: function() {
      return types_1.MethodNotAllowedError;
    } });
    Object.defineProperty(exports, "NotFoundError", { enumerable: true, get: function() {
      return types_1.NotFoundError;
    } });
    Object.defineProperty(exports, "InternalError", { enumerable: true, get: function() {
      return types_1.InternalError;
    } });
    var defaultCacheControl = {
      browserTTL: null,
      edgeTTL: 2 * 60 * 60 * 24,
      bypassCache: false
    };
    var parseStringAsObject = (maybeString) => typeof maybeString === "string" ? JSON.parse(maybeString) : maybeString;
    var getAssetFromKVDefaultOptions = {
      ASSET_NAMESPACE: typeof __STATIC_CONTENT !== "undefined" ? __STATIC_CONTENT : void 0,
      ASSET_MANIFEST: typeof __STATIC_CONTENT_MANIFEST !== "undefined" ? parseStringAsObject(__STATIC_CONTENT_MANIFEST) : void 0,
      cacheControl: defaultCacheControl,
      defaultMimeType: "text/plain",
      defaultDocument: "index.html"
    };
    function assignOptions(options2) {
      return Object.assign({}, getAssetFromKVDefaultOptions, options2);
    }
    var mapRequestToAsset2 = (request, options2) => {
      options2 = assignOptions(options2);
      const parsedUrl = new URL(request.url);
      let pathname = parsedUrl.pathname;
      if (pathname.endsWith("/")) {
        pathname = pathname.concat(options2.defaultDocument);
      } else if (!mime.getType(pathname)) {
        pathname = pathname.concat("/" + options2.defaultDocument);
      }
      parsedUrl.pathname = pathname;
      return new Request(parsedUrl.toString(), request);
    };
    exports.mapRequestToAsset = mapRequestToAsset2;
    function serveSinglePageApp(request, options2) {
      options2 = assignOptions(options2);
      request = mapRequestToAsset2(request, options2);
      const parsedUrl = new URL(request.url);
      if (parsedUrl.pathname.endsWith(".html")) {
        return new Request(`${parsedUrl.origin}/${options2.defaultDocument}`, request);
      } else {
        return request;
      }
    }
    exports.serveSinglePageApp = serveSinglePageApp;
    var getAssetFromKV2 = (event, options2) => __awaiter15(void 0, void 0, void 0, function* () {
      options2 = assignOptions(options2);
      const request = event.request;
      const ASSET_NAMESPACE = options2.ASSET_NAMESPACE;
      const ASSET_MANIFEST = parseStringAsObject(options2.ASSET_MANIFEST);
      if (typeof ASSET_NAMESPACE === "undefined") {
        throw new types_1.InternalError(`there is no KV namespace bound to the script`);
      }
      const rawPathKey = new URL(request.url).pathname.replace(/^\/+/, "");
      let pathIsEncoded = false;
      let requestKey;
      if (options2.mapRequestToAsset) {
        requestKey = options2.mapRequestToAsset(request);
      } else if (ASSET_MANIFEST[rawPathKey]) {
        requestKey = request;
      } else if (ASSET_MANIFEST[decodeURIComponent(rawPathKey)]) {
        pathIsEncoded = true;
        requestKey = request;
      } else {
        const mappedRequest = mapRequestToAsset2(request);
        const mappedRawPathKey = new URL(mappedRequest.url).pathname.replace(/^\/+/, "");
        if (ASSET_MANIFEST[decodeURIComponent(mappedRawPathKey)]) {
          pathIsEncoded = true;
          requestKey = mappedRequest;
        } else {
          requestKey = mapRequestToAsset2(request, options2);
        }
      }
      const SUPPORTED_METHODS = ["GET", "HEAD"];
      if (!SUPPORTED_METHODS.includes(requestKey.method)) {
        throw new types_1.MethodNotAllowedError(`${requestKey.method} is not a valid request method`);
      }
      const parsedUrl = new URL(requestKey.url);
      const pathname = pathIsEncoded ? decodeURIComponent(parsedUrl.pathname) : parsedUrl.pathname;
      let pathKey = pathname.replace(/^\/+/, "");
      const cache = caches.default;
      let mimeType = mime.getType(pathKey) || options2.defaultMimeType;
      if (mimeType.startsWith("text") || mimeType === "application/javascript") {
        mimeType += "; charset=utf-8";
      }
      let shouldEdgeCache = false;
      if (typeof ASSET_MANIFEST !== "undefined") {
        if (ASSET_MANIFEST[pathKey]) {
          pathKey = ASSET_MANIFEST[pathKey];
          shouldEdgeCache = true;
        }
      }
      let cacheKey = new Request(`${parsedUrl.origin}/${pathKey}`, request);
      const evalCacheOpts = (() => {
        switch (typeof options2.cacheControl) {
          case "function":
            return options2.cacheControl(request);
          case "object":
            return options2.cacheControl;
          default:
            return defaultCacheControl;
        }
      })();
      const formatETag = (entityId = pathKey, validatorType = "strong") => {
        if (!entityId) {
          return "";
        }
        switch (validatorType) {
          case "weak":
            if (!entityId.startsWith("W/")) {
              return `W/${entityId}`;
            }
            return entityId;
          case "strong":
            if (entityId.startsWith(`W/"`)) {
              entityId = entityId.replace("W/", "");
            }
            if (!entityId.endsWith(`"`)) {
              entityId = `"${entityId}"`;
            }
            return entityId;
          default:
            return "";
        }
      };
      options2.cacheControl = Object.assign({}, defaultCacheControl, evalCacheOpts);
      if (options2.cacheControl.bypassCache || options2.cacheControl.edgeTTL === null || request.method == "HEAD") {
        shouldEdgeCache = false;
      }
      const shouldSetBrowserCache = typeof options2.cacheControl.browserTTL === "number";
      let response = null;
      if (shouldEdgeCache) {
        response = yield cache.match(cacheKey);
      }
      if (response) {
        if (response.status > 300 && response.status < 400) {
          if (response.body && "cancel" in Object.getPrototypeOf(response.body)) {
            response.body.cancel();
            console.log("Body exists and environment supports readable streams. Body cancelled");
          } else {
            console.log("Environment doesnt support readable streams");
          }
          response = new Response(null, response);
        } else {
          let opts = {
            headers: new Headers(response.headers),
            status: 0,
            statusText: ""
          };
          opts.headers.set("cf-cache-status", "HIT");
          if (response.status) {
            opts.status = response.status;
            opts.statusText = response.statusText;
          } else if (opts.headers.has("Content-Range")) {
            opts.status = 206;
            opts.statusText = "Partial Content";
          } else {
            opts.status = 200;
            opts.statusText = "OK";
          }
          response = new Response(response.body, opts);
        }
      } else {
        const body = yield ASSET_NAMESPACE.get(pathKey, "arrayBuffer");
        if (body === null) {
          throw new types_1.NotFoundError(`could not find ${pathKey} in your content namespace`);
        }
        response = new Response(body);
        if (shouldEdgeCache) {
          response.headers.set("Accept-Ranges", "bytes");
          response.headers.set("Content-Length", body.length);
          if (!response.headers.has("etag")) {
            response.headers.set("etag", formatETag(pathKey, "strong"));
          }
          response.headers.set("Cache-Control", `max-age=${options2.cacheControl.edgeTTL}`);
          event.waitUntil(cache.put(cacheKey, response.clone()));
          response.headers.set("CF-Cache-Status", "MISS");
        }
      }
      response.headers.set("Content-Type", mimeType);
      if (response.status === 304) {
        let etag = formatETag(response.headers.get("etag"), "strong");
        let ifNoneMatch = cacheKey.headers.get("if-none-match");
        let proxyCacheStatus = response.headers.get("CF-Cache-Status");
        if (etag) {
          if (ifNoneMatch && ifNoneMatch === etag && proxyCacheStatus === "MISS") {
            response.headers.set("CF-Cache-Status", "EXPIRED");
          } else {
            response.headers.set("CF-Cache-Status", "REVALIDATED");
          }
          response.headers.set("etag", formatETag(etag, "weak"));
        }
      }
      if (shouldSetBrowserCache) {
        response.headers.set("Cache-Control", `max-age=${options2.cacheControl.browserTTL}`);
      } else {
        response.headers.delete("Cache-Control");
      }
      return response;
    });
    exports.getAssetFromKV = getAssetFromKV2;
  }
});
init_prod_ssr();
init_index2();
var base = "";
var assets = base;
var initial = { base, assets };
function reset() {
  base = initial.base;
  assets = initial.assets;
}
var public_env = {};
function set_public_env(environment) {
  public_env = environment;
}
function afterUpdate() {
}
var Root = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { stores } = $$props;
  let { page: page2 } = $$props;
  let { constructors } = $$props;
  let { components = [] } = $$props;
  let { form } = $$props;
  let { data_0 = null } = $$props;
  let { data_1 = null } = $$props;
  let { data_2 = null } = $$props;
  let { data_3 = null } = $$props;
  let { data_4 = null } = $$props;
  let { data_5 = null } = $$props;
  {
    setContext("__svelte__", stores);
  }
  afterUpdate(stores.page.notify);
  if ($$props.stores === void 0 && $$bindings.stores && stores !== void 0)
    $$bindings.stores(stores);
  if ($$props.page === void 0 && $$bindings.page && page2 !== void 0)
    $$bindings.page(page2);
  if ($$props.constructors === void 0 && $$bindings.constructors && constructors !== void 0)
    $$bindings.constructors(constructors);
  if ($$props.components === void 0 && $$bindings.components && components !== void 0)
    $$bindings.components(components);
  if ($$props.form === void 0 && $$bindings.form && form !== void 0)
    $$bindings.form(form);
  if ($$props.data_0 === void 0 && $$bindings.data_0 && data_0 !== void 0)
    $$bindings.data_0(data_0);
  if ($$props.data_1 === void 0 && $$bindings.data_1 && data_1 !== void 0)
    $$bindings.data_1(data_1);
  if ($$props.data_2 === void 0 && $$bindings.data_2 && data_2 !== void 0)
    $$bindings.data_2(data_2);
  if ($$props.data_3 === void 0 && $$bindings.data_3 && data_3 !== void 0)
    $$bindings.data_3(data_3);
  if ($$props.data_4 === void 0 && $$bindings.data_4 && data_4 !== void 0)
    $$bindings.data_4(data_4);
  if ($$props.data_5 === void 0 && $$bindings.data_5 && data_5 !== void 0)
    $$bindings.data_5(data_5);
  let $$settled;
  let $$rendered;
  do {
    $$settled = true;
    {
      stores.page.set(page2);
    }
    $$rendered = `


${constructors[1] ? `${validate_component(constructors[0] || missing_component, "svelte:component").$$render(
      $$result,
      { data: data_0, this: components[0] },
      {
        this: ($$value) => {
          components[0] = $$value;
          $$settled = false;
        }
      },
      {
        default: () => {
          return `${constructors[2] ? `${validate_component(constructors[1] || missing_component, "svelte:component").$$render(
            $$result,
            { data: data_1, this: components[1] },
            {
              this: ($$value) => {
                components[1] = $$value;
                $$settled = false;
              }
            },
            {
              default: () => {
                return `${constructors[3] ? `${validate_component(constructors[2] || missing_component, "svelte:component").$$render(
                  $$result,
                  { data: data_2, this: components[2] },
                  {
                    this: ($$value) => {
                      components[2] = $$value;
                      $$settled = false;
                    }
                  },
                  {
                    default: () => {
                      return `${constructors[4] ? `${validate_component(constructors[3] || missing_component, "svelte:component").$$render(
                        $$result,
                        { data: data_3, this: components[3] },
                        {
                          this: ($$value) => {
                            components[3] = $$value;
                            $$settled = false;
                          }
                        },
                        {
                          default: () => {
                            return `${constructors[5] ? `${validate_component(constructors[4] || missing_component, "svelte:component").$$render(
                              $$result,
                              { data: data_4, this: components[4] },
                              {
                                this: ($$value) => {
                                  components[4] = $$value;
                                  $$settled = false;
                                }
                              },
                              {
                                default: () => {
                                  return `${validate_component(constructors[5] || missing_component, "svelte:component").$$render(
                                    $$result,
                                    { data: data_5, form, this: components[5] },
                                    {
                                      this: ($$value) => {
                                        components[5] = $$value;
                                        $$settled = false;
                                      }
                                    },
                                    {}
                                  )}`;
                                }
                              }
                            )}` : `${validate_component(constructors[4] || missing_component, "svelte:component").$$render(
                              $$result,
                              { data: data_4, form, this: components[4] },
                              {
                                this: ($$value) => {
                                  components[4] = $$value;
                                  $$settled = false;
                                }
                              },
                              {}
                            )}`}`;
                          }
                        }
                      )}` : `${validate_component(constructors[3] || missing_component, "svelte:component").$$render(
                        $$result,
                        { data: data_3, form, this: components[3] },
                        {
                          this: ($$value) => {
                            components[3] = $$value;
                            $$settled = false;
                          }
                        },
                        {}
                      )}`}`;
                    }
                  }
                )}` : `${validate_component(constructors[2] || missing_component, "svelte:component").$$render(
                  $$result,
                  { data: data_2, form, this: components[2] },
                  {
                    this: ($$value) => {
                      components[2] = $$value;
                      $$settled = false;
                    }
                  },
                  {}
                )}`}`;
              }
            }
          )}` : `${validate_component(constructors[1] || missing_component, "svelte:component").$$render(
            $$result,
            { data: data_1, form, this: components[1] },
            {
              this: ($$value) => {
                components[1] = $$value;
                $$settled = false;
              }
            },
            {}
          )}`}`;
        }
      }
    )}` : `${validate_component(constructors[0] || missing_component, "svelte:component").$$render(
      $$result,
      { data: data_0, form, this: components[0] },
      {
        this: ($$value) => {
          components[0] = $$value;
          $$settled = false;
        }
      },
      {}
    )}`}

${``}`;
  } while (!$$settled);
  return $$rendered;
});
var options = {
  app_template_contains_nonce: false,
  csp: { "mode": "auto", "directives": { "upgrade-insecure-requests": false, "block-all-mixed-content": false }, "reportOnly": { "upgrade-insecure-requests": false, "block-all-mixed-content": false } },
  csrf_check_origin: true,
  track_server_fetches: false,
  embedded: false,
  env_public_prefix: "PUBLIC_",
  hooks: null,
  preload_strategy: "modulepreload",
  root: Root,
  service_worker: false,
  templates: {
    app: ({ head, body, assets: assets2, nonce, env }) => '<!DOCTYPE html>\n<html lang="en">\n	<head>\n		<meta charset="utf-8" />\n		<link rel="icon" href="' + assets2 + '/favicon.png" />\n		<meta name="viewport" content="width=device-width" />\n		' + head + '\n	</head>\n	<body data-sveltekit-preload-data="hover">\n		<div style="display: contents">\n			<div id="svelte">' + body + "</div>\n		</div>\n	</body>\n</html>\n",
    error: ({ status, message }) => '<!DOCTYPE html>\n<html lang="en">\n	<head>\n		<meta charset="utf-8" />\n		<title>' + message + `</title>

		<style>
			body {
				--bg: white;
				--fg: #222;
				--divider: #ccc;
				background: var(--bg);
				color: var(--fg);
				font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,
					Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
				display: flex;
				align-items: center;
				justify-content: center;
				height: 100vh;
				margin: 0;
			}

			.error {
				display: flex;
				align-items: center;
				max-width: 32rem;
				margin: 0 1rem;
			}

			.status {
				font-weight: 200;
				font-size: 3rem;
				line-height: 1;
				position: relative;
				top: -0.05rem;
			}

			.message {
				border-left: 1px solid var(--divider);
				padding: 0 0 0 1rem;
				margin: 0 0 0 1rem;
				min-height: 2.5rem;
				display: flex;
				align-items: center;
			}

			.message h1 {
				font-weight: 400;
				font-size: 1em;
				margin: 0;
			}

			@media (prefers-color-scheme: dark) {
				body {
					--bg: #222;
					--fg: #ddd;
					--divider: #666;
				}
			}
		</style>
	</head>
	<body>
		<div class="error">
			<span class="status">` + status + '</span>\n			<div class="message">\n				<h1>' + message + "</h1>\n			</div>\n		</div>\n	</body>\n</html>\n"
  },
  version_hash: "1qca3ki"
};
function get_hooks() {
  return Promise.resolve().then(() => (init_hooks_server(), hooks_server_exports));
}
init_chunks();
init_devalue();
init_index3();
var import_cookie3 = __toESM(require_cookie2(), 1);
var set_cookie_parser = __toESM(require_set_cookie(), 1);
function negotiate(accept, types2) {
  const parts = [];
  accept.split(",").forEach((str, i2) => {
    const match = /([^/]+)\/([^;]+)(?:;q=([0-9.]+))?/.exec(str);
    if (match) {
      const [, type, subtype, q2 = "1"] = match;
      parts.push({ type, subtype, q: +q2, i: i2 });
    }
  });
  parts.sort((a2, b2) => {
    if (a2.q !== b2.q) {
      return b2.q - a2.q;
    }
    if (a2.subtype === "*" !== (b2.subtype === "*")) {
      return a2.subtype === "*" ? 1 : -1;
    }
    if (a2.type === "*" !== (b2.type === "*")) {
      return a2.type === "*" ? 1 : -1;
    }
    return a2.i - b2.i;
  });
  let accepted;
  let min_priority = Infinity;
  for (const mimetype of types2) {
    const [type, subtype] = mimetype.split("/");
    const priority = parts.findIndex(
      (part) => (part.type === type || part.type === "*") && (part.subtype === subtype || part.subtype === "*")
    );
    if (priority !== -1 && priority < min_priority) {
      accepted = mimetype;
      min_priority = priority;
    }
  }
  return accepted;
}
function is_content_type(request, ...types2) {
  const type = request.headers.get("content-type")?.split(";", 1)[0].trim() ?? "";
  return types2.includes(type.toLowerCase());
}
function is_form_content_type(request) {
  return is_content_type(
    request,
    "application/x-www-form-urlencoded",
    "multipart/form-data",
    "text/plain"
  );
}
function exec(match, params, matchers) {
  const result = {};
  const values = match.slice(1);
  let buffered = 0;
  for (let i2 = 0; i2 < params.length; i2 += 1) {
    const param = params[i2];
    const value2 = values[i2 - buffered];
    if (param.chained && param.rest && buffered) {
      result[param.name] = values.slice(i2 - buffered, i2 + 1).filter((s22) => s22).join("/");
      buffered = 0;
      continue;
    }
    if (value2 === void 0) {
      if (param.rest)
        result[param.name] = "";
      continue;
    }
    if (!param.matcher || matchers[param.matcher](value2)) {
      result[param.name] = value2;
      const next_param = params[i2 + 1];
      const next_value = values[i2 + 1];
      if (next_param && !next_param.rest && next_param.optional && next_value && param.chained) {
        buffered = 0;
      }
      continue;
    }
    if (param.optional && param.chained) {
      buffered++;
      continue;
    }
    return;
  }
  if (buffered)
    return;
  return result;
}
function coalesce_to_error(err) {
  return err instanceof Error || err && err.name && err.message ? err : new Error(JSON.stringify(err));
}
function normalize_error(error2) {
  return error2;
}
function method_not_allowed(mod, method) {
  return text(`${method} method not allowed`, {
    status: 405,
    headers: {
      allow: allowed_methods(mod).join(", ")
    }
  });
}
function allowed_methods(mod) {
  const allowed = ["GET", "POST", "PUT", "PATCH", "DELETE", "OPTIONS"].filter(
    (method) => method in mod
  );
  if ("GET" in mod || "HEAD" in mod)
    allowed.push("HEAD");
  return allowed;
}
function static_error_page(options2, status, message) {
  let page2 = options2.templates.error({ status, message });
  return text(page2, {
    headers: { "content-type": "text/html; charset=utf-8" },
    status
  });
}
async function handle_fatal_error(event, options2, error2) {
  error2 = error2 instanceof HttpError ? error2 : coalesce_to_error(error2);
  const status = error2 instanceof HttpError ? error2.status : 500;
  const body = await handle_error_and_jsonify(event, options2, error2);
  const type = negotiate(event.request.headers.get("accept") || "text/html", [
    "application/json",
    "text/html"
  ]);
  if (event.isDataRequest || type === "application/json") {
    return json(body, {
      status
    });
  }
  return static_error_page(options2, status, body.message);
}
async function handle_error_and_jsonify(event, options2, error2) {
  if (error2 instanceof HttpError) {
    return error2.body;
  } else {
    return await options2.hooks.handleError({ error: error2, event }) ?? {
      message: event.route.id != null ? "Internal Error" : "Not Found"
    };
  }
}
function redirect_response(status, location2) {
  const response = new Response(void 0, {
    status,
    headers: { location: location2 }
  });
  return response;
}
function clarify_devalue_error(event, error2) {
  if (error2.path) {
    return `Data returned from \`load\` while rendering ${event.route.id} is not serializable: ${error2.message} (data${error2.path})`;
  }
  if (error2.path === "") {
    return `Data returned from \`load\` while rendering ${event.route.id} is not a plain object`;
  }
  return error2.message;
}
function stringify_uses(node) {
  const uses = [];
  if (node.uses && node.uses.dependencies.size > 0) {
    uses.push(`"dependencies":${JSON.stringify(Array.from(node.uses.dependencies))}`);
  }
  if (node.uses && node.uses.params.size > 0) {
    uses.push(`"params":${JSON.stringify(Array.from(node.uses.params))}`);
  }
  if (node.uses?.parent)
    uses.push('"parent":1');
  if (node.uses?.route)
    uses.push('"route":1');
  if (node.uses?.url)
    uses.push('"url":1');
  return `"uses":{${uses.join(",")}}`;
}
async function render_endpoint(event, mod, state) {
  const method = event.request.method;
  let handler = mod[method];
  if (!handler && method === "HEAD") {
    handler = mod.GET;
  }
  if (!handler) {
    return method_not_allowed(mod, method);
  }
  const prerender12 = mod.prerender ?? state.prerender_default;
  if (prerender12 && (mod.POST || mod.PATCH || mod.PUT || mod.DELETE)) {
    throw new Error("Cannot prerender endpoints that have mutative methods");
  }
  if (state.prerendering && !prerender12) {
    if (state.depth > 0) {
      throw new Error(`${event.route.id} is not prerenderable`);
    } else {
      return new Response(void 0, { status: 204 });
    }
  }
  try {
    let response = await handler(
      event
    );
    if (!(response instanceof Response)) {
      throw new Error(
        `Invalid response from route ${event.url.pathname}: handler should return a Response object`
      );
    }
    if (state.prerendering) {
      response = new Response(response.body, {
        status: response.status,
        statusText: response.statusText,
        headers: new Headers(response.headers)
      });
      response.headers.set("x-sveltekit-prerender", String(prerender12));
    }
    return response;
  } catch (e2) {
    if (e2 instanceof Redirect) {
      return new Response(void 0, {
        status: e2.status,
        headers: { location: e2.location }
      });
    }
    throw e2;
  }
}
function is_endpoint_request(event) {
  const { method, headers } = event.request;
  if (method === "PUT" || method === "PATCH" || method === "DELETE" || method === "OPTIONS") {
    return true;
  }
  if (method === "POST" && headers.get("x-sveltekit-action") === "true")
    return false;
  const accept = event.request.headers.get("accept") ?? "*/*";
  return negotiate(accept, ["*", "text/html"]) !== "text/html";
}
function compact(arr) {
  return arr.filter(
    (val) => val != null
  );
}
function normalize_path(path, trailing_slash) {
  if (path === "/" || trailing_slash === "ignore")
    return path;
  if (trailing_slash === "never") {
    return path.endsWith("/") ? path.slice(0, -1) : path;
  } else if (trailing_slash === "always" && !path.endsWith("/")) {
    return path + "/";
  }
  return path;
}
function decode_pathname(pathname) {
  return pathname.split("%25").map(decodeURI).join("%25");
}
function decode_params(params) {
  for (const key2 in params) {
    params[key2] = decodeURIComponent(params[key2]);
  }
  return params;
}
var tracked_url_properties = [
  "href",
  "pathname",
  "search",
  "searchParams",
  "toString",
  "toJSON"
];
function make_trackable(url, callback) {
  const tracked = new URL(url);
  for (const property of tracked_url_properties) {
    Object.defineProperty(tracked, property, {
      get() {
        callback();
        return url[property];
      },
      enumerable: true,
      configurable: true
    });
  }
  {
    tracked[Symbol.for("nodejs.util.inspect.custom")] = (depth, opts, inspect) => {
      return inspect(url, opts);
    };
  }
  disable_hash(tracked);
  return tracked;
}
function disable_hash(url) {
  Object.defineProperty(url, "hash", {
    get() {
      throw new Error(
        "Cannot access event.url.hash. Consider using `$page.url.hash` inside a component instead"
      );
    }
  });
}
function disable_search(url) {
  for (const property of ["search", "searchParams"]) {
    Object.defineProperty(url, property, {
      get() {
        throw new Error(`Cannot access url.${property} on a page with prerendering enabled`);
      }
    });
  }
}
var DATA_SUFFIX = "/__data.json";
function has_data_suffix(pathname) {
  return pathname.endsWith(DATA_SUFFIX);
}
function add_data_suffix(pathname) {
  return pathname.replace(/\/$/, "") + DATA_SUFFIX;
}
function strip_data_suffix(pathname) {
  return pathname.slice(0, -DATA_SUFFIX.length);
}
function is_action_json_request(event) {
  const accept = negotiate(event.request.headers.get("accept") ?? "*/*", [
    "application/json",
    "text/html"
  ]);
  return accept === "application/json" && event.request.method === "POST";
}
async function handle_action_json_request(event, options2, server2) {
  const actions8 = server2?.actions;
  if (!actions8) {
    const no_actions_error = error(405, "POST method not allowed. No actions exist for this page");
    return action_json(
      {
        type: "error",
        error: await handle_error_and_jsonify(event, options2, no_actions_error)
      },
      {
        status: no_actions_error.status,
        headers: {
          allow: "GET"
        }
      }
    );
  }
  check_named_default_separate(actions8);
  try {
    const data = await call_action(event, actions8);
    if (false)
      ;
    if (data instanceof ActionFailure) {
      return action_json({
        type: "failure",
        status: data.status,
        data: stringify_action_response(
          data.data,
          event.route.id
        )
      });
    } else {
      return action_json({
        type: "success",
        status: data ? 200 : 204,
        data: stringify_action_response(
          data,
          event.route.id
        )
      });
    }
  } catch (e2) {
    const err = normalize_error(e2);
    if (err instanceof Redirect) {
      return action_json_redirect(err);
    }
    return action_json(
      {
        type: "error",
        error: await handle_error_and_jsonify(event, options2, check_incorrect_fail_use(err))
      },
      {
        status: err instanceof HttpError ? err.status : 500
      }
    );
  }
}
function check_incorrect_fail_use(error2) {
  return error2 instanceof ActionFailure ? new Error('Cannot "throw fail()". Use "return fail()"') : error2;
}
function action_json_redirect(redirect2) {
  return action_json({
    type: "redirect",
    status: redirect2.status,
    location: redirect2.location
  });
}
function action_json(data, init2) {
  return json(data, init2);
}
function is_action_request(event) {
  return event.request.method === "POST";
}
async function handle_action_request(event, server2) {
  const actions8 = server2?.actions;
  if (!actions8) {
    event.setHeaders({
      allow: "GET"
    });
    return {
      type: "error",
      error: error(405, "POST method not allowed. No actions exist for this page")
    };
  }
  check_named_default_separate(actions8);
  try {
    const data = await call_action(event, actions8);
    if (false)
      ;
    if (data instanceof ActionFailure) {
      return {
        type: "failure",
        status: data.status,
        data: data.data
      };
    } else {
      return {
        type: "success",
        status: 200,
        data
      };
    }
  } catch (e2) {
    const err = normalize_error(e2);
    if (err instanceof Redirect) {
      return {
        type: "redirect",
        status: err.status,
        location: err.location
      };
    }
    return {
      type: "error",
      error: check_incorrect_fail_use(err)
    };
  }
}
function check_named_default_separate(actions8) {
  if (actions8.default && Object.keys(actions8).length > 1) {
    throw new Error(
      "When using named actions, the default action cannot be used. See the docs for more info: https://kit.svelte.dev/docs/form-actions#named-actions"
    );
  }
}
async function call_action(event, actions8) {
  const url = new URL(event.request.url);
  let name = "default";
  for (const param of url.searchParams) {
    if (param[0].startsWith("/")) {
      name = param[0].slice(1);
      if (name === "default") {
        throw new Error('Cannot use reserved action name "default"');
      }
      break;
    }
  }
  const action = actions8[name];
  if (!action) {
    throw new Error(`No action with name '${name}' found`);
  }
  if (!is_form_content_type(event.request)) {
    throw new Error(
      `Actions expect form-encoded data (received ${event.request.headers.get("content-type")})`
    );
  }
  return action(event);
}
function uneval_action_response(data, route_id) {
  return try_deserialize(data, uneval, route_id);
}
function stringify_action_response(data, route_id) {
  return try_deserialize(data, stringify, route_id);
}
function try_deserialize(data, fn, route_id) {
  try {
    return fn(data);
  } catch (e2) {
    const error2 = e2;
    if ("path" in error2) {
      let message = `Data returned from action inside ${route_id} is not serializable: ${error2.message}`;
      if (error2.path !== "")
        message += ` (data.${error2.path})`;
      throw new Error(message);
    }
    throw error2;
  }
}
async function unwrap_promises(object) {
  for (const key2 in object) {
    if (typeof object[key2]?.then === "function") {
      return Object.fromEntries(
        await Promise.all(Object.entries(object).map(async ([key3, value2]) => [key3, await value2]))
      );
    }
  }
  return object;
}
var INVALIDATED_PARAM = "x-sveltekit-invalidated";
async function load_server_data({
  event,
  state,
  node,
  parent,
  track_server_fetches
}) {
  if (!node?.server)
    return null;
  const uses = {
    dependencies: /* @__PURE__ */ new Set(),
    params: /* @__PURE__ */ new Set(),
    parent: false,
    route: false,
    url: false
  };
  const url = make_trackable(event.url, () => {
    uses.url = true;
  });
  if (state.prerendering) {
    disable_search(url);
  }
  const result = await node.server.load?.call(null, {
    ...event,
    fetch: (info, init2) => {
      const url2 = new URL(info instanceof Request ? info.url : info, event.url);
      if (track_server_fetches) {
        uses.dependencies.add(url2.href);
      }
      return event.fetch(info, init2);
    },
    depends: (...deps) => {
      for (const dep of deps) {
        const { href } = new URL(dep, event.url);
        uses.dependencies.add(href);
      }
    },
    params: new Proxy(event.params, {
      get: (target, key2) => {
        uses.params.add(key2);
        return target[key2];
      }
    }),
    parent: async () => {
      uses.parent = true;
      return parent();
    },
    route: new Proxy(event.route, {
      get: (target, key2) => {
        uses.route = true;
        return target[key2];
      }
    }),
    url
  });
  const data = result ? await unwrap_promises(result) : null;
  return {
    type: "data",
    data,
    uses,
    slash: node.server.trailingSlash
  };
}
async function load_data({
  event,
  fetched,
  node,
  parent,
  server_data_promise,
  state,
  resolve_opts,
  csr
}) {
  const server_data_node = await server_data_promise;
  if (!node?.universal?.load) {
    return server_data_node?.data ?? null;
  }
  const result = await node.universal.load.call(null, {
    url: event.url,
    params: event.params,
    data: server_data_node?.data ?? null,
    route: event.route,
    fetch: create_universal_fetch(event, state, fetched, csr, resolve_opts),
    setHeaders: event.setHeaders,
    depends: () => {
    },
    parent
  });
  const data = result ? await unwrap_promises(result) : null;
  return data;
}
function create_universal_fetch(event, state, fetched, csr, resolve_opts) {
  return async (input, init2) => {
    const cloned_body = input instanceof Request && input.body ? input.clone().body : null;
    let response = await event.fetch(input, init2);
    const url = new URL(input instanceof Request ? input.url : input, event.url);
    const same_origin = url.origin === event.url.origin;
    let dependency;
    if (same_origin) {
      if (state.prerendering) {
        dependency = { response, body: null };
        state.prerendering.dependencies.set(url.pathname, dependency);
      }
    } else {
      const mode = input instanceof Request ? input.mode : init2?.mode ?? "cors";
      if (mode === "no-cors") {
        response = new Response("", {
          status: response.status,
          statusText: response.statusText,
          headers: response.headers
        });
      } else {
        const acao = response.headers.get("access-control-allow-origin");
        if (!acao || acao !== event.url.origin && acao !== "*") {
          throw new Error(
            `CORS error: ${acao ? "Incorrect" : "No"} 'Access-Control-Allow-Origin' header is present on the requested resource`
          );
        }
      }
    }
    const proxy = new Proxy(response, {
      get(response2, key2, _receiver) {
        async function text2() {
          const body = await response2.text();
          if (!body || typeof body === "string") {
            const status_number = Number(response2.status);
            if (isNaN(status_number)) {
              throw new Error(
                `response.status is not a number. value: "${response2.status}" type: ${typeof response2.status}`
              );
            }
            fetched.push({
              url: same_origin ? url.href.slice(event.url.origin.length) : url.href,
              method: event.request.method,
              request_body: input instanceof Request && cloned_body ? await stream_to_string(cloned_body) : init2?.body,
              request_headers: init2?.headers,
              response_body: body,
              response: response2
            });
          }
          if (dependency) {
            dependency.body = body;
          }
          return body;
        }
        if (key2 === "arrayBuffer") {
          return async () => {
            const buffer = await response2.arrayBuffer();
            if (dependency) {
              dependency.body = new Uint8Array(buffer);
            }
            return buffer;
          };
        }
        if (key2 === "text") {
          return text2;
        }
        if (key2 === "json") {
          return async () => {
            return JSON.parse(await text2());
          };
        }
        return Reflect.get(response2, key2, response2);
      }
    });
    if (csr) {
      const get3 = response.headers.get;
      response.headers.get = (key2) => {
        const lower = key2.toLowerCase();
        const value2 = get3.call(response.headers, lower);
        if (value2 && !lower.startsWith("x-sveltekit-")) {
          const included = resolve_opts.filterSerializedResponseHeaders(lower, value2);
          if (!included) {
            throw new Error(
              `Failed to get response header "${lower}" \u2014 it must be included by the \`filterSerializedResponseHeaders\` option: https://kit.svelte.dev/docs/hooks#server-hooks-handle (at ${event.route.id})`
            );
          }
        }
        return value2;
      };
    }
    return proxy;
  };
}
async function stream_to_string(stream) {
  let result = "";
  const reader = stream.getReader();
  const decoder2 = new TextDecoder();
  while (true) {
    const { done, value: value2 } = await reader.read();
    if (done) {
      break;
    }
    result += decoder2.decode(value2);
  }
  return result;
}
function hash(...values) {
  let hash2 = 5381;
  for (const value2 of values) {
    if (typeof value2 === "string") {
      let i2 = value2.length;
      while (i2)
        hash2 = hash2 * 33 ^ value2.charCodeAt(--i2);
    } else if (ArrayBuffer.isView(value2)) {
      const buffer = new Uint8Array(value2.buffer, value2.byteOffset, value2.byteLength);
      let i2 = buffer.length;
      while (i2)
        hash2 = hash2 * 33 ^ buffer[--i2];
    } else {
      throw new TypeError("value must be a string or TypedArray");
    }
  }
  return (hash2 >>> 0).toString(36);
}
var escape_html_attr_dict = {
  "&": "&amp;",
  '"': "&quot;"
};
var escape_html_attr_regex = new RegExp(
  `[${Object.keys(escape_html_attr_dict).join("")}]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\udc00-\\udfff]`,
  "g"
);
function escape_html_attr(str) {
  const escaped_str = str.replace(escape_html_attr_regex, (match) => {
    if (match.length === 2) {
      return match;
    }
    return escape_html_attr_dict[match] ?? `&#${match.charCodeAt(0)};`;
  });
  return `"${escaped_str}"`;
}
var replacements = {
  "<": "\\u003C",
  "\u2028": "\\u2028",
  "\u2029": "\\u2029"
};
var pattern = new RegExp(`[${Object.keys(replacements).join("")}]`, "g");
function serialize_data(fetched, filter, prerendering = false) {
  const headers = {};
  let cache_control = null;
  let age = null;
  let vary = false;
  for (const [key2, value2] of fetched.response.headers) {
    if (filter(key2, value2)) {
      headers[key2] = value2;
    }
    if (key2 === "cache-control")
      cache_control = value2;
    if (key2 === "age")
      age = value2;
    if (key2 === "vary")
      vary = true;
  }
  const payload = {
    status: fetched.response.status,
    statusText: fetched.response.statusText,
    headers,
    body: fetched.response_body
  };
  const safe_payload = JSON.stringify(payload).replace(pattern, (match) => replacements[match]);
  const attrs = [
    'type="application/json"',
    "data-sveltekit-fetched",
    `data-url=${escape_html_attr(fetched.url)}`
  ];
  if (fetched.request_headers || fetched.request_body) {
    const values = [];
    if (fetched.request_headers) {
      values.push([...new Headers(fetched.request_headers)].join(","));
    }
    if (fetched.request_body) {
      values.push(fetched.request_body);
    }
    attrs.push(`data-hash="${hash(...values)}"`);
  }
  if (!prerendering && fetched.method === "GET" && cache_control && !vary) {
    const match = /s-maxage=(\d+)/g.exec(cache_control) ?? /max-age=(\d+)/g.exec(cache_control);
    if (match) {
      const ttl = +match[1] - +(age ?? "0");
      attrs.push(`data-ttl="${ttl}"`);
    }
  }
  return `<script ${attrs.join(" ")}>${safe_payload}</script>`;
}
var s = JSON.stringify;
var encoder$2 = new TextEncoder();
function sha2562(data) {
  if (!key[0])
    precompute();
  const out = init.slice(0);
  const array2 = encode3(data);
  for (let i2 = 0; i2 < array2.length; i2 += 16) {
    const w2 = array2.subarray(i2, i2 + 16);
    let tmp;
    let a2;
    let b2;
    let out0 = out[0];
    let out1 = out[1];
    let out2 = out[2];
    let out3 = out[3];
    let out4 = out[4];
    let out5 = out[5];
    let out6 = out[6];
    let out7 = out[7];
    for (let i22 = 0; i22 < 64; i22++) {
      if (i22 < 16) {
        tmp = w2[i22];
      } else {
        a2 = w2[i22 + 1 & 15];
        b2 = w2[i22 + 14 & 15];
        tmp = w2[i22 & 15] = (a2 >>> 7 ^ a2 >>> 18 ^ a2 >>> 3 ^ a2 << 25 ^ a2 << 14) + (b2 >>> 17 ^ b2 >>> 19 ^ b2 >>> 10 ^ b2 << 15 ^ b2 << 13) + w2[i22 & 15] + w2[i22 + 9 & 15] | 0;
      }
      tmp = tmp + out7 + (out4 >>> 6 ^ out4 >>> 11 ^ out4 >>> 25 ^ out4 << 26 ^ out4 << 21 ^ out4 << 7) + (out6 ^ out4 & (out5 ^ out6)) + key[i22];
      out7 = out6;
      out6 = out5;
      out5 = out4;
      out4 = out3 + tmp | 0;
      out3 = out2;
      out2 = out1;
      out1 = out0;
      out0 = tmp + (out1 & out2 ^ out3 & (out1 ^ out2)) + (out1 >>> 2 ^ out1 >>> 13 ^ out1 >>> 22 ^ out1 << 30 ^ out1 << 19 ^ out1 << 10) | 0;
    }
    out[0] = out[0] + out0 | 0;
    out[1] = out[1] + out1 | 0;
    out[2] = out[2] + out2 | 0;
    out[3] = out[3] + out3 | 0;
    out[4] = out[4] + out4 | 0;
    out[5] = out[5] + out5 | 0;
    out[6] = out[6] + out6 | 0;
    out[7] = out[7] + out7 | 0;
  }
  const bytes = new Uint8Array(out.buffer);
  reverse_endianness(bytes);
  return base64(bytes);
}
var init = new Uint32Array(8);
var key = new Uint32Array(64);
function precompute() {
  function frac(x2) {
    return (x2 - Math.floor(x2)) * 4294967296;
  }
  let prime = 2;
  for (let i2 = 0; i2 < 64; prime++) {
    let is_prime = true;
    for (let factor = 2; factor * factor <= prime; factor++) {
      if (prime % factor === 0) {
        is_prime = false;
        break;
      }
    }
    if (is_prime) {
      if (i2 < 8) {
        init[i2] = frac(prime ** (1 / 2));
      }
      key[i2] = frac(prime ** (1 / 3));
      i2++;
    }
  }
}
function reverse_endianness(bytes) {
  for (let i2 = 0; i2 < bytes.length; i2 += 4) {
    const a2 = bytes[i2 + 0];
    const b2 = bytes[i2 + 1];
    const c2 = bytes[i2 + 2];
    const d2 = bytes[i2 + 3];
    bytes[i2 + 0] = d2;
    bytes[i2 + 1] = c2;
    bytes[i2 + 2] = b2;
    bytes[i2 + 3] = a2;
  }
}
function encode3(str) {
  const encoded = encoder$2.encode(str);
  const length = encoded.length * 8;
  const size2 = 512 * Math.ceil((length + 65) / 512);
  const bytes = new Uint8Array(size2 / 8);
  bytes.set(encoded);
  bytes[encoded.length] = 128;
  reverse_endianness(bytes);
  const words = new Uint32Array(bytes.buffer);
  words[words.length - 2] = Math.floor(length / 4294967296);
  words[words.length - 1] = length;
  return words;
}
var chars2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("");
function base64(bytes) {
  const l2 = bytes.length;
  let result = "";
  let i2;
  for (i2 = 2; i2 < l2; i2 += 3) {
    result += chars2[bytes[i2 - 2] >> 2];
    result += chars2[(bytes[i2 - 2] & 3) << 4 | bytes[i2 - 1] >> 4];
    result += chars2[(bytes[i2 - 1] & 15) << 2 | bytes[i2] >> 6];
    result += chars2[bytes[i2] & 63];
  }
  if (i2 === l2 + 1) {
    result += chars2[bytes[i2 - 2] >> 2];
    result += chars2[(bytes[i2 - 2] & 3) << 4];
    result += "==";
  }
  if (i2 === l2) {
    result += chars2[bytes[i2 - 2] >> 2];
    result += chars2[(bytes[i2 - 2] & 3) << 4 | bytes[i2 - 1] >> 4];
    result += chars2[(bytes[i2 - 1] & 15) << 2];
    result += "=";
  }
  return result;
}
var array = new Uint8Array(16);
function generate_nonce() {
  crypto.getRandomValues(array);
  return base64(array);
}
var quoted = /* @__PURE__ */ new Set([
  "self",
  "unsafe-eval",
  "unsafe-hashes",
  "unsafe-inline",
  "none",
  "strict-dynamic",
  "report-sample",
  "wasm-unsafe-eval",
  "script"
]);
var crypto_pattern = /^(nonce|sha\d\d\d)-/;
var BaseProvider = class {
  #use_hashes;
  #script_needs_csp;
  #style_needs_csp;
  #directives;
  #script_src;
  #style_src;
  #nonce;
  constructor(use_hashes, directives, nonce) {
    this.#use_hashes = use_hashes;
    this.#directives = directives;
    const d2 = this.#directives;
    this.#script_src = [];
    this.#style_src = [];
    const effective_script_src = d2["script-src"] || d2["default-src"];
    const effective_style_src = d2["style-src"] || d2["default-src"];
    this.#script_needs_csp = !!effective_script_src && effective_script_src.filter((value2) => value2 !== "unsafe-inline").length > 0;
    this.#style_needs_csp = !!effective_style_src && effective_style_src.filter((value2) => value2 !== "unsafe-inline").length > 0;
    this.script_needs_nonce = this.#script_needs_csp && !this.#use_hashes;
    this.style_needs_nonce = this.#style_needs_csp && !this.#use_hashes;
    this.#nonce = nonce;
  }
  add_script(content) {
    if (this.#script_needs_csp) {
      if (this.#use_hashes) {
        this.#script_src.push(`sha256-${sha2562(content)}`);
      } else if (this.#script_src.length === 0) {
        this.#script_src.push(`nonce-${this.#nonce}`);
      }
    }
  }
  add_style(content) {
    if (this.#style_needs_csp) {
      if (this.#use_hashes) {
        this.#style_src.push(`sha256-${sha2562(content)}`);
      } else if (this.#style_src.length === 0) {
        this.#style_src.push(`nonce-${this.#nonce}`);
      }
    }
  }
  get_header(is_meta = false) {
    const header = [];
    const directives = { ...this.#directives };
    if (this.#style_src.length > 0) {
      directives["style-src"] = [
        ...directives["style-src"] || directives["default-src"] || [],
        ...this.#style_src
      ];
    }
    if (this.#script_src.length > 0) {
      directives["script-src"] = [
        ...directives["script-src"] || directives["default-src"] || [],
        ...this.#script_src
      ];
    }
    for (const key2 in directives) {
      if (is_meta && (key2 === "frame-ancestors" || key2 === "report-uri" || key2 === "sandbox")) {
        continue;
      }
      const value2 = directives[key2];
      if (!value2)
        continue;
      const directive = [key2];
      if (Array.isArray(value2)) {
        value2.forEach((value22) => {
          if (quoted.has(value22) || crypto_pattern.test(value22)) {
            directive.push(`'${value22}'`);
          } else {
            directive.push(value22);
          }
        });
      }
      header.push(directive.join(" "));
    }
    return header.join("; ");
  }
};
var CspProvider = class extends BaseProvider {
  get_meta() {
    const content = this.get_header(true);
    if (!content) {
      return;
    }
    return `<meta http-equiv="content-security-policy" content=${escape_html_attr(content)}>`;
  }
};
var CspReportOnlyProvider = class extends BaseProvider {
  constructor(use_hashes, directives, nonce) {
    super(use_hashes, directives, nonce);
    if (Object.values(directives).filter((v2) => !!v2).length > 0) {
      const has_report_to = directives["report-to"]?.length ?? 0 > 0;
      const has_report_uri = directives["report-uri"]?.length ?? 0 > 0;
      if (!has_report_to && !has_report_uri) {
        throw Error(
          "`content-security-policy-report-only` must be specified with either the `report-to` or `report-uri` directives, or both"
        );
      }
    }
  }
};
var Csp = class {
  nonce = generate_nonce();
  csp_provider;
  report_only_provider;
  constructor({ mode, directives, reportOnly }, { prerender: prerender12 }) {
    const use_hashes = mode === "hash" || mode === "auto" && prerender12;
    this.csp_provider = new CspProvider(use_hashes, directives, this.nonce);
    this.report_only_provider = new CspReportOnlyProvider(use_hashes, reportOnly, this.nonce);
  }
  get script_needs_nonce() {
    return this.csp_provider.script_needs_nonce || this.report_only_provider.script_needs_nonce;
  }
  get style_needs_nonce() {
    return this.csp_provider.style_needs_nonce || this.report_only_provider.style_needs_nonce;
  }
  add_script(content) {
    this.csp_provider.add_script(content);
    this.report_only_provider.add_script(content);
  }
  add_style(content) {
    this.csp_provider.add_style(content);
    this.report_only_provider.add_style(content);
  }
};
function defer() {
  let fulfil;
  let reject;
  const promise = new Promise((f2, r2) => {
    fulfil = f2;
    reject = r2;
  });
  return { promise, fulfil, reject };
}
function create_async_iterator() {
  const deferred = [defer()];
  return {
    iterator: {
      [Symbol.asyncIterator]() {
        return {
          next: async () => {
            const next = await deferred[0].promise;
            if (!next.done)
              deferred.shift();
            return next;
          }
        };
      }
    },
    push: (value2) => {
      deferred[deferred.length - 1].fulfil({
        value: value2,
        done: false
      });
      deferred.push(defer());
    },
    done: () => {
      deferred[deferred.length - 1].fulfil({ done: true });
    }
  };
}
var SVELTE_KIT_ASSETS = "/_svelte_kit_assets";
var updated = {
  ...readable(false),
  check: () => false
};
var encoder$1 = new TextEncoder();
async function render_response({
  branch,
  fetched,
  options: options2,
  manifest: manifest2,
  state,
  page_config,
  status,
  error: error2 = null,
  event,
  resolve_opts,
  action_result
}) {
  if (state.prerendering) {
    if (options2.csp.mode === "nonce") {
      throw new Error('Cannot use prerendering if config.kit.csp.mode === "nonce"');
    }
    if (options2.app_template_contains_nonce) {
      throw new Error("Cannot use prerendering if page template contains %sveltekit.nonce%");
    }
  }
  const { client } = manifest2._;
  const modulepreloads = new Set(client.imports);
  const stylesheets28 = new Set(client.stylesheets);
  const fonts28 = new Set(client.fonts);
  const link_header_preloads = /* @__PURE__ */ new Set();
  const inline_styles = /* @__PURE__ */ new Map();
  let rendered;
  const form_value = action_result?.type === "success" || action_result?.type === "failure" ? action_result.data ?? null : null;
  let base$1 = base;
  let assets$1 = assets;
  let base_expression = s(base);
  if (!state.prerendering?.fallback) {
    const segments = event.url.pathname.slice(base.length).split("/").slice(2);
    base$1 = segments.map(() => "..").join("/") || ".";
    base_expression = `new URL(${s(base$1)}, location).pathname.slice(0, -1)`;
    if (!assets || assets[0] === "/" && assets !== SVELTE_KIT_ASSETS) {
      assets$1 = base$1;
    }
  }
  if (page_config.ssr) {
    const props = {
      stores: {
        page: writable(null),
        navigating: writable(null),
        updated
      },
      constructors: await Promise.all(branch.map(({ node }) => node.component())),
      form: form_value
    };
    let data2 = {};
    for (let i2 = 0; i2 < branch.length; i2 += 1) {
      data2 = { ...data2, ...branch[i2].data };
      props[`data_${i2}`] = data2;
    }
    props.page = {
      error: error2,
      params: event.params,
      route: event.route,
      status,
      url: event.url,
      data: data2,
      form: form_value
    };
    {
      try {
        rendered = options2.root.render(props);
      } finally {
        reset();
      }
    }
    for (const { node } of branch) {
      for (const url of node.imports)
        modulepreloads.add(url);
      for (const url of node.stylesheets)
        stylesheets28.add(url);
      for (const url of node.fonts)
        fonts28.add(url);
      if (node.inline_styles) {
        Object.entries(await node.inline_styles()).forEach(([k2, v2]) => inline_styles.set(k2, v2));
      }
    }
  } else {
    rendered = { head: "", html: "", css: { code: "", map: null } };
  }
  let head = "";
  let body = rendered.html;
  const csp = new Csp(options2.csp, {
    prerender: !!state.prerendering
  });
  const prefixed = (path) => {
    if (path.startsWith("/")) {
      return base + path;
    }
    return `${assets$1}/${path}`;
  };
  if (inline_styles.size > 0) {
    const content = Array.from(inline_styles.values()).join("\n");
    const attributes = [];
    if (csp.style_needs_nonce)
      attributes.push(` nonce="${csp.nonce}"`);
    csp.add_style(content);
    head += `
	<style${attributes.join("")}>${content}</style>`;
  }
  for (const dep of stylesheets28) {
    const path = prefixed(dep);
    const attributes = ['rel="stylesheet"'];
    if (inline_styles.has(dep)) {
      attributes.push("disabled", 'media="(max-width: 0)"');
    } else {
      if (resolve_opts.preload({ type: "css", path })) {
        const preload_atts = ['rel="preload"', 'as="style"'];
        link_header_preloads.add(`<${encodeURI(path)}>; ${preload_atts.join(";")}; nopush`);
      }
    }
    head += `
		<link href="${path}" ${attributes.join(" ")}>`;
  }
  for (const dep of fonts28) {
    const path = prefixed(dep);
    if (resolve_opts.preload({ type: "font", path })) {
      const ext = dep.slice(dep.lastIndexOf(".") + 1);
      const attributes = [
        'rel="preload"',
        'as="font"',
        `type="font/${ext}"`,
        `href="${path}"`,
        "crossorigin"
      ];
      head += `
		<link ${attributes.join(" ")}>`;
    }
  }
  const global = `__sveltekit_${options2.version_hash}`;
  const { data, chunks } = get_data(
    event,
    options2,
    branch.map((b2) => b2.server_data),
    global
  );
  if (page_config.ssr && page_config.csr) {
    body += `
			${fetched.map(
      (item) => serialize_data(item, resolve_opts.filterSerializedResponseHeaders, !!state.prerendering)
    ).join("\n			")}`;
  }
  if (page_config.csr) {
    const included_modulepreloads = Array.from(modulepreloads, (dep) => prefixed(dep)).filter(
      (path) => resolve_opts.preload({ type: "js", path })
    );
    for (const path of included_modulepreloads) {
      link_header_preloads.add(`<${encodeURI(path)}>; rel="modulepreload"; nopush`);
      if (options2.preload_strategy !== "modulepreload") {
        head += `
		<link rel="preload" as="script" crossorigin="anonymous" href="${path}">`;
      } else if (state.prerendering) {
        head += `
		<link rel="modulepreload" href="${path}">`;
      }
    }
    const blocks = [];
    const properties = [
      assets && `assets: ${s(assets)}`,
      `base: ${base_expression}`,
      `env: ${s(public_env)}`
    ].filter(Boolean);
    if (chunks) {
      blocks.push("const deferred = new Map();");
      properties.push(`defer: (id) => new Promise((fulfil, reject) => {
							deferred.set(id, { fulfil, reject });
						})`);
      properties.push(`resolve: ({ id, data, error }) => {
							const { fulfil, reject } = deferred.get(id);
							deferred.delete(id);

							if (error) reject(error);
							else fulfil(data);
						}`);
    }
    blocks.push(`${global} = {
						${properties.join(",\n						")}
					};`);
    const args = ["app", "element"];
    blocks.push("const element = document.currentScript.parentElement;");
    if (page_config.ssr) {
      const serialized = { form: "null", error: "null" };
      blocks.push(`const data = ${data};`);
      if (form_value) {
        serialized.form = uneval_action_response(
          form_value,
          event.route.id
        );
      }
      if (error2) {
        serialized.error = uneval(error2);
      }
      const hydrate = [
        `node_ids: [${branch.map(({ node }) => node.index).join(", ")}]`,
        "data",
        `form: ${serialized.form}`,
        `error: ${serialized.error}`
      ];
      if (status !== 200) {
        hydrate.push(`status: ${status}`);
      }
      if (options2.embedded) {
        hydrate.push(`params: ${uneval(event.params)}`, `route: ${s(event.route)}`);
      }
      args.push(`{
							${hydrate.join(",\n							")}
						}`);
    }
    blocks.push(`Promise.all([
						import(${s(prefixed(client.start))}),
						import(${s(prefixed(client.app))})
					]).then(([kit, app]) => {
						kit.start(${args.join(", ")});
					});`);
    if (options2.service_worker) {
      const opts = "";
      blocks.push(`if ('serviceWorker' in navigator) {
						addEventListener('load', function () {
							navigator.serviceWorker.register('${prefixed("service-worker.js")}'${opts});
						});
					}`);
    }
    const init_app = `
				{
					${blocks.join("\n\n					")}
				}
			`;
    csp.add_script(init_app);
    body += `
			<script${csp.script_needs_nonce ? ` nonce="${csp.nonce}"` : ""}>${init_app}</script>
		`;
  }
  const headers = new Headers({
    "x-sveltekit-page": "true",
    "content-type": "text/html"
  });
  if (state.prerendering) {
    const http_equiv = [];
    const csp_headers = csp.csp_provider.get_meta();
    if (csp_headers) {
      http_equiv.push(csp_headers);
    }
    if (state.prerendering.cache) {
      http_equiv.push(`<meta http-equiv="cache-control" content="${state.prerendering.cache}">`);
    }
    if (http_equiv.length > 0) {
      head = http_equiv.join("\n") + head;
    }
  } else {
    const csp_header = csp.csp_provider.get_header();
    if (csp_header) {
      headers.set("content-security-policy", csp_header);
    }
    const report_only_header = csp.report_only_provider.get_header();
    if (report_only_header) {
      headers.set("content-security-policy-report-only", report_only_header);
    }
    if (link_header_preloads.size) {
      headers.set("link", Array.from(link_header_preloads).join(", "));
    }
  }
  head += rendered.head;
  const html = options2.templates.app({
    head,
    body,
    assets: assets$1,
    nonce: csp.nonce,
    env: public_env
  });
  const transformed = await resolve_opts.transformPageChunk({
    html,
    done: true
  }) || "";
  if (!chunks) {
    headers.set("etag", `"${hash(transformed)}"`);
  }
  return !chunks ? text(transformed, {
    status,
    headers
  }) : new Response(
    new ReadableStream({
      async start(controller) {
        controller.enqueue(encoder$1.encode(transformed + "\n"));
        for await (const chunk of chunks) {
          controller.enqueue(encoder$1.encode(chunk));
        }
        controller.close();
      },
      type: "bytes"
    }),
    {
      headers: {
        "content-type": "text/html"
      }
    }
  );
}
function get_data(event, options2, nodes, global) {
  let promise_id = 1;
  let count = 0;
  const { iterator, push, done } = create_async_iterator();
  function replacer(thing) {
    if (typeof thing?.then === "function") {
      const id = promise_id++;
      count += 1;
      thing.then(
        (data) => ({ data })
      ).catch(
        async (error2) => ({
          error: await handle_error_and_jsonify(event, options2, error2)
        })
      ).then(
        async ({ data, error: error2 }) => {
          count -= 1;
          let str;
          try {
            str = uneval({ id, data, error: error2 }, replacer);
          } catch (e2) {
            error2 = await handle_error_and_jsonify(
              event,
              options2,
              new Error(`Failed to serialize promise while rendering ${event.route.id}`)
            );
            data = void 0;
            str = uneval({ id, data, error: error2 }, replacer);
          }
          push(`<script>${global}.resolve(${str})</script>
`);
          if (count === 0)
            done();
        }
      );
      return `${global}.defer(${id})`;
    }
  }
  try {
    const strings = nodes.map((node) => {
      if (!node)
        return "null";
      return `{"type":"data","data":${uneval(node.data, replacer)},${stringify_uses(node)}${node.slash ? `,"slash":${JSON.stringify(node.slash)}` : ""}}`;
    });
    return {
      data: `[${strings.join(",")}]`,
      chunks: count > 0 ? iterator : null
    };
  } catch (e2) {
    throw new Error(clarify_devalue_error(
      event,
      e2
    ));
  }
}
function get_option(nodes, option) {
  return nodes.reduce(
    (value2, node) => {
      return node?.universal?.[option] ?? node?.server?.[option] ?? value2;
    },
    void 0
  );
}
async function respond_with_error({
  event,
  options: options2,
  manifest: manifest2,
  state,
  status,
  error: error2,
  resolve_opts
}) {
  const fetched = [];
  try {
    const branch = [];
    const default_layout = await manifest2._.nodes[0]();
    const ssr7 = get_option([default_layout], "ssr") ?? true;
    const csr = get_option([default_layout], "csr") ?? true;
    if (ssr7) {
      state.error = true;
      const server_data_promise = load_server_data({
        event,
        state,
        node: default_layout,
        parent: async () => ({}),
        track_server_fetches: options2.track_server_fetches
      });
      const server_data = await server_data_promise;
      const data = await load_data({
        event,
        fetched,
        node: default_layout,
        parent: async () => ({}),
        resolve_opts,
        server_data_promise,
        state,
        csr
      });
      branch.push(
        {
          node: default_layout,
          server_data,
          data
        },
        {
          node: await manifest2._.nodes[1](),
          data: null,
          server_data: null
        }
      );
    }
    return await render_response({
      options: options2,
      manifest: manifest2,
      state,
      page_config: {
        ssr: ssr7,
        csr: get_option([default_layout], "csr") ?? true
      },
      status,
      error: await handle_error_and_jsonify(event, options2, error2),
      branch,
      fetched,
      event,
      resolve_opts
    });
  } catch (e2) {
    if (e2 instanceof Redirect) {
      return redirect_response(e2.status, e2.location);
    }
    return static_error_page(
      options2,
      e2 instanceof HttpError ? e2.status : 500,
      (await handle_error_and_jsonify(event, options2, e2)).message
    );
  }
}
function once(fn) {
  let done = false;
  let result;
  return () => {
    if (done)
      return result;
    done = true;
    return result = fn();
  };
}
var encoder3 = new TextEncoder();
async function render_data(event, route, options2, manifest2, state, invalidated_data_nodes, trailing_slash) {
  if (!route.page) {
    return new Response(void 0, {
      status: 404
    });
  }
  try {
    const node_ids = [...route.page.layouts, route.page.leaf];
    const invalidated = invalidated_data_nodes ?? node_ids.map(() => true);
    let aborted = false;
    const url = new URL(event.url);
    url.pathname = normalize_path(url.pathname, trailing_slash);
    const new_event = { ...event, url };
    const functions = node_ids.map((n2, i2) => {
      return once(async () => {
        try {
          if (aborted) {
            return {
              type: "skip"
            };
          }
          const node = n2 == void 0 ? n2 : await manifest2._.nodes[n2]();
          return load_server_data({
            event: new_event,
            state,
            node,
            parent: async () => {
              const data2 = {};
              for (let j2 = 0; j2 < i2; j2 += 1) {
                const parent = await functions[j2]();
                if (parent) {
                  Object.assign(data2, parent.data);
                }
              }
              return data2;
            },
            track_server_fetches: options2.track_server_fetches
          });
        } catch (e2) {
          aborted = true;
          throw e2;
        }
      });
    });
    const promises = functions.map(async (fn, i2) => {
      if (!invalidated[i2]) {
        return {
          type: "skip"
        };
      }
      return fn();
    });
    let length = promises.length;
    const nodes = await Promise.all(
      promises.map(
        (p2, i2) => p2.catch(async (error2) => {
          if (error2 instanceof Redirect) {
            throw error2;
          }
          length = Math.min(length, i2 + 1);
          return {
            type: "error",
            error: await handle_error_and_jsonify(event, options2, error2),
            status: error2 instanceof HttpError ? error2.status : void 0
          };
        })
      )
    );
    const { data, chunks } = get_data_json(event, options2, nodes);
    if (!chunks) {
      return json_response(data);
    }
    return new Response(
      new ReadableStream({
        async start(controller) {
          controller.enqueue(encoder3.encode(data));
          for await (const chunk of chunks) {
            controller.enqueue(encoder3.encode(chunk));
          }
          controller.close();
        },
        type: "bytes"
      }),
      {
        headers: {
          "content-type": "text/sveltekit-data",
          "cache-control": "private, no-store"
        }
      }
    );
  } catch (e2) {
    const error2 = normalize_error(e2);
    if (error2 instanceof Redirect) {
      return redirect_json_response(error2);
    } else {
      return json_response(await handle_error_and_jsonify(event, options2, error2), 500);
    }
  }
}
function json_response(json2, status = 200) {
  return text(typeof json2 === "string" ? json2 : JSON.stringify(json2), {
    status,
    headers: {
      "content-type": "application/json",
      "cache-control": "private, no-store"
    }
  });
}
function redirect_json_response(redirect2) {
  return json_response({
    type: "redirect",
    location: redirect2.location
  });
}
function get_data_json(event, options2, nodes) {
  let promise_id = 1;
  let count = 0;
  const { iterator, push, done } = create_async_iterator();
  const reducers = {
    Promise: (thing) => {
      if (typeof thing?.then === "function") {
        const id = promise_id++;
        count += 1;
        let key2 = "data";
        thing.catch(
          async (e2) => {
            key2 = "error";
            return handle_error_and_jsonify(
              event,
              options2,
              e2
            );
          }
        ).then(
          async (value2) => {
            let str;
            try {
              str = stringify(value2, reducers);
            } catch (e2) {
              const error2 = await handle_error_and_jsonify(
                event,
                options2,
                new Error(`Failed to serialize promise while rendering ${event.route.id}`)
              );
              key2 = "error";
              str = stringify(error2, reducers);
            }
            count -= 1;
            push(`{"type":"chunk","id":${id},"${key2}":${str}}
`);
            if (count === 0)
              done();
          }
        );
        return id;
      }
    }
  };
  try {
    const strings = nodes.map((node) => {
      if (!node)
        return "null";
      if (node.type === "error" || node.type === "skip") {
        return JSON.stringify(node);
      }
      return `{"type":"data","data":${stringify(node.data, reducers)},${stringify_uses(
        node
      )}${node.slash ? `,"slash":${JSON.stringify(node.slash)}` : ""}}`;
    });
    return {
      data: `{"type":"data","nodes":[${strings.join(",")}]}
`,
      chunks: count > 0 ? iterator : null
    };
  } catch (e2) {
    throw new Error(clarify_devalue_error(
      event,
      e2
    ));
  }
}
var MAX_DEPTH = 10;
async function render_page(event, page2, options2, manifest2, state, resolve_opts) {
  if (state.depth > MAX_DEPTH) {
    return text(`Not found: ${event.url.pathname}`, {
      status: 404
    });
  }
  if (is_action_json_request(event)) {
    const node = await manifest2._.nodes[page2.leaf]();
    return handle_action_json_request(event, options2, node?.server);
  }
  try {
    const nodes = await Promise.all([
      ...page2.layouts.map((n2) => n2 == void 0 ? n2 : manifest2._.nodes[n2]()),
      manifest2._.nodes[page2.leaf]()
    ]);
    const leaf_node = nodes.at(-1);
    let status = 200;
    let action_result = void 0;
    if (is_action_request(event)) {
      action_result = await handle_action_request(event, leaf_node.server);
      if (action_result?.type === "redirect") {
        return redirect_response(action_result.status, action_result.location);
      }
      if (action_result?.type === "error") {
        const error2 = action_result.error;
        status = error2 instanceof HttpError ? error2.status : 500;
      }
      if (action_result?.type === "failure") {
        status = action_result.status;
      }
    }
    const should_prerender_data = nodes.some((node) => node?.server);
    const data_pathname = add_data_suffix(event.url.pathname);
    const should_prerender = get_option(nodes, "prerender") ?? false;
    if (should_prerender) {
      const mod = leaf_node.server;
      if (mod?.actions) {
        throw new Error("Cannot prerender pages with actions");
      }
    } else if (state.prerendering) {
      return new Response(void 0, {
        status: 204
      });
    }
    state.prerender_default = should_prerender;
    const fetched = [];
    if (get_option(nodes, "ssr") === false) {
      return await render_response({
        branch: [],
        fetched,
        page_config: {
          ssr: false,
          csr: get_option(nodes, "csr") ?? true
        },
        status,
        error: null,
        event,
        options: options2,
        manifest: manifest2,
        state,
        resolve_opts
      });
    }
    const branch = [];
    let load_error = null;
    const server_promises = nodes.map((node, i2) => {
      if (load_error) {
        throw load_error;
      }
      return Promise.resolve().then(async () => {
        try {
          if (node === leaf_node && action_result?.type === "error") {
            throw action_result.error;
          }
          return await load_server_data({
            event,
            state,
            node,
            parent: async () => {
              const data = {};
              for (let j2 = 0; j2 < i2; j2 += 1) {
                const parent = await server_promises[j2];
                if (parent)
                  Object.assign(data, await parent.data);
              }
              return data;
            },
            track_server_fetches: options2.track_server_fetches
          });
        } catch (e2) {
          load_error = e2;
          throw load_error;
        }
      });
    });
    const csr = get_option(nodes, "csr") ?? true;
    const load_promises = nodes.map((node, i2) => {
      if (load_error)
        throw load_error;
      return Promise.resolve().then(async () => {
        try {
          return await load_data({
            event,
            fetched,
            node,
            parent: async () => {
              const data = {};
              for (let j2 = 0; j2 < i2; j2 += 1) {
                Object.assign(data, await load_promises[j2]);
              }
              return data;
            },
            resolve_opts,
            server_data_promise: server_promises[i2],
            state,
            csr
          });
        } catch (e2) {
          load_error = e2;
          throw load_error;
        }
      });
    });
    for (const p2 of server_promises)
      p2.catch(() => {
      });
    for (const p2 of load_promises)
      p2.catch(() => {
      });
    for (let i2 = 0; i2 < nodes.length; i2 += 1) {
      const node = nodes[i2];
      if (node) {
        try {
          const server_data = await server_promises[i2];
          const data = await load_promises[i2];
          branch.push({ node, server_data, data });
        } catch (e2) {
          const err = normalize_error(e2);
          if (err instanceof Redirect) {
            if (state.prerendering && should_prerender_data) {
              const body = JSON.stringify({
                type: "redirect",
                location: err.location
              });
              state.prerendering.dependencies.set(data_pathname, {
                response: text(body),
                body
              });
            }
            return redirect_response(err.status, err.location);
          }
          const status2 = err instanceof HttpError ? err.status : 500;
          const error2 = await handle_error_and_jsonify(event, options2, err);
          while (i2--) {
            if (page2.errors[i2]) {
              const index28 = page2.errors[i2];
              const node2 = await manifest2._.nodes[index28]();
              let j2 = i2;
              while (!branch[j2])
                j2 -= 1;
              return await render_response({
                event,
                options: options2,
                manifest: manifest2,
                state,
                resolve_opts,
                page_config: { ssr: true, csr: true },
                status: status2,
                error: error2,
                branch: compact(branch.slice(0, j2 + 1)).concat({
                  node: node2,
                  data: null,
                  server_data: null
                }),
                fetched
              });
            }
          }
          return static_error_page(options2, status2, error2.message);
        }
      } else {
        branch.push(null);
      }
    }
    if (state.prerendering && should_prerender_data) {
      let { data, chunks } = get_data_json(
        event,
        options2,
        branch.map((node) => node?.server_data)
      );
      if (chunks) {
        for await (const chunk of chunks) {
          data += chunk;
        }
      }
      state.prerendering.dependencies.set(data_pathname, {
        response: text(data),
        body: data
      });
    }
    return await render_response({
      event,
      options: options2,
      manifest: manifest2,
      state,
      resolve_opts,
      page_config: {
        csr: get_option(nodes, "csr") ?? true,
        ssr: true
      },
      status,
      error: null,
      branch: compact(branch),
      action_result,
      fetched
    });
  } catch (e2) {
    return await respond_with_error({
      event,
      options: options2,
      manifest: manifest2,
      state,
      status: 500,
      error: e2,
      resolve_opts
    });
  }
}
function get_cookies(request, url, trailing_slash) {
  const header = request.headers.get("cookie") ?? "";
  const initial_cookies = (0, import_cookie3.parse)(header, { decode: (value2) => value2 });
  const normalized_url = normalize_path(url.pathname, trailing_slash);
  const default_path = normalized_url.split("/").slice(0, -1).join("/") || "/";
  const new_cookies = {};
  const defaults = {
    httpOnly: true,
    sameSite: "lax",
    secure: url.hostname === "localhost" && url.protocol === "http:" ? false : true
  };
  const cookies = {
    get(name, opts) {
      const c2 = new_cookies[name];
      if (c2 && domain_matches(url.hostname, c2.options.domain) && path_matches(url.pathname, c2.options.path)) {
        return c2.value;
      }
      const decoder2 = opts?.decode || decodeURIComponent;
      const req_cookies = (0, import_cookie3.parse)(header, { decode: decoder2 });
      const cookie = req_cookies[name];
      return cookie;
    },
    getAll(opts) {
      const decoder2 = opts?.decode || decodeURIComponent;
      const cookies2 = (0, import_cookie3.parse)(header, { decode: decoder2 });
      for (const c2 of Object.values(new_cookies)) {
        if (domain_matches(url.hostname, c2.options.domain) && path_matches(url.pathname, c2.options.path)) {
          cookies2[c2.name] = c2.value;
        }
      }
      return Object.entries(cookies2).map(([name, value2]) => ({ name, value: value2 }));
    },
    set(name, value2, opts = {}) {
      set_internal(name, value2, { ...defaults, ...opts });
    },
    delete(name, opts = {}) {
      cookies.set(name, "", {
        ...opts,
        maxAge: 0
      });
    },
    serialize(name, value2, opts) {
      return (0, import_cookie3.serialize)(name, value2, {
        ...defaults,
        ...opts
      });
    }
  };
  function get_cookie_header(destination, header2) {
    const combined_cookies = {
      ...initial_cookies
    };
    for (const key2 in new_cookies) {
      const cookie = new_cookies[key2];
      if (!domain_matches(destination.hostname, cookie.options.domain))
        continue;
      if (!path_matches(destination.pathname, cookie.options.path))
        continue;
      const encoder22 = cookie.options.encode || encodeURIComponent;
      combined_cookies[cookie.name] = encoder22(cookie.value);
    }
    if (header2) {
      const parsed = (0, import_cookie3.parse)(header2, { decode: (value2) => value2 });
      for (const name in parsed) {
        combined_cookies[name] = parsed[name];
      }
    }
    return Object.entries(combined_cookies).map(([name, value2]) => `${name}=${value2}`).join("; ");
  }
  function set_internal(name, value2, opts) {
    const path = opts.path ?? default_path;
    new_cookies[name] = {
      name,
      value: value2,
      options: {
        ...opts,
        path
      }
    };
  }
  return { cookies, new_cookies, get_cookie_header, set_internal };
}
function domain_matches(hostname, constraint) {
  if (!constraint)
    return true;
  const normalized = constraint[0] === "." ? constraint.slice(1) : constraint;
  if (hostname === normalized)
    return true;
  return hostname.endsWith("." + normalized);
}
function path_matches(path, constraint) {
  if (!constraint)
    return true;
  const normalized = constraint.endsWith("/") ? constraint.slice(0, -1) : constraint;
  if (path === normalized)
    return true;
  return path.startsWith(normalized + "/");
}
function add_cookies_to_headers(headers, cookies) {
  for (const new_cookie of cookies) {
    const { name, value: value2, options: options2 } = new_cookie;
    headers.append("set-cookie", (0, import_cookie3.serialize)(name, value2, options2));
  }
}
function create_fetch({ event, options: options2, manifest: manifest2, state, get_cookie_header, set_internal }) {
  return async (info, init2) => {
    const original_request = normalize_fetch_input(info, init2, event.url);
    let mode = (info instanceof Request ? info.mode : init2?.mode) ?? "cors";
    let credentials = (info instanceof Request ? info.credentials : init2?.credentials) ?? "same-origin";
    return await options2.hooks.handleFetch({
      event,
      request: original_request,
      fetch: async (info2, init3) => {
        const request = normalize_fetch_input(info2, init3, event.url);
        const url = new URL(request.url);
        if (!request.headers.has("origin")) {
          request.headers.set("origin", event.url.origin);
        }
        if (info2 !== original_request) {
          mode = (info2 instanceof Request ? info2.mode : init3?.mode) ?? "cors";
          credentials = (info2 instanceof Request ? info2.credentials : init3?.credentials) ?? "same-origin";
        }
        if ((request.method === "GET" || request.method === "HEAD") && (mode === "no-cors" && url.origin !== event.url.origin || url.origin === event.url.origin)) {
          request.headers.delete("origin");
        }
        if (url.origin !== event.url.origin) {
          if (`.${url.hostname}`.endsWith(`.${event.url.hostname}`) && credentials !== "omit") {
            const cookie = get_cookie_header(url, request.headers.get("cookie"));
            if (cookie)
              request.headers.set("cookie", cookie);
          }
          return fetch(request);
        }
        const prefix = assets || base;
        const decoded = decodeURIComponent(url.pathname);
        const filename = (decoded.startsWith(prefix) ? decoded.slice(prefix.length) : decoded).slice(1);
        const filename_html = `${filename}/index.html`;
        const is_asset = manifest2.assets.has(filename);
        const is_asset_html = manifest2.assets.has(filename_html);
        if (is_asset || is_asset_html) {
          const file = is_asset ? filename : filename_html;
          if (state.read) {
            const type = is_asset ? manifest2.mimeTypes[filename.slice(filename.lastIndexOf("."))] : "text/html";
            return new Response(state.read(file), {
              headers: type ? { "content-type": type } : {}
            });
          }
          return await fetch(request);
        }
        if (credentials !== "omit") {
          const cookie = get_cookie_header(url, request.headers.get("cookie"));
          if (cookie) {
            request.headers.set("cookie", cookie);
          }
          const authorization = event.request.headers.get("authorization");
          if (authorization && !request.headers.has("authorization")) {
            request.headers.set("authorization", authorization);
          }
        }
        if (!request.headers.has("accept")) {
          request.headers.set("accept", "*/*");
        }
        if (!request.headers.has("accept-language")) {
          request.headers.set(
            "accept-language",
            event.request.headers.get("accept-language")
          );
        }
        const response = await respond(request, options2, manifest2, {
          ...state,
          depth: state.depth + 1
        });
        const set_cookie = response.headers.get("set-cookie");
        if (set_cookie) {
          for (const str of set_cookie_parser.splitCookiesString(set_cookie)) {
            const { name, value: value2, ...options3 } = set_cookie_parser.parseString(str);
            set_internal(
              name,
              value2,
              options3
            );
          }
        }
        return response;
      }
    });
  };
}
function normalize_fetch_input(info, init2, url) {
  if (info instanceof Request) {
    return info;
  }
  return new Request(typeof info === "string" ? new URL(info, url) : info, init2);
}
function validator(expected) {
  function validate(module, file) {
    if (!module)
      return;
    for (const key2 in module) {
      if (key2[0] === "_" || expected.has(key2))
        continue;
      const values = [...expected.values()];
      const hint = hint_for_supported_files(key2, file?.slice(file.lastIndexOf("."))) ?? `valid exports are ${values.join(", ")}, or anything with a '_' prefix`;
      throw new Error(`Invalid export '${key2}'${file ? ` in ${file}` : ""} (${hint})`);
    }
  }
  return validate;
}
function hint_for_supported_files(key2, ext = ".js") {
  const supported_files = [];
  if (valid_layout_exports.has(key2)) {
    supported_files.push(`+layout${ext}`);
  }
  if (valid_page_exports.has(key2)) {
    supported_files.push(`+page${ext}`);
  }
  if (valid_layout_server_exports.has(key2)) {
    supported_files.push(`+layout.server${ext}`);
  }
  if (valid_page_server_exports.has(key2)) {
    supported_files.push(`+page.server${ext}`);
  }
  if (valid_server_exports.has(key2)) {
    supported_files.push(`+server${ext}`);
  }
  if (supported_files.length > 0) {
    return `'${key2}' is a valid export in ${supported_files.slice(0, -1).join(", ")}${supported_files.length > 1 ? " or " : ""}${supported_files.at(-1)}`;
  }
}
var valid_layout_exports = /* @__PURE__ */ new Set([
  "load",
  "prerender",
  "csr",
  "ssr",
  "trailingSlash",
  "config"
]);
var valid_page_exports = /* @__PURE__ */ new Set([...valid_layout_exports, "entries"]);
var valid_layout_server_exports = /* @__PURE__ */ new Set([...valid_layout_exports]);
var valid_page_server_exports = /* @__PURE__ */ new Set([...valid_layout_server_exports, "actions", "entries"]);
var valid_server_exports = /* @__PURE__ */ new Set([
  "GET",
  "POST",
  "PATCH",
  "PUT",
  "DELETE",
  "OPTIONS",
  "prerender",
  "trailingSlash",
  "config",
  "entries"
]);
var validate_layout_exports = validator(valid_layout_exports);
var validate_page_exports = validator(valid_page_exports);
var validate_layout_server_exports = validator(valid_layout_server_exports);
var validate_page_server_exports = validator(valid_page_server_exports);
var validate_server_exports = validator(valid_server_exports);
var default_transform = ({ html }) => html;
var default_filter = () => false;
var default_preload = ({ type }) => type === "js" || type === "css";
async function respond(request, options2, manifest2, state) {
  const url = new URL(request.url);
  if (options2.csrf_check_origin) {
    const forbidden = is_form_content_type(request) && (request.method === "POST" || request.method === "PUT" || request.method === "PATCH" || request.method === "DELETE") && request.headers.get("origin") !== url.origin;
    if (forbidden) {
      const csrf_error = error(403, `Cross-site ${request.method} form submissions are forbidden`);
      if (request.headers.get("accept") === "application/json") {
        return json(csrf_error.body, { status: csrf_error.status });
      }
      return text(csrf_error.body.message, { status: csrf_error.status });
    }
  }
  let decoded;
  try {
    decoded = decode_pathname(url.pathname);
  } catch {
    return text("Malformed URI", { status: 400 });
  }
  let route = null;
  let params = {};
  if (base && !state.prerendering?.fallback) {
    if (!decoded.startsWith(base)) {
      return text("Not found", { status: 404 });
    }
    decoded = decoded.slice(base.length) || "/";
  }
  const is_data_request = has_data_suffix(decoded);
  let invalidated_data_nodes;
  if (is_data_request) {
    decoded = strip_data_suffix(decoded) || "/";
    url.pathname = strip_data_suffix(url.pathname) || "/";
    invalidated_data_nodes = url.searchParams.get(INVALIDATED_PARAM)?.split("").map((node) => node === "1");
    url.searchParams.delete(INVALIDATED_PARAM);
  }
  if (!state.prerendering?.fallback) {
    const matchers = await manifest2._.matchers();
    for (const candidate of manifest2._.routes) {
      const match = candidate.pattern.exec(decoded);
      if (!match)
        continue;
      const matched = exec(match, candidate.params, matchers);
      if (matched) {
        route = candidate;
        params = decode_params(matched);
        break;
      }
    }
  }
  let trailing_slash = void 0;
  const headers = {};
  let cookies_to_add = {};
  const event = {
    cookies: null,
    fetch: null,
    getClientAddress: state.getClientAddress || (() => {
      throw new Error(
        `${"@sveltejs/adapter-cloudflare-workers"} does not specify getClientAddress. Please raise an issue`
      );
    }),
    locals: {},
    params,
    platform: state.platform,
    request,
    route: { id: route?.id ?? null },
    setHeaders: (new_headers) => {
      for (const key2 in new_headers) {
        const lower = key2.toLowerCase();
        const value2 = new_headers[key2];
        if (lower === "set-cookie") {
          throw new Error(
            "Use `event.cookies.set(name, value, options)` instead of `event.setHeaders` to set cookies"
          );
        } else if (lower in headers) {
          throw new Error(`"${key2}" header is already set`);
        } else {
          headers[lower] = value2;
          if (state.prerendering && lower === "cache-control") {
            state.prerendering.cache = value2;
          }
        }
      }
    },
    url,
    isDataRequest: is_data_request
  };
  let resolve_opts = {
    transformPageChunk: default_transform,
    filterSerializedResponseHeaders: default_filter,
    preload: default_preload
  };
  try {
    if (route) {
      if (url.pathname === base || url.pathname === base + "/") {
        trailing_slash = "always";
      } else if (route.page) {
        const nodes = await Promise.all([
          ...route.page.layouts.map((n2) => n2 == void 0 ? n2 : manifest2._.nodes[n2]()),
          manifest2._.nodes[route.page.leaf]()
        ]);
        if (DEV)
          ;
        trailing_slash = get_option(nodes, "trailingSlash");
      } else if (route.endpoint) {
        const node = await route.endpoint();
        trailing_slash = node.trailingSlash;
        if (DEV)
          ;
      }
      if (!is_data_request) {
        const normalized = normalize_path(url.pathname, trailing_slash ?? "never");
        if (normalized !== url.pathname && !state.prerendering?.fallback) {
          return new Response(void 0, {
            status: 308,
            headers: {
              "x-sveltekit-normalize": "1",
              location: (normalized.startsWith("//") ? url.origin + normalized : normalized) + (url.search === "?" ? "" : url.search)
            }
          });
        }
      }
    }
    const { cookies, new_cookies, get_cookie_header, set_internal } = get_cookies(
      request,
      url,
      trailing_slash ?? "never"
    );
    cookies_to_add = new_cookies;
    event.cookies = cookies;
    event.fetch = create_fetch({
      event,
      options: options2,
      manifest: manifest2,
      state,
      get_cookie_header,
      set_internal
    });
    if (state.prerendering && !state.prerendering.fallback)
      disable_search(url);
    const response = await options2.hooks.handle({
      event,
      resolve: (event2, opts) => resolve(event2, opts).then((response2) => {
        for (const key2 in headers) {
          const value2 = headers[key2];
          response2.headers.set(
            key2,
            value2
          );
        }
        add_cookies_to_headers(response2.headers, Object.values(cookies_to_add));
        if (state.prerendering && event2.route.id !== null) {
          response2.headers.set("x-sveltekit-routeid", encodeURI(event2.route.id));
        }
        return response2;
      })
    });
    if (response.status === 200 && response.headers.has("etag")) {
      let if_none_match_value = request.headers.get("if-none-match");
      if (if_none_match_value?.startsWith('W/"')) {
        if_none_match_value = if_none_match_value.substring(2);
      }
      const etag = response.headers.get("etag");
      if (if_none_match_value === etag) {
        const headers2 = new Headers({ etag });
        for (const key2 of [
          "cache-control",
          "content-location",
          "date",
          "expires",
          "vary",
          "set-cookie"
        ]) {
          const value2 = response.headers.get(key2);
          if (value2)
            headers2.set(key2, value2);
        }
        return new Response(void 0, {
          status: 304,
          headers: headers2
        });
      }
    }
    if (is_data_request && response.status >= 300 && response.status <= 308) {
      const location2 = response.headers.get("location");
      if (location2) {
        return redirect_json_response(new Redirect(
          response.status,
          location2
        ));
      }
    }
    return response;
  } catch (e2) {
    if (e2 instanceof Redirect) {
      const response = is_data_request ? redirect_json_response(e2) : route?.page && is_action_json_request(event) ? action_json_redirect(e2) : redirect_response(e2.status, e2.location);
      add_cookies_to_headers(response.headers, Object.values(cookies_to_add));
      return response;
    }
    return await handle_fatal_error(event, options2, e2);
  }
  async function resolve(event2, opts) {
    try {
      if (opts) {
        if ("ssr" in opts) {
          throw new Error(
            "ssr has been removed, set it in the appropriate +layout.js instead. See the PR for more information: https://github.com/sveltejs/kit/pull/6197"
          );
        }
        resolve_opts = {
          transformPageChunk: opts.transformPageChunk || default_transform,
          filterSerializedResponseHeaders: opts.filterSerializedResponseHeaders || default_filter,
          preload: opts.preload || default_preload
        };
      }
      if (state.prerendering?.fallback) {
        return await render_response({
          event: event2,
          options: options2,
          manifest: manifest2,
          state,
          page_config: { ssr: false, csr: true },
          status: 200,
          error: null,
          branch: [],
          fetched: [],
          resolve_opts
        });
      }
      if (route) {
        let response;
        if (is_data_request) {
          response = await render_data(
            event2,
            route,
            options2,
            manifest2,
            state,
            invalidated_data_nodes,
            trailing_slash ?? "never"
          );
        } else if (route.endpoint && (!route.page || is_endpoint_request(event2))) {
          response = await render_endpoint(event2, await route.endpoint(), state);
        } else if (route.page) {
          response = await render_page(event2, route.page, options2, manifest2, state, resolve_opts);
        } else {
          throw new Error("This should never happen");
        }
        return response;
      }
      if (state.error) {
        return text("Internal Server Error", {
          status: 500
        });
      }
      if (state.depth === 0) {
        return await respond_with_error({
          event: event2,
          options: options2,
          manifest: manifest2,
          state,
          status: 404,
          error: new Error(`Not found: ${event2.url.pathname}`),
          resolve_opts
        });
      }
      if (state.prerendering) {
        return text("not found", { status: 404 });
      }
      return await fetch(request);
    } catch (e2) {
      return await handle_fatal_error(event2, options2, e2);
    } finally {
      event2.cookies.set = () => {
        throw new Error("Cannot use `cookies.set(...)` after the response has been generated");
      };
      event2.setHeaders = () => {
        throw new Error("Cannot use `setHeaders(...)` after the response has been generated");
      };
    }
  }
}
var Server = class {
  #options;
  #manifest;
  constructor(manifest2) {
    this.#options = options;
    this.#manifest = manifest2;
  }
  async init({ env }) {
    const entries = Object.entries(env);
    const prefix = this.#options.env_public_prefix;
    Object.fromEntries(entries.filter(([k2]) => !k2.startsWith(prefix)));
    const pub = Object.fromEntries(entries.filter(([k2]) => k2.startsWith(prefix)));
    set_public_env(pub);
    if (!this.#options.hooks) {
      try {
        const module = await get_hooks();
        this.#options.hooks = {
          handle: module.handle || (({ event, resolve }) => resolve(event)),
          handleError: module.handleError || (({ error: error2 }) => console.error(error2)),
          handleFetch: module.handleFetch || (({ request, fetch: fetch2 }) => fetch2(request))
        };
      } catch (error2) {
        {
          throw error2;
        }
      }
    }
  }
  async respond(request, options2) {
    if (!(request instanceof Request)) {
      throw new Error(
        "The first argument to server.respond must be a Request object. See https://github.com/sveltejs/kit/pull/3384 for details"
      );
    }
    return respond(request, this.#options, this.#manifest, {
      ...options2,
      error: false,
      depth: 0
    });
  }
};
var manifest = {
  appDir: "_app",
  appPath: "_app",
  assets: /* @__PURE__ */ new Set([".DS_Store", "cloud.png", "elements/radial.svg", "favicon.png", "fonts/inter-v12-latin-500.eot", "fonts/inter-v12-latin-500.svg", "fonts/inter-v12-latin-500.ttf", "fonts/inter-v12-latin-500.woff", "fonts/inter-v12-latin-500.woff2", "fonts/inter-v12-latin-700.eot", "fonts/inter-v12-latin-700.svg", "fonts/inter-v12-latin-700.ttf", "fonts/inter-v12-latin-700.woff", "fonts/inter-v12-latin-700.woff2", "fonts/inter-v12-latin-regular.eot", "fonts/inter-v12-latin-regular.svg", "fonts/inter-v12-latin-regular.ttf", "fonts/inter-v12-latin-regular.woff", "fonts/inter-v12-latin-regular.woff2", "fonts/outfit-v6-latin-500.eot", "fonts/outfit-v6-latin-500.svg", "fonts/outfit-v6-latin-500.ttf", "fonts/outfit-v6-latin-500.woff", "fonts/outfit-v6-latin-500.woff2", "fonts/outfit-v6-latin-600.eot", "fonts/outfit-v6-latin-600.svg", "fonts/outfit-v6-latin-600.ttf", "fonts/outfit-v6-latin-600.woff", "fonts/outfit-v6-latin-600.woff2", "fonts/outfit-v6-latin-700.eot", "fonts/outfit-v6-latin-700.svg", "fonts/outfit-v6-latin-700.ttf", "fonts/outfit-v6-latin-700.woff", "fonts/outfit-v6-latin-700.woff2", "fonts/outfit-v6-latin-regular.eot", "fonts/outfit-v6-latin-regular.svg", "fonts/outfit-v6-latin-regular.ttf", "fonts/outfit-v6-latin-regular.woff", "fonts/outfit-v6-latin-regular.woff2", "images/logo.png", "images/placeholder_b.png"]),
  mimeTypes: { ".png": "image/png", ".svg": "image/svg+xml", ".eot": "application/vnd.ms-fontobject", ".ttf": "font/ttf", ".woff": "font/woff", ".woff2": "font/woff2" },
  _: {
    client: { "start": "_app/immutable/entry/start.f79737e0.js", "app": "_app/immutable/entry/app.9a6dbf16.js", "imports": ["_app/immutable/entry/start.f79737e0.js", "_app/immutable/chunks/index.7ee2e23d.js", "_app/immutable/chunks/singletons.21d018a5.js", "_app/immutable/chunks/paths.1c0372a3.js", "_app/immutable/chunks/control.f5b05b5f.js", "_app/immutable/chunks/parse.bee59afc.js", "_app/immutable/entry/app.9a6dbf16.js", "_app/immutable/chunks/preload-helper.41c905a7.js", "_app/immutable/chunks/index.7ee2e23d.js"], "stylesheets": [], "fonts": [] },
    nodes: [
      () => Promise.resolve().then(() => (init__(), __exports)),
      () => Promise.resolve().then(() => (init__2(), __exports2)),
      () => Promise.resolve().then(() => (init__3(), __exports3)),
      () => Promise.resolve().then(() => (init__4(), __exports4)),
      () => Promise.resolve().then(() => (init__5(), __exports5)),
      () => Promise.resolve().then(() => (init__6(), __exports6)),
      () => Promise.resolve().then(() => (init__7(), __exports7)),
      () => Promise.resolve().then(() => (init__8(), __exports8)),
      () => Promise.resolve().then(() => (init__9(), __exports9)),
      () => Promise.resolve().then(() => (init__10(), __exports10)),
      () => Promise.resolve().then(() => (init__11(), __exports11)),
      () => Promise.resolve().then(() => (init__12(), __exports12)),
      () => Promise.resolve().then(() => (init__13(), __exports13)),
      () => Promise.resolve().then(() => (init__14(), __exports14)),
      () => Promise.resolve().then(() => (init__15(), __exports15)),
      () => Promise.resolve().then(() => (init__16(), __exports16)),
      () => Promise.resolve().then(() => (init__17(), __exports17)),
      () => Promise.resolve().then(() => (init__18(), __exports18)),
      () => Promise.resolve().then(() => (init__19(), __exports19)),
      () => Promise.resolve().then(() => (init__20(), __exports20)),
      () => Promise.resolve().then(() => (init__21(), __exports21)),
      () => Promise.resolve().then(() => (init__22(), __exports22)),
      () => Promise.resolve().then(() => (init__23(), __exports23)),
      () => Promise.resolve().then(() => (init__24(), __exports24)),
      () => Promise.resolve().then(() => (init__25(), __exports25)),
      () => Promise.resolve().then(() => (init__26(), __exports26)),
      () => Promise.resolve().then(() => (init__27(), __exports27))
    ],
    routes: [
      {
        id: "/",
        pattern: /^\/$/,
        params: [],
        page: { layouts: [0], errors: [1], leaf: 8 },
        endpoint: null
      },
      {
        id: "/api/assignments",
        pattern: /^\/api\/assignments\/?$/,
        params: [],
        page: null,
        endpoint: () => Promise.resolve().then(() => (init_server_ts(), server_ts_exports))
      },
      {
        id: "/api/auth",
        pattern: /^\/api\/auth\/?$/,
        params: [],
        page: null,
        endpoint: () => Promise.resolve().then(() => (init_server_ts2(), server_ts_exports2))
      },
      {
        id: "/api/avatar",
        pattern: /^\/api\/avatar\/?$/,
        params: [],
        page: null,
        endpoint: () => Promise.resolve().then(() => (init_server_ts3(), server_ts_exports3))
      },
      {
        id: "/api/courses",
        pattern: /^\/api\/courses\/?$/,
        params: [],
        page: null,
        endpoint: () => Promise.resolve().then(() => (init_server_ts4(), server_ts_exports4))
      },
      {
        id: "/api/modules",
        pattern: /^\/api\/modules\/?$/,
        params: [],
        page: null,
        endpoint: () => Promise.resolve().then(() => (init_server_ts5(), server_ts_exports5))
      },
      {
        id: "/api/people",
        pattern: /^\/api\/people\/?$/,
        params: [],
        page: null,
        endpoint: () => Promise.resolve().then(() => (init_server_ts6(), server_ts_exports6))
      },
      {
        id: "/api/people/accept",
        pattern: /^\/api\/people\/accept\/?$/,
        params: [],
        page: null,
        endpoint: () => Promise.resolve().then(() => (init_server_ts7(), server_ts_exports7))
      },
      {
        id: "/api/people/code",
        pattern: /^\/api\/people\/code\/?$/,
        params: [],
        page: null,
        endpoint: () => Promise.resolve().then(() => (init_server_ts8(), server_ts_exports8))
      },
      {
        id: "/api/people/delete",
        pattern: /^\/api\/people\/delete\/?$/,
        params: [],
        page: null,
        endpoint: () => Promise.resolve().then(() => (init_server_ts9(), server_ts_exports9))
      },
      {
        id: "/api/users",
        pattern: /^\/api\/users\/?$/,
        params: [],
        page: null,
        endpoint: () => Promise.resolve().then(() => (init_server_ts10(), server_ts_exports10))
      },
      {
        id: "/auth/callback",
        pattern: /^\/auth\/callback\/?$/,
        params: [],
        page: null,
        endpoint: () => Promise.resolve().then(() => (init_server_ts11(), server_ts_exports11))
      },
      {
        id: "/d/(d)",
        pattern: /^\/d\/?$/,
        params: [],
        page: { layouts: [0, 2], errors: [1, ,], leaf: 9 },
        endpoint: null
      },
      {
        id: "/d/(d)/courses",
        pattern: /^\/d\/courses\/?$/,
        params: [],
        page: { layouts: [0, 2, 3], errors: [1, , ,], leaf: 10 },
        endpoint: null
      },
      {
        id: "/d/(d)/courses/create",
        pattern: /^\/d\/courses\/create\/?$/,
        params: [],
        page: { layouts: [0, 2, 3], errors: [1, , ,], leaf: 19 },
        endpoint: null
      },
      {
        id: "/d/(d)/courses/join",
        pattern: /^\/d\/courses\/join\/?$/,
        params: [],
        page: { layouts: [0, 2, 3], errors: [1, , ,], leaf: 20 },
        endpoint: null
      },
      {
        id: "/d/(d)/courses/(course)/[slug]",
        pattern: /^\/d\/courses\/([^/]+?)\/?$/,
        params: [{ "name": "slug", "optional": false, "rest": false, "chained": false }],
        page: { layouts: [0, 2, 3, 4], errors: [1, , , ,], leaf: 11 },
        endpoint: null
      },
      {
        id: "/d/(d)/courses/(course)/[slug]/assignments",
        pattern: /^\/d\/courses\/([^/]+?)\/assignments\/?$/,
        params: [{ "name": "slug", "optional": false, "rest": false, "chained": false }],
        page: { layouts: [0, 2, 3, 4, 5], errors: [1, , , , ,], leaf: 12 },
        endpoint: null
      },
      {
        id: "/d/(d)/courses/(course)/[slug]/assignments/[assignment]",
        pattern: /^\/d\/courses\/([^/]+?)\/assignments\/([^/]+?)\/?$/,
        params: [{ "name": "slug", "optional": false, "rest": false, "chained": false }, { "name": "assignment", "optional": false, "rest": false, "chained": false }],
        page: { layouts: [0, 2, 3, 4, 5], errors: [1, , , , ,], leaf: 13 },
        endpoint: null
      },
      {
        id: "/d/(d)/courses/(course)/[slug]/assignments/[assignment]/edit",
        pattern: /^\/d\/courses\/([^/]+?)\/assignments\/([^/]+?)\/edit\/?$/,
        params: [{ "name": "slug", "optional": false, "rest": false, "chained": false }, { "name": "assignment", "optional": false, "rest": false, "chained": false }],
        page: { layouts: [0, 2, 3, 4, 5], errors: [1, , , , ,], leaf: 14 },
        endpoint: null
      },
      {
        id: "/d/(d)/courses/(course)/[slug]/grades",
        pattern: /^\/d\/courses\/([^/]+?)\/grades\/?$/,
        params: [{ "name": "slug", "optional": false, "rest": false, "chained": false }],
        page: { layouts: [0, 2, 3, 4], errors: [1, , , ,], leaf: 15 },
        endpoint: null
      },
      {
        id: "/d/(d)/courses/(course)/[slug]/modules",
        pattern: /^\/d\/courses\/([^/]+?)\/modules\/?$/,
        params: [{ "name": "slug", "optional": false, "rest": false, "chained": false }],
        page: { layouts: [0, 2, 3, 4, 6], errors: [1, , , , ,], leaf: 16 },
        endpoint: null
      },
      {
        id: "/d/(d)/courses/(course)/[slug]/people",
        pattern: /^\/d\/courses\/([^/]+?)\/people\/?$/,
        params: [{ "name": "slug", "optional": false, "rest": false, "chained": false }],
        page: { layouts: [0, 2, 3, 4, 7], errors: [1, , , , ,], leaf: 17 },
        endpoint: null
      },
      {
        id: "/d/(d)/courses/(course)/[slug]/settings",
        pattern: /^\/d\/courses\/([^/]+?)\/settings\/?$/,
        params: [{ "name": "slug", "optional": false, "rest": false, "chained": false }],
        page: { layouts: [0, 2, 3, 4], errors: [1, , , ,], leaf: 18 },
        endpoint: null
      },
      {
        id: "/d/(d)/instances",
        pattern: /^\/d\/instances\/?$/,
        params: [],
        page: { layouts: [0, 2], errors: [1, ,], leaf: 21 },
        endpoint: null
      },
      {
        id: "/d/(d)/profile",
        pattern: /^\/d\/profile\/?$/,
        params: [],
        page: { layouts: [0, 2], errors: [1, ,], leaf: 22 },
        endpoint: null
      },
      {
        id: "/legal/aup",
        pattern: /^\/legal\/aup\/?$/,
        params: [],
        page: { layouts: [0], errors: [1], leaf: 23 },
        endpoint: null
      },
      {
        id: "/legal/privacy",
        pattern: /^\/legal\/privacy\/?$/,
        params: [],
        page: { layouts: [0], errors: [1], leaf: 24 },
        endpoint: null
      },
      {
        id: "/legal/terms",
        pattern: /^\/legal\/terms\/?$/,
        params: [],
        page: { layouts: [0], errors: [1], leaf: 25 },
        endpoint: null
      },
      {
        id: "/test",
        pattern: /^\/test\/?$/,
        params: [],
        page: { layouts: [0], errors: [1], leaf: 26 },
        endpoint: null
      }
    ],
    matchers: async () => {
      return {};
    }
  }
};
var prerendered = /* @__PURE__ */ new Map([]);
var import_kv_asset_handler = __toESM(require_dist());
var static_asset_manifest = JSON.parse(static_asset_manifest_json);
var server = new Server(manifest);
var app_path = `/${manifest.appPath}/`;
var entry_default = {
  async fetch(req, env, context) {
    await server.init({ env });
    const url = new URL(req.url);
    if (url.pathname.startsWith(app_path)) {
      const res = await get_asset_from_kv(req, env, context);
      if (is_error(res.status))
        return res;
      const cache_control = url.pathname.startsWith(app_path + "immutable/") ? "public, immutable, max-age=31536000" : "no-cache";
      return new Response(res.body, {
        headers: {
          "cache-control": cache_control,
          "content-type": res.headers.get("content-type"),
          "x-robots-tag": "noindex"
        }
      });
    }
    const pathname = url.pathname.replace(/\/$/, "");
    let file = pathname.substring(1);
    try {
      file = decodeURIComponent(file);
    } catch (err) {
    }
    if (manifest.assets.has(file) || manifest.assets.has(file + "/index.html") || prerendered.has(pathname || "/")) {
      return get_asset_from_kv(req, env, context, (request, options2) => {
        if (prerendered.has(pathname || "/")) {
          url.pathname = "/" + prerendered.get(pathname || "/").file;
          return new Request(url.toString(), request);
        }
        return (0, import_kv_asset_handler.mapRequestToAsset)(request, options2);
      });
    }
    return await server.respond(req, {
      platform: {
        env,
        context,
        caches
      },
      getClientAddress() {
        return req.headers.get("cf-connecting-ip");
      }
    });
  }
};
async function get_asset_from_kv(req, env, context, map = import_kv_asset_handler.mapRequestToAsset) {
  return await (0, import_kv_asset_handler.getAssetFromKV)(
    {
      request: req,
      waitUntil(promise) {
        return context.waitUntil(promise);
      }
    },
    {
      ASSET_NAMESPACE: env.__STATIC_CONTENT,
      ASSET_MANIFEST: static_asset_manifest,
      mapRequestToAsset: map
    }
  );
}
function is_error(status) {
  return status > 399;
}
export {
  entry_default as default
};
//# sourceMappingURL=worker.js.map
